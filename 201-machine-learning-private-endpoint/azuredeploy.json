{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "Specifies the name of the Azure Machine Learning workspace."
        }
      },
      "location": {
        "type": "string",
        "allowedValues": [
          "australiaeast",
          "brazilsouth",
          "canadacentral",
          "centralus",
          "eastasia",
          "eastus",
          "eastus2",
          "francecentral",
          "japaneast",
          "koreacentral",
          "northcentralus",
          "northeurope",
          "southeastasia",
          "southcentralus",
          "uksouth",
          "westcentralus",
          "westus",
          "westus2",
          "westeurope"
        ],
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "sku": {
        "type": "string",
        "defaultValue": "basic",
        "allowedValues": [
          "basic",
          "enterprise"
        ],
        "metadata": {
          "description": "Specifies the sku, also referred as 'edition' of the Azure Machine Learning workspace."
        }
      },
      "storageAccountNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ]
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "[concat('sa',uniqueString(resourceGroup().id))]"
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Standard_ZRS",
          "Premium_LRS",
          "Premium_ZRS",
          "Standard_GZRS",
          "Standard_RAGZRS"
        ]
      },
      "storageAccountResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]"
      },
      "keyVaultNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ],
        "metadata": {
          "description": "Determines whether or not a key vault should be provisioned."
        }
      },
      "keyVaultName": {
        "type": "string",
        "defaultValue": "[concat('kv',uniqueString(resourceGroup().id))]"
      },
      "keyVaultResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]"
      },
      "applicationInsightsNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ]
      },
      "applicationInsightsName": {
        "type": "string",
        "defaultValue": "[concat('ai',uniqueString(resourceGroup().id))]"
      },
      "applicationInsightsResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]"
      },
      "containerRegistryNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ]
      },
      "containerRegistryName": {
        "type": "string",
        "defaultValue": "[concat('acr',uniqueString(resourceGroup().id))]"
      },
      "containerRegistrySku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Basic",
          "Standard",
          "Premium"
        ]
      },
      "containerRegistryResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]"
      },
      "vnetNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ]
      },
      "vnetName": {
        "type": "string",
        "defaultValue": "[concat('vn',uniqueString(resourceGroup().id))]"
      },
      "vnetResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]"
      },
      "addressPrefixes": {
        "type": "array",
        "defaultValue": [
          "10.0.0.0/16"
        ],
        "metadata": {
          "description": "Address prefix of the virtual network"
        }
      },
      "subnetNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ]
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "[concat('sn',uniqueString(resourceGroup().id))]"
      },
      "subnetPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/24",
        "metadata": {
          "description": "Subnet prefix of the virtual network"
        }
      },
      "confidential_data":{
        "type": "string",
        "defaultValue": "false",
          "allowedValues": [
            "false",
            "true"
          ],
          "metadata": {
            "description": "Specifies that the Azure Machine Learning workspace holds highly confidential data."
          }
      },
      "encryption_status":{
        "type": "string",
        "defaultValue": "Disabled",
          "allowedValues": [
            "Enabled",
            "Disabled"
          ],
          "metadata": {
            "description": "Specifies if the Azure Machine Learning workspace should be encrypted with customer managed key."
          }
      },
      "cmk_keyvault":{
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Specifies the customer managed keyVault arm id."
        }
      },
      "resource_cmk_uri":{
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Specifies if the customer managed keyvault key uri."
        }
      }
  },
  "variables": {
      "tenantId": "[subscription().tenantId]",
      "storageAccount": "[resourceId(parameters('storageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
      "keyVault": "[resourceId(parameters('keyVaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
      "applicationInsights": "[resourceId(parameters('applicationInsightsResourceGroupName'), 'Microsoft.Insights/components', parameters('applicationInsightsName'))]",
      "containerRegistry": "[resourceId(parameters('containerRegistryResourceGroupName'), 'Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
      "vnet": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
      "subnet": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
      "privateDnsGuid": "[guid(resourceGroup().id, deployment().name)]"
  },
  "resources": [
      {
          "condition": "[equals(parameters('storageAccountNewOrExisting'), 'new')]",
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2019-04-01",
          "name": "[parameters('storageAccountName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[parameters('storageAccountType')]"
          },
          "kind": "StorageV2",
          "properties": {
              "encryption": {
                  "services": {
                      "blob": {
                          "enabled": true
                      },
                      "file": {
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              },
              "supportsHttpsTrafficOnly": true
          }
      },
      {
          "condition": "[equals(parameters('keyVaultNewOrExisting'), 'new')]",
          "type": "Microsoft.KeyVault/vaults",
          "apiVersion": "2019-09-01",
          "name": "[parameters('keyVaultName')]",
          "location": "[parameters('location')]",
          "properties": {
              "tenantId": "[variables('tenantId')]",
              "sku": {
                  "name": "standard",
                  "family": "A"
              },
              "accessPolicies": []
          }
      },
      {
          "condition": "[equals(parameters('applicationInsightsNewOrExisting'), 'new')]",
          "type": "Microsoft.Insights/components",
          "apiVersion": "2018-05-01-preview",
          "name": "[parameters('applicationInsightsName')]",
          "location": "[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'westcentralus')),'southcentralus',parameters('location'))]",
          "kind": "web",
          "properties": {
              "Application_Type": "web"
          }
      },
      {
          "condition": "[equals(parameters('containerRegistryNewOrExisting'), 'new')]",
          "type": "Microsoft.ContainerRegistry/registries",
          "apiVersion": "2019-05-01",
          "name": "[parameters('containerRegistryName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[parameters('containerRegistrySku')]"
          },
          "properties": {
              "adminUserEnabled": true
          }
      },
      {
          "type": "Microsoft.MachineLearningServices/workspaces",
          "apiVersion": "2020-03-01",
          "name": "[parameters('workspaceName')]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[variables('storageAccount')]",
              "[variables('keyVault')]",
              "[variables('applicationInsights')]",
              "[variables('containerRegistry')]"
          ],
          "identity": {
              "type": "systemAssigned"
          },
          "sku": {
              "tier": "[parameters('sku')]",
              "name": "[parameters('sku')]"
          },
          "properties": {
              "friendlyName": "[parameters('workspaceName')]",
              "storageAccount": "[variables('storageAccount')]",
              "keyVault": "[variables('keyVault')]",
              "applicationInsights": "[variables('applicationInsights')]",
              "encryption": {
                  "status": "[parameters('encryption_status')]",
                  "keyVaultProperties": {
                      "keyVaultArmId": "[parameters('cmk_keyvault')]",
                      "keyIdentifier": "[parameters('resource_cmk_uri')]"
                  }
              },
              "hbiWorkspace": "[parameters('confidential_data')]"
          }
      },
      {
        "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-09-01",
        "name": "[parameters('vnetName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": "[parameters('addressPrefixes')]"
          },
          "virtualNetworkPeerings": [],
          "enableDdosProtection": false,
          "enableVmProtection": false
        }
      },
      {
        "condition": "[equals(parameters('subnetNewOrExisting'), 'new')]",
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "apiVersion": "2019-09-01",
        "name": "[concat(parameters('vnetName'), '/', parameters('subnetName'))]",
        "dependsOn": [
          "[variables('vnet')]"
        ],
        "properties": {
          "addressPrefix": "[parameters('subnetPrefix')]",
          "delegations": [],
          "privateEndpointNetworkPolicies": "Disabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
        }
      },
      {
        "apiVersion": "2019-04-01",
        "name": "[concat(parameters('workspaceName'), '-PrivateEndpoint')]",
        "type": "Microsoft.Network/privateEndpoints",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]",
          "[variables('subnet')]"
        ],
        "properties": {
          "privateLinkServiceConnections": [
            {
              "name": "[concat(parameters('workspaceName'), '-PrivateEndpoint')]",
              "properties": {
                "privateLinkServiceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]",
                "groupIds": [
                  "amlworkspace"
                ]
              }
            }
          ],
          "manualPrivateLinkServiceConnections": [],
          "subnet": {
            "id": "[variables('subnet')]"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2017-05-10",
        "name": "[concat('PrivateDns-', variables('privateDnsGuid'))]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/privateEndpoints', concat(parameters('workspaceName'), '-PrivateEndpoint'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": [
              {
                "type": "Microsoft.Network/privateDnsZones",
                "apiVersion": "2018-09-01",
                "name": "privatelink.api.azureml.ms",
                "location": "global",
                "tags": {},
                "properties": {}
              },
              {
                "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                "apiVersion": "2018-09-01",
                "name": "[concat('privatelink.api.azureml.ms', '/', uniqueString(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))))]",
                "location": "global",
                "dependsOn": [
                  "privatelink.api.azureml.ms"
                ],
                "properties": {
                  "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                  },
                  "registrationEnabled": false
                }
              },
              {
                "apiVersion": "2017-05-10",
                "name": "[concat('EndpointDnsRecords-', variables('privateDnsGuid'))]",
                "type": "Microsoft.Resources/deployments",
                "dependsOn": [
                  "privatelink.api.azureml.ms"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templatelink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "https://network.hosting.portal.azure.net/network/Content/4.13.392.925/DeploymentTemplates/PrivateDnsForPrivateEndpoint.json"
                  },
                  "parameters": {
                    "privateDnsName": {
                      "value": "privatelink.api.azureml.ms"
                    },
                    "privateEndpointNicResourceId": {
                      "value": "[reference(resourceId('Microsoft.Network/privateEndpoints',concat(parameters('workspaceName'), '-PrivateEndpoint')), '2019-04-01').networkInterfaces[0].id]"
                    },
                    "nicRecordsTemplateUri": {
                      "value": "https://network.hosting.portal.azure.net/network/Content/4.13.392.925/DeploymentTemplates/PrivateDnsForPrivateEndpointNic.json"
                    },
                    "ipConfigRecordsTemplateUri": {
                      "value": "https://network.hosting.portal.azure.net/network/Content/4.13.392.925/DeploymentTemplates/PrivateDnsForPrivateEndpointIpConfig.json"
                    },
                    "uniqueId": {
                      "value": "[variables('privateDnsGuid')]"
                    },
                    "existingRecords": {
                      "value": {}
                    }
                  }
                }
              }
            ]
          }
        },
        "resourceGroup": "[resourceGroup().name]"
      }
  ]
}