{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
                "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
            }
    },
    "adminUsername": {
        "type": "string",
        "metadata": {
            "description": "User name for the Virtual Machine."
        }
    },
    "adminPassword": {
        "type": "securestring",
        "metadata": {
            "description": "Password for the Virtual Machine."
        }
    },
    "location": {
      "type": "string",
      "allowedValues": ["East US", "West US", "West Europe", "East Asia", "South East Asia"],
       "metadata": {
            "description": "Location to deploy to"
        }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
       "metadata": {
            "description": "Size of vm"
        }
    },
    "vmName": {
      "type": "string",
      "metadata": {
            "description": "name of the vm, will be used as DNS Name for the Public IP used to access the Virtual Machine"
        }
    }
  },
  "variables": {
    "virtualNetworkName": "boshvnet-crp",
    "nicName": "[parameters('vmName')]",
    "publicIPAddressName": "[parameters('vmName')]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Bosh",
    "subnet2Name": "CloudFoundry",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet2Prefix": "10.0.16.0/24",
    "vmStorageAccountContainerName": "vhds",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "storageid": "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "ubuntuOSVersion": "14.10",
    "api-version": "2015-05-01-preview",
    "branch": "Azure"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "[variables('api-version')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmName')]"
        }
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-microbosh')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-bosh')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-cf')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
       
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
              
            }
          }
        ]
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.100",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku" : "[variables('ubuntuOSVersion')]",
                        "version":"latest"
                    },
          "osDisk" : {
              "name": "osdisk",
              "vhd": {
                  "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'-osdisk.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "30",
              "lun": 0,
              "createOption": "empty",
              "vhd": { "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'datadisk1.vhd')]" }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/customscript')]",
      "apiVersion": "[variables('api-version')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[concat('https://raw.githubusercontent.com/', variables('branch'),'/azure-quickstart-templates/master/microbosh-setup/launch_script.sh')]"
          ],          
           "commandToExecute":  "[concat('sh launch_script.sh',' https://raw.githubusercontent.com/', variables('branch'),'/azure-quickstart-templates/master/microbosh-setup/')]",
          "storagekey":"[listKeys(variables('storageid'),'2015-05-01-preview').key1]",
          "vnet":"[variables('virtualNetworkName')]",
          "subnet": "[variables('subnet1Name')]",
          "cfsubnet":"[variables('subnet2Name')]",
          "storageaccount":"[parameters('newStorageAccountName')]",
          "subscriptionid": "[subscription().subscriptionId]",
          "cf-ip":"[reference(concat(parameters('vmName'),'-cf')).ipAddress]",
          "username":"[parameters('adminUserName')]",
          "resourcegroup":"[resourceGroup().name]"
        }
      }
    }
  
  ]
}

