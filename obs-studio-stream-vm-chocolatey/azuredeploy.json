{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of ressources"
            }
        },
        "vm_name": {
            "type": "string",
            "metadata": {
                "description": "Local name for the VM can be whatever you want"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Desired Size of the VM. Any valid option accepted but if you choose premium storage type you must choose a DS class VM size."
            },
            "defaultValue": "Standard_NV6",
            "allowedValues": [
                "Standard_NV6_Promo",
                "Standard_NV12_Promo",
                "Standard_NV24_Promo",
                "Standard_NC6_Promo",
                "Standard_NC12_Promo",
                "Standard_NC24_Promo",
                "Standard_NV6",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NC6",
                "Standard_NC12",
                "Standard_NC24",
                "Standard_NV6s_v2",
                "Standard_NV12s_v2",
                "Standard_NV24s_v2",
                "Standard_NV12s_v3",
                "Standard_NV24s_v3",
                "Standard_NV48s_v3"
            ]
        },
        "virtualNetwork_name": {
            "defaultValue": "stream-vnet",
            "type": "String"
        },
        "nic_name": {
            "defaultValue": "stream-nic",
            "type": "String"
        },
        "publicIPAddress_name": {
            "defaultValue": "stream-ip",
            "type": "String"
        },
        "dnsprefix": {
            "defaultValue": "streamvm",
            "type": "String"
        },
        "networkSecurityGroup_name": {
            "defaultValue": "stream-nsg",
            "type": "String"
        },
        "setupChocolateyScriptFileName": {
            "type": "string",
            "defaultValue": "ChocoInstall.ps1",
            "metadata": {
                "description": "PowerShell script name to execute"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/obs-studio-stream-vm-chocolatey/",
            "metadata": {
                "description": "Public uri location of PowerShell Chocolately setup script"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "chocoPackages": {
            "type": "string",
            "defaultValue": "obs-studio;skype",
            "metadata": {
                "description": "List of Chocolatey packages to install separated by a semi-colon eg. linqpad;sysinternals"
            }
        }
    },
    "variables": {
        "vmImagePublisher": "MicrosoftWindowsDesktop",
        "vmImageOffer": "Windows-10",
        "sku": "rs5-pro",
        "scriptFolder": ".",
        "setupScriptLocation": "[uri(parameters('_artifactsLocation'),concat(parameters('setupChocolateyScriptFileName'),parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-07-01",
            "name": "[parameters('networkSecurityGroup_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualNetwork_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.4.0/24",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualNetwork_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.4.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.4.0/24",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-07-01",
            "name": "[parameters('publicIPAddress_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsprefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[parameters('nic_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddress_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.4.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddress_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('vm_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmImagePublisher')]",
                        "offer": "[variables('vmImageOffer')]",
                        "sku": "[variables('sku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('vm_name'), '_OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('vm_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('vm_name'),'/GPUDrivers')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vm_name'))]"
            ],
            "tags": {
                "displayName": "gpu-nvidia-drivers"
            },
            "properties": {
                "publisher": "Microsoft.HpcCompute",
                "type": "NvidiaGpuDriverWindows",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": true
            }
        },
        {
            "name": "[concat(parameters('vm_name'),'/SetupChocolatey')]",
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vm_name'), 'GPUDrivers')]"
            ],
            "tags": {
                "displayName": "config-choco"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('setupScriptLocation')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy bypass -File ', variables('scriptFolder'), '/',parameters('setupChocolateyScriptFileName'),' -chocoPackages ',parameters('chocoPackages'))]"
                }
            }
        }
    ],
    "outputs": {}
}
