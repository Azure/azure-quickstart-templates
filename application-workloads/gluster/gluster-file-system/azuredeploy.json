{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostOs": {
      "type": "string",
      "defaultValue": "Ubuntu",
      "allowedValues": [
        "Ubuntu"
      ],
      "metadata": {
        "description": "OS to install on the host system (Centos was removed due to breaking change)"
      }
    },
    "scaleNumber": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        4,
        6,
        8
      ],
      "metadata": {
        "description": "Number of nodes in the gluster file system"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "ssh user name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2_v2",
      "metadata": {
        "description": "VM size for the nodes"
      }
    },
    "diskSize": {
      "type": "int",
      "defaultValue": 1024,
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4095
      ],
      "metadata": {
        "description": "The size of the datadisks to be striped. The total capacity will be this size multiplied by the number of data disks you specify."
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "gluster",
      "metadata": {
        "description": "VM name prefix, a number will be appended for each node"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "gluster-vnet",
      "metadata": {
        "description": "Virtual network name for the cluster"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "If using existing VNet, specifies the resource group for the existing VNet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "gluster-subnet",
      "metadata": {
        "description": "subnet name"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "IP address in CIDR for virtual network"
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "IP address in CIDR for subnet"
      }
    },
    "volumeName": {
      "type": "string",
      "defaultValue": "gfsvol",
      "metadata": {
        "description": "Gluster file system volume name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/gluster-file-system/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    }
  },
  "variables": {
    "pipName": "pip",
    "nicName": "nic",
    "gfsSubnetRef": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "vmIPPrefix": "[concat(substring(parameters('subnetAddressPrefix'), 0, lastIndexOf(parameters('subnetAddressPrefix'), '.')), '.10')]",
    "imageReference": {
      "Ubuntu": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.5-LTS",
        "version": "latest"
      },
      "CentOS": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.5",
        "version": "latest"
      }
    },
    "customScriptFilePath": "[uri(parameters('_artifactsLocation'), concat('azuregfs.sh', parameters('_artifactsLocationSasToken')))]",
    "customScriptCommandToExecute": "bash azuregfs.sh",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('pipName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "pipLoop",
        "count": "[parameters('scaleNumber')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[parameters('virtualNetworkName')]",
        "pipLoop"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('pipName'), copyindex()))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('vmIPPrefix'), copyindex())]",
              "subnet": {
                "id": "[variables('gfsSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')[parameters('hostOS')]]",
          "osDisk": {
            "name": "[concat(parameters('vmNamePrefix'), copyIndex(), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmNamePrefix'), copyIndex(), '_DataDisk1')]",
              "diskSizeGB": "[parameters('diskSize')]",
              "lun": 0,
              "createOption": "Empty"
            },
            {
              "name": "[concat(parameters('vmNamePrefix'), copyIndex(), '_DataDisk2')]",
              "diskSizeGB": "[parameters('diskSize')]",
              "lun": 1,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "gfs-config",
          "apiVersion": "2020-06-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmNamePrefix'), copyindex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('customScriptFilePath')]"
              ],
              "commandToExecute": "[concat(variables('customScriptCommandToExecute'), ' ', parameters('vmNamePrefix'), ' ', variables('vmIPPrefix'), ' ', parameters('volumeName'), ' ', copyindex(), ' ', parameters('scaleNumber'))]"
            }
          }
        }
      ]
    }
  ]
}
