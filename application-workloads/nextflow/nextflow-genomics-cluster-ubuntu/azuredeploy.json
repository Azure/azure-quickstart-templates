{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "6448981810901409360"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "dnsNameForJumpBox": {
      "type": "string",
      "defaultValue": "[format('jumpbox-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Docker Virtual Machine (master node)."
      }
    },
    "vmImageReference": {
      "type": "object",
      "defaultValue": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
      },
      "metadata": {
        "link": "https://docs.microsoft.com/en-us/nodejs/api/azure-arm-compute/imagereference?view=azure-node-2.2.0",
        "description": "The image to use for VMs created. This can be marketplace or custom image"
      }
    },
    "vmNodeSku": {
      "type": "string",
      "defaultValue": "Standard_F8s_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmMasterSku": {
      "type": "string",
      "defaultValue": "Standard_F16s_v2",
      "metadata": {
        "description": "Size of the master node."
      }
    },
    "vmMasterDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Choose between a standard disk for and SSD disk for the master node's NFS fileshare"
      }
    },
    "vmMasterDiskSize": {
      "type": "int",
      "defaultValue": 256,
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1000,
        2000,
        4000,
        10000
      ],
      "metadata": {
        "description": "The SSD Size to be used for the NFS file share. For pricing details see https://azure.microsoft.com/en-us/pricing/details/managed-disks/"
      }
    },
    "vmAdditionalInstallScriptUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "An additional installs script (bash run as root) to be run after nodes/master are configured. Can be used to mount additional storage or do additional setup"
      }
    },
    "vmAdditionalInstallScriptArgument": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "An argument to be passed to the additional install script"
      }
    },
    "nextflowInstallUrl": {
      "type": "string",
      "defaultValue": "https://get.nextflow.io",
      "metadata": {
        "description": "The install URL for nextflow, this can be used to pin nextflow versions"
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "maxValue": 100,
      "minValue": 1,
      "metadata": {
        "description": "Number of cluster VM instances (100 or less)."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "nfvnet",
      "metadata": {
        "description": "Name of the virtual network to deploy the scale set into."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "nfsubnet",
      "metadata": {
        "description": "Name of the subnet to deploy the scale set into."
      }
    },
    "shareName": {
      "type": "string",
      "defaultValue": "sharedstorage",
      "metadata": {
        "description": "Azure file share name."
      }
    },
    "mountpointPath": {
      "type": "string",
      "defaultValue": "/datadisks/disk1",
      "metadata": {
        "description": "Path on VM to mount file shares. '/datadisks/disk1/' is a Premium Managed disk with high iops, this will suit most uses."
      }
    },
    "nodeMaxCpus": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Sets the cluster.maxCpus setting on all cluster nodes"
      }
    },
    "forceUpdateTag": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Determines whether to run the custom script extension on a subsequent deployment. Use the defaultValue."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "*Advanced* This is best left as default unless you are an advanced user. The base URI where artifacts required by this template are located."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "*Advanced* This should be left as default unless you are an advanced user. The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    },
    "_diskInitScriptUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh",
      "metadata": {
        "description": "*Advanced* This should be left as default unless you are an advanced user. The folder in the artifacts location were shared scripts are stored."
      }
    },
    "_artifactsNextflowFolder": {
      "type": "string",
      "defaultValue": "scripts",
      "metadata": {
        "description": "*Advanced* This should be left as default unless you are an advanced user. The folder in the artifacts location were nextflow scripts are stored."
      }
    }
  },
  "variables": {
    "nextflowInitScript": "[uri(parameters('_artifactsLocation'), format('{0}/init.sh{1}', parameters('_artifactsNextflowFolder'), parameters('_artifactsLocationSasToken')))]",
    "jumpboxNICName": "jumpboxNIC",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "vmssName": "[format('cluster{0}', uniqueString(parameters('dnsNameForJumpBox')))]",
    "storageAccountType": "Standard_LRS",
    "storageAccountName": "[format('nfstorage{0}', uniqueString(resourceGroup().id))]",
    "storageSuffix": "[environment().suffixes.storage]",
    "publicIPAddressName": "jumpboxPublicIP",
    "publicIPAddressType": "Dynamic",
    "jumpboxVMName": "jumpboxVM",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-09-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForJumpBox')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-09-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-09-01",
      "name": "[variables('jumpboxNICName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[variables('jumpboxVMName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmMasterSku')]"
        },
        "osProfile": {
          "computerName": "[variables('jumpboxVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": "[parameters('vmImageReference')]",
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "jumpboxdatadisk",
              "diskSizeGB": "[parameters('vmMasterDiskSize')]",
              "caching": "None",
              "createOption": "Empty",
              "managedDisk": {
                "storageAccountType": "[parameters('vmMasterDiskType')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jumpboxNICName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('jumpboxNICName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', variables('jumpboxVMName'), 'nfinit')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[parameters('forceUpdateTag')]",
        "settings": {
          "fileUris": [
            "[variables('nextflowInitScript')]",
            "[parameters('_diskInitScriptUri')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[format('bash init.sh {0} \"{1}\" {2} {3} {4} false {5} 0 {6} {7} {8}', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value, parameters('shareName'), variables('storageSuffix'), parameters('mountpointPath'), parameters('adminUsername'), parameters('nextflowInstallUrl'), parameters('vmAdditionalInstallScriptUrl'), parameters('vmAdditionalInstallScriptArgument'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('jumpboxVMName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmssName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('vmNodeSku')]",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": true,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "imageReference": "[parameters('vmImageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "filesextension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "forceUpdateTag": "[parameters('forceUpdateTag')]",
                  "settings": {
                    "fileUris": [
                      "[variables('nextflowInitScript')]",
                      "[parameters('_diskInitScriptUri')]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[format('bash init.sh {0} \"{1}\" {2} {3} {4} true {5} {6} {7} {8} {9}', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value, parameters('shareName'), variables('storageSuffix'), parameters('mountpointPath'), parameters('adminUsername'), parameters('nodeMaxCpus'), parameters('nextflowInstallUrl'), parameters('vmAdditionalInstallScriptUrl'), parameters('vmAdditionalInstallScriptArgument'))]"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    }
  ],
  "outputs": {
    "JumpboxConnectionString": {
      "type": "string",
      "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2022-09-01').dnsSettings.fqdn)]"
    },
    "ExampleNextflowCommand": {
      "type": "string",
      "value": "[format('nextflow run hello -process.executor ignite -cluster.join path:{0}/cifs/cluster -with-timeline runtimeline.html -with-trace -cluster.maxCpus 0', parameters('mountpointPath'))]"
    },
    "ExampleNextflowCommandWithDocker": {
      "type": "string",
      "value": "[format('nextflow run nextflow-io/rnatoy -with-docker -process.executor ignite -cluster.join path:{0}/cifs/cluster -with-timeline runtimeline.html -with-trace -cluster.maxCpus 0', parameters('mountpointPath'))]"
    }
  }
}