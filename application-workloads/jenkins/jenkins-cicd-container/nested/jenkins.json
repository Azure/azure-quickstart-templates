{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "jenkinsVMName": {
      "type": "string"
    },
    "jenkinsVMSize": {
      "type": "string"
    },
    "spClientId": {
      "type": "string"
    },
    "spClientSecret": {
      "type": "securestring"
    },
    "linuxAdminUsername": {
      "type": "string"
    },
    "linuxAdminPassword": {
      "type": "securestring"
    },
    "dnsPrefix": {
      "type": "string"
    },
    "subnetId": {
      "type": "string"
    },
    "gitRepository": {
      "type": "string"
    },
    "acrServer": {
      "type": "string"
    },
    "acrUsername": {
      "type": "string"
    },
    "acrPassword": {
      "type": "securestring"
    },
    "mongoDbURI": {
      "type": "string"
    },
    "kubernetesResourceGroupName": {
      "type": "string"
    },
    "kubernetesClusterName": {
      "type": "string"
    },
    "kubernetesVersion": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    },
    "location": {
      "type": "string"
    }
  },
  "variables": {
    "nicName": "[concat(parameters('jenkinsVMName'), '-nic')]",
    "publicIPAddressName": "[concat(parameters('jenkinsVMName'), '-ip')]",
    "vmName": "[concat(parameters('jenkinsVMName'), '')]",
    "vmExtensionName": "[concat(parameters('jenkinsVMName'), '-ini')]",
    "securityGroupName": "[concat(parameters('jenkinsVMName'), '-nsg')]"
  },
  "resources": [
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh-rule",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "http-rule",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('jenkinsVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "adminPassword": "[parameters('linuxAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[variables('vmExtensionName')]",
          "apiVersion": "2017-12-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/jenkins/jenkins-acr-aks.sh', parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('./jenkins-acr-aks.sh -jf \"', reference(variables('publicIPAddressName')).dnsSettings.fqdn, '\" -u \"', parameters('linuxAdminUsername') , '\" -g \"', parameters('gitRepository') , '\" -r \"https://', parameters('acrServer'), '\" -ru \"', parameters('acrUsername'), '\" -rp \"', parameters('acrPassword'), '\" -subid \"', subscription().subscriptionId, '\" -tid \"', subscription().tenantId, '\" -spid \"', parameters('spClientId'), '\" -ss \"', parameters('spClientSecret'), '\" -gn \"', parameters('kubernetesResourceGroupName'),  '\" -cn \"', parameters('kubernetesClusterName'), '\" -cv \"', parameters('kubernetesVersion') , '\" -mu \"', parameters('mongoDbURI'), '\" -al \"', parameters('_artifactsLocation'), '\" -st \"', parameters('_artifactsLocationSasToken'), '\"' )]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "jenkinsURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "jenkinsSSH": {
      "type": "string",
      "value": "[concat('ssh -L 8080:localhost:8080 ', parameters('linuxAdminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    }
  }
}
