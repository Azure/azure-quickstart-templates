{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vstsAccount": {
      "type": "string",
      "metadata": {
        "description": "Team Services Account"
      }
    },
    "vstsPAT": {
      "type": "string",
      "metadata": {
        "description": "Team Services PAT for user with Agent Pools (read,manage) permissions."
      }
    },
    "vstsPoolName": {
      "type": "string",
      "defaultValue": "Default",
      "metadata": {
        "description": "Team Services Agent Pool Name"
      }
    },
    "vstsAgentName": {
      "type": "string",
      "defaultValue": "redhat-build-full",
      "metadata": {
        "description": "Team Services Agent Name"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "vstsbuild",
      "metadata": {
        "description": "Linux VM User Account Name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Linux VM User Password"
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP. It must be lowercase and must match the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "agentVMCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of VM build servers to provision in this deployment."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_F1",
      "metadata": {
        "description": "Default VM Size"
      }      
    }    
  },
  "variables": {
    "imagePublisher": "redhat",
    "imageOffer": "rhel",
    "imageSKU": "7.3",
    "nicName": "[concat(parameters('dnsLabelPrefix'), '-nic-')]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('dnsLabelPrefix'), '-ip-')]",
    "vmName": "[concat(parameters('dnsLabelPrefix'), '-')]",
    "virtualNetworkName": "MyVNET",
    "storageAccountName": "[concat('vhds', uniqueString(resourceGroup().id))]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnet1Name'))]",
    "vstsAccountUrl": "[concat('https://dev.azure.com/', parameters('vstsAccount'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('StorageAccountName'), copyIndex())]",
      "apiVersion": "2021-02-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "storageLoop",
        "count": "[parameters('agentVMCount')]"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "publicIpLoop",
        "count": "[parameters('agentVMCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabelPrefix'), '-', copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('agentVMCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]",
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('agentVMCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('StorageAccountName'), copyIndex()))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(variables('publicIPAddressName'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountName'), copyIndex())), '2020-08-01-preview').primaryEndpoints.blob, 'vhds/', parameters('dnsLabelPrefix'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "configScript",
          "apiVersion": "2020-12-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmName'), copyIndex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[uri(parameters('_artifactsLocation'), concat('scripts/full-rh-vstsbuild-install.sh', parameters('_artifactsLocationSasToken')))]"
              ],
              "commandToExecute": "[concat('sh full-rh-vstsbuild-install.sh', ' ', variables('vstsAccountURL'), ' ', parameters('vstsPAT'), ' ', parameters('vstsPoolName'), ' ', concat(parameters('vstsAgentName'),copyIndex()), ' ', parameters('adminUsername'))]"
            }
          }
        }
      ]
    }
  ]
}
