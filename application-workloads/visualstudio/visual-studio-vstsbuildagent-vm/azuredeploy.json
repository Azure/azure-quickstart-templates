{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS"
      ],
      "metadata": {
        "description": "Which type of storage you want to use"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Local name for the VM can be whatever you want"
      }
    },
    "vmAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "VM admin user name"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM admin password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Desired Size of the VM. Any valid option accepted but if you choose premium storage type you must choose a DS class VM size."
      },
      "defaultValue": "Standard_D2_v3"
    },
    "vmVisualStudioVersion": {
      "type": "string",
      "defaultValue": "VS-2017-Ent-Latest-WS2016",
      "allowedValues": [
        "VS-2015-Comm-VSU3-AzureSDK-29-WS2012R2",
        "VS-2015-Comm-VSU3-AzureSDK-291-WS2012R2",
        "VS-2015-Ent-VSU3-AzureSDK-29-WS2012R2",
        "VS-2017-Comm-Latest-Preview-WS2016",
        "VS-2017-Comm-Latest-WS2016",
        "VS-2017-Comm-WS2016",
        "VS-2017-Ent-Latest-Preview-WS2016",
        "VS-2017-Ent-Latest-WS2016",
        "VS-2017-Ent-WS2016",
        "vs-2019-preview-ws2016"
      ],
      "metadata": {
        "description": "Which version of Visual Studio you would like to deploy"
      }
    },
    "vmIPPublicDnsName": {
      "type": "string",
      "metadata": {
        "description": "Globally unique name for per region for the public IP address. For instance, myVMuniqueIP.westus.cloudapp.azure.com. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "vstsAccount": {
      "type": "string",
      "metadata": {
        "description": "The Visual Studio Team Services account name, that is, the first part of your VSTSAccount.visualstudio.com"
      }
    },
    "personalAccessToken": {
      "type": "securestring",
      "metadata": {
        "description": "The personal access token to connect to VSTS"
      }
    },
    "poolName": {
      "type": "string",
      "defaultValue": "Default",
      "metadata": {
        "description": "The Visual Studio Team Services build agent pool for this build agent to join. Use 'Default' if you don't have a separate pool."
      }
    },
    "enableAutologon": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable autologon to run the build agent in interactive mode that can sustain machine reboots.<br>Set this to true if the agents will be used to run UI tests."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
    "vnet01Prefix": "10.0.0.0/16",
    "vnet01Subnet1Name": "Subnet-1",
    "vnet01Subnet1Prefix": "10.0.0.0/24",
    "vmImagePublisher": "MicrosoftVisualStudio",
    "vmImageOffer": "VisualStudio",
    "vmSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'Vnet01', variables('vnet01Subnet1Name'))]",
    "vmNicName": "[concat(parameters('vmName'), 'NetworkInterface')]",
    "vmIP01Name": "VMIP01",
    "vstsAgentName": "[concat('agent-', parameters('vmName'))]",
    "vstsParameters": "[concat('-vstsAccount ', parameters('vstsAccount'), ' -personalAccessToken ', parameters('personalAccessToken'), ' -AgentName ', variables('vstsAgentName'),' -PoolName ', parameters('poolName'), ' -runAsAutoLogon ', parameters('enableAutologon'), ' -vmAdminUserName ', parameters('vmAdminUsername'), ' -vmAdminPassword ', parameters('vmAdminPassword'))]"
  },
  "resources": [
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2021-01-01",
      "tags": {
        "displayName": "Storage01"
      },
      "sku": {
        "name": "[parameters('storageType')]"
      }
    },
    {
      "name": "VNet01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2020-07-01",
      "tags": {
        "displayName": "Vnet01"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet01Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet01Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet01Subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2020-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', 'Vnet01')]",
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('vmIP01Name'))]"
      ],
      "tags": {
        "displayName": "VMNic01"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmIP01Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('location')]",
      "apiVersion": "2020-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
      ],
      "tags": {
        "displayName": "VM01"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('vmAdminUserName')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[parameters('vmVisualStudioVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "CustomScript",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "2020-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "settings": {
              "fileUris": [
                "[uri(parameters('_artifactsLocation'), concat('InstallVSTSAgent.ps1', parameters('_artifactsLocationSasToken')))]"
              ],
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command \"& {', './', 'InstallVstsAgent.ps1', ' ', variables('vstsParameters'), '}\"')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('vmIP01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "apiVersion": "2020-07-01",
      "tags": {
        "displayName": "VMIP01"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmIPPublicDnsName')]"
        }
      }
    }
  ],
  "outputs": {}
}

