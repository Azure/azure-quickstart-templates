---

- hosts: [CommandLine]
  gather_facts: False

  tasks:

  - name: retrieve certificate from Data Agent environment
    shell:
      cmd: |
        openssl s_client -connect {{ data_agent_host }}:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
    register: cert

  - name: add the certificate to Consul
    become: yes
    become_user: sas
    shell:
      cmd: |
        source /opt/sas/viya/config/consul.conf
        export CONSUL_HTTP_SSL=true;
        /opt/sas/viya/home/bin/sas-bootstrap-config --token-file /opt/sas/viya/config/etc/SASSecurityCertificateFramework/tokens/consul/default/client.token kv write --key "cacerts/op1" --value "{{ cert.stdout }}" --force

  - name: decode cert
    shell:
      cmd: |
        echo -n "{{ cert.stdout }}" | openssl x509 -text -noout
    register: certdecode
  - debug:
      var: certdecode.stdout_lines

- import_playbook: utility/rebuild-trust-stores.yml

- hosts: [CoreServices]
  gather_facts: False
  tasks:

  - name: Populate service facts
    service_facts:

  - name: Add groups and users
    shell:
      chdir: /opt/sas/viya/home/bin
      cmd: |
        export SSL_CERT_FILE=/opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts/trustedcerts.pem
        ./sas-admin profile set-endpoint "https://localhost"
        ./sas-admin -k auth login --user {{ adminuser }} --password  {{ adminpw }}
        ./sas-admin -k identities create-group --id "DataAgentAdministrators" --name "Data Agent Administrators" --description "Data Agent Administrators group"
        ./sas-admin -k identities create-group --id "DataAgentPowerUsers" --name "Data Agent Power Users" --description "Data Agent Power Users group"
        ./sas-admin -k identities add-member --group-id "DataAgentAdministrators" --user-member-id "{{ adminuser }}"

  - name: register hostname
    shell: hostname
    register: coreserviceshostname
  - set_fact:
      corehost: "{{ coreserviceshostname.stdout }}"

- hosts: [DataServices]
  gather_facts: True
  become: yes
  become_user: root

  tasks:

  - name: Populate service facts
    service_facts:

  - name: Restart data agent services
    service:
      name: "{{ item }}"
      state: restarted
    with_list:
      - "sas-viya-dagentcont-default"
      - "sas-viya-dagentmgmt-default"
      - "sas-viya-dataagentservices-default"
    when: "item in services"


- hosts: [sas-casserver-primary, sas_casserver_primary, DataServices]
  gather_facts: False
  become: yes
  become_user: sas

  tasks:
    - name: Populate service facts
      service_facts:
    - name: register the Data Agent client id for viya 3.4
      shell:
        chdir: /opt/sas/viya/home/bin
        cmd: |
          ./da_reg_server.sh --customerid shared --remotehost {{ data_agent_host }}  --remoteport 443 --sasadministratoruser {{ adminuser }} --sasadministratorpassword {{ adminpw }} --secret {{ secret }} --sas-endpoint https://{{hostvars[groups['CoreServices']|first]['corehost']}}:443 --regoverwrite Y
      when:  "'sas-viya-dataagentservices-default' not in hostvars['services']['services'] and ansible_host != 'services'"

    - name: register the Data Agent client id for viya 3.5
      shell:
        chdir: /opt/sas/viya/home/bin
        cmd: |
          ./da_reg_server.sh --customerid shared --remotehost {{ data_agent_host }}  --remoteport 443 --sasadministratoruser {{ adminuser }} --sasadministratorpassword {{ adminpw }} --secret {{ secret }} --sas-endpoint https://localhost:443 --regoverwrite Y
      when: "'sas-viya-dataagentservices-default' in services and 'DataServices' in group_names"

