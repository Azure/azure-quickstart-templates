
---
# Stop/Start hadoop servers on a specific group of nodes
# input: hadoop_hosts (group of hosts) hadoop_action = stop/start/status
- hosts: ["{{ hadoop_hosts }}"]
  vars_files:
    - /sas/install/ansible/vars.yaml
    - /tmp/ansible_vars.yaml
  become_user: sasinst
  become: yes
  gather_facts: false
  tasks:

      - name: run hdfs namenode on host
        shell: "{{ HADOOP_HOME }}/bin/hdfs --daemon {{ hadoop_action }} namenode"
        register: command_output
        ignore_errors: yes

      - name: run hdfs datanode on host
        shell: "{{ HADOOP_HOME }}/bin/hdfs --daemon {{ hadoop_action }} datanode"
        register: command_output
        ignore_errors: yes

      - name: run dfs on host
        shell: "{{ HADOOP_HOME }}/sbin/{{ hadoop_action }}-dfs.sh"
        register: command_output
        ignore_errors: yes

      - name: run yarn resourcemanager on host
        shell: "{{ HADOOP_HOME }}/bin/yarn --daemon {{ hadoop_action }} resourcemanager"
        register: command_output
        ignore_errors: yes

      - name: run yarn nodemanager on host
        shell: "{{ HADOOP_HOME }}/bin/yarn --daemon {{ hadoop_action }} nodemanager"
        register: command_output
        ignore_errors: yes

      - name: run yarn on host
        shell: "{{ HADOOP_HOME }}/sbin/{{ hadoop_action }}-yarn.sh"
        register: command_output
        ignore_errors: yes

      - name: run mapred historyserver on host
        shell: "{{ HADOOP_HOME }}/bin/mapred --daemon {{ hadoop_action }} historyserver"
        register: command_output
        ignore_errors: yes

