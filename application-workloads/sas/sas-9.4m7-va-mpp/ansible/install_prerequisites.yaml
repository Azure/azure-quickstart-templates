---
- name: Create users
  hosts: [sas_servers,localhost]
  become: yes
  vars_files:
    - /tmp/ansible_vars.yaml

  tasks:
    - name: Ensure "sas" group exists
      group:
        name: sas
        gid: 1003
        state: present

    - name: Ensure "sasinst" user exists, set password
      user:
        name: sasinst
        uid: 501
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Add sudoers access for sasinst
      become: yes
      shell: >-
        echo "sasinst ALL=(ALL) NOPASSWD:ALL" >/etc/sudoers.d/100-sas-users

    - name: Ensure "sas" user exists, set password
      user:
        name: sas
        uid: 503
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Ensure "sasdemo" user exists, set password
      user:
        name: sasdemo
        uid: 504
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Ensure "sassrv" user exists, set password
      user:
        name: sassrv
        uid: 505
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Ensure "sastrust" user exists, set password
      user:
        name: sastr
        uid: 506
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Ensure "sasadm" user exists, set password
      user:
        name: sasadm
        uid: 507
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Ensure "sasevs" user exists, set password
      user:
        name: sasevs
        uid: 508
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

    - name: Ensure "webanon" user exists, set password
      user:
        name: webanon
        uid: 509
        password: "{{ ExternalPassword | b64decode | password_hash('sha512') }}"
        group: sas

- name: Change ownership of /sas folder on jumpvm
  hosts: [localhost]
  become: yes
  vars_files:
    - /tmp/ansible_vars.yaml
  tasks:
    - name: Change ownership of /sas folder
      file:
        path: /sas
        owner: sasinst
        group: sas
        mode: '0755'

- name: Change ownership of /sas folder on sas servers
  hosts: [sas_servers]
  become: yes
  vars_files:
    - /tmp/ansible_vars.yaml
  tasks:
    - name: Change ownership of /sas folder
      file:
        path: "{{ sasFolder }}"
        owner: sasinst
        group: sas
        mode: '0755'

- name: Set ulimit values
  hosts: [sas_servers]
  become: yes
  vars_files:
    - /sas/install/ansible/vars.yaml

  tasks:
    - name: "Check if {{default_ulimits_dir}} directory exists (may not be available on SuSe)"
      stat:
        path: "{{default_ulimits_dir}}"
      check_mode: no
      register: limitsd_dir

    - debug: var=limitsd_dir

    - name: "Create {{default_ulimits_dir}} if it doesn't exist."
      file:
        path: "{{default_ulimits_dir}}"
        state: directory
        group: root
        owner: root
        mode: 0755
      when: not limitsd_dir.stat.exists

    - name: Ensure customer ulimit conf file exists
      copy:
        content: "#Custom file for SAS 9.4 ulimits#\n"
        dest: "{{ulimit_file_loc}}"
        force: no
        group: root
        owner: root
        mode: 0644

    - name: "Setting ulimits for SAS 9.4 - in {{ulimit_file_loc}}"
      become: yes
      become_user: root
      pam_limits:
        dest: "{{ulimit_file_loc}}"
        domain: "{{item.domain}}"
        limit_type: "{{item.type}}"
        limit_item: "{{item.item}}"
        value: "{{item.value}}"
        use_max: "{{item.use_max}}"
        use_min: "{{item.use_min}}"
        ## certain versions of ansible have a weird output with comments. (see https://github.com/ansible/ansible/issues/27635)
        #comment: "{{item.comment}}"
        backup: yes
      with_items:
        - "{{ulimits}}"

  ## TODO: add a check to confirm whether {{sas_user}} exists yet

    - name: Gather the current Ulimit values for user {{sas_user}} and root
      become: yes
      become_user: "{{item}}"
      shell: ulimit -a
      changed_when: False
      check_mode: no
      register: review_ulimits
      ignore_errors: true
      with_items:
        - "{{sas_user}}"
        - root
    - name: Display the gathered ulimits
      debug: var=review_ulimits
