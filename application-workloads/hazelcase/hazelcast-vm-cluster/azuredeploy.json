{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "11385578086915871688"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for Hazelcast VMs"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Hazelcast VMs."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "Password or ssh key for the Hazelcast VMs."
      }
    },
    "hazelcastVersion": {
      "type": "string",
      "defaultValue": "4.0",
      "allowedValues": [
        "4.0"
      ],
      "metadata": {
        "description": "Hazelcast Version"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "[format('{0}{1}', parameters('adminUsername'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Cluster Name for hazelcast grid"
      }
    },
    "dnsPrefix": {
      "type": "string",
      "defaultValue": "hazelcast",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of hazelcast nodes in the grid"
      }
    },
    "clusterPort": {
      "type": "string",
      "defaultValue": "5701",
      "metadata": {
        "description": "The cluster port to identify this cluster"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "The size of each instance VM"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "allowedValues": [
        "15.10",
        "16.04-LTS",
        "18.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu OS version for the Hazelcast VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The base URL for the bootstrap files"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "nicName": "hazelcastNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.1.0/24",
    "publicIPAddressName": "hazelcastPubIp",
    "publicIPAddressType": "Dynamic",
    "vmName": "hazelcast",
    "roleAssignmentName": "hazelcastRA",
    "virtualNetworkName": "hazelcastVNet",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "scriptParameters": "[format('{0} {1} {2}', parameters('clusterName'), parameters('hazelcastVersion'), parameters('clusterPort'))]",
    "bootstrapFiles": [
      "[uri(parameters('_artifactsLocation'), format('scripts/bootstrap_hazelcast{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/hazelcast.service{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/hazelcast.conf{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/hazelcast.xml{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/install_hazelcast{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/logging.properties{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/modify_configuration{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/modify_version{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/pom.xml{0}', parameters('_artifactsLocationSasToken')))]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "publicIPAddressName_1",
        "count": "[length(range(0, parameters('instanceCount')))]"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}{1}', variables('publicIPAddressName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[format('{0}{1}{2}', parameters('dnsPrefix'), add(range(0, parameters('instanceCount'))[copyIndex()], 1), uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "copy": {
        "name": "nicName_1",
        "count": "[length(range(0, parameters('instanceCount')))]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}{1}', variables('nicName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[format('ipconfig{0}', add(range(0, parameters('instanceCount'))[copyIndex()], 1))]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('publicIPAddressName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1)))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "publicIPAddressName_1",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    {
      "copy": {
        "name": "vmName_1",
        "count": "[length(range(0, parameters('instanceCount')))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}{1}', variables('vmName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('{0}{1}_OSDisk', variables('vmName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1))]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', variables('nicName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1)))]"
            }
          ]
        }
      },
      "dependsOn": [
        "nicName_1"
      ]
    },
    {
      "copy": {
        "name": "roleAssignmentName_1",
        "count": "[length(range(0, parameters('instanceCount')))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(format('{0}{1}', variables('roleAssignmentName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1)))]",
      "properties": {
        "roleDefinitionId": "[variables('Reader')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', variables('vmName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1))), '2019-12-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "vmName_1"
      ]
    },
    {
      "copy": {
        "name": "vmName_1_initHazelcast",
        "count": "[length(range(0, parameters('instanceCount')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}{1}/initHazelcast', variables('vmName'), add(range(0, parameters('instanceCount'))[copyIndex()], 1))]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('bootstrapFiles')]"
        },
        "protectedSettings": {
          "commandToExecute": "[format('sh bootstrap_hazelcast {0}', variables('scriptParameters'))]"
        }
      },
      "dependsOn": [
        "roleAssignmentName_1"
      ]
    }
  ]
}