{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "standard_v2",
      "metadata": {
        "description": "Sku Name"
      }
    },
    "backendIpAddress1": {
      "type": "string",
      "defaultValue": "10.0.1.10",
      "metadata": {
        "description": "IP Address for Backend Server 1"
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().name, '-appgw')]",
      "metadata": {
        "description": "Application Gateway Name"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "PublicIp",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Location For the resources"
      }
    }
  },
  "variables": {
    "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-10-01",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
            "domainNameLabel": "[concat('appgw-vm-', uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-10-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "['subnet1']",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2018-10-01",
      "name": "[parameters('applicationGatewayName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('skuName')]",
          "tier": "Standard_v2",
          "capacity": 2
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'subnet1')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "HttpPort",
            "properties": {
                "Port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "[parameters('backendIpAddress1')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled",
              "PickHostNameFromBackendAddress": true,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('applicationGatewayName'), 'HttpCustomProbe')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "HttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGatewayName'), 'appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                 "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGatewayName'), 'HttpPort')]"
              },
              "Protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "HttpRule1",
            "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGatewayName'), 'HttpListener')]"
                },
                "backendAddressPool": {
                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'appGatewayBackendPool')]"
                },
                "backendHttpSettings": {
                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
                },
                "rewriteRuleSet": {
                  "id": "[resourceId('Microsoft.Network/applicationGateways/rewriteRuleSets', parameters('applicationGatewayName'), 'rewriteRuleSet1')]"
                }
            }
          }
        ],
        "rewriteRuleSets": [
          {
            "name": "RewriteRuleSet1",
            "properties": {
              "rewriteRules": [
                {
                  "name": "RWRule1",
                  "actionSet": {
                    "requestHeaderConfigurations": [
                      {
                        "headerName": "Accept-Charset",
                        "headerValue": "utf-8"
                      }
                    ],
                    "responseHeaderConfigurations": [
                      {
                        "headerName": "Content-Type",
                        "headerValue": "text/html; charset=utf-8"
                      }
                    ]
                  }
                }
              ]
            },
            "type": "Microsoft.Network/applicationGateways/rewriteRuleSets"
          }
        ],
        "probes": [
            {
                "name": "HttpCustomProbe",
                "properties": {
                    "protocol": "Http",
                    "path": "/",
                    "interval": 30,
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "pickHostNameFromBackendHttpSettings": true,
                    "minServers": 0,
                    "match": {
                        "body": "",
                        "statusCodes": [
                            "200-399"
                        ]
                    }
                },
                "type": "Microsoft.Network/applicationGateways/probes"
            }
        ]
      }
    }
  ]
}
