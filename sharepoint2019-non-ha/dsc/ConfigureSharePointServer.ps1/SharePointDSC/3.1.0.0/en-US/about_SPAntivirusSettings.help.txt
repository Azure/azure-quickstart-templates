.NAME
    SPAntivirusSettings

# Description
    
    **Type:** Distributed
    **Requires CredSSP:** No
    
    This resource is used to set the global antivirus settings for the local farm.
    These settings will be used to control the behavior of an external anti-virus
    scanning tool that is able to integrate with SharePoint. Note that this will
    not scan documents for viruses on it's own, an external tool still needs to be
    installed on the servers that integrates with SharePoint.
    
.PARAMETER IsSingleInstance
    Key - String
    Allowed values: Yes
    Specifies the resource is a single instance, the value must be 'Yes'

.PARAMETER ScanOnDownload
    Write - Boolean
    Should documents be scanned before being downloaded

.PARAMETER ScanOnUpload
    Write - Boolean
    Should documents be scanned on upload

.PARAMETER AllowDownloadInfected
    Write - Boolean
    Should documents that are infected be allowed to be downloaded

.PARAMETER AttemptToClean
    Write - Boolean
    Should infected documents be handed to the AV engine to attempt cleaning

.PARAMETER TimeoutDuration
    Write - Uint16
    What is the timeout for an AV scan in seconds

.PARAMETER NumberOfThreads
    Write - Uint16
    How many concurrent threads should the AV engine be able to run on a server

.PARAMETER InstallAccount
    Write - String
    POWERSHELL 4 ONLY: The account to run this resource as, use PsDscRunAsCredential if using PowerShell 5


.EXAMPLE
    This example shows how to apply specific anti-virus configuration to the farm


    Configuration Example
    {
        param(
            [Parameter(Mandatory = $true)]
            [PSCredential]
            $SetupAccount
        )
        Import-DscResource -ModuleName SharePointDsc

        node localhost {
            SPAntivirusSettings AVSettings
            {
                IsSingleInstance      = "Yes"
                ScanOnDownload        = $true
                ScanOnUpload          = $true
                AllowDownloadInfected = $false
                AttemptToClean        = $false
            }
        }
    }


