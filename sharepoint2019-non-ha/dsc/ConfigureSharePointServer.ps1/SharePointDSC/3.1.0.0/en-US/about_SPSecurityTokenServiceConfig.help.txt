.NAME
    SPSecurityTokenServiceConfig

# Description
    
    **Type:** Distributed
    **Requires CredSSP:** No
    
    This resource is responsible for configuring the Security Token Service within
    the local SharePoint farm. Using Ensure equals to Absent is not supported.
    This resource can only apply configuration, not ensure they don't exist.
    
.PARAMETER IsSingleInstance
    Key - String
    Allowed values: Yes
    Specifies the resource is a single instance, the value must be 'Yes'

.PARAMETER Name
    Required - string
    The name of the security token service

.PARAMETER NameIdentifier
    Write - string
    The identifier for the security token service

.PARAMETER UseSessionCookies
    Write - Boolean
    True set the security token service to use cookies

.PARAMETER AllowOAuthOverHttp
    Write - Boolean
    True set the security token service to allow OAuth over HTTP

.PARAMETER AllowMetadataOverHttp
    Write - Boolean
    True set the security token service to allow metadata exchange over HTTP

.PARAMETER Ensure
    Write - string
    Allowed values: Present, Absent
    Present ensures the configurations are applied

.PARAMETER InstallAccount
    Write - String
    POWERSHELL 4 ONLY: The account to run this resource as, use PsDscRunAsCredential if using PowerShell 5


.EXAMPLE
    This example configures the Security Token Service


    Configuration Example
    {
        param(
            [Parameter(Mandatory = $true)]
            [PSCredential]
            $SetupAccount
        )
        Import-DscResource -ModuleName SharePointDsc

        node localhost {
            SPSecurityTokenServiceConfig SecurityTokenService
            {
                IsSingleInstance      = "Yes"
                Name                  = "SPSecurityTokenService"
                NameIdentifier        = "00000003-0000-0ff1-ce00-000000000000@9f11c5ea-2df9-4950-8dcf-da8cd7aa4eff"
                UseSessionCookies     = $false
                AllowOAuthOverHttp    = $false
                AllowMetadataOverHttp = $false
                PsDscRunAsCredential  = $SetupAccount
            }
        }
    }


