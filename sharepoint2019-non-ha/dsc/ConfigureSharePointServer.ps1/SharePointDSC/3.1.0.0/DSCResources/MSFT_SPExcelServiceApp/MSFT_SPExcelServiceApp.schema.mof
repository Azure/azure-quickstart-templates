[ClassVersion("1.0.0.0")]
Class MSFT_SPExcelFileLocation
{
    [Key, Description("The address of the file location")] String Address;
    [Required, Description("The type of the trusted file location"), ValueMap{"SharePoint","UNC", "HTTP"}, Values{"SharePoint","UNC", "HTTP"}] String LocationType;
    [Write, Description("Specifies that the loading of a Excel Services Application file automatically fails if an automatic data refresh operation fails when the file is opened.")] Boolean AbortOnRefreshOnOpenFail;
    [Write, Description("Specifies the maximum time, in seconds, that a computed value for a volatile function is cached for automatic recalculations.")] Uint32 AutomaticVolatileFunctionCacheLifetime;
    [Write, Description("Specifies the maximum size, in megabytes, of a chart or image that can be opened.")] Uint32 ChartAndImageSizeMax;
    [Write, Description("Specifies the maximum number of concurrent external data requests allowed in each session.")] Uint32 ConcurrentDataRequestsPerSessionMax;
    [Write, Description("Specifies the calculation mode of workbooks."), ValueMap{"File","Manual", "Auto", "AutoDataTables"}, Values{"File","Manual", "Auto", "AutoDataTables"}] String DefaultWorkbookCalcMode;
    [Write, Description("Specifies a friendly description for the new file location.")] String Description;
    [Write, Description("Displays granular error messages for external data failures for files in this location.")] Boolean DisplayGranularExtDataErrors;
    [Write, Description("Specifies the type of external data access allowed for workbooks."), ValueMap{"None","Dcl", "DclandEmbedded"}, Values{"None","Dcl", "DclandEmbedded"}] String ExternalDataAllowed;
    [Write, Description("Indicates that subordinate URLs, directories and libraries are trusted.")] Boolean IncludeChildren;
    [Write, Description("Specifies the time, in seconds, that Excel Services Application waits before it re-issues a manual, or user-initiated, external data request.")] Uint32 ManualExtDataCacheLifetime;
    [Write, Description("Specifies the time, in seconds, that a session for a new, unsaved, workbook remains active on Excel Services Application with no user activity.")] Uint32 NewWorkbookSessionTimeout;
    [Write, Description("Specifies the time, in seconds, that Excel Services Application waits before it re-issues an on-open or periodic (that is, automatic) external data request.")] Uint32 PeriodicExtDataCacheLifetime;
    [Write, Description("Specifies the maximum duration, in seconds, for a single request in a session.")] Uint32 RequestDurationMax;
    [Write, Description("Specifies whether requests from the Representational State Transfer (REST) Application Programming Interface (API) are permitted to refresh external data connections.")] Boolean RESTExternalDataAllowed;
    [Write, Description("Specifies the time, in seconds, that a session remains active on Excel Services Application with no user activity.")] Uint32 SessionTimeout;
    [Write, Description("Specifies the time, in seconds, that a user has to make the initial interaction with a spreadsheet.")] Uint32 ShortSessionTimeout;
    [Write, Description("Specifies that user-defined functions can be called by workbooks that are loaded from the trusted file location that is specified in Address.")] Boolean UdfsAllowed;
    [Write, Description("Specifies that a warning is displayed to the user on the first refresh of data for the workbook.")] Boolean WarnOnDataRefresh;
    [Write, Description("Specifies the maximum size, in megabytes, of a workbook that can be loaded.")] Uint32 WorkbookSizeMax;
};
[ClassVersion("1.0.0.0"), FriendlyName("SPExcelServiceApp")]
class MSFT_SPExcelServiceApp : OMI_BaseResource
{
    [Key, Description("The name of the service application")] string Name;
    [Required, Description("The name of the application pool to run the service app in")] string ApplicationPool;
    [Write, Description("Trusted file locations for the service app"), EmbeddedInstance("MSFT_SPExcelFileLocation")] string TrustedFileLocations[];
    [Write, Description("Specifies that files that are no longer used by Excel Services Application can remain in the cache for later use.")] Boolean CachingOfUnusedFilesEnable;
    [Write, Description("Specifies that trusted workbooks and data connection files can be requested and rendered by Web Parts or pages that reside in other HTTP domains.")] Boolean CrossDomainAccessAllowed;
    [Write, Description("Requires that encryption is used between the end-user and the server running Excel Services Application."), ValueMap{"None","Connection"}, Values{"None","Connection"}] String EncryptedUserConnectionRequired;
    [Write, Description("Specifies the maximum number of seconds that an external data connection can remain open in the connection pool.")] Uint32 ExternalDataConnectionLifetime;
    [Write, Description("Specifies the authentication method that Excel Services Application uses to retrieve files."), ValueMap{"UseImpersonation","UseFileAccessAccount"}, Values{"UseImpersonation","UseFileAccessAccount"}] String FileAccessMethod;
    [Write, Description("Specifies the load-balancing schema that is used by the Excel Services Application Web service application to send requests to different back-end Excel Services Application computers."), ValueMap{"RoundRobin","Local","WorkbookURL"}, Values{"RoundRobin","Local","WorkbookURL"}] String LoadBalancingScheme;
    [Write, Description("Specifies the percentage of the maximum private bytes that can be allocated to inactive objects.")] Uint32 MemoryCacheThreshold;
    [Write, Description("Specifies the maximum private bytes, in megabytes, that are used by Excel Services Application.")] Uint32 PrivateBytesMax;
    [Write, Description("Specifies the maximum number of sessions allowed for a user.")] Uint32 SessionsPerUserMax;
    [Write, Description("Specifies the maximum number of anonymous sessions allowed per site collection.")] Uint32 SiteCollectionAnonymousSessionsMax;
    [Write, Description("Terminates Excel Services Application when an access violation occurs in the process.")] Boolean TerminateProcessOnAccessViolation;
    [Write, Description("Specifies that if a workbook causes an access violation error on Excel Services Application, all files originating from that workbookâ€™s site collection are blocked from loading for the specified period (in seconds).")] Uint32 ThrottleAccessViolationsPerSiteCollection;
    [Write, Description("Specifies that the application ID that is used to look up the unattended service account credentials from the secure storage service that is specified by the UnattendedAccountSecureServiceAppName parameter.")] String UnattendedAccountApplicationId;
    [Write, Description("Specifies the maximum amount of time, in minutes, that objects not currently used in a session are kept in the memory cache.")] Uint32 UnusedObjectAgeMax;
    [Write, Description("Specifies the local file system location of the cache that is used to store workbooks that are used by Excel Services Application.")] String WorkbookCache;
    [Write, Description("Specifies the maximum allowable size, in megabytes, of an individual session.")] Uint32 WorkbookCacheSizeMax;
    [Write, Description("Present ensures service app exists, absent ensures it is removed"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("POWERSHELL 4 ONLY: The account to run this resource as, use PsDscRunAsCredential if using PowerShell 5"), EmbeddedInstance("MSFT_Credential")] String InstallAccount;
};
