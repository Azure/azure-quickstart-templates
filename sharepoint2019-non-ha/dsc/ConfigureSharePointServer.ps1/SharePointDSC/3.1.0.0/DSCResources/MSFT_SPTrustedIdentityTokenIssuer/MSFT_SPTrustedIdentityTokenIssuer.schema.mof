
[ClassVersion("1.0.0.0")]
class MSFT_SPClaimTypeMapping
{
    [Key, Description("Display name of the incoming claim type")] String Name;
    [Required, Description("URI of the incoming claim type")] String IncomingClaimType;
    [Write, Description("URI of the local claim type, not required if same as IncomingClaimType")] String LocalClaimType;
};


[ClassVersion("1.2.0.0"), FriendlyName("SPTrustedIdentityTokenIssuer")]
class MSFT_SPTrustedIdentityTokenIssuer : OMI_BaseResource
{
    [Key, Description("Name of the SPTrustedIdentityTokenIssuer")] String Name;
    [Required, Description("Description of the SPTrustedIdentityTokenIssuer")] String Description;
    [Required, Description("Default Realm that is passed to identity provider")] String Realm;
    [Required, Description("URL of the identity provider where user is redirected to for authentication")] String SignInUrl;
    [Required, Description("Identity claim type that uniquely identifies the user")] String IdentifierClaim;
    [Required, Description("Array of MSFT_SPClaimTypeMapping to use with cmdlet New-SPClaimTypeMapping"), EmbeddedInstance("MSFT_SPClaimTypeMapping")] String ClaimsMappings[];
    [Write, Description("Specify the thumbprint of the signing certificate, which must be located in certificate store LocalMachine\\My")] String SigningCertificateThumbprint;
    [Write, Description("Specify the file path to the signing certificate if it is not stored in the local certificate store already")] String SigningCertificateFilePath;
    [Write, Description("Name of a claims provider to set with this SPTrustedIdentityTokenIssuer")] String ClaimProviderName;
    [Write, Description("Sign-out URL")] String ProviderSignOutUri;
    [Write, Description("WReply parameter allows SharePoint to specify the return URL to the 3rd party STS upon successful authentication")] Boolean UseWReplyParameter;
    [Write, Description("Present if the SPTrustedIdentityTokenIssuer should be created, or Absent if it should be removed"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, EmbeddedInstance("MSFT_Credential"), Description("POWERSHELL 4 ONLY: The account to run this resource as, use PsDscRunAsCredential if using PowerShell 5")] String InstallAccount;
};
