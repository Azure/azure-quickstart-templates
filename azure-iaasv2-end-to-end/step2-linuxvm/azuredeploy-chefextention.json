{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkName": {
            "type": "string",
	        "defaultValue": "First_ARM_VNet",    
        	"metadata": {
                "description": "This is the name of the Virtual Network"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "Image Publisher"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Image Offer"
            }
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "14.04.2-LTS",
            "metadata": {
                "description": "Image SKU"
            }
        },
        "vmStorageAccountContainerName": {
            "type": "string",
            "defaultValue": "vhds",
            "metadata": {
                "description": "This is the storage account container name"
            }
        },
        "newStorageAccountName": {
            "type": "string"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A0",
            "allowedValues": [
                "Standard_A0",
				"Standard_A1",
				"Standard_A2",
				"Standard_D1"
            ],
            "metadata": {
                "description": "This is the allowed list of VM sizes"
            }
        },
		 "chef_node_name": {
			"type": "string",
			"metadata": {
			"description": "Unique name for the node (VM) in the Chef Organization"
		}
		},
		"chef_server_url": {
		"type": "string",
		"metadata": {
        "description": "Organization URL for the Chef Server. Example https://ChefServerDnsName.cloudapp.net/organizations/Orgname"
		}
		},
		"validation_client_name": {
		"type": "string",
		"metadata": {
        "description": "Validator key name for the organization. Example : MyOrg-validator"
		}
		},
		"runlist": {
		"type": "string",
		"defaultValue": "recipe[getting-started]",
		"metadata": {
        "description": "Optional Run List to Execute"
		}
		},
		"autoUpdateClient": {
		"type": "string",
		"defaultValue": "false",
		"metadata": {
        "description": "Optional Flag for opting into auto updates"
		}
		},
		"validation_key": {
		"type": "string",
		"metadata": {
        "description": "JSON Escaped Validation Key"
		}
		}
    },
    "variables": {
        "VirtualNetworkPrefix": "10.0.0.0/16",
        "subnet1Name": "WebSubnetName",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet2Name": "AppSubnetName",
        "subnet2Prefix": "10.0.1.0/24",
        "subnet3Name": "DBSubnetName",
        "subnet3Prefix": "10.0.2.0/24",
        "webPrefix": "web",
        "appPrefix": "app",
        "dbPrefix": "db",
		"vmExtensionName": "LinuxChefExtension",
        "webAvailabilitySetName": "WebAvSet",
        "appAvailabilitySetName": "AppAvSet",
        "dbAvailabilitySetName": "DBAvSet",
        "storageAccountType": "Standard_LRS",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables ('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',variables ('subnet2Name'))]",
        "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',variables ('subnet3Name'))]",
        "numberOfInstances": 2
    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('webAvailabilitySetName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "WebAvailabilitySet"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "tags": {
                "displayName": "VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('VirtualNetworkPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet3Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('webPrefix'), 'nic', copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "WebNetworkInterfaces"
            },
		
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('webPrefix'), copyindex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "tags": {
                "displayName": "WebVirtualMachines"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('webPrefix'), 'nic', copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('webAvailabilitySetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webAvailabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('webPrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', variables('webPrefix'), copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
			
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('webPrefix'), 'nic', copyindex()))]"
                        }
                    ]
                
				}
            }
	
		},
    {
	"type": "Microsoft.Compute/virtualMachines/extensions",
	"name": "[concat(variables('webPrefix'),copyIndex(),'/', variables('vmExtensionName'))]",
	"apiVersion": "2015-05-01-preview",
	"location": "[resourceGroup().location]",
	"copy": {
	"name": "extensionLoop",
	"count": "[variables('numberOfInstances')]"
	},
	"dependsOn": [
	"[concat('Microsoft.Compute/virtualMachines/', variables('webPrefix'), copyIndex())]"
	],
	"properties": {
	"publisher": "Chef.Bootstrap.WindowsAzure",
	"type": "LinuxChefClient",
	"typeHandlerVersion": "1207.12",
	"settings": {
	"bootstrap_options": {
	"chef_node_name": "[concat(parameters('chef_node_name'),copyIndex())]",
	"chef_server_url": "[parameters('chef_server_url')]",
	"validation_client_name": "[parameters('validation_client_name')]"
	},
	"runlist": "[parameters('runlist')]"
	},
	"protectedSettings": {
	"validation_key": "[parameters('validation_key')]"
	}
	}
},
		{
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('appAvailabilitySetName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "AppAvailabilitySet"
            }
        },
     {
				"type": "Microsoft.Compute/virtualMachines/extensions",
				"name": "[concat(variables('appPrefix'),copyIndex(),'/', variables('vmExtensionName'))]",
				"apiVersion": "2015-05-01-preview",
				"location": "[resourceGroup().location]",
				"copy": {
				"name": "extensionLoop",
				"count": "[variables('numberOfInstances')]"
				},
				"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('appPrefix'), copyIndex())]"
				],
				"properties": {
				"publisher": "Chef.Bootstrap.WindowsAzure",
				"type": "LinuxChefClient",
				"typeHandlerVersion": "1207.12",
				"settings": {
				"bootstrap_options": {
				"chef_node_name": "[concat(parameters('chef_node_name'),copyIndex())]",
				"chef_server_url": "[parameters('chef_server_url')]",
				"validation_client_name": "[parameters('validation_client_name')]"
				},
				"runlist": "[parameters('runlist')]"
				},
				"protectedSettings": {
				"validation_key": "[parameters('validation_key')]"
				}
				}
			},
	    {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('appPrefix'), 'nic', copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "AppNetworkInterfaces"
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('appPrefix'), copyindex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "tags": {
                "displayName": "AppVirtualMachines"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('appPrefix'), 'nic', copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('appAvailabilitySetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('appAvailabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('appPrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', variables('appPrefix'), copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('appPrefix'), 'nic', copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('dbAvailabilitySetName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "DBAvailabilitySet"
            }
        },
        {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('dbPrefix'),copyIndex(),'/', variables('vmExtensionName'))]",
			"apiVersion": "2015-05-01-preview",
			"location": "[resourceGroup().location]",
			"copy": {
			"name": "extensionLoop",
			"count": "[variables('numberOfInstances')]"
			},
			"dependsOn": [
			"[concat('Microsoft.Compute/virtualMachines/', variables('dbPrefix'), copyIndex())]"
			],
			"properties": {
				"publisher": "Chef.Bootstrap.WindowsAzure",
				"type": "LinuxChefClient",
				"typeHandlerVersion": "1207.12",
				"settings": {
				"bootstrap_options": {
				"chef_node_name": "[concat(parameters('chef_node_name'),copyIndex())]",
				"chef_server_url": "[parameters('chef_server_url')]",
				"validation_client_name": "[parameters('validation_client_name')]"
				},
				"runlist": "[parameters('runlist')]"
				},
				"protectedSettings": {
				"validation_key": "[parameters('validation_key')]"
				}
			}
		},
		{
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('dbPrefix'), 'nic', copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "DBNetworkInterfaces"
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('dbPrefix'), copyindex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "tags": {
                "displayName": "DBVirtualMachines"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('dbPrefix'), 'nic', copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('dbAvailabilitySetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('dbAvailabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('dbPrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', variables('dbPrefix'), copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('dbPrefix'), 'nic', copyindex()))]"
                        }
                    ]
                }
            }
        }
    ]
}