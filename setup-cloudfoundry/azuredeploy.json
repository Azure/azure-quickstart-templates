{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "defaultValue": "boshstorage"
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "boshdev1"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "location": {
      "type": "String",
      "defaultValue": "West US"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2"
    },
    "stemcellUri": {
      "type": "string",
      "defaultValue": "An sas URI points to stemcell vhd"
    },
    "vmName": {
      "type": "string",
      "defaultValue": "bosh_vm1"
    }
  },
  "variables": {
    "virtualNetworkName": "vnet",
    "nicName": "[parameters('vmName')]",
    "publicIPAddressName": "[parameters('vmName')]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet2Name": "Subnet-2",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet2Prefix": "10.0.1.0/24",
    "vmStorageAccountContainerName": "vhds",
    "publicIPAddressType": "Dynamic",
    "networksercuritygroup_name": "bosh",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "storageid": "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "ubuntuOSVersion": "14.10",
     "api-version": "2015-05-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "[variables('api-version')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-microbosh')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-bosh')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-cf')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networksercuritygroup_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
                "networkSecurityGroup": {
              "id":  "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networksercuritygroup_name'))]"
              }
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
                "networkSecurityGroup": {
            "id":  "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networksercuritygroup_name'))]"
              }
            }
          }
        ]
      }
    },
    {
       "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku" : "[variables('ubuntuOSVersion')]",
                        "version":"latest"
                    },
          "osDisk" : {
              "name": "osdisk",
              "vhd": {
                  "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'-osdisk.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "30",
              "lun": 0,
              "createOption": "empty",
              "vhd": { "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'datadisk1.vhd')]" }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/newuserscript')]",
      "apiVersion": "[variables('api-version')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/qingfuwang/azure-quickstart-templates/master/setup-cloudfoundry/launch_script.sh"
          ],
           "commandToExecute": "sh launch_script.sh https://raw.githubusercontent.com/qingfuwang/azure-quickstart-templates/master/setup-cloudfoundry/",
          "newStorageAccountName:":"[parameters('newStorageAccountName')]",
          "virtualNetworkName":"[variables('virtualNetworkName')]",
          "storagekey":"[listKeys(variables('storageid'),'2015-05-01-preview').key1]",
          "vnet":"[variables('virtualNetworkName')]",
          "subnet":"Subnet-1",
          "vip": "[reference(concat(parameters('vmName'),'-microbosh')).ipAddress]",
          "microboship": "[reference(concat(parameters('vmName'),'-microbosh')).ipAddress]",
          "boship": "[reference(concat(parameters('vmName'),'-bosh')).ipAddress]",
          "cfip":"[reference(concat(parameters('vmName'),'-cf')).ipAddress]",
          "ip":"10.0.0.10",
          "storageaccount":"[parameters('newStorageAccountName')]",
          "subscriptionid":"[subscription().subscriptionId]",
          "username":"[parameters('adminUserName')]",
          "stemcell": "[parameters('stemcellUri')]",
          "some_id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networksercuritygroup_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "bosh_tcp_22",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 3002,
              "direction": "Inbound"
            }
          },
          {
            "name": "bosh_tcp_2555",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2555",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 3001,
              "direction": "Inbound"
            }
          },
          {
            "name": "bosh_tcp_6868",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "6868",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 3000,
              "direction": "Inbound"
            }
          }
        ]

      }
    }
  ]
}

