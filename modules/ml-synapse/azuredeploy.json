{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1318.3566",
      "templateHash": "16992569491940042489"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "location": {
      "type": "string"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "aia-industry": "industry",
        "aia-solution ": "solution",
        "version": "0.0.0"
      }
    },
    "defaultDataLakeStorageFilesystemName": {
      "type": "string",
      "defaultValue": "workspace"
    },
    "storageLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "cmkUri": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id, parameters('name'))]"
    },
    "azureMLName": {
      "type": "string",
      "defaultValue": "[format('aml{0}', uniqueString(resourceGroup().id, parameters('name')))]"
    },
    "appInsights": {
      "type": "string",
      "defaultValue": "[format('appin{0}', uniqueString(resourceGroup().id, parameters('name')))]"
    },
    "keyVault": {
      "type": "string",
      "defaultValue": "[format('kv{0}', uniqueString(resourceGroup().id, parameters('name')))]"
    }
  },
  "variables": {
    "azureMLSku": "basic",
    "kind": "StorageV2",
    "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "defaultDataLakeStorageAccountName": "[uniqueString(resourceGroup().id, parameters('name'))]",
    "defaultDataLakeStorageAccountUrl": "[format('https://{0}.dfs.{1}', variables('defaultDataLakeStorageAccountName'), environment().suffixes.storage)]",
    "cmkUriStripVersion": "[if(empty(parameters('cmkUri')), '', substring(parameters('cmkUri'), 0, lastIndexOf(parameters('cmkUri'), '/')))]",
    "withCmk": {
      "cmk": {
        "key": {
          "name": "default",
          "keyVaultUrl": "[variables('cmkUriStripVersion')]"
        }
      }
    },
    "encryption": "[if(empty(parameters('cmkUri')), json('{}'), variables('withCmk'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Type": "Synapse Data Lake Storage",
        "Created with": "Synapse Azure Resource Manager deployment template"
      },
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "[variables('kind')]",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'workspace')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2019-06-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
          "filesystem": "[parameters('defaultDataLakeStorageFilesystemName')]"
        },
        "encryption": "[variables('encryption')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces/firewallRules",
      "apiVersion": "2019-06-01-preview",
      "name": "[format('{0}/{1}', parameters('name'), 'allowAll')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[format('{0}/default/{1}/Microsoft.Authorization/{2}', variables('defaultDataLakeStorageAccountName'), parameters('defaultDataLakeStorageFilesystemName'), guid(format('{0}/{1}/storageRoleDeploymentResource', resourceGroup().id, variables('storageBlobDataContributorRoleID'))))]",
      "location": "[parameters('storageLocation')]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
        "principalId": "[reference(format('Microsoft.Synapse/workspaces/{0}', parameters('name')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVault')]",
      "tags": "[parameters('tags')]",
      "location": "[parameters('location')]",
      "properties": {
        "accessPolicies": [],
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('appInsights')]",
      "tags": "[parameters('tags')]",
      "location": "[if(or(equals(parameters('location'), 'eastus2'), equals(parameters('location'), 'westcentralus')), 'southcentralus', parameters('location'))]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2020-06-01",
      "name": "[parameters('azureMLName')]",
      "tags": "[parameters('tags')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('azureMLSku')]",
        "tier": "[variables('azureMLSku')]"
      },
      "properties": {
        "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('appInsights'))]",
        "friendlyName": "[parameters('azureMLName')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsights'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ]
}
