{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "693806289793137908"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which the Azure Storage resources should be deployed."
      }
    },
    "accountName": {
      "type": "string",
      "defaultValue": "[format('stor{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Azure Storage account to create. This must be globally unique."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Standard_GZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the Azure Storage account."
      }
    },
    "indexDocumentPath": {
      "type": "string",
      "defaultValue": "index.htm",
      "metadata": {
        "description": "The name of the page to display when a user navigates to the root of your static website."
      }
    },
    "indexDocumentContents": {
      "type": "string",
      "defaultValue": "<h1>Welcome</h1>",
      "metadata": {
        "description": "The contents of the page to display when a user navigates to the root of your static website."
      }
    },
    "errorDocument404Path": {
      "type": "string",
      "defaultValue": "404.htm",
      "metadata": {
        "description": "The name of the page to display when a user attempts to navigate to a page that does not exist in your static website."
      }
    },
    "errorDocument404Contents": {
      "type": "string",
      "defaultValue": "<h1>Error: 404 Not Found</h1>",
      "metadata": {
        "description": "The contents of the page to display when a user attempts to navigate to a page that does not exist in your static website."
      }
    },
    "supportsHttpsTrafficOnly": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Indicates whether the storage account should require HTTPS traffic."
      }
    }
  },
  "functions": [],
  "variables": {
    "storageAccountContributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
    "storageAccountStorageBlobDataContributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "managedIdentityName": "StorageStaticWebsiteEnabler",
    "deploymentScriptName": "EnableStorageStaticWebsite"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('accountName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "properties": {
        "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]"
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('accountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountContributorRoleDefinitionId'))]",
      "properties": {
        "roleDefinitionId": "[variables('storageAccountContributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('accountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountStorageBlobDataContributorRoleDefinitionId'))]",
      "properties": {
        "roleDefinitionId": "[variables('storageAccountStorageBlobDataContributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[variables('deploymentScriptName')]",
      "location": "[parameters('location')]",
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "azPowerShellVersion": "5.4",
        "scriptContent": "$ErrorActionPreference = 'Stop'\r\n\r\n# Enable the static website feature on the storage account.\r\n$storageAccount = Get-AzStorageAccount -ResourceGroupName $env:ResourceGroupName -AccountName $env:StorageAccountName\r\n$ctx = $storageAccount.Context\r\nEnable-AzStorageStaticWebsite -Context $ctx -IndexDocument $env:IndexDocumentPath -ErrorDocument404Path $env:ErrorDocument404Path\r\n\r\n# Create a blob for the index page, and add it to the $web blob container.\r\nNew-Item $env:IndexDocumentPath -Force\r\nSet-Content $env:IndexDocumentPath $env:IndexDocumentContents\r\nSet-AzStorageBlobContent -Context $ctx -Container '$web' -File $env:IndexDocumentPath -Blob $env:IndexDocumentPath -Properties @{'ContentType' = 'text/html'}\r\n\r\n# Create a blob for the error document page, and add it to the $web blob container.\r\nNew-Item $env:ErrorDocument404Path -Force\r\nSet-Content $env:ErrorDocument404Path $env:ErrorDocument404Contents\r\nSet-AzStorageBlobContent -Context $ctx -Container '$web' -File $env:ErrorDocument404Path -Blob $env:ErrorDocument404Path -Properties @{'ContentType' = 'text/html'}\r\n",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "PT4H",
        "environmentVariables": [
          {
            "name": "ResourceGroupName",
            "value": "[resourceGroup().name]"
          },
          {
            "name": "StorageAccountName",
            "value": "[parameters('accountName')]"
          },
          {
            "name": "IndexDocumentPath",
            "value": "[parameters('indexDocumentPath')]"
          },
          {
            "name": "IndexDocumentContents",
            "value": "[parameters('indexDocumentContents')]"
          },
          {
            "name": "ErrorDocument404Path",
            "value": "[parameters('errorDocument404Path')]"
          },
          {
            "name": "ErrorDocument404Contents",
            "value": "[parameters('errorDocument404Contents')]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountContributorRoleDefinitionId')))]",
        "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountStorageBlobDataContributorRoleDefinitionId')))]"
      ]
    }
  ],
  "outputs": {
    "accountResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
    },
    "staticWebsiteHostName": {
      "type": "string",
      "value": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))).primaryEndpoints.web, 'https://', ''), '/', '')]"
    },
    "staticWebsiteUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))).primaryEndpoints.web]"
    }
  }
}