{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "createChildDomain": {
      "type": "bool",
      "metadata": {
        "description": "Do you want a child domain? If false, the parameters for the child domain are ignored. "
      },
      "defaultValue": true
    },
    "createSecondDc": {
      "type": "bool",
      "metadata": {
        "description": "Do you want a second DC in each domain? If false: parameters for DC2 and DC4 are ignored. "
      },
      "defaultValue": false
    },
    "DomainName": {
      "type": "string",
      "metadata": {
        "description": "Full FQDN name for the forest root domain."
      },
      "defaultValue": "contoso.com",
      "minlength": 4
    },
    "ChildDomainName": {
      "type": "string",
      "metadata": {
        "description": "SHORT name for the child domain. New AD trees are not allowed."
      },
      "defaultValue": "child",
      "minlength": 2,
      "maxlength": 15
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the admin account for the Domain(s)"
      },
      "minlength": 6
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The (complex!) password for the Administrator account of the new VMs and Domain(s)"
      },
      "minlength": 8
    },

    "VMSize": {
      "type": "string",
      "allowedValues": [
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A3",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2"
      ],
      "metadata": {
        "description": "The size and type of the VM. DS types will get Premium (managed) disks."
      },
      "defaultValue": "Standard_DS1_v2"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows Server Version."
      }
    },

    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new VNET for the DC(s)."
      },
      "defaultValue": "adVNET",
      "minlength": 2,
      "maxlength": 16
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format."
      },
      "defaultValue": "10.0.0.0/22"
    },
    "externalDNSForwarder": {
      "type": "string",
      "metadata": {
        "description": "DNS forwarder for all non-domain (external) related DNS queries."
      },
      "defaultValue": "8.8.8.8"
    },
    "adSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the VM subnet created in the new VNET."
      },
      "defaultValue": "adSubnet",
      "minlength": 2,
      "maxlength": 16
    },
    "adSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet created in the new VNET."
      },
      "defaultValue": "10.0.0.0/24"
    },

    "RootDC1Name": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the first DC of the root domain."
      },
      "defaultValue": "rootdc1",
      "minlength": 2,
      "maxlength": 15
    },
    "RootDC1IPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the first DC of the root domain."
      },
      "defaultValue": "10.0.0.4"
    },
    "RootDC2Name": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the second DC of the root domain."
      },
      "defaultValue": "rootdc2",
      "minlength": 2,
      "maxlength": 15
    },
    "RootDC2IPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the second DC of the root domain."
      },
      "defaultValue": "10.0.0.5"
    },
    "ChildDC3Name": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the first DC of the CHILD domain."
      },
      "defaultValue": "childdc3",
      "minlength": 2,
      "maxlength": 15
    },
    "ChildDC3IPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the first DC of the CHILD domain."
      },
      "defaultValue": "10.0.0.6"
    },
    "ChildDC4Name": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the second DC of the CHILD domain."
      },
      "defaultValue": "childdc4",
      "minlength": 2,
      "maxlength": 15
    },
    "ChildDC4IPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the second DC of the CHILD domain."
      },
      "defaultValue": "10.0.0.7"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules that the script depends on. No need to change unless you copy or fork this template."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/301-create-ad-forest-with-subdomain"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "SAS storage token to access _artifactsLocation. No need to change unless you copy or fork this template."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('adSubnetName'))]",
    "adNSGName": "[concat(parameters('adSubnetName'),'NSG')]",
    "adAvailabilitySetNameRoot": "AvailSetRoot",
    "adAvailabilitySetNameChild": "AvailSetChild",

    "firstVMTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken'))]",
    "nextVMTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken'))]",
    "vnetTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/vnet.json',parameters('_artifactsLocationSasToken'))]",
    "vnetwithDNSTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/vnet-with-dns-server.json',parameters('_artifactsLocationSasToken'))]",
    "configureADNextDCTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/configureADNextDC.json',parameters('_artifactsLocationSasToken'))]",
    "createForestTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/createForest.json',parameters('_artifactsLocationSasToken'))]",
    "createChildDomainTemplateUri": "[concat(parameters('_artifactsLocation'),'/nested/createChildDomain.json',parameters('_artifactsLocationSasToken'))]",
    "nextDCConfigurationModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/ConfigureADNextDC.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "nextDCConfigurationFunction": "ConfigureADNextDC.ps1\\ConfigureADNextDC"
  },
  "resources": [
    {
      "name": "[variables('adAvailabilitySetNameRoot')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      }
    },
    {
      "name": "[variables('adAvailabilitySetNameChild')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "condition": "[parameters('createChildDomain')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      }
    },
    {
      "name": "CreateVNET",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('adSubnet')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('adNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Any_RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateVNET"
      ]
    },
    {
      "name": "CreateADVM1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','CreateVNET')]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetNameRoot'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('firstVMTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetNameRoot')]"
          },
          "vmName": {
            "value": "[parameters('RootDC1Name')]"
          },
          "vmIpAddress": {
            "value": "[parameters('RootDC1IPAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[parameters('VMSize')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          }
        }
      }
    },

    {
      "name": "CreateForest",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateADVM1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createForestTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('RootDC1Name')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "DNSForwarder": {
            "value": "[parameters('externalDNSForwarder')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },

    {
      "name": "CreateADVM3",
      "type": "Microsoft.Resources/deployments",
      "condition": "[parameters('createChildDomain')]",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','CreateVNET')]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetNameChild'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('firstVMTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetNameChild')]"
          },
          "vmName": {
            "value": "[parameters('ChildDC3Name')]"
          },
          "vmIpAddress": {
            "value": "[parameters('ChildDC3IPAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[parameters('VMSize')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          }
        }
      }
    },

    {
      "name": "CreateChildDomain",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "condition": "[parameters('createChildDomain')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateADVM3",
        "Microsoft.Resources/deployments/CreateForest"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createChildDomainTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('ChildDC3Name')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "parentDomainName": {
            "value": "[parameters('domainName')]"
          },
          "childDomainName": {
            "value": "[parameters('ChildDomainName')]"
          },

          "DNSForwarder": {
            "value": "[parameters('RootDC1IPAddress')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },

    {
      "name": "CreateADVM2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "condition": "[parameters('createSecondDc')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','CreateVNET')]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetNameRoot'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nextVMTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetNameRoot')]"
          },
          "vmName": {
            "value": "[parameters('RootDC2Name')]"
          },
          "vmIpAddress": {
            "value": "[parameters('RootDC2IPAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[parameters('VMSize')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          }
        }
      }
    },

    {
      "name": "ConfiguringRootDC2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "condition": "[parameters('createSecondDc')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateADVM2",
        "Microsoft.Resources/deployments/CreateChildDomain"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configureADNextDCTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adNextDCVMName": {
            "value": "[parameters('RootDC2Name')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "DNSServer": {
            "value": "[parameters('RootDC1IPAddress')]"
          },
          "adNextDCConfigurationFunction": {
            "value": "[variables('nextDCConfigurationFunction')]"
          },
          "adNextDCConfigurationModulesURL": {
            "value": "[variables('nextDCConfigurationModulesURL')]"
          }
        }
      }
    },

    {
      "name": "CreateADVM4",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "condition": "[and(parameters('createSecondDc'), parameters('createChildDomain'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','CreateVNET')]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetNameChild'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nextVMTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetNameChild')]"
          },
          "vmName": {
            "value": "[parameters('ChildDC4Name')]"
          },
          "vmIpAddress": {
            "value": "[parameters('ChildDC4IPAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[parameters('VMSize')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          }
        }
      }
    },

    {
      "name": "ConfiguringChildDC4",
      "type": "Microsoft.Resources/deployments",
      "condition": "[and(parameters('createSecondDc'), parameters('createChildDomain'))]",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateADVM4",
        "Microsoft.Resources/deployments/CreateChildDomain"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configureADNextDCTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adNextDCVMName": {
            "value": "[parameters('ChildDC4Name')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[concat(parameters('childDomainName'), '.', parameters('domainName'))]"
          },
          "DNSServer": {
            "value": "[parameters('ChildDC3IPAddress')]"
          },
          "adNextDCConfigurationFunction": {
            "value": "[variables('nextDCConfigurationFunction')]"
          },
          "adNextDCConfigurationModulesURL": {
            "value": "[variables('nextDCConfigurationModulesURL')]"
          }
        }
      }
    },

    {
      "name": "UpdateVNet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateChildDomain"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('adSubnet')]"
          },
          "NSGName": {
            "value":  "[variables('adNSGName')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('RootDC1IPAddress')]",
              "[parameters('RootDC2IPAddress')]"
            ]
          }
        }
      }
    }

  ]
}


