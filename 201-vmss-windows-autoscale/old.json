{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
   "parameters" : {
       "vmSSName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VMSS. Used as an infix for naming other resources as well."
            }
        },
        "instanceCount" : {
            "type": "int",
            "metadata": {
                "description": "Number of VM instances"
            }
        },
      	"newStorageAccountSuffix" : {
           "type": "string"
        },
        "uniqueDNSName": {
           "type": "string"
        },
        "adminUsername": {
           "type": "string"
        },
        "adminPassword": {
           "type": "securestring"
        }
   },
   "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageVersion": "2012-R2-Datacenter",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressName": "publicIp1",
        "loadBalancerName": "loadBalancer1",
        "nicName": "networkInterface1",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "nicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "virtualNetworkName": "vmssvnet",
        "storageAccountType": "Standard_LRS",
        "location": "[resourceGroup().location]",
        "storageAccountPrefix": [
	       "a","g","m","s","y"
        ],
       "diagnosticsStorageAccountName": "[concat('a', parameters('newStorageAccountSuffix'))]",
       "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
       "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
        "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
        "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
        "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
        "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
        "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',parameters('vmssName'))]",
        "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]"
   },
   "resources": [
    {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[concat(variables('storageAccountPrefix')[copyIndex()], parameters('newStorageAccountSuffix'))]",
        "apiVersion": "2015-05-01-preview",
        "copy": {
          "name": "storageLoop",
          "count": 5
        },
        "location": "[variables('location')]",
        "properties": {
            "accountType": "[variables('storageAccountType')]"
        }
    },
    {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('location')]",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[variables('addressPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "[variables('subnetName')]",
                    "properties": {
                        "addressPrefix": "[variables('subnetPrefix')]"
                    }
                }
            ]
          }
    },
    {
     "apiVersion": "2015-06-15",
     "type": "Microsoft.Network/publicIPAddresses",
     "name": "[variables('publicIPAddressName')]",
     "location": "[variables('location')]",
     "properties": {
         "publicIPAllocationMethod": "Dynamic",
         "dnsSettings": {
             "domainNameLabel": "[parameters('uniqueDNSName')]"
         }
     }
 },
 {
     "apiVersion": "2015-06-15",
     "name": "[variables('loadBalancerName')]",
     "type": "Microsoft.Network/loadBalancers",
     "location": "[variables('location')]",
     "dependsOn": [
         "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
     ],
     "properties": {
         "frontendIPConfigurations": [
             {
                 "name": "loadBalancerFrontEnd",
                 "properties": {
                     "publicIPAddress": {
                         "id": "[variables('publicIPAddressID')]"
                     }
                 }
             }
         ],
         "backendAddressPools": [
             {
                 "name": "bepool1"
             }
         ],
         "inboundNatPools": [
             {
                 "name": "natpool1",
                 "properties": {
                     "frontendIPConfiguration": {
                         "id": "[variables('frontEndIPConfigID')]"
                     },
                     "protocol": "tcp",
                     "frontendPortRangeStart": 50000,
                     "frontendPortRangeEnd": 50500,
                     "backendPort": 3389
                 }
             }
         ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2015-06-15",
      "name": "[parameters('vmSSName')]",
      "location": "[variables('location')]",
      "tags": {
        "vmsstag1": "Myriad"
       },
       "dependsOn": [
           "[concat('Microsoft.Storage/storageAccounts/a', parameters('newStorageAccountSuffix'))]",
           "[concat('Microsoft.Storage/storageAccounts/g', parameters('newStorageAccountSuffix'))]",
           "[concat('Microsoft.Storage/storageAccounts/m', parameters('newStorageAccountSuffix'))]",
           "[concat('Microsoft.Storage/storageAccounts/s', parameters('newStorageAccountSuffix'))]",
           "[concat('Microsoft.Storage/storageAccounts/y', parameters('newStorageAccountSuffix'))]",
           "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
           "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
       ],
       "sku": {
         "name": "Standard_A2",
         "tier": "Standard",
         "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
         "upgradePolicy": {
         "mode": "Manual"
        },
        "virtualMachineProfile": {
         "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://a', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://g', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://m', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://s', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://y', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('imageVersion')]",
              "version": "latest"
            }
          },
        "osProfile": {
          "computerNamePrefix": "[parameters('vmSSName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaceConfigurations": [
           {
             "name": "nic1",
             "properties": {
               "primary": "true",
               "ipConfigurations": [
               {
                  "name": "ip1",
                  "properties": {
                     "subnet": {
                         "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                     },
                    "loadBalancerBackendAddressPools": [
                       { "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/bepool1')]" }
                    ],
                   "loadBalancerInboundNatPools": [
                       { "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/natpool1')]" }
                   ]
                 }
               }
               ]
              }
            }
          ]
        },
        "extensionProfile": {
          "extensions" : [
          {
            "name": "Microsoft.Insights.VMDiagnosticsSettings",
            "properties": {
              "publisher": "Microsoft.Azure.Diagnostics",
              "type": "IaaSDiagnostics",
              "typeHandlerVersion": "1.5",
              "autoUpgradeMinorVersion": true,
              "settings": {
                 "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                 "storageAccount": "[variables('diagnosticsStorageAccountName')]"
              },
              "protectedSettings": {
                 "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                 "storageAccountKey": "[listkeys(variables('accountid'), '2015-05-01-preview').key1]",
                 "storageAccountEndPoint": "https://core.windows.net"
             }
          }
      }
      ]
  }
      }
    }
  },
  {
    "type": "Microsoft.Insights/autoscaleSettings",
    "apiVersion": "2015-04-01",
    "name": "autoscalewad",
    "location": "[variables('location')]",
    "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]"
    ],
    "properties": {
      "name": "autoscalewad",
      "targetResourceUri":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]",
      "enabled": true,
      "profiles":[
         {
            "name":"Profile1",
            "capacity":{
               "minimum":"1",
               "maximum":"10",
               "default":"1"
            },
            "rules":[
               {
                  "metricTrigger":{
                     "metricName":"\\Processor(_Total)\\% Processor Time",
                     "metricNamespace":"",
                     "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]",
                     "timeGrain":"PT1M",
                     "statistic":"Average",
                     "timeWindow":"PT5M",
                     "timeAggregation":"Average",
                     "operator":"GreaterThan",
                     "threshold":50.0
                  },
                  "scaleAction":{
                     "direction":"Increase",
                     "type":"ChangeCount",
                     "value":"1",
                     "cooldown":"PT5M"
                  }
               }
            ]
         }
      ]
    }
  }
  ]
}
