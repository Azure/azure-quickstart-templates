{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureDevOpsServicesAccount": {
      "type": "string",
      "metadata": {
        "description": "Please enter the Azure DevOps Services account name. If you access your Azure DevOps Services account using 'https://dev.azure.com/yourAccountName' or 'https://yourAccountName.visualstudio.com', enter yourAccountName."
      }
    },
    "personalAccessToken": {
      "type": "SecureString",
      "metadata": {
        "description": "Personal Access Token (PAT) for the Azure DevOps Services account. You should select the  scope as 'Load test (read and write)'. Please refer 'https://www.visualstudio.com/en-us/get-started/setup/use-personal-access-tokens-to-authenticate' for more details."
      }
    },
    "agentCount": {
      "defaultValue": 1,
      "type": "Int",
      "metadata": {
        "description": "Number of load generating agent machines to provision"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP allocation method"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the virtual machine."
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Password for the virtual machine."
      }
    },
    "existingVNetResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "existingVNetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNet"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "sizeOfDiskInGB": "100",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "sequenceVersion": "[uniqueString(resourceGroup().id)]",
    "uniqueStringValue": "[substring(variables('sequenceVersion'), 3, 7)]",
    "storageAccountType": "Standard_LRS",
    "vmName": "[concat('vm', variables('uniqueStringValue'))]",
    "vmSize": "Standard_D4_v2",
    "storageAccountName": "[concat('storage', variables('uniqueStringValue'))]",
    "vmStorageAccountContainerName": "vhd",
    "publicIPAddressName": "[concat('publicip', variables('uniqueStringValue'))]",
    "publicIPAddressType": "[parameters('publicIPAddressType')]",
    "nicName": "[concat('nic', variables('uniqueStringValue'))]",
    "dataDisk1VhdName": "datadisk",
    "windowsOSVersion": "2012-R2-Datacenter",
    "OSDiskName": "osdisk",
    "subnetRef": "[resourceId(parameters('existingVNetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVNetName'),  parameters('subnetName'))]",
    "agentGroupName": "[resourceGroup().name]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),'i', copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "copy": {
        "name": "publicAddressCopy",
        "count": "[parameters('agentCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), 'i', copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('agentCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),'i', copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'),'i', copyIndex()))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), 'i',copyIndex())]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('agentCount')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), 'i',copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'), 'i',copyIndex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmName'), 'i',copyIndex(),'_DataDisk1')]", 
              "diskSizeGB": "[variables('sizeOfDiskInGB')]",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'i', copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), 'i', copyIndex()))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), 'i', copyIndex(), '/StartupScript')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('agentCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "forceUpdateTag": "[variables('sequenceVersion')]",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": false,
        "settings": {
          "fileUris": [
            "https://elsprodch2su1.blob.core.windows.net/ets-containerfor-loadagentresources/bootstrap/ManageVSTSCloudLoadAgent.ps1"
          ],
          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File .\\bootstrap\\ManageVSTSCloudLoadAgent.ps1 -TeamServicesAccountName ', parameters('azureDevOpsServicesAccount'), ' -PATToken ', parameters('personalAccessToken'), ' -AgentGroupName ', variables('agentGroupName') , ' -ConfigureAgent')]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',concat(variables('vmName'), 'i', copyIndex()))]"
      ]
    }
  ]
}
