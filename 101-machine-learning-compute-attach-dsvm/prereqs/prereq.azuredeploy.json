{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "projectName":{
         "type":"string",
         "metadata":{
            "description":"Specifies a name for generating resource names."
         }
      },
      "adminPassword":{
         "type":"string",
         "metadata":{
            "description":"The password for the Administrator account."
         }
      },
      "vmSize":{
         "type":"string",
         "defaultValue":"Standard_D2s_v3",
         "metadata":{
            "description":"The size of the virtual machine."
         }
      },
      "tenantId":{
         "type":"string",
         "defaultValue":"[subscription().tenantId]",
         "metadata":{
            "description":"Specifies the tenant ID of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API."
         }
      },
      "storageAccountName":{
         "type":"string",
         "defaultValue":"[concat('sa',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the storage account to created and associated with the workspace."
         }
      },
      "keyVaultName":{
         "type":"string",
         "defaultValue":"[concat('kv',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"These name of key vault to associate with machine learning workspace."
         }
      },
      "workspaceName":{
         "type":"string",
         "metadata":{
            "description":"These name of with Azure Machine Learning Workspace."
         }
      },
      "applicationInsightsName":{
         "type":"string",
         "defaultValue":"[concat('ai',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"These name of application insights to associate with machine learning workspace."
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"Specifies the location for all resources."
         }
      },
      "adminUsername":{
         "type":"string",
         "metadata":{
            "description":"Specifies a username for the Virtual Machine."
         }
      },
      "adminPublicKey":{
         "type":"string",
         "metadata":{
            "description":"Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
         }
      }
   },
   "variables":{
      "vNetName":"[concat(parameters('projectName'), '-vnet')]",
      "vNetAddressPrefixes":"10.0.0.0/16",
      "vNetSubnetName":"default",
      "vNetSubnetAddressPrefix":"10.0.0.0/24",
      "vmName":"[concat(parameters('projectName'), '-vm')]",
      "publicIPAddressName":"[concat(parameters('projectName'), '-ip')]",
      "networkInterfaceName":"[concat(parameters('projectName'), '-nic')]",
      "networkSecurityGroupName":"[concat(parameters('projectName'), '-nsg')]",
      "networkSecurityGroupName2":"[concat(variables('vNetSubnetName'), '-nsg')]"
   },
   "resources":[
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[parameters('storageAccountName')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "encryption":{
               "services":{
                  "blob":{
                     "enabled":true
                  },
                  "file":{
                     "enabled":true
                  }
               },
               "keySource":"Microsoft.Storage"
            },
            "supportsHttpsTrafficOnly":true
         }
      },
      {
         "type":"Microsoft.KeyVault/vaults",
         "apiVersion":"2019-09-01",
         "name":"[parameters('keyVaultName')]",
         "location":"[parameters('location')]",
         "properties":{
            "tenantId":"[parameters('tenantId')]",
            "sku":{
               "name":"standard",
               "family":"A"
            },
            "accessPolicies":[

            ]
         }
      },
      {
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "name":"[parameters('applicationInsightsName')]",
         "location":"[parameters('location')]",
         "kind":"web",
         "properties":{
            "Application_Type":"web"
         }
      },
      {
         "type":"Microsoft.MachineLearningServices/workspaces",
         "apiVersion":"2020-03-01",
         "name":"[parameters('workspaceName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
         ],
         "identity":{
            "type":"systemAssigned"
         },
         "properties":{
            "friendlyName":"[parameters('workspaceName')]",
            "storageAccount":"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
            "keyVault":"[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "applicationInsights":"[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
         }
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups",
         "apiVersion":"2018-11-01",
         "name":"[variables('networkSecurityGroupName')]",
         "location":"[parameters('location')]",
         "properties":{
            "securityRules":[
               {
                  "name":"ssh_rule",
                  "properties":{
                     "description":"Locks inbound down to ssh default port 22.",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":123,
                     "direction":"Inbound"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/publicIPAddresses",
         "apiVersion":"2018-11-01",
         "name":"[variables('publicIPAddressName')]",
         "location":"[parameters('location')]",
         "properties":{
            "publicIPAllocationMethod":"Dynamic"
         },
         "sku":{
            "name":"Basic"
         }
      },
      {
         "comments":"Simple Network Security Group for subnet [variables('vNetSubnetName')]",
         "type":"Microsoft.Network/networkSecurityGroups",
         "apiVersion":"2019-08-01",
         "name":"[variables('networkSecurityGroupName2')]",
         "location":"[parameters('location')]",
         "properties":{
            "securityRules":[
               {
                  "name":"default-allow-22",
                  "properties":{
                     "priority":1000,
                     "access":"Allow",
                     "direction":"Inbound",
                     "destinationPortRange":"22",
                     "protocol":"Tcp",
                     "sourceAddressPrefix":"*",
                     "sourcePortRange":"*",
                     "destinationAddressPrefix":"*"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/virtualNetworks",
         "apiVersion":"2018-11-01",
         "name":"[variables('vNetName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
         ],
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('vNetAddressPrefixes')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('vNetSubnetName')]",
                  "properties":{
                     "addressPrefix":"[variables('vNetSubnetAddressPrefix')]",
                     "networkSecurityGroup":{
                        "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
                     }
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/networkInterfaces",
         "apiVersion":"2018-11-01",
         "name":"[variables('networkInterfaceName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                     },
                     "subnet":{
                        "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
                     }
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Compute/virtualMachines",
         "apiVersion":"2018-10-01",
         "name":"[variables('vmName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
         ],
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('vmSize')]"
            },
            "osProfile":{
               "computerName":"[variables('vmName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]",
               "linuxConfiguration":{
                  "disablePasswordAuthentication":"false",
                  "ssh":{
                     "publicKeys":[
                        {
                           "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                           "keyData":"[parameters('adminPublicKey')]"
                        }
                     ]
                  }
               }
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"Canonical",
                  "offer":"UbuntuServer",
                  "sku":"18.04-LTS",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"fromImage"
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                  }
               ]
            }
         }
      }
   ],
   "outputs":{
      "workspaceName":{
         "type":"string",
         "value":"[parameters('workspaceName')]"
      },
      "adminUsername":{
         "type":"string",
         "value":"[parameters('adminUsername')]"
      },
      "vmName":{
         "type":"string",
         "value":"[variables('vmName')]"
      }
   }
}