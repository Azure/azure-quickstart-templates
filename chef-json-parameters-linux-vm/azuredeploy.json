{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmDnsName": {
      "type": "string",
      "metadata": {
        "description": "DNS name for the VM"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Admin user name for the Virtual Machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the Virtual Machine"
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": ["Ubuntu-14.04.2-LTS", "Ubuntu-12.04.5-LTS", "Centos-7.1", "Centos-7"],
      "defaultValue": "Ubuntu-14.04.2-LTS",
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "metadata": {
        "description": "VM Size"
      }
    },
    "chef_node_name": {
      "type": "string",
      "metadata": {
        "description": "The name for the node (VM) in the Chef Organization"
      }
    },
    "chef_server_url": {
      "type": "string",
      "metadata": {
        "description": "Organization URL for the Chef Server. Example https://ChefServerDnsName.cloudapp.net/organizations/Orgname"
      }
    },
    "validation_client_name": {
      "type": "string",
      "metadata": {
        "description": "Validator key name for the organization. Example : MyOrg-validator"
      }
    },
    "runlist": {
      "type": "string",
      "defaultValue": "recipe[getting-started]",
      "metadata": {
        "description": "Optional Run List to Execute"
      }
    },
    "validation_key": {
      "type": "string",
      "metadata": {
        "description": "JSON Escaped Validation Key"
      }
    },
    "validation_key_format": {
      "type": "string",
      "allowedValues": ["plaintext", "base64encoded"],
      "defaultValue": "plaintext",
      "metadata" : {
        "description": "Format in which Validation Key is given. e.g. plaintext, base64encoded"
      }
    }
  },
  "variables": {
    "images": {
      "Ubuntu-14.04.2-LTS": {
        "sku": "14.04.2-LTS",
        "offer": "UbuntuServer",
        "publisher": "Canonical"
      },
     "Ubuntu-12.04.5-LTS": {
        "sku": "12.04.5-LTS",
        "offer": "UbuntuServer",
        "publisher": "Canonical"
      },
     "Centos-7.1": {
        "sku": "7.1",
        "offer": "CentOS",
        "publisher": "OpenLogic"
      },
     "Centos-7": {
        "sku": "7",
        "offer": "CentOS",
        "publisher": "OpenLogic"
      }
     },
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "vmExtensionName": "LinuxChefExtension",
    "vmName": "[parameters('vmDnsName')]",
    "storageAccountType": "Standard_LRS",
    "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'cheflinuxvm')]",
    "publicIPAddressName": "myPublicIP1",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "virtualNetworkName": "MyVNET1",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "subnet-1",
    "subnet2Name": "subnet-2",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet2Prefix": "10.0.1.0/24",
    "nicName": "myVMNic",
    "dnsName": "[variables('subnet1Name')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmDnsName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('images')[parameters('osType')].publisher]",
            "offer": "[variables('images')[parameters('osType')].offer]",
            "sku": "[variables('images')[parameters('osType')].sku]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Chef.Bootstrap.WindowsAzure",
        "type": "LinuxChefClient",
        "typeHandlerVersion": "1210.12",
        "settings": {
          "bootstrap_options": {
            "chef_node_name": "[parameters('chef_node_name')]",
            "chef_server_url": "[parameters('chef_server_url')]",
            "validation_client_name": "[parameters('validation_client_name')]"
          },
          "runlist": "[parameters('runlist')]",
          "validation_key_format": "[parameters('validation_key_format')]"
        },
        "protectedSettings": {
          "validation_key": "[parameters('validation_key')]"
        }
      }
    }
  ]
}
