{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {        
        "workspaceName": {
            "type": "string",
            "metadata": {
              "description": "Specifies the name of the Azure Machine Learning workspace which will hold this compute taget."
            }
        },
        "computeName": {
            "type": "string",
            "metadata": {
              "description": "Specifies the name of the Azure Machine Learning compute target."
            }
        },        
        "location": {
            "type": "string",
            "defaultValue":"[resourceGroup().location]",
            "metadata": {
              "description": "Location of the Azure Machine Learning workspace."
            }
        },
        "adminUserName": {
            "type": "securestring",
            "metadata": {
              "description": "The admin username needed to access the virtual machine."
            }
        },
        "adminPublicKey": {
            "type": "securestring",
            "metadata": {
              "description": "The SSH public key of the administrator user account."
            }
        },
        "sshPublicAccess": {
            "defaultValue": "Enabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "metadata": {
              "description": "Indicates the state of the public SSH port. Eg Enabled/Disabled"
            }
        },
        "sshPort": {
            "defaultValue": 22,
            "type": "int",
            "metadata": {
              "description": "The exposed port for the compute instance."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS3_v2",
            "type": "string",
            "metadata": {
              "description": "The size of agent VMs. More details can be found here: https://aka.ms/azureml-vm-details."
            }
        },
        "vnetResourceGroupName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the resource group which holds the VNET to which you want to inject your compute in."
            }
        },
        "vnetName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the vnet which you want to inject your compute in."
            }
        },
        "subnetName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the subnet inside the VNET which you want to inject your compute in."
            }
        }
    },
    "variables": {
        "sshSettings": {
            "sshPublicAccess": "[parameters('sshPublicAccess')]",
            "adminUserName": "[parameters('adminUserName')]",
            "sshPort": "[parameters('sshPort')]",
            "adminPublicKey": "[parameters('adminPublicKey')]"
        },
        "subnet": {
            "id" : "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
        }
    },
    "resources": [        
        {
            "type": "Microsoft.MachineLearningServices/workspaces/computes",
            "name": "[concat(parameters('workspaceName'), '/', parameters('computeName'))]",
            "apiVersion": "2020-06-01",
            "location" : "[parameters('location')]",
            "properties": {
                "computeType": "ComputeInstance",
                "properties":
                {
                    "vmSize" : "[parameters('vmSize')]",
                    "subnet" : "[if(and(not(empty(parameters('vnetResourceGroupName'))),not(empty(parameters('vnetName'))),not(empty(parameters('subnetName')))), variables('subnet'), json('null'))]",
                    "sshSettings" : "[if(equals(parameters('sshPublicAccess'), 'Enabled'), variables('sshSettings'), json('null'))]"
                }
            }
        }
    ]
}
