{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"storageAccName": {
			"type": "string",
			"metadata": {
				"description": "The name of the storage account for the VM's OS disk.  Storage account names must be globally unique."
			}
		},
		"forwardIP": {
			"type": "string",
			"defaultValue":"168.63.129.16",
			"metadata": {
				"description": "This is the IP address to forward DNS queries to.  The default value represents Azure's internal DNS recursive resolvers."
			}			
		}
	},
	"variables": {
		"vmName":"dnsproxy",
		"vmSize": "Standard_A1",
		"ubuntuOSVersion": "14.04.2-LTS",
		"vnetName" : "dnsproxy-vnet",
		"vnetAddressPrefix": "10.0.0.0/8",
		"subNet1Name": "subnet1",
		"subNet1Prefix": "10.1.0.0/16",
		"storType": "Standard_LRS",
		"location": "northeurope",
		"vhdName": "[concat(variables('vmName'), '-', 'osdisk')]",
		"nicName": "[concat(variables('vmName'), '-', 'nic')]",
		"pipName": "[concat(variables('vmName'), '-', 'pip')]",
		"apiVersion": "2015-06-15",
		"artifactsBaseUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/301-dns-forwarder",
		"scriptUrl":"[concat(variables('artifactsBaseUrl'),'/','forwarderSetup.sh')]"
	},
	"resources": [
	  {
      "type": "Microsoft.Storage/StorageAccounts",
      "name": "[parameters('storageAccName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storType')]"
      }
    },
   {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subNet1Prefix')]"
            }
          }
        ]
      }
    },
	{
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('pipName')]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[variables('location')]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic"
		}
	},
	{
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('nicName')]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[variables('location')]",
		"dependsOn": ["[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]",
		              "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"],
		"properties": {
			"ipConfigurations": [{
				"name": "ipconfig1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
					},
					"subnet": {
						"id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/', variables('subnet1Name'))]"
					}
				}
			}]
		}
	},
	{
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[variables('vmName')]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[variables('location')]",
		"dependsOn": ["[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]","[concat('Microsoft.Storage/StorageAccounts/', parameters('storageAccName'))]"],
		"properties": {
			"hardwareProfile": {
				"vmSize": "[variables('vmSize')]"
			},
			"osProfile": {
				"computerName": "[variables('vmName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "Canonical",
					"offer": "UbuntuServer",
					"sku": "[variables('ubuntuOSVersion')]",
					"version": "latest"
				},
				"osDisk": {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://',parameters('storageAccName'),'.blob.core.windows.net/vhds/',variables('vhdName'),'.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
				}]
			},
			"diagnosticsProfile": {
				"bootDiagnostics": {
					"enabled": "true",
					"storageUri": "[concat('http://',parameters('storageAccName'),'.blob.core.windows.net')]"
				}
			}
		}
	},
	{
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(variables('vmName'),'/setupdnsfirewall')]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[variables('location')]",
		"dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"],
		"properties": {
			"publisher": "Microsoft.OSTCExtensions",
			"type": "CustomScriptForLinux",
			"typeHandlerVersion": "1.3",
			"settings": {
				"fileUris": ["[variables('scriptUrl')]"],
				"commandToExecute": "[concat('sh forwarderSetup.sh',' ',parameters('forwardIP'),' ', variables('vnetAddressPrefix'))]"
			}
		}
	}]
}