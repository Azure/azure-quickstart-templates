{
   "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "location": {
         "type": "string",
         "metadata": {
            "description": "Specify the workspace region"
         }
      },
      "workspaceName": {
         "type": "string",
         "metadata": {
            "description": "Specify the workspace name"
         }
      }
   },
   "resources": [
      {
         "apiVersion": "2017-03-03-preview",
         "name": "[concat(parameters('workspaceName'), '/', 'backup_items')]",
         "type": "Microsoft.OperationalInsights/workspaces/views",
         "properties": {
            "Id": "Backup Items",
            "Name": "Backup Items",
            "Author": "Microsoft",
            "Source": "Local",
            "Version": 2,
            "Dashboard": [
               {
                  "Id": "SingleQueryDonutBuilderBladeV1",
                  "Type": "Blade",
                  "Version": 0,
                  "Configuration": {
                     "General": {
                        "title": "Backup Items by Backup Item Type",
                        "newGroup": false,
                        "icon": "",
                        "useIcon": false
                     },
                     "Header": {
                        "Title": "Backup Items by Backup Item Type",
                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                     },
                     "Donut": {
                        "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\"; let BackupItems = Events | where OperationName == \"BackupItem\"; BackupItems | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\") , BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupItemUniqueId_s != \"\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | where ${DatasourceType} | summarize count(BackupItemUniqueId_s) by BackupItemType_s | sort by count_BackupItemUniqueId_s desc",
                        "CenterLegend": {
                           "Text": "Total",
                           "Operation": "Sum",
                           "ArcsToSelect": []
                        },
                        "Options": {
                           "colors": [
                              "#00188f",
                              "#0072c6",
                              "#00bcf2"
                           ],
                           "valueColorMapping": []
                        },
                        "NavigationSelect": {}
                     },
                     "List": {
                        "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\"; let BackupItems=Events | where OperationName==\"BackupItem\"; BackupItems | extend BackupItemUniqueId_s=columnifexists(\"BackupItemUniqueId_s\",\"\") , BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\") , BackupManagementType_s = columnifexists(\"BackupManagementType_s\", \"\") , TimeGenerated = columnifexists(\"TimeGenerated\",\"\")| where BackupItemUniqueId_s != \"\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | where ${DatasourceType} | summarize count(BackupItemUniqueId_s) by BackupItemType_s, BackupManagementType_s | sort by count_BackupItemUniqueId_s desc",
                        "HideGraph": false,
                        "enableSparklines": false,
                        "ColumnsTitle": {
                           "Name": "Datasource Type",
                           "Value": "Count"
                        },
                        "Color": "#0072c6",
                        "thresholds": {
                           "isEnabled": false,
                           "values": [
                              {
                                 "name": "Normal",
                                 "threshold": "Default",
                                 "color": "#009e49",
                                 "isDefault": true
                              },
                              {
                                 "name": "Warning",
                                 "threshold": "60",
                                 "color": "#fcd116",
                                 "isDefault": false
                              },
                              {
                                 "name": "Error",
                                 "threshold": "90",
                                 "color": "#ba141a",
                                 "isDefault": false
                              }
                           ]
                        },
                        "NameDSVSeparator": "",
                        "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\"; let BackupItems=Events | where OperationName==\"BackupItem\"; BackupItems | extend BackupItemUniqueId_s=columnifexists(\"BackupItemUniqueId_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\"), BackupItemType_s=columnifexists(\"BackupItemType_s\",\"\"), BackupItemProtectionState_s = columnifexists(\"BackupItemProtectionState_s\",\"\") | where BackupItemUniqueId_s != \"\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | where ${DatasourceType} | summarize count(BackupItemUniqueId_s) by BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s | project-away count_BackupItemUniqueId_s | where {selected item}",
                        "NavigationSelect": {
                           "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\"; let BackupItems=Events | where OperationName==\"BackupItem\"; BackupItems | extend BackupItemUniqueId_s=columnifexists(\"BackupItemUniqueId_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\"), BackupItemType_s=columnifexists(\"BackupItemType_s\",\"\"), BackupItemProtectionState_s = columnifexists(\"BackupItemProtectionState_s\",\"\") | where BackupItemUniqueId_s != \"\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | where ${DatasourceType} | summarize count(BackupItemUniqueId_s) by BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s | project-away count_BackupItemUniqueId_s | where {selected item}"
                        }
                     }
                  }
               },
               {
                  "Id": "SingleQueryDonutBuilderBladeV1",
                  "Type": "Blade",
                  "Version": 0,
                  "Configuration": {
                     "General": {
                        "title": "Backup Items by Protection status",
                        "newGroup": false,
                        "icon": "",
                        "useIcon": false
                     },
                     "Header": {
                        "Title": "Last Known Protection Status",
                        "Subtitle": ""
                     },
                     "Donut": {
                        "Query": "let BackupItems = AzureDiagnostics | where SchemaVersion_s==\"V2\" | where Category == \"AzureBackupReport\" | where OperationName==\"BackupItem\"; BackupItems | extend BackupItemProtectionState_s = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemType_s=columnifexists(\"BackupItemType_s\",\"\") , TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemUniqueId_s =columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupItemProtectionState_s != \"\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | summarize count(BackupItemUniqueId_s) by BackupItemProtectionState_s",
                        "CenterLegend": {
                           "Text": "Total",
                           "Operation": "Sum",
                           "ArcsToSelect": []
                        },
                        "Options": {
                           "colors": [
                              "#ff8c00",
                              "#55d455",
                              "#6dc2e9"
                           ],
                           "valueColorMapping": []
                        },
                        "NavigationSelect": {}
                     },
                     "List": {
                        "Query": "let BackupItems = AzureDiagnostics | where SchemaVersion_s==\"V2\" | where Category == \"AzureBackupReport\" | where OperationName==\"BackupItem\"; BackupItems | extend BackupItemProtectionState_s = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") | where BackupItemProtectionState_s != \"\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | summarize count(BackupItemUniqueId_s) by BackupManagementType_s, BackupItemProtectionState_s",
                        "HideGraph": true,
                        "enableSparklines": false,
                        "operation": "Summary",
                        "ColumnsTitle": {
                           "Name": "Backup Management Type",
                           "Value": "Count"
                        },
                        "Color": "#0072c6",
                        "thresholds": {
                           "isEnabled": false,
                           "values": [
                              {
                                 "name": "Normal",
                                 "threshold": "Default",
                                 "color": "#009e49",
                                 "isDefault": true
                              },
                              {
                                 "name": "Warning",
                                 "threshold": "60",
                                 "color": "#fcd116",
                                 "isDefault": false
                              },
                              {
                                 "name": "Error",
                                 "threshold": "90",
                                 "color": "#ba141a",
                                 "isDefault": false
                              }
                           ]
                        },
                        "NameDSVSeparator": "",
                        "NavigationQuery": "let BackupItems = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName==\"BackupItem\" | where SchemaVersion_s==\"V2\" ; BackupItems | extend BackupItemProtectionState_s=columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemType_s=columnifexists(\"BackupItemType_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\"), BackupItemFriendlyName_s= columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") | where BackupItemProtectionState_s != \"\" and BackupItemType_s != \"\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | project BackupItemFriendlyName_s,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s | search {selected item}",
                        "NavigationSelect": {
                           "NavigationQuery": "let BackupItems = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName==\"BackupItem\" | where SchemaVersion_s==\"V2\" ; BackupItems | extend BackupItemProtectionState_s=columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemType_s=columnifexists(\"BackupItemType_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\"), BackupItemFriendlyName_s= columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") | where BackupItemProtectionState_s != \"\" and BackupItemType_s != \"\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | project BackupItemFriendlyName_s,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s | search {selected item}"
                        }
                     }
                  }
               },
               {
                  "Id": "SingleQueryDonutBuilderBladeV1",
                  "Type": "Blade",
                  "Version": 0,
                  "Configuration": {
                     "General": {
                        "title": "Top 3 Backup Items by Alerts Generated",
                        "newGroup": false,
                        "icon": "",
                        "useIcon": false
                     },
                     "Header": {
                        "Title": "Top 3 Backup Items by Alerts Generated",
                        "Subtitle": ""
                     },
                     "Donut": {
                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | extend BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\"),BackupItemFriendlyName_s = columnifexists (\"BackupItemFriendlyName_s\",\"\"), BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\") | where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemFriendlyName_s , BackupItemType_s, BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Alerts=(AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") |where BackupManagementType_s !in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\"), AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\")| extend AlertUniqueId=columnifexists(\"AlertUniqueId_s\",\"AlertUniqueId_g\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId ) | union kind=outer (AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupManagementType_s in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\"), AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\") | extend AlertUniqueId=columnifexists(\"AlertUniqueId_g\",\"AlertUniqueId_s\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId) |extend startTime=TimeGenerated ; Alerts | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | extend BackupItemType_s=columnifexists(\"BackupItemType_s1\",\"BackupItemType_s\") | where ${DatasourceType} | extend BackupItemFriendlyName = columnifexists(\"BackupItemFriendlyName_s1\",\"BackupItemFriendlyName_s\") | summarize count(AlertUniqueId) by BackupItemFriendlyName | sort by count_AlertUniqueId desc",
                        "CenterLegend": {
                           "Text": "Total",
                           "Operation": "Sum",
                           "ArcsToSelect": []
                        },
                        "Options": {
                           "colors": [
                              "#00188f",
                              "#0072c6",
                              "#00bcf2"
                           ],
                           "valueColorMapping": []
                        },
                        "NavigationSelect": {}
                     },
                     "List": {
                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | extend BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\")| where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemFriendlyName_s , BackupItemType_s, BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Alerts=(AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") |where BackupManagementType_s !in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\"), AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\")| extend AlertUniqueId=columnifexists(\"AlertUniqueId_s\",\"AlertUniqueId_g\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId ) | union kind=outer (AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupManagementType_s in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\"), AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\") | extend AlertUniqueId=columnifexists(\"AlertUniqueId_g\",\"AlertUniqueId_s\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId) |extend startTime=TimeGenerated ; Alerts | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | extend BackupItemType_s=columnifexists(\"BackupItemType_s1\",\"BackupItemType_s\"), BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s1\",\"BackupItemUniqueId_s\"), BackupItemFriendlyName = columnifexists(\"BackupItemFriendlyName_s1\", \"BackupItemFriendlyName_s\")| where ${DatasourceType} | summarize count(AlertUniqueId) by BackupItemUniqueId, BackupItemFriendlyName | sort by count_AlertUniqueId desc ",
                        "HideGraph": false,
                        "enableSparklines": false,
                        "operation": "Summary",
                        "ColumnsTitle": {
                           "Name": "Backup Item ID",
                           "Value": "Count"
                        },
                        "Color": "#0072c6",
                        "thresholds": {
                           "isEnabled": false,
                           "values": [
                              {
                                 "name": "Normal",
                                 "threshold": "Default",
                                 "color": "#009e49",
                                 "isDefault": true
                              },
                              {
                                 "name": "Warning",
                                 "threshold": "60",
                                 "color": "#fcd116",
                                 "isDefault": false
                              },
                              {
                                 "name": "Error",
                                 "threshold": "90",
                                 "color": "#ba141a",
                                 "isDefault": false
                              }
                           ]
                        },
                        "NameDSVSeparator": "",
                        "NavigationQuery": " let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" |where SchemaVersion_s==\"V2\" | extend BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\") , BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Alerts=(AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") |where BackupManagementType_s !in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\"), AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| extend AlertUniqueId=columnifexists(\"AlertUniqueId_s\",\"AlertUniqueId_g\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId ) | union kind=outer (AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") | where BackupManagementType_s in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\"), AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\") , BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| extend AlertUniqueId=columnifexists(\"AlertUniqueId_g\",\"AlertUniqueId_s\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId) |extend startTime=TimeGenerated ; Alerts | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | where ${DatasourceType} | search {selected item}",
                        "NavigationSelect": {
                           "NavigationQuery": " let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" |where SchemaVersion_s==\"V2\" | extend BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\") , BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Alerts=(AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") |where BackupManagementType_s !in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\"), AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| extend AlertUniqueId=columnifexists(\"AlertUniqueId_s\",\"AlertUniqueId_g\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId ) | union kind=outer (AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Alert\" | extend TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupManagementType_s = columnifexists(\"BackupManagementType_s\",\"\") | where BackupManagementType_s in~(\"MAB\",\"DPM\",\"AzureBackupServer\") | extend AlertUniqueId_g=columnifexists(\"AlertUniqueId_g\",\"\"), AlertUniqueId_s=columnifexists(\"AlertUniqueId_s\",\"\") , BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| extend AlertUniqueId=columnifexists(\"AlertUniqueId_g\",\"AlertUniqueId_s\") | summarize arg_min(TimeGenerated, *) by AlertUniqueId) |extend startTime=TimeGenerated ; Alerts | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | where ${DatasourceType} | search {selected item}"
                        }
                     }
                  }
               },
               {
                  "Id": "TwoNumberTileListBuilderBlade",
                  "Type": "Blade",
                  "Version": 0,
                  "Configuration": {
                     "General": {
                        "title": "Backup Items by Last Successful Backup Time",
                        "newGroup": false,
                        "icon": "",
                        "useIcon": false
                     },
                     "Tile": {
                        "Legend": "Backup Items",
                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"BackupItem\" | extend BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | summarize dcount(BackupItemUniqueId_s)"
                     },
                     "SecondTile": {
                        "Legend": "Backup Jobs",
                        "Query": "let Events= AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\"; let BackupItems = Events | where OperationName==\"BackupItem\"; let Jobs = Events | where OperationName==\"Job\" | extend JobOperation_s=columnifexists(\"JobOperation_s\",\"\"), JobUniqueId_g=columnifexists(\"JobUniqueId_g\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\")| where JobOperation_s==\"Backup\" | where JobUniqueId_g!=\"\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g ; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"BackupItem\" | extend BackupItemType_s = columnifexists(\"BackupItemType_s\",\"\"), TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; Jobs | extend BackupItemUniqueId_s=columnifexists(\"BackupItemUniqueId_s\",\"\") | join kind=leftouter ( BackupIdTypeMap ) on BackupItemUniqueId_s | extend BackupItemType_s=columnifexists(\"BackupItemType_s1\",\"BackupItemType_s\") | where ${DatasourceType} | summarize count(JobUniqueId_g) "
                     },
                     "List": {
                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName==\"BackupItem\" | extend BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupItem_TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemType_s= columnifexists(\"BackupItemType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| where BackupItemFriendlyName_s != \"\" | project BackupItem_TimeGenerated, BackupItemFriendlyName_s ,BackupItemType_s, BackupItemUniqueId_s | summarize arg_max(BackupItem_TimeGenerated, *) by BackupItemUniqueId_s; let LastSuccessfulBackupJobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Job\" | extend JobOperation_s = columnifexists(\"JobOperation_s\",\"\"), JobStatus_s = columnifexists(\"JobStatus_s\",\"\"), Job_TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), JobUniqueId_g=columnifexists(\"JobUniqueId_g\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") |where JobOperation_s == \"Backup\" | where JobStatus_s == \"Completed\" | summarize arg_max(Job_TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, Job_TimeGenerated; LastSuccessfulBackupJobs | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | where ${DatasourceType} | project BackupItemUniqueId_s, BackupItemFriendlyName_s, Job_TimeGenerated | sort by Job_TimeGenerated desc",
                        "HideGraph": false,
                        "enableSparklines": false,
                        "operation": "Summary",
                        "ColumnsTitle": {
                           "Name": "Backup Item ID",
                           "Value": "Last Successful Backup Time"
                        },
                        "Color": "#0072c6",
                        "thresholds": {
                           "isEnabled": false,
                           "values": [
                              {
                                 "name": "Normal",
                                 "threshold": "Default",
                                 "color": "#009e49",
                                 "isDefault": true
                              },
                              {
                                 "name": "Warning",
                                 "threshold": "60",
                                 "color": "#fcd116",
                                 "isDefault": false
                              },
                              {
                                 "name": "Error",
                                 "threshold": "90",
                                 "color": "#ba141a",
                                 "isDefault": false
                              }
                           ]
                        },
                        "NameDSVSeparator": "",
                        "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName==\"BackupItem\" | extend BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupItem_TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemType_s= columnifexists(\"BackupItemType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| where BackupItemFriendlyName_s != \"\" | project BackupItem_TimeGenerated, BackupItemFriendlyName_s ,BackupItemType_s, BackupItemUniqueId_s | summarize arg_max(BackupItem_TimeGenerated, *) by BackupItemUniqueId_s; let LastSuccessfulBackupJobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Job\" | extend JobOperation_s = columnifexists(\"JobOperation_s\",\"\"), JobStatus_s = columnifexists(\"JobStatus_s\",\"\"), Job_TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), JobUniqueId_g=columnifexists(\"JobUniqueId_g\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") |where JobOperation_s == \"Backup\" | where JobStatus_s == \"Completed\" | summarize arg_max(Job_TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, Job_TimeGenerated; LastSuccessfulBackupJobs | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | where ${DatasourceType} | project-away BackupItem_TimeGenerated | search {selected item}",
                        "NavigationSelect": {
                           "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName==\"BackupItem\" | extend BackupItemFriendlyName_s = columnifexists(\"BackupItemFriendlyName_s\",\"\"), BackupItem_TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), BackupItemType_s= columnifexists(\"BackupItemType_s\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\")| where BackupItemFriendlyName_s != \"\" | project BackupItem_TimeGenerated, BackupItemFriendlyName_s ,BackupItemType_s, BackupItemUniqueId_s | summarize arg_max(BackupItem_TimeGenerated, *) by BackupItemUniqueId_s; let LastSuccessfulBackupJobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"Job\" | extend JobOperation_s = columnifexists(\"JobOperation_s\",\"\"), JobStatus_s = columnifexists(\"JobStatus_s\",\"\"), Job_TimeGenerated = columnifexists(\"TimeGenerated\",\"\"), JobUniqueId_g=columnifexists(\"JobUniqueId_g\",\"\"), BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") |where JobOperation_s == \"Backup\" | where JobStatus_s == \"Completed\" | summarize arg_max(Job_TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, Job_TimeGenerated; LastSuccessfulBackupJobs | join kind=leftouter ( BackupIdNameMap ) on BackupItemUniqueId_s | where ${DatasourceType} | project-away BackupItem_TimeGenerated | search {selected item}"
                        }
                     },
                     "Blade": {
                        "NavigationSelect": {}
                     }
                  }
               }
            ],
            "Filters": [
               {
                  "FieldName": "BackupItemType_s",
                  "QueryForValues": "AzureDiagnostics | where Category == \"AzureBackupReport\"|distinct BackupItemType_s",
                  "Title": "DatasourceType"
               }
            ],
            "OverviewTile": {
               "Id": "SingleNumberBuilderTile",
               "Type": "OverviewTile",
               "Version": 2,
               "Configuration": {
                  "Tile": {
                     "Legend": "Backup Items",
                     "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where SchemaVersion_s==\"V2\" | where OperationName == \"BackupItem\" | extend BackupItemUniqueId_s = columnifexists(\"BackupItemUniqueId_s\",\"\") | distinct BackupItemUniqueId_s | count"
                  },
                  "Advanced": {
                     "DataFlowVerification": {
                        "Enabled": false,
                        "Query": "search * | limit 1 | project TimeGenerated",
                        "Message": ""
                     }
                  }
               }
            }
         }
      }
   ]
}