{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for the VM, only certain regions support zones during preview."
            }
        },  
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "DNS domain name for existing Active Directory domain"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of the Administrator of the existing Active Directory Domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Administrator account of the existing Active Directory Domain"
            }
        },
        "sqlServiceAccount": {
            "type": "string",
            "metadata": {
                "description": "Name of the user account to be used for the SQL Server service account"
            }
        },
        "sqlServicePassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password to be used for the SQL Server service account"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
            }
        },
        "enableOutboundInternet": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Enable outbound Internet access via source NAT to support ongoing VM Agent extension communication needs"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of the SQL Server VMs to be created"
            }
        },
        "vmCount": {
            "type": "int",
            "minValue": 2,
            "maxValue": 9,
            "metadata": {
                "description": "Number of SQL Server VMs to be created in AlwaysOn Availability Group cluster (Min=2, Max=9)"
            },
            "defaultValue": 2
        },
        "vmDiskSize": {
            "type": "int",
            "minValue": 128,
            "maxValue": 1023,
            "metadata": {
                "description": "Size of each data disk in GB on each SQL Server VM (Min=128, Max=1023)"
            }
        },
        "vmDiskCount": {
            "type": "int",
            "minValue": 2,
            "maxValue": 32,
            "metadata": {
                "description": "Number of data disks on each SQL Server VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
            }
        },
        "workloadType": {
            "type": "string",
            "defaultValue": "GENERAL"
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftSQLServer"
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "SQL2016SP1-WS2016"
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "Enterprise"
        },
        "imageVersion": {
            "type": "string",
            "defaultValue": "latest"
        },
        "_artifactsLocation": {
            "type": "string"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring"
        }
    },
    "variables": {
        "witnessStorageName": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'cw')]",
        "witnessStorageType": "Standard_LRS",
        "vmNamePrefix": "[concat(parameters('namePrefix'),'-sql-')]",
        "clusterName": "[concat(variables('vmNamePrefix'),'c')]",
        "vmLoopTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/newVM.json',parameters('_artifactsLocationSasToken')))]",
        "ipLoopTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/getIpAddress.json',parameters('_artifactsLocationSasToken')))]",
        "sqlPrepModulesURL": "[uri(parameters('_artifactsLocation'), concat('dsc/prep-sqlao.ps1.zip',parameters('_artifactsLocationSasToken')))]",
        "sqlPrepFunction": "PrepSQLAO.ps1\\PrepSQLAO",
        "sqlConfigModulesURL": "[uri(parameters('_artifactsLocation'), concat('dsc/config-sqlao.ps1.zip',parameters('_artifactsLocationSasToken')))]",
        "sqlConfigFunction": "ConfigSQLAO.ps1\\ConfigSQLAO",
        "agName": "[concat(variables('vmNamePrefix'),'ag')]",
        "agListenerName": "[concat(variables('vmNamePrefix'),'agl')]",
        "agEpName": "[concat(variables('vmNamePrefix'),'ha')]",
        "albName": "[concat(variables('vmNamePrefix'),'alb')]",
        "albPip": "[concat(variables('vmNamePrefix'),'albpip')]",
        "albPipID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('albPip'))]",
        "albFE1": "[concat(variables('vmNamePrefix'),'albfe1')]",
        "albBE": "[concat(variables('vmNamePrefix'),'albbe')]",
        "albBEAddressPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('albName'), variables('albBE'))]",
        "albBEPoolTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/albBEPool.json',parameters('_artifactsLocationSasToken')))]",
        "albFEConfigID1": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('albName'),variables('albFE1'))]",
        "albProbe1": "[concat(variables('vmNamePrefix'),'albp1')]",
        "albProbeID1": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('albName'),variables('albProbe1'))]",
        "lbName": "[concat(variables('vmNamePrefix'),'ilb')]",
        "lbFE1": "[concat(variables('vmNamePrefix'),'ilbfe1')]",
        "lbBE": "[concat(variables('vmNamePrefix'),'ilbbe')]",
        "lbFEConfigID1": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbName'),variables('lbFE1'))]",
        "lbBEAddressPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbName'),variables('lbBE'))]",
        "lbProbe1": "[concat(variables('vmNamePrefix'),'ilbp1')]",
        "lbProbeID1": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbProbe1'))]",
        "lbBEPoolTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/lbBEPool.json',parameters('_artifactsLocationSasToken')))]",
        "agListenerPort": 1433,
        "agProbePort": 59999,
        "snatTcpPort": 59998,
        "snatProbePort": 3389,
        "zones": ["1","2","3"]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('witnessStorageName')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('witnessStorageType')]"
            },
            "kind": "Storage"
        },
        {
            "apiVersion": "2020-08-01",
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFE1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBE')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[variables('agListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFEConfigID1')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBEAddressPoolID')]"
                            },
                            "probe": {
                                "id": "[variables('lbProbeID1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[variables('agListenerPort')]",
                            "backendPort": "[variables('agListenerPort')]",
                            "enableFloatingIP": true
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('lbProbe1')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": "[variables('agProbePort')]",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('albPip')]",
            "location": "[parameters('location')]",
            "condition": "[equals(parameters('enableOutboundInternet'),'Yes')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "name": "[variables('albName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "condition": "[equals(parameters('enableOutboundInternet'),'Yes')]",
            "dependsOn": [
                "[variables('albPip')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('albFE1')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('albPipID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('albBE')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "outbound-snat-rule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('albFEConfigID1')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('albBEAddressPoolID')]"
                            },
                            "probe": {
                                "id": "[variables('albProbeID1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[variables('snatTcpPort')]",
                            "backendPort": "[variables('snatTcpPort')]",
                            "enableFloatingIP": false
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('albProbe1')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": "[variables('snatProbePort')]",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "2020-08-01",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vmCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            },           
                            "primary": true
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('vmNamePrefix'),'0-clusterIp')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipLoopTemplateURL')]"
                },
                "parameters": {
                    "ipConfig": {
                        "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNamePrefix'), '0-nic'))).ipConfigurations[1].properties.privateIPAddress]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "copy": {
                "name": "clusterIpLoop",
                "count": "[sub(parameters('vmCount'),1)]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyIndex(1),'-clusterIp')]",
            "dependsOn": [
                "nicLoop",
                "[resourceId('Microsoft.Resources/deployments', concat(variables('vmNamePrefix'),'0-clusterIp'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipLoopTemplateURL')]"
                },
                "parameters": {
                    "ipConfig": {
                        "value": "[reference(resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNamePrefix'), copyIndex(1), '-nic'))).ipConfigurations[1].properties.privateIPAddress]"
                    },
                    "ipAddresses": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', concat(variables('vmNamePrefix'),copyIndex(),'-clusterIp'))).outputs.result.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyindex(),'-newVM')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmLoopTemplateURL')]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePrefix'), copyindex())]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmDiskCount": {
                        "value": "[parameters('vmDiskCount')]"
                    },
                    "vmDiskSize": {
                        "value": "[parameters('vmDiskSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "imagePublisher": {
                        "value": "[parameters('imagePublisher')]"
                    },
                    "imageOffer": {
                        "value": "[parameters('imageOffer')]"
                    },
                    "imageSKU": {
                        "value": "[parameters('imageSKU')]"
                    },
                    "imageVersion": {
                        "value": "[parameters('imageVersion')]"
                    },
                    "zones": {
                        "value": "[take(skip(variables('zones'),mod(copyIndex(),length(variables('zones')))),1)]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNamePrefix'),copyindex(1),'/sqlPrep')]",
            "apiVersion": "2020-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "virtualMachineLoop"
            ],
            "copy": {
                "name": "virtualMachineExtensionLoop",
                "count": "[sub(parameters('vmCount'),1)]"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.71",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('sqlPrepModulesURL')]",
                    "configurationFunction": "[variables('sqlPrepFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServiceAccount')]",
                            "password": "PrivateSettingsRef:sqlServicePassword"
                        },
                        "numberOfDisks": "[parameters('vmDiskCount')]",
                        "workloadType": "[parameters('workloadType')]",
                        "databaseEnginePort": "[variables('agListenerPort')]",
                        "probePortNumber": "[variables('agProbePort')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sqlServicePassword": "[parameters('sqlServicePassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNamePrefix'),'0/sqlConfig')]",
            "apiVersion": "2020-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "virtualMachineLoop",
                "virtualMachineExtensionLoop",
                "clusterIpLoop",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.71",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('sqlConfigModulesURL')]",
                    "configurationFunction": "[variables('sqlConfigFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "clusterName": "[variables('clusterName')]",
                        "vmNamePrefix": "[variables('vmNamePrefix')]",
                        "sqlAlwaysOnAvailabilityGroupName": "[variables('agName')]",
                        "sqlAlwaysOnAvailabilityGroupListenerName": "[variables('agListenerName')]",
                        "sqlAlwaysOnEndpointName": "[variables('agEpName')]",
                        "vmCount": "[parameters('vmCount')]",
                        "clusterIpAddresses": "[reference(resourceId('Microsoft.Resources/deployments', concat(variables('vmNamePrefix'),sub(parameters('vmCount'),1),'-clusterIp'))).outputs.result.value]",
                        "agListenerIpAddress": "[reference(resourceId('Microsoft.Network/loadbalancers', variables('lbName'))).frontendIPConfigurations[0].properties.privateIPAddress]",
                        "numberOfDisks": "[parameters('vmDiskCount')]",
                        "workloadType": "[parameters('workloadType')]",
                        "databaseEnginePort": "[variables('agListenerPort')]",
                        "probePortNumber": "[variables('agProbePort')]",
                        "witnessStorageName": "[variables('witnessStorageName')]",
                        "witnessStorageKey": {
                            "userName": "PLACEHOLDER-DO-NOT-USE",
                            "password": "PrivateSettingsRef:witnessStorageKey"
                        },
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServiceAccount')]",
                            "password": "PrivateSettingsRef:sqlServicePassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sqlServicePassword": "[parameters('sqlServicePassword')]",
                        "witnessStorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('witnessStorageName')), '2019-06-01').keys[0].value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('vmNamePrefix'),'lbbepool')]",
            "condition": "[equals(parameters('enableOutboundInternet'),'No')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('vmNamePrefix'),'0'), 'sqlConfig')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('lbBEPoolTemplateURL')]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmNamePrefix": {
                        "value": "[variables('vmNamePrefix')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "subnetId": {
                        "value": "[parameters('subnetId')]"
                    },
                    "lbBEAddressPoolID": {
                        "value": "[variables('lbBEAddressPoolID')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('vmNamePrefix'),'albbepool')]",
            "condition": "[equals(parameters('enableOutboundInternet'),'Yes')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('vmNamePrefix'),'0'), 'sqlConfig')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('albBEPoolTemplateURL')]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmNamePrefix": {
                        "value": "[variables('vmNamePrefix')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "subnetId": {
                        "value": "[parameters('subnetId')]"
                    },
                    "lbBEAddressPoolID": {
                        "value": "[variables('lbBEAddressPoolID')]"
                    },
                    "albBEAddressPoolID": {
                        "value": "[variables('albBEAddressPoolID')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "agListenerName": {
            "type": "string",
            "value": "[variables('agListenerName')]"
        }
    }
}
