{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "projectName": {
          "type": "String",
          "metadata": {
              "description": "Specifies a project name that is used for generating resource names."
          }
      },
      "OSVersion": {
          "defaultValue": "2022-datacenter-azure-edition",
          "allowedValues": [
              "2016-datacenter-gensecond",
              "2016-datacenter-server-core-g2",
              "2016-datacenter-server-core-smalldisk-g2",
              "2016-datacenter-smalldisk-g2",
              "2016-datacenter-with-containers-g2",
              "2016-datacenter-zhcn-g2",
              "2019-datacenter-core-g2",
              "2019-datacenter-core-smalldisk-g2",
              "2019-datacenter-core-with-containers-g2",
              "2019-datacenter-core-with-containers-smalldisk-g2",
              "2019-datacenter-gensecond",
              "2019-datacenter-smalldisk-g2",
              "2019-datacenter-with-containers-g2",
              "2019-datacenter-with-containers-smalldisk-g2",
              "2019-datacenter-zhcn-g2",
              "2022-datacenter-azure-edition",
              "2022-datacenter-azure-edition-core",
              "2022-datacenter-azure-edition-core-smalldisk",
              "2022-datacenter-azure-edition-smalldisk",
              "2022-datacenter-core-g2",
              "2022-datacenter-core-smalldisk-g2",
              "2022-datacenter-g2",
              "2022-datacenter-smalldisk-g2"
          ],
          "type": "String",
          "metadata": {
              "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
          }
      },
      "location": {
          "defaultValue": "[resourceGroup().location]",
          "type": "String",
          "metadata": {
              "description": "Specifies the location for all of the resources created by this template."
          }
      },
      "adminUsername": {
          "type": "String",
          "metadata": {
              "description": "Specifies the virtual machine administrator username."
          }
      },
      "adminPassword": {
          "type": "SecureString",
          "metadata": {
              "description": "Specifies the virtual machine administrator password."
          }
      },
      "secureBoot": {
          "defaultValue": true,
          "type": "Bool",
          "metadata": {
              "description": "Secure Boot setting of the virtual machine."
          }
      },
      "vTPM": {
          "defaultValue": true,
          "type": "Bool",
          "metadata": {
              "description": "vTPM setting of the virtual machine."
          }
      },
      "vmSize": {
          "defaultValue": "Standard_D2s_v3",
          "type": "String",
          "metadata": {
              "description": "Size of the virtual machine"
          }
      }
  },
  "variables": {
      "lbName": "[format('{0}-lb', parameters('projectName'))]",
      "lbSkuName": "Standard",
      "lbPublicIpAddressName": "[format('{0}-lbPublicIP', parameters('projectName'))]",
      "lbPublicIPAddressNameOutbound": "[format('{0}-lbPublicIPOutbound', parameters('projectName'))]",
      "lbFrontEndName": "LoadBalancerFrontEnd",
      "lbFrontEndNameOutbound": "LoadBalancerFrontEndOutbound",
      "lbBackendPoolName": "LoadBalancerBackEndPool",
      "lbBackendPoolNameOutbound": "LoadBalancerBackEndPoolOutbound",
      "lbProbeName": "loadBalancerHealthProbe",
      "nsgName": "[format('{0}-nsg', parameters('projectName'))]",
      "vNetName": "[format('{0}-vnet', parameters('projectName'))]",
      "vNetAddressPrefix": "10.0.0.0/16",
      "vNetSubnetName": "BackendSubnet",
      "vNetSubnetAddressPrefix": "10.0.0.0/24",
      "bastionName": "[format('{0}-bastion', parameters('projectName'))]",
      "bastionSubnetName": "AzureBastionSubnet",
      "vNetBastionSubnetAddressPrefix": "10.0.1.0/24",
      "bastionPublicIPAddressName": "[format('{0}-bastionPublicIP', parameters('projectName'))]",
      "vmStorageAccountType": "Premium_LRS",
      "extensionName": "GuestAttestation",
      "extensionPublisher": "Microsoft.Azure.Security.WindowsAttestation",
      "extensionVersion": "1.0",
      "maaTenantName": "GuestAttestation",
      "maaEndpoint": "[substring('emptyString', 0, 0)]",
      "ascReportingEndpoint": "[substring('emptyString', 0, 0)]"
  },
  "resources": [
      {
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2021-08-01",
          "name": "[format('{0}-vm{1}-networkInterface', parameters('projectName'), add(range(0, 3)[copyIndex()], 1))]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
              "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
              "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "ipconfig1",
                      "properties": {
                          "privateIPAllocationMethod": "Dynamic",
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                              {
                                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBackendPoolName'))]"
                              },
                              {
                                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBackendPoolNameOutbound'))]"
                              }
                          ]
                      }
                  }
              ],
              "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
          },
          "copy": {
              "name": "project_vm_1_networkInterface",
              "count": "[length(range(0, 3))]"
          }
      },
      {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2021-11-01",
          "name": "[format('{0}-vm{1}/InstallWebServer', parameters('projectName'), add(range(0, 3)[copyIndex()], 1))]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "project_vm_1"
          ],
          "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.7",
              "autoUpgradeMinorVersion": true,
              "settings": {
                  "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools && powershell.exe remove-item 'C:\\inetpub\\wwwroot\\iisstart.htm' && powershell.exe Add-Content -Path 'C:\\inetpub\\wwwroot\\iisstart.htm' -Value $('Hello World from ' + $env:computername)"
              }
          },
          "copy": {
              "name": "project_vm_1_InstallWebServer",
              "count": "[length(range(0, 3))]"
          }
      },
      {
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "2021-11-01",
          "name": "[format('{0}-vm{1}', parameters('projectName'), range(1, 3)[copyIndex()])]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "project_vm_1_networkInterface"
          ],
          "zones": [
              "[string(range(1, 3)[copyIndex()])]"
          ],
          "properties": {
              "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
              },
              "storageProfile": {
                  "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "[parameters('OSVersion')]",
                      "version": "latest"
                  },
                  "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                          "storageAccountType": "[variables('vmStorageAccountType')]"
                      }
                  },
                  "dataDisks": [
                      {
                          "diskSizeGB": 1023,
                          "lun": 0,
                          "createOption": "Empty"
                      }
                  ]
              },
              "networkProfile": {
                  "networkInterfaces": [
                      {
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-vm{1}-networkInterface', parameters('projectName'), range(1, 3)[copyIndex()]))]"
                      }
                  ]
              },
              "osProfile": {
                  "computerName": "[format('{0}-vm{1}', parameters('projectName'), range(1, 3)[copyIndex()])]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                      "enableAutomaticUpdates": true,
                      "provisionVMAgent": true
                  }
              },
              "securityProfile": {
                  "uefiSettings": {
                      "secureBootEnabled": "[parameters('secureBoot')]",
                      "vTpmEnabled": "[parameters('vTPM')]"
                  },
                  "securityType": "TrustedLaunch"
              }
          },
          "copy": {
              "name": "project_vm_1",
              "count": "[length(range(1, 3))]"
          }
      },
      {
        "copy": {
            "name": "project_vm_1",
            "count": "[length(range(1, 3))]"
        },      
        "condition": "[and(parameters('vTPM'), parameters('secureBoot'))]",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2022-03-01",
        "name": "[format('{0}-vm{1}/GuestAttestation', parameters('projectName'), range(1, 3)[copyIndex()])]",
        "location": "[parameters('location')]",
        "properties": {
            "publisher": "[variables('extensionPublisher')]",
            "type": "[variables('extensionName')]",
            "typeHandlerVersion": "[variables('extensionVersion')]",
            "autoUpgradeMinorVersion": true,
            "enableAutomaticUpgrade": true,
            "settings": {
                "AttestationConfig": {
                    "MaaSettings": {
                        "maaEndpoint": "[variables('maaEndpoint')]",
                        "maaTenantName": "[variables('maaTenantName')]"
                    },
                    "AscSettings": {
                      "ascReportingEndpoint": "[variables('ascReportingEndpoint')]",
                      "ascReportingFrequency": ""
                    },
                    "useCustomToken": "false",
                    "disableAlerts": "false"
                }
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-vm{1}', parameters('projectName'), range(1, 3)[copyIndex()]))]"
        ]
      },
      {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2021-08-01",
          "name": "[format('{0}/{1}', variables('vNetName'), variables('bastionSubnetName'))]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
              "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
          ],
          "properties": {
              "addressPrefix": "[variables('vNetBastionSubnetAddressPrefix')]"
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2021-08-01",
          "name": "[format('{0}/{1}', variables('vNetName'), variables('vNetSubnetName'))]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
          ],
          "properties": {
              "addressPrefix": "[variables('vNetSubnetAddressPrefix')]"
          }
      },
      {
          "type": "Microsoft.Network/bastionHosts",
          "apiVersion": "2021-08-01",
          "name": "[variables('bastionName')]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]",
              "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('bastionSubnetName'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "IpConf",
                      "properties": {
                          "privateIPAllocationMethod": "Dynamic",
                          "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]"
                          },
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('bastionSubnetName'))]"
                          }
                      }
                  }
              ]
          }
      },
      {
          "type": "Microsoft.Network/publicIPAddresses",
          "apiVersion": "2021-08-01",
          "name": "[variables('bastionPublicIPAddressName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[variables('lbSkuName')]"
          },
          "properties": {
              "publicIPAddressVersion": "IPv4",
              "publicIPAllocationMethod": "Static"
          }
      },
      {
          "type": "Microsoft.Network/loadBalancers",
          "apiVersion": "2021-08-01",
          "name": "[variables('lbName')]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIpAddressName'))]",
              "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPAddressNameOutbound'))]"
          ],
          "sku": {
              "name": "[variables('lbSkuName')]"
          },
          "properties": {
              "frontendIPConfigurations": [
                  {
                      "name": "[variables('lbFrontEndName')]",
                      "properties": {
                          "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIpAddressName'))]"
                          }
                      }
                  },
                  {
                      "name": "[variables('lbFrontEndNameOutbound')]",
                      "properties": {
                          "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPAddressNameOutbound'))]"
                          }
                      }
                  }
              ],
              "backendAddressPools": [
                  {
                      "name": "[variables('lbBackendPoolName')]"
                  },
                  {
                      "name": "[variables('lbBackendPoolNameOutbound')]"
                  }
              ],
              "loadBalancingRules": [
                  {
                      "name": "myHTTPRule",
                      "properties": {
                          "frontendIPConfiguration": {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), variables('lbFrontEndName'))]"
                          },
                          "backendAddressPool": {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBackendPoolName'))]"
                          },
                          "frontendPort": 80,
                          "backendPort": 80,
                          "enableFloatingIP": false,
                          "idleTimeoutInMinutes": 15,
                          "protocol": "Tcp",
                          "enableTcpReset": true,
                          "loadDistribution": "Default",
                          "disableOutboundSnat": true,
                          "probe": {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), variables('lbProbeName'))]"
                          }
                      }
                  }
              ],
              "probes": [
                  {
                      "name": "[variables('lbProbeName')]",
                      "properties": {
                          "protocol": "Tcp",
                          "port": 80,
                          "intervalInSeconds": 5,
                          "numberOfProbes": 2
                      }
                  }
              ],
              "outboundRules": [
                  {
                      "name": "myOutboundRule",
                      "properties": {
                          "allocatedOutboundPorts": 10000,
                          "protocol": "All",
                          "enableTcpReset": false,
                          "idleTimeoutInMinutes": 15,
                          "backendAddressPool": {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBackendPoolNameOutbound'))]"
                          },
                          "frontendIPConfigurations": [
                              {
                                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), variables('lbFrontEndNameOutbound'))]"
                              }
                          ]
                      }
                  }
              ]
          }
      },
      {
          "type": "Microsoft.Network/publicIPAddresses",
          "apiVersion": "2021-08-01",
          "name": "[variables('lbPublicIpAddressName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[variables('lbSkuName')]"
          },
          "properties": {
              "publicIPAddressVersion": "IPv4",
              "publicIPAllocationMethod": "Static"
          }
      },
      {
          "type": "Microsoft.Network/publicIPAddresses",
          "apiVersion": "2021-08-01",
          "name": "[variables('lbPublicIPAddressNameOutbound')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "[variables('lbSkuName')]"
          },
          "properties": {
              "publicIPAddressVersion": "IPv4",
              "publicIPAllocationMethod": "Static"
          }
      },
      {
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2021-08-01",
          "name": "[variables('nsgName')]",
          "location": "[parameters('location')]",
          "properties": {
              "securityRules": [
                  {
                      "name": "AllowHTTPInbound",
                      "properties": {
                          "protocol": "*",
                          "sourcePortRange": "*",
                          "destinationPortRange": "80",
                          "sourceAddressPrefix": "Internet",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 100,
                          "direction": "Inbound"
                      }
                  }
              ]
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2021-08-01",
          "name": "[variables('vNetName')]",
          "location": "[parameters('location')]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "[variables('vNetAddressPrefix')]"
                  ]
              }
          }
      }
  ]
}