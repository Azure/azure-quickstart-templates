{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "16684866677948110438"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "Virtual network name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Virtual network location"
      }
    },
    "vnetAddressSpace": {
      "type": "array",
      "defaultValue": [
        "10.0.0.0/16"
      ],
      "metadata": {
        "description": "Array containing virtual network address space(s)"
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array containing DNS Servers"
      }
    },
    "subnets": {
      "type": "array",
      "defaultValue": [
        {
          "name": "subnet1",
          "addressPrefix": "10.0.1.0/24",
          "privateEndpointNetworkPolicies": "disabled",
          "privateLinkServiceNetworkPolicies": "disabled",
          "delegation": null,
          "natgatewayId": null,
          "nsgId": null,
          "udrId": null,
          "serviceEndpoints": null
        }
      ],
      "metadata": {
        "name": "Subnet name",
        "addressPrefix": "Subnet address prefix",
        "delegation": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Web/serverFarms)",
        "natGatewayId": "Resource id of the NAT gateway to associate to subnet",
        "nsgId": "Resource id of the Network Security Group to associate to subnet",
        "udrId": "Resource id of the Route Table to associate to subnet",
        "privateEndpointNetworkPolicies": "Enable or disable Private Endpoint network policies on subnet",
        "privateLinkServiceNetworkPolicies": "Enable or disable PrivateLink service network policies on subnet",
        "serviceEndpoints": [
          {
            "service": "The type of the endpoint service"
          }
        ],
        "description": "Array containing subnets to create within the Virtual Network"
      }
    },
    "enableDeleteLock": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable delete lock"
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable diagnostic logs"
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Storage account resource id. Only required if enableDiagnostics is set to true."
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Log analytics workspace resource id. Only required if enableDiagnostics is set to true."
      }
    }
  },
  "functions": [],
  "variables": {
    "lockName": "[format('{0}-lck', parameters('vnetName'))]",
    "diagnosticsName": "[format('{0}-dgs', parameters('vnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "copy": [
          {
            "name": "subnets",
            "count": "[length(parameters('subnets'))]",
            "input": {
              "name": "[parameters('subnets')[copyIndex('subnets')].name]",
              "properties": {
                "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
                "delegations": "[if(empty(parameters('subnets')[copyIndex('subnets')].delegation), createArray(), createArray(createObject('name', format('{0}-delegation', parameters('subnets')[copyIndex('subnets')].name), 'properties', createObject('serviceName', parameters('subnets')[copyIndex('subnets')].delegation))))]",
                "natGateway": "[if(empty(parameters('subnets')[copyIndex('subnets')].natGatewayId), null(), createObject('id', parameters('subnets')[copyIndex('subnets')].natGatewayId))]",
                "networkSecurityGroup": "[if(empty(parameters('subnets')[copyIndex('subnets')].nsgId), null(), createObject('id', parameters('subnets')[copyIndex('subnets')].nsgId))]",
                "routeTable": "[if(empty(parameters('subnets')[copyIndex('subnets')].udrId), null(), createObject('id', parameters('subnets')[copyIndex('subnets')].udrId))]",
                "privateEndpointNetworkPolicies": "[parameters('subnets')[copyIndex('subnets')].privateEndpointNetworkPolicies]",
                "privateLinkServiceNetworkPolicies": "[parameters('subnets')[copyIndex('subnets')].privateLinkServiceNetworkPolicies]",
                "serviceEndpoints": "[if(empty(parameters('subnets')[copyIndex('subnets')].serviceEndpoints), null(), parameters('subnets')[copyIndex('subnets')].serviceEndpoints)]"
              }
            }
          }
        ],
        "addressSpace": {
          "addressPrefixes": "[parameters('vnetAddressSpace')]"
        },
        "dhcpOptions": "[if(empty(parameters('dnsServers')), null(), createObject('dnsServers', parameters('dnsServers')))]"
      }
    },
    {
      "condition": "[parameters('enableDiagnostics')]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Network/virtualNetworks/{0}', parameters('vnetName'))]",
      "name": "[variables('diagnosticsName')]",
      "properties": {
        "workspaceId": "[if(empty(parameters('logAnalyticsWorkspaceId')), null(), parameters('logAnalyticsWorkspaceId'))]",
        "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), null(), parameters('diagnosticStorageAccountId'))]",
        "logs": [
          {
            "category": "VMProtectionAlerts",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "condition": "[parameters('enableDeleteLock')]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2016-09-01",
      "scope": "[format('Microsoft.Network/virtualNetworks/{0}', parameters('vnetName'))]",
      "name": "[variables('lockName')]",
      "properties": {
        "level": "CanNotDelete"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('vnetName')]"
    },
    "id": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    }
  }
}