{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "3199473589469047361"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "[format('natfw-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Resource name prefix."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for the virtual machine."
      }
    },
    "adminSshKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key for the virtual machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    }
  },
  "variables": {
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminSshKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-vnet-hub', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet-1",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          },
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "10.0.1.64/26",
              "natGateway": {
                "id": "[resourceId('Microsoft.Network/natGateways', format('{0}-nat-gateway', parameters('resourcePrefix')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/natGateways', format('{0}-nat-gateway', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-vnet-spoke', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet-private",
            "properties": {
              "addressPrefix": "10.1.0.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-route-table-spoke', parameters('resourcePrefix')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', format('{0}-route-table-spoke', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}-bastion', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Developer"
      },
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-public-ip-firewall', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-firewall-policy', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}', format('{0}-firewall-policy', parameters('resourcePrefix')), 'DefaultNetworkRuleCollectionGroup')]",
      "properties": {
        "priority": 200,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "spoke-to-internet",
            "priority": 100,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "allow-web",
                "ipProtocols": [
                  "TCP"
                ],
                "sourceAddresses": [
                  "10.1.0.0/24"
                ],
                "destinationAddresses": [
                  "*"
                ],
                "destinationPorts": [
                  "80",
                  "443"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-firewall-policy', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-firewall', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "AZFW_VNet",
          "tier": "Standard"
        },
        "ipConfigurations": [
          {
            "name": "AzureFirewallIpConfiguration",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-public-ip-firewall', parameters('resourcePrefix')))]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/AzureFirewallSubnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix'))))]"
              }
            }
          }
        ],
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-firewall-policy', parameters('resourcePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-firewall-policy', parameters('resourcePrefix')))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-public-ip-firewall', parameters('resourcePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', format('{0}-firewall-policy', parameters('resourcePrefix')), 'DefaultNetworkRuleCollectionGroup')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-public-ip-nat', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "StandardV2"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-nat-gateway', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "StandardV2"
      },
      "properties": {
        "idleTimeoutInMinutes": 4,
        "publicIpAddresses": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-public-ip-nat', parameters('resourcePrefix')))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-public-ip-nat', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}', format('{0}-vnet-hub', parameters('resourcePrefix')), 'vnet-hub-to-vnet-spoke')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-spoke', parameters('resourcePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-spoke', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}', format('{0}-vnet-spoke', parameters('resourcePrefix')), 'vnet-spoke-to-vnet-hub')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-spoke', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-route-table-spoke', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "disableBgpRoutePropagation": true,
        "routes": [
          {
            "name": "route-to-hub",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', format('{0}-firewall', parameters('resourcePrefix'))), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('{0}-firewall', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-nsg-vm', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-nic-vm-spoke', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[format('{0}/subnets/subnet-private', resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-spoke', parameters('resourcePrefix'))))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-vm', parameters('resourcePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-vm', parameters('resourcePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-spoke', parameters('resourcePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}-vm-spoke', parameters('resourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[format('{0}-vm', parameters('resourcePrefix'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-vm-spoke', parameters('resourcePrefix')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-vm-spoke', parameters('resourcePrefix')))]"
      ]
    }
  ],
  "outputs": {
    "hubVnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-hub', parameters('resourcePrefix')))]"
    },
    "spokeVnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet-spoke', parameters('resourcePrefix')))]"
    },
    "firewallPrivateIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', format('{0}-firewall', parameters('resourcePrefix'))), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "natGatewayPublicIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-public-ip-nat', parameters('resourcePrefix'))), '2024-05-01').ipAddress]"
    },
    "vmPrivateIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-vm-spoke', parameters('resourcePrefix'))), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "bastionFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/bastionHosts', format('{0}-bastion', parameters('resourcePrefix'))), '2024-01-01').dnsName]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "vmName": {
      "type": "string",
      "value": "[format('{0}-vm-spoke', parameters('resourcePrefix'))]"
    }
  }
}