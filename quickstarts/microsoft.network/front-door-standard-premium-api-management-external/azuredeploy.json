{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.451.19169",
      "templateHash": "3528942585642063634"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which regionally scoped resources should be deployed. Note that Front Door is a global resource."
      }
    },
    "vnetIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The IP address prefix (CIDR range) to use when deploying the virtual network."
      }
    },
    "apiManagementSubnetIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The IP address prefix (CIDR range) to use when deploying the API Management subnet within the virtual network."
      }
    },
    "apiManagementServiceName": {
      "type": "string",
      "defaultValue": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the API Management service instance to create. This must be globally unique."
      }
    },
    "apiManagementPublisherName": {
      "type": "string",
      "defaultValue": "Contoso",
      "metadata": {
        "description": "The name of the API publisher. This information is used by API Management."
      }
    },
    "apiManagementPublisherEmail": {
      "type": "string",
      "defaultValue": "admin@contoso.com",
      "metadata": {
        "description": "The email address of the API publisher. This information is used by API Management."
      }
    },
    "apiManagementSku": {
      "type": "string",
      "defaultValue": "Developer",
      "allowedValues": [
        "Developer",
        "Premium"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the API Management service instance. This must be a SKU that supports virtual network integration."
      }
    },
    "apiManagementSkuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of worker instances of your API Management service that should be provisioned."
      }
    },
    "frontDoorProxyEndpointName": {
      "type": "string",
      "defaultValue": "[format('afd-proxy-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Front Door endpoint to create for the API Management proxy gateway. This must be globally unique."
      }
    },
    "frontDoorDeveloperPortalEndpointName": {
      "type": "string",
      "defaultValue": "[format('afd-portal-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Front Door endpoint to create for the API Management developer portal. This must be globally unique."
      }
    },
    "frontDoorSkuName": {
      "type": "string",
      "defaultValue": "Standard_AzureFrontDoor",
      "allowedValues": [
        "Standard_AzureFrontDoor",
        "Premium_AzureFrontDoor"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the Front Door profile."
      }
    }
  },
  "functions": [],
  "variables": {
    "apiManagementFrontDoorIdNamedValueName": "FrontDoorId",
    "apiManagementVirtualNetworkType": "External"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), variables('apiManagementFrontDoorIdNamedValueName'))]",
      "properties": {
        "displayName": "FrontDoorId",
        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorId.value]",
        "secret": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]",
        "[resourceId('Microsoft.Resources/deployments', 'front-door')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), 'policy')]",
      "properties": {
        "value": "<policies>\n  <inbound>\n    <check-header name=\"X-Azure-FDID\" failed-check-httpcode=\"403\" failed-check-error-message=\"Invalid request.\" ignore-case=\"false\">\n      <value>{{FrontDoorId}}</value>\n    </check-header>\n  </inbound>\n  <backend>\n    <forward-request />\n  </backend>\n</policies>",
        "format": "xml"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/namedValues', parameters('apiManagementServiceName'), variables('apiManagementFrontDoorIdNamedValueName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetIPPrefix": {
            "value": "[parameters('vnetIPPrefix')]"
          },
          "apiManagementSubnetIPPrefix": {
            "value": "[parameters('apiManagementSubnetIPPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.451.19169",
              "templateHash": "8050861117654188949"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location into which the virtual network resources should be deployed."
              }
            },
            "vnetIPPrefix": {
              "type": "string",
              "metadata": {
                "description": "The IP address prefix (CIDR range) to use when deploying the virtual network."
              }
            },
            "apiManagementSubnetIPPrefix": {
              "type": "string",
              "metadata": {
                "description": "The IP address prefix (CIDR range) to use when deploying the API Management subnet within the virtual network."
              }
            }
          },
          "functions": [],
          "variables": {
            "vnetName": "VNet",
            "apiManagementSubnetName": "apim",
            "nsgName": "MyNSG"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetIPPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('apiManagementSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('apiManagementSubnetIPPrefix')]",
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.Storage"
                        },
                        {
                          "service": "Microsoft.Sql"
                        },
                        {
                          "service": "Microsoft.EventHub"
                        },
                        {
                          "service": "Microsoft.ServiceBus"
                        }
                      ],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-05-01",
              "name": "[variables('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Client_communication_to_API_Management",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "AzureFrontDoor.Backend",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Secure_Client_communication_to_API_Management",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "AzureFrontDoor.Backend",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Management_endpoint_for_Azure_portal_and_Powershell",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3443",
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_Storage",
                    "properties": {
                      "description": "APIM service dependency on Azure Blob and Azure Table Storage",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Azure_Active_Directory_and_Azure_KeyVault_dependency",
                    "properties": {
                      "description": "Connect to Azure Active Directory for Developer Portal Authentication or for Oauth2 flow during any Proxy Authentication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureActiveDirectory",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_to_Azure_SQL_endpoints",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1433",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Sql",
                      "access": "Allow",
                      "priority": 150,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_to_Azure_KeyVault",
                    "properties": {
                      "description": "Allow APIM service control plane access to KeyVault to refresh secrets",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureKeyVault",
                      "access": "Allow",
                      "priority": 160,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_for_Log_to_event_Hub_policy_and_monitoring_agent",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "5671",
                        "5672",
                        "443"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "EventHub",
                      "access": "Allow",
                      "priority": 170,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_File_Share_for_GIT",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "445",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 180,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Health_and_Monitoring_Extension",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "443",
                        "12000"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 190,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Publish_Diagnostic_Logs_and_Metrics_Resource_Health_and_Application_Insights",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "1886",
                        "443"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureMonitor",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Connect_To_SMTP_Relay_for_sending_e-mails",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "25",
                        "587",
                        "25028"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 210,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_Redis_Service_for_Cache_policies_between_machines",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6381-6383",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 220,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Sync_Counters_for_Rate_Limit_policies_between_machines",
                    "properties": {
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4290",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 230,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Azure_Infrastructure_Load_Balancer",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 240,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetName": {
              "type": "string",
              "value": "[variables('vnetName')]"
            },
            "apiManagementSubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('apiManagementSubnetName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "api-management",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "serviceName": {
            "value": "[parameters('apiManagementServiceName')]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementPublisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementPublisherEmail')]"
          },
          "skuName": {
            "value": "[parameters('apiManagementSku')]"
          },
          "skuCount": {
            "value": "[parameters('apiManagementSkuCount')]"
          },
          "subnetResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.apiManagementSubnetResourceId.value]"
          },
          "virtualNetworkType": {
            "value": "[variables('apiManagementVirtualNetworkType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.451.19169",
              "templateHash": "3992877471425080918"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location into which the API Management resources should be deployed."
              }
            },
            "serviceName": {
              "type": "string",
              "metadata": {
                "description": "The name of the API Management service instance to create. This must be globally unique."
              }
            },
            "publisherName": {
              "type": "string",
              "metadata": {
                "description": "The name of the API publisher. This information is used by API Management."
              }
            },
            "publisherEmail": {
              "type": "string",
              "metadata": {
                "description": "The email address of the API publisher. This information is used by API Management."
              }
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Developer",
                "Premium"
              ],
              "metadata": {
                "description": "The name of the SKU to use when creating the API Management service instance. This must be a SKU that supports virtual network integration."
              }
            },
            "skuCount": {
              "type": "int",
              "metadata": {
                "description": "The number of worker instances of your API Management service that should be provisioned."
              }
            },
            "virtualNetworkType": {
              "type": "string",
              "allowedValues": [
                "External",
                "Internal"
              ],
              "metadata": {
                "description": "The type of virtual network integration to deploy. In 'External' mode, a public IP address will be associated with the API Management service instance. In 'Internal' mode, the instance is only accessible using private networking."
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the virtual network subnet that the API Management service instance should be deployed into."
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2020-12-01",
              "name": "[parameters('serviceName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCount')]"
              },
              "properties": {
                "publisherName": "[parameters('publisherName')]",
                "publisherEmail": "[parameters('publisherEmail')]",
                "virtualNetworkType": "[parameters('virtualNetworkType')]",
                "virtualNetworkConfiguration": {
                  "subnetResourceId": "[parameters('subnetResourceId')]"
                }
              }
            }
          ],
          "outputs": {
            "apiManagementInternalIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))).publicIPAddresses[0]]"
            },
            "apiManagementProxyHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))).hostnameConfigurations[0].hostName]"
            },
            "apiManagementDeveloperPortalHostName": {
              "type": "string",
              "value": "[replace(reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))).developerPortalUrl, 'https://', '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "front-door",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "skuName": {
            "value": "[parameters('frontDoorSkuName')]"
          },
          "proxyEndpointName": {
            "value": "[parameters('frontDoorProxyEndpointName')]"
          },
          "developerPortalEndpointName": {
            "value": "[parameters('frontDoorDeveloperPortalEndpointName')]"
          },
          "proxyOriginHostName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementProxyHostName.value]"
          },
          "developerPortalOriginHostName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementDeveloperPortalHostName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.451.19169",
              "templateHash": "7789076445361247006"
            }
          },
          "parameters": {
            "proxyOriginHostName": {
              "type": "string",
              "metadata": {
                "description": "The host name that should be used when connecting to the origin for the API Management proxy gateway."
              }
            },
            "developerPortalOriginHostName": {
              "type": "string",
              "metadata": {
                "description": "The host name that should be used when connecting to the origin for the API Management developer portal."
              }
            },
            "proxyEndpointName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Front Door endpoint to create for the API Management proxy gateway. This must be globally unique."
              }
            },
            "developerPortalEndpointName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Front Door endpoint to create for the API Management developer portal. This must be globally unique."
              }
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Standard_AzureFrontDoor",
                "Premium_AzureFrontDoor"
              ],
              "metadata": {
                "description": "The name of the SKU to use when creating the Front Door profile. If you use Private Link this must be set to `Premium_AzureFrontDoor`."
              }
            }
          },
          "functions": [],
          "variables": {
            "profileName": "FrontDoor",
            "proxyOriginGroupName": "Proxy",
            "developerPortalOriginGroupName": "DeveloperPortal",
            "proxyOriginName": "ApiManagementProxy",
            "developerPortalOriginName": "ApiManagementDeveloperPortal",
            "proxyRouteName": "ProxyRoute",
            "developerPortalRouteName": "DeveloperPortalRoute"
          },
          "resources": [
            {
              "type": "Microsoft.Cdn/profiles",
              "apiVersion": "2020-09-01",
              "name": "[variables('profileName')]",
              "location": "global",
              "sku": {
                "name": "[parameters('skuName')]"
              }
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', variables('profileName'), parameters('proxyEndpointName'))]",
              "location": "global",
              "properties": {
                "originResponseTimeoutSeconds": 240,
                "enabledState": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', variables('profileName'), variables('proxyOriginGroupName'))]",
              "properties": {
                "loadBalancingSettings": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 3
                },
                "healthProbeSettings": {
                  "probePath": "/",
                  "probeRequestType": "HEAD",
                  "probeProtocol": "Http",
                  "probeIntervalInSeconds": 100
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups/origins",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}/{2}', variables('profileName'), variables('proxyOriginGroupName'), variables('proxyOriginName'))]",
              "properties": {
                "hostName": "[parameters('proxyOriginHostName')]",
                "httpPort": 80,
                "httpsPort": 443,
                "originHostHeader": "[parameters('proxyOriginHostName')]",
                "priority": 1,
                "weight": 1000
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('profileName'), variables('proxyOriginGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}/{2}', variables('profileName'), parameters('proxyEndpointName'), variables('proxyRouteName'))]",
              "properties": {
                "originGroup": {
                  "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('profileName'), variables('proxyOriginGroupName'))]"
                },
                "supportedProtocols": [
                  "Http",
                  "Https"
                ],
                "patternsToMatch": [
                  "/*"
                ],
                "queryStringCachingBehavior": "NotSet",
                "forwardingProtocol": "HttpsOnly",
                "linkToDefaultDomain": "Enabled",
                "httpsRedirect": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]",
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', variables('profileName'), parameters('proxyEndpointName'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', variables('profileName'), variables('proxyOriginGroupName'), variables('proxyOriginName'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('profileName'), variables('proxyOriginGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', variables('profileName'), parameters('developerPortalEndpointName'))]",
              "location": "global",
              "properties": {
                "originResponseTimeoutSeconds": 240,
                "enabledState": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', variables('profileName'), variables('developerPortalOriginGroupName'))]",
              "properties": {
                "loadBalancingSettings": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 3
                },
                "healthProbeSettings": {
                  "probePath": "/",
                  "probeRequestType": "HEAD",
                  "probeProtocol": "Http",
                  "probeIntervalInSeconds": 100
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups/origins",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}/{2}', variables('profileName'), variables('developerPortalOriginGroupName'), variables('developerPortalOriginName'))]",
              "properties": {
                "hostName": "[parameters('developerPortalOriginHostName')]",
                "httpPort": 80,
                "httpsPort": 443,
                "originHostHeader": "[parameters('developerPortalOriginHostName')]",
                "priority": 1,
                "weight": 1000
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('profileName'), variables('developerPortalOriginGroupName'))]",
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}/{2}', variables('profileName'), parameters('developerPortalEndpointName'), variables('developerPortalRouteName'))]",
              "properties": {
                "originGroup": {
                  "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('profileName'), variables('developerPortalOriginGroupName'))]"
                },
                "supportedProtocols": [
                  "Http",
                  "Https"
                ],
                "patternsToMatch": [
                  "/*"
                ],
                "compressionSettings": {
                  "contentTypesToCompress": [
                    "application/eot",
                    "application/font",
                    "application/font-sfnt",
                    "application/javascript",
                    "application/json",
                    "application/opentype",
                    "application/otf",
                    "application/pkcs7-mime",
                    "application/truetype",
                    "application/ttf",
                    "application/vnd.ms-fontobject",
                    "application/xhtml+xml",
                    "application/xml",
                    "application/xml+rss",
                    "application/x-font-opentype",
                    "application/x-font-truetype",
                    "application/x-font-ttf",
                    "application/x-httpd-cgi",
                    "application/x-javascript",
                    "application/x-mpegurl",
                    "application/x-opentype",
                    "application/x-otf",
                    "application/x-perl",
                    "application/x-ttf",
                    "font/eot",
                    "font/ttf",
                    "font/otf",
                    "font/opentype",
                    "image/svg+xml",
                    "text/css",
                    "text/csv",
                    "text/html",
                    "text/javascript",
                    "text/js",
                    "text/plain",
                    "text/richtext",
                    "text/tab-separated-values",
                    "text/xml",
                    "text/x-script",
                    "text/x-component",
                    "text/x-java-source"
                  ],
                  "isCompressionEnabled": true
                },
                "queryStringCachingBehavior": "IgnoreQueryString",
                "forwardingProtocol": "HttpsOnly",
                "linkToDefaultDomain": "Enabled",
                "httpsRedirect": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', variables('profileName'), parameters('developerPortalEndpointName'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', variables('profileName'), variables('developerPortalOriginGroupName'), variables('developerPortalOriginName'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('profileName'), variables('developerPortalOriginGroupName'))]",
                "[resourceId('Microsoft.Cdn/profiles', variables('profileName'))]"
              ]
            }
          ],
          "outputs": {
            "frontDoorId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles', variables('profileName'))).frontdoorId]"
            },
            "frontDoorProxyEndpointHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles/afdEndpoints', variables('profileName'), parameters('proxyEndpointName'))).hostName]"
            },
            "frontDoorDeveloperPortalEndpointHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles/afdEndpoints', variables('profileName'), parameters('developerPortalEndpointName'))).hostName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]"
      ]
    }
  ],
  "outputs": {
    "frontDoorEndpointApiManagementProxyHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorProxyEndpointHostName.value]"
    },
    "frontDoorEndpointApiManagementPortalHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorDeveloperPortalEndpointHostName.value]"
    },
    "apiManagementProxyHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementProxyHostName.value]"
    },
    "apiManagementPortalHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementDeveloperPortalHostName.value]"
    }
  }
}