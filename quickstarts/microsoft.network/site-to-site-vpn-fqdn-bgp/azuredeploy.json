{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "4735889716220821030"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "naming prefix of the objects in the resource. it can be an empty string."
      }
    },
    "location1": {
      "type": "string",
      "allowedValues": [
        "canadacentral",
        "francecentral",
        "germanywestcentral",
        "japaneast",
        "centralus",
        "northeurope",
        "southeastasia",
        "eastus",
        "uksouth",
        "australiaeast",
        "eastus2",
        "westeurope",
        "southcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "First Azure region with Availability Zone"
      }
    },
    "location2": {
      "type": "string",
      "allowedValues": [
        "canadacentral",
        "francecentral",
        "germanywestcentral",
        "japaneast",
        "centralus",
        "northeurope",
        "southeastasia",
        "eastus",
        "uksouth",
        "australiaeast",
        "eastus2",
        "westeurope",
        "southcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Second Azure region with Availability Zone"
      }
    },
    "vNet1Name": {
      "type": "string",
      "defaultValue": "[format('{0}vnet1', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network 1"
      }
    },
    "vNet2Name": {
      "type": "string",
      "defaultValue": "[format('{0}vnet2', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network 2"
      }
    },
    "vNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet 1"
      }
    },
    "vNet2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/16",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet 2"
      }
    },
    "subnet11Name": {
      "type": "string",
      "defaultValue": "subnet11",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet1 in VNet1"
      }
    },
    "subnet12Name": {
      "type": "string",
      "defaultValue": "subnet12",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet2 in VNet1"
      }
    },
    "subnet21Name": {
      "type": "string",
      "defaultValue": "subnet21",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet1 in VNet2"
      }
    },
    "subnet22Name": {
      "type": "string",
      "defaultValue": "subnet22",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet2 in VNet2"
      }
    },
    "subnet11Prefix": {
      "type": "string",
      "defaultValue": "10.1.1.0/24",
      "metadata": {
        "description": "CIDR block for subnet1 in VNet1- it is a subset of vNet1AddressPrefix address space"
      }
    },
    "subnet12Prefix": {
      "type": "string",
      "defaultValue": "10.1.2.0/24",
      "metadata": {
        "description": "CIDR block for subnet2 in VNet1- it is a subset of vNet1AddressPrefix address space"
      }
    },
    "gateway1SubnetPrefix": {
      "type": "string",
      "defaultValue": "10.1.3.0/24",
      "metadata": {
        "description": "CIDR block for gateway subnet- it is a subset of vNet1AddressPrefix address space"
      }
    },
    "subnet21Prefix": {
      "type": "string",
      "defaultValue": "10.2.1.0/24",
      "metadata": {
        "description": "CIDR block for subnet1 in VNet2- it is a subset of vNet2AddressPrefix address space"
      }
    },
    "subnet22Prefix": {
      "type": "string",
      "defaultValue": "10.2.2.0/24",
      "metadata": {
        "description": "CIDR block for subnet2 in VNet2- it is a subset of vNet2AddressPrefix address space"
      }
    },
    "gateway2SubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.3.0/24",
      "metadata": {
        "description": "CIDR block for gateway subnet- it is a subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "[format('{0}gw1', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for the new gateway1"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "[format('{0}gw2', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for the new gateway2"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "[format('{0}IP1', parameters('gateway1Name'))]",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "[format('{0}IP2', parameters('gateway1Name'))]",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "[format('{0}IP1', parameters('gateway2Name'))]",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "[format('{0}IP2', parameters('gateway2Name'))]",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw2AZ",
      "allowedValues": [
        "VpnGw1AZ",
        "VpnGw2AZ",
        "VpnGw3AZ",
        "VpnGw4AZ",
        "VpnGw5AZ"
      ],
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "vpnGatewayGeneration": {
      "type": "string",
      "defaultValue": "Generation2",
      "allowedValues": [
        "Generation1",
        "Generation2"
      ]
    },
    "asnGtw1": {
      "type": "int",
      "defaultValue": 65001,
      "metadata": {
        "description": "BGP Autonomous System Number of the VPN Gateway1 in VNet1"
      }
    },
    "asnGtw2": {
      "type": "int",
      "defaultValue": 65002,
      "metadata": {
        "description": "BGP Autonomous System Number of the VPN Gateway2 in VNet2"
      }
    },
    "localGatewayName11": {
      "type": "string",
      "defaultValue": "[format('{0}localGateway11', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway1-public IP1"
      }
    },
    "localGatewayName12": {
      "type": "string",
      "defaultValue": "[format('{0}localGateway12', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway1-publicIP2"
      }
    },
    "localGatewayName21": {
      "type": "string",
      "defaultValue": "[format('{0}localGateway21', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway2-publicIP1"
      }
    },
    "localGatewayName22": {
      "type": "string",
      "defaultValue": "[format('{0}localGateway22', parameters('prefix'))]",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway2-publicIP2"
      }
    },
    "connectionName11_21": {
      "type": "string",
      "defaultValue": "[format('{0}-to-{1}', parameters('gateway1Name'), parameters('gateway2PublicIP1Name'))]",
      "metadata": {
        "description": "Arbitrary name for the new connection between VPN gateway1 and the remote VPN Gateway2-public IP1"
      }
    },
    "connectionName12_22": {
      "type": "string",
      "defaultValue": "[format('{0}-to-{1}', parameters('gateway1Name'), parameters('gateway2PublicIP2Name'))]",
      "metadata": {
        "description": "Arbitrary name for the new connection between VPN gateway1 and the remote VPN Gateway2-public IP2"
      }
    },
    "connectionName21_11": {
      "type": "string",
      "defaultValue": "[format('{0}-to-{1}', parameters('gateway2Name'), parameters('gateway1PublicIP1Name'))]",
      "metadata": {
        "description": "Arbitrary name for the new connection between VPN gateway2 and the remote VPN Gateway1-public IP1"
      }
    },
    "connectionName22_12": {
      "type": "string",
      "defaultValue": "[format('{0}-to-{1}', parameters('gateway2Name'), parameters('gateway1PublicIP2Name'))]",
      "metadata": {
        "description": "Arbitrary name for the new connection between VPN gateway2 and the remote VPN Gateway1-public IP2"
      }
    },
    "sharedKey": {
      "type": "string",
      "defaultValue": "_your_Pre-Shared-Secret",
      "metadata": {
        "description": "Shared key (PSK) for IPSec tunnels"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "[format('{0}vm1', parameters('prefix'))]",
      "metadata": {
        "description": "name of the VM in subnet1 in VNet1"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "[format('{0}vm2', parameters('prefix'))]",
      "metadata": {
        "description": "name of the VM in subnet1 in VNet2"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "allowedValues": [
        "Standard_B1ls",
        "Standard_B1s",
        "Standard_D2s_v3",
        "Standard_D16s_v3"
      ],
      "metadata": {
        "description": "Size of the Virtual Machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "administrator username of the VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "administrator password of the VMs"
      }
    },
    "dnsLabelgtw1PubIP1": {
      "type": "string",
      "defaultValue": "[toLower(format('gtw1-ip1-{0}', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "dns name of public IP1 of the VPN Gateway1. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "dnsLabelgtw1PubIP2": {
      "type": "string",
      "defaultValue": "[toLower(format('gtw1-ip2-{0}', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "dns name of public IP2 of the VPN Gateway1. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "dnsLabelgtw2PubIP1": {
      "type": "string",
      "defaultValue": "[toLower(format('gtw2-ip1-{0}', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "dns name of public IP1 of the VPN Gateway2. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "dnsLabelgtw2PubIP2": {
      "type": "string",
      "defaultValue": "[toLower(format('gtw2-ip2-{0}', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "dns name of public IP2 of the VPN Gateway2. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "publicIpZone": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "metadata": {
        "description": "Availability zone for the public IP addresses."
      }
    }
  },
  "variables": {
    "gateway1subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNet1Name'), 'GatewaySubnet')]",
    "gateway2subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNet2Name'), 'GatewaySubnet')]",
    "subnet11Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNet1Name'), parameters('subnet11Name'))]",
    "subnet21Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNet2Name'), parameters('subnet21Name'))]",
    "nsg1Name": "[format('{0}nsg1', parameters('prefix'))]",
    "nsg2Name": "[format('{0}nsg2', parameters('prefix'))]",
    "nic1Name": "[format('{0}-nic', parameters('vm1Name'))]",
    "nic2Name": "[format('{0}-nic', parameters('vm2Name'))]",
    "vm1PublicIPName": "[format('{0}-pubIP', parameters('vm1Name'))]",
    "vm2PublicIPName": "[format('{0}-pubIP', parameters('vm2Name'))]",
    "imageReference": {
      "publisher": "Canonical",
      "offer": "0001-com-ubuntu-server-focal",
      "sku": "20_04-lts",
      "version": "latest"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-02-01",
      "name": "[variables('nsg1Name')]",
      "location": "[parameters('location1')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-02-01",
      "name": "[variables('nsg2Name')]",
      "location": "[parameters('location2')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-02-01",
      "name": "[parameters('vNet1Name')]",
      "location": "[parameters('location1')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet11Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet11Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
              }
            }
          },
          {
            "name": "[parameters('subnet12Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet12Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('gateway1SubnetPrefix')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-02-01",
      "name": "[parameters('vNet2Name')]",
      "location": "[parameters('location2')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNet2AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet21Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet21Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
              }
            }
          },
          {
            "name": "[parameters('subnet22Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet22Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('gateway2SubnetPrefix')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[parameters('gateway1PublicIP1Name')]",
      "location": "[parameters('location1')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelgtw1PubIP1')]"
        }
      },
      "zones": [
        "[parameters('publicIpZone')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[parameters('gateway1PublicIP2Name')]",
      "location": "[parameters('location1')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelgtw1PubIP2')]"
        }
      },
      "zones": [
        "[parameters('publicIpZone')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[parameters('gateway2PublicIP1Name')]",
      "location": "[parameters('location2')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelgtw2PubIP1')]"
        }
      },
      "zones": [
        "[parameters('publicIpZone')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[parameters('gateway2PublicIP2Name')]",
      "location": "[parameters('location2')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelgtw2PubIP2')]"
        }
      },
      "zones": [
        "[parameters('publicIpZone')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2023-02-01",
      "name": "[parameters('gateway1Name')]",
      "location": "[parameters('location1')]",
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
        "bgpSettings": {
          "asn": "[parameters('asnGtw1')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNet1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2023-02-01",
      "name": "[parameters('gateway2Name')]",
      "location": "[parameters('location2')]",
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
        "bgpSettings": {
          "asn": "[parameters('asnGtw2')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNet2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2023-02-01",
      "name": "[parameters('localGatewayName11')]",
      "location": "[parameters('location2')]",
      "properties": {
        "fqdn": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP1Name')), '2023-02-01').dnsSettings.fqdn]",
        "bgpSettings": {
          "asn": "[parameters('asnGtw1')]",
          "bgpPeeringAddress": "[first(split(reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name')), '2023-02-01').bgpSettings.bgpPeeringAddress, ','))]",
          "peerWeight": 0
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2023-02-01",
      "name": "[parameters('localGatewayName12')]",
      "location": "[parameters('location2')]",
      "properties": {
        "fqdn": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP2Name')), '2023-02-01').dnsSettings.fqdn]",
        "bgpSettings": {
          "asn": "[parameters('asnGtw1')]",
          "bgpPeeringAddress": "[last(split(reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name')), '2023-02-01').bgpSettings.bgpPeeringAddress, ','))]",
          "peerWeight": 0
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway1PublicIP2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2023-02-01",
      "name": "[parameters('localGatewayName21')]",
      "location": "[parameters('location1')]",
      "properties": {
        "fqdn": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP1Name')), '2023-02-01').dnsSettings.fqdn]",
        "bgpSettings": {
          "asn": "[parameters('asnGtw2')]",
          "bgpPeeringAddress": "[first(split(reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name')), '2023-02-01').bgpSettings.bgpPeeringAddress, ','))]",
          "peerWeight": 0
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2023-02-01",
      "name": "[parameters('localGatewayName22')]",
      "location": "[parameters('location1')]",
      "properties": {
        "fqdn": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP2Name')), '2023-02-01').dnsSettings.fqdn]",
        "bgpSettings": {
          "asn": "[parameters('asnGtw2')]",
          "bgpPeeringAddress": "[last(split(reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name')), '2023-02-01').bgpSettings.bgpPeeringAddress, ','))]",
          "peerWeight": 0
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('gateway2PublicIP2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2023-02-01",
      "name": "[parameters('connectionName11_21')]",
      "location": "[parameters('location1')]",
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name'))]",
          "properties": {}
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName21'))]",
          "properties": {}
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBgp": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName21'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2023-02-01",
      "name": "[parameters('connectionName12_22')]",
      "location": "[parameters('location1')]",
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name'))]",
          "properties": {}
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName22'))]",
          "properties": {}
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBgp": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway1Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName22'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2023-02-01",
      "name": "[parameters('connectionName21_11')]",
      "location": "[parameters('location2')]",
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name'))]",
          "properties": {}
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName11'))]",
          "properties": {}
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBgp": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName11'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2023-02-01",
      "name": "[parameters('connectionName22_12')]",
      "location": "[parameters('location2')]",
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name'))]",
          "properties": {}
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName12'))]",
          "properties": {}
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBgp": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gateway2Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName12'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[variables('vm1PublicIPName')]",
      "location": "[parameters('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[variables('vm2PublicIPName')]",
      "location": "[parameters('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-02-01",
      "name": "[variables('nic1Name')]",
      "location": "[parameters('location1')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet11Ref')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNet1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-02-01",
      "name": "[variables('nic2Name')]",
      "location": "[parameters('location2')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet21Ref')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNet2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('vm1Name')]",
      "location": "[parameters('location1')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imageReference').publisher]",
            "offer": "[variables('imageReference').offer]",
            "sku": "[variables('imageReference').sku]",
            "version": "[variables('imageReference').version]"
          },
          "osDisk": {
            "name": "[format('{0}-OSdisk', parameters('vm1Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('vm2Name')]",
      "location": "[parameters('location2')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imageReference').publisher]",
            "offer": "[variables('imageReference').offer]",
            "sku": "[variables('imageReference').sku]",
            "version": "[variables('imageReference').version]"
          },
          "osDisk": {
            "name": "[format('{0}-OSdisk', parameters('vm2Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
      ]
    }
  ]
}