{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "114097920837292991"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Private Endpoint VNet Name."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Private Endpoint Subnet Name."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "[format('apgw-{0}', uniqueString(resourceGroup().id))]"
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "[format('pip-{0}', uniqueString(resourceGroup().id))]"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "WAF_v2",
      "allowedValues": [
        "Standard_v2",
        "WAF_v2"
      ],
      "metadata": {
        "description": "Sku Name"
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "WAF_v2",
      "allowedValues": [
        "Standard_v2",
        "WAF_v2"
      ],
      "metadata": {
        "description": "Sku tier"
      }
    },
    "capacity": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "wafPolicyName": {
      "type": "string",
      "defaultValue": "[format('{0}-WafPolicy', parameters('applicationGatewayName'))]",
      "metadata": {
        "description": "Specifies the name of the WAF policy"
      }
    },
    "wafPolicyMode": {
      "type": "string",
      "defaultValue": "Prevention",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "metadata": {
        "description": "Specifies the mode of the WAF policy."
      }
    },
    "wafPolicyState": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled "
      ],
      "metadata": {
        "description": "Specifies the state of the WAF policy."
      }
    },
    "wafPolicyFileUploadLimitInMb": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "Specifies the maximum file upload size in Mb for the WAF policy."
      }
    },
    "wafPolicyMaxRequestBodySizeInKb": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "Specifies the maximum request body size in Kb for the WAF policy."
      }
    },
    "wafPolicyRequestBodyCheck": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies the whether to allow WAF to check request Body."
      }
    },
    "wafPolicyRuleSetType": {
      "type": "string",
      "defaultValue": "OWASP",
      "metadata": {
        "description": "Specifies the rule set type."
      }
    },
    "wafPolicyRuleSetVersion": {
      "type": "string",
      "defaultValue": "3.2",
      "metadata": {
        "description": "Specifies the rule set version."
      }
    },
    "backendIpAddressDefault": {
      "type": "string",
      "metadata": {
        "description": "IP Address of Default Backend Server"
      }
    },
    "backendIpAddressForPathRule1": {
      "type": "string",
      "metadata": {
        "description": "IP Address of Backend Server for Path Rule 1 match"
      }
    },
    "backendIpAddressForPathRule2": {
      "type": "string",
      "metadata": {
        "description": "IP Address of Backend Server for Path Rule 2 match"
      }
    },
    "pathMatch1": {
      "type": "string",
      "metadata": {
        "description": "Path match string for Path Rule 1"
      }
    },
    "pathMatch2": {
      "type": "string",
      "metadata": {
        "description": "Path match string for Path Rule 2"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-01-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName'))]",
      "properties": {
        "addressPrefix": "[parameters('subnetPrefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-01-01",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "condition": "[equals(parameters('skuName'), 'WAF_v2')]",
      "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
      "apiVersion": "2024-01-01",
      "name": "[parameters('wafPolicyName')]",
      "location": "[parameters('location')]",
      "properties": {
        "customRules": [
          {
            "name": "BlockMe",
            "priority": 1,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "QueryString"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "blockme"
                ]
              }
            ]
          },
          {
            "name": "BlockEvilBot",
            "priority": 2,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestHeaders",
                    "selector": "User-Agent"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "evilbot"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          }
        ],
        "policySettings": {
          "requestBodyCheck": "[parameters('wafPolicyRequestBodyCheck')]",
          "maxRequestBodySizeInKb": "[parameters('wafPolicyMaxRequestBodySizeInKb')]",
          "fileUploadLimitInMb": "[parameters('wafPolicyFileUploadLimitInMb')]",
          "mode": "[parameters('wafPolicyMode')]",
          "state": "[parameters('wafPolicyState')]"
        },
        "managedRules": {
          "managedRuleSets": [
            {
              "ruleSetType": "[parameters('wafPolicyRuleSetType')]",
              "ruleSetVersion": "[parameters('wafPolicyRuleSetVersion')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2024-01-01",
      "name": "[parameters('applicationGatewayName')]",
      "location": "[parameters('location')]",
      "properties": {
        "firewallPolicy": "[if(equals(parameters('skuName'), 'WAF_v2'), createObject('id', resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('wafPolicyName'))), null())]",
        "sku": {
          "name": "[parameters('skuName')]",
          "tier": "[parameters('skuTier')]",
          "capacity": "[parameters('capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendPublicIP",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort80",
            "properties": {
              "port": 80
            }
          },
          {
            "name": "appGatewayFrontendPort443",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPoolDefault",
            "properties": {
              "backendAddresses": [
                {
                  "ipAddress": "[parameters('backendIpAddressDefault')]"
                }
              ]
            }
          },
          {
            "name": "appGatewayBackendPool1",
            "properties": {
              "backendAddresses": [
                {
                  "ipAddress": "[parameters('backendIpAddressForPathRule1')]"
                }
              ]
            }
          },
          {
            "name": "appGatewayBackendPool2",
            "properties": {
              "backendAddresses": [
                {
                  "ipAddress": "[parameters('backendIpAddressForPathRule2')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "firewallPolicy": "[if(equals(parameters('skuName'), 'WAF_v2'), createObject('id', resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('wafPolicyName'))), null())]",
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGatewayName'), 'appGatewayFrontendPublicIP')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGatewayName'), 'appGatewayFrontendPort80')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "urlPathMaps": [
          {
            "name": "urlPathMap1",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'appGatewayBackendPoolDefault')]"
              },
              "defaultBackendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
              },
              "pathRules": [
                {
                  "name": "pathRule1",
                  "properties": {
                    "paths": [
                      "[parameters('pathMatch1')]"
                    ],
                    "backendAddressPool": {
                      "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'appGatewayBackendPool1')]"
                    },
                    "backendHttpSettings": {
                      "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
                    }
                  }
                },
                {
                  "name": "pathRule2",
                  "properties": {
                    "paths": [
                      "[parameters('pathMatch2')]"
                    ],
                    "backendAddressPool": {
                      "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'appGatewayBackendPool2')]"
                    },
                    "backendHttpSettings": {
                      "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
                    }
                  }
                }
              ]
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "rule1",
            "properties": {
              "priority": 100,
              "ruleType": "PathBasedRouting",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGatewayName'), 'appGatewayHttpListener')]"
              },
              "urlPathMap": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/urlPathMaps', parameters('applicationGatewayName'), 'urlPathMap1')]"
              }
            }
          }
        ],
        "sslPolicy": {
          "policyType": "Custom",
          "minProtocolVersion": "TLSv1_2",
          "cipherSuites": [
            "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('wafPolicyName'))]"
      ]
    }
  ]
}