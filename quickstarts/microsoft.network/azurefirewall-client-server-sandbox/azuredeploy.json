{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "9855926033020900302"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for client and server Virtual Machines."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for client and server Virtual Machines."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources, the location must support Availability Zones if required."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of client and server VMs."
      }
    },
    "routeTableName": {
      "type": "string",
      "defaultValue": "route-table"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet"
    },
    "clientVirtualMachineName": {
      "type": "string",
      "defaultValue": "client-vm"
    },
    "serverVirtualMachineName": {
      "type": "string",
      "defaultValue": "server-vm"
    },
    "firewallPublicIpName": {
      "type": "string",
      "defaultValue": "fw-pip"
    },
    "clientPublicIpName": {
      "type": "string",
      "defaultValue": "client-pip"
    },
    "serverPublicIpName": {
      "type": "string",
      "defaultValue": "server-pip"
    },
    "firewallName": {
      "type": "string",
      "defaultValue": "firewall"
    },
    "clientNetworkInterfaceName": {
      "type": "string",
      "defaultValue": "client-nic"
    },
    "serverNetworkInterfaceName": {
      "type": "string",
      "defaultValue": "server-nic"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "vnet-nsg"
    }
  },
  "variables": {
    "vnetAddressPrefix": "10.0.0.0/16",
    "serversSubnetPrefix": "10.0.2.0/24",
    "serverPrefix": "10.0.2.4/32",
    "clientPrefix": "10.0.2.5/32",
    "azureFirewallSubnetPrefix": "10.0.1.0/26",
    "firewallPrivateIP": "10.0.1.4",
    "serverPrivateIP": "10.0.2.4",
    "clientPrivateIP": "10.0.2.5"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-09-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh-allow",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[parameters('clientPublicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[parameters('firewallPublicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[parameters('serverPublicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-09-01",
      "name": "[parameters('routeTableName')]",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "to-server",
            "properties": {
              "addressPrefix": "[variables('serverPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('firewallPrivateIP')]"
            }
          },
          {
            "name": "to-client",
            "properties": {
              "addressPrefix": "[variables('clientPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('firewallPrivateIP')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-09-01",
      "name": "[parameters('clientVirtualMachineName')]",
      "location": "[parameters('location')]",
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[format('{0}-osdisk', parameters('clientVirtualMachineName'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "deleteOption": "Delete",
            "diskSizeGB": 30
          }
        },
        "osProfile": {
          "computerName": "[parameters('clientVirtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('clientNetworkInterfaceName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('clientNetworkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-09-01",
      "name": "[parameters('serverVirtualMachineName')]",
      "location": "[parameters('location')]",
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[format('{0}-osdisk', parameters('serverVirtualMachineName'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "deleteOption": "Delete",
            "diskSizeGB": 30
          }
        },
        "osProfile": {
          "computerName": "[parameters('serverVirtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('serverNetworkInterfaceName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('serverNetworkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables/routes",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', parameters('routeTableName'), 'to-client')]",
      "properties": {
        "addressPrefix": "[variables('clientPrefix')]",
        "nextHopType": "VirtualAppliance",
        "nextHopIpAddress": "[variables('firewallPrivateIP')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables/routes",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', parameters('routeTableName'), 'to-server')]",
      "properties": {
        "addressPrefix": "[variables('serverPrefix')]",
        "nextHopType": "VirtualAppliance",
        "nextHopIpAddress": "[variables('firewallPrivateIP')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2023-09-01",
      "name": "[parameters('firewallName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "AZFW_VNet",
          "tier": "Standard"
        },
        "threatIntelMode": "Alert",
        "ipConfigurations": [
          {
            "name": "fw-pip",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('firewallPublicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'AzureFirewallSubnet')]"
              }
            }
          }
        ],
        "networkRuleCollections": [
          {
            "name": "net-col",
            "properties": {
              "priority": 100,
              "action": {
                "type": "Allow"
              },
              "rules": [
                {
                  "name": "allow-all",
                  "protocols": [
                    "Any"
                  ],
                  "sourceAddresses": [
                    "*"
                  ],
                  "destinationAddresses": [
                    "*"
                  ],
                  "destinationPorts": [
                    "*"
                  ]
                }
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('firewallPublicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'AzureFirewallSubnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('clientNetworkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('clientPrivateIP')]",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('clientPublicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'ServerSubnet')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('clientPublicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'ServerSubnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "[variables('azureFirewallSubnetPrefix')]"
            }
          },
          {
            "name": "ServerSubnet",
            "properties": {
              "addressPrefix": "[variables('serversSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              },
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), 'AzureFirewallSubnet')]",
      "properties": {
        "addressPrefix": "[variables('azureFirewallSubnetPrefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('serverNetworkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('serverPrivateIP')]",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('serverPublicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'ServerSubnet')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('serverPublicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'ServerSubnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), 'ServerSubnet')]",
      "properties": {
        "addressPrefix": "[variables('serversSubnetPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        },
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    }
  ]
}