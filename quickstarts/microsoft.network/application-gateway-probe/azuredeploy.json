{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large"
      ],
      "defaultValue": "Standard_Medium",
      "metadata": {
        "description": "application gateway size"
      }
    },
    "capacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "backend1": {
      "type": "string",
      "metadata": {
        "description": "Backend 1"
      }
    },
    "probeEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Probe Enabled"
      }
    },
    "healthyStatusCodes": {
      "type": "string",
      "metadata": {
        "description": "Status codes for which the backend is healthy."
      }
    },
    "probeProtocol": {
      "type": "string",
      "allowedValues": [
        "http",
        "https"
      ],
      "defaultValue": "http",
      "metadata": {
        "description": "Probe protocol to use."
      }
    },
    "probeHost": {
      "type": "string",
      "metadata": {
        "description": "Host header to send to the backend."
      }
    },
    "probePath": {
      "type": "string",
      "metadata": {
        "description": "Path invoked on the backend."
      }
    },
    "probeIntervalInSeconds": {
      "type": "int",
      "metadata": {
        "description": "Interval between probes in seconds."
      }
    },
    "probeTimeoutInSeconds": {
      "type": "int",
      "metadata": {
        "description": "Timeout of a probe request in seconds."
      }
    },
    "probeUnhealthyThreshold": {
      "type": "int",
      "metadata": {
        "description": "Maximum number of probe attempts until a backend is marked unhealthy."
      }
    },
    "probePickHostNameFromBackendHttpSettings": {
      "type": "bool",
      "metadata": {
        "description": "If set to true the host will be taken from the BackendHttpSettings or the backend address if BackendHttpSettings does not specify a custom host header."
      }
    },
    "probeMinServersAvailable": {
      "type": "int",
      "metadata": {
        "description": "Minimum number of servers that are kept in healthy state regardless of probe results."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "applicationGatewayName": "applicationGateway1",
    "publicIPAddressName": "publicIp1",
    "virtualNetworkName": "virtualNetwork1",
    "subnetName": "appGatewaySubnet"
  },
  "resources": [
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-06-01",
      "name": "[variables('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('applicationGatewaySize')]",
          "tier": "Standard",
          "capacity": "[parameters('capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "[parameters('backend1')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled",
              "ProbeEnabled": "[parameters('probeEnabled')]",
              "Probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes',variables('applicationGatewayName'), 'Probe1')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations',variables('applicationGatewayName'), 'appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts',variables('applicationGatewayName'), 'appGatewayFrontendPort')]"
              },
              "Protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners',variables('applicationGatewayName'), 'appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools',variables('applicationGatewayName'), 'appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection',variables('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "probes": [
          {
            "Name": "Probe1",
            "properties": {
              "Protocol": "[parameters('probeProtocol')]",
              "Path": "[parameters('probePath')]",
              "Host": "[parameters('probeHost')]",
              "Interval": "[parameters('probeIntervalInSeconds')]",
              "Timeout": "[parameters('probeTimeoutInSeconds')]",
              "UnhealthyThreshold": "[parameters('probeUnhealthyThreshold')]",
              "MinServers": "[parameters('probeMinServersAvailable')]",
              "Match": {
                "StatusCodes": [
                  "[parameters('healthyStatusCodes')]"
                ]
              },
              "PickHostNameFromBackendHttpSettings": "[parameters('probePickHostNameFromBackendHttpSettings')]"
            }
          }
        ]
      }
    }
  ]
}
