{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vWANname": {
            "type": "String",
            "defaultValue": "VWAN",
            "metadata": {
                "description": "Azure Virtual WAN Name"
            }
        },
        "hub1_location": {
            "type": "String",
            "metadata": {
                "description": "Azure Region for the first Hub"
            }
        },
        "hub2_location": {
            "type": "String",
            "metadata": {
                "description": "Azure Region for the second Hub"
            }
        },
        "Hub1_S2SvpnGatewayScaleUnit": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 20,
            "metadata": {
                "description": "Scale Units for Site-to-Site (S2S) VPN Gateway in the first Hub"
            }
        },
        "Hub2_S2SvpnGatewayScaleUnit": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 20,
            "metadata": {
                "description": "Scale Units for Site-to-Site (S2S) VPN Gateway in the second Hub"
            }
        },
        "Hub1_ExpressRouteGatewayScaleUnit": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "Scale Units for Express Route Gateway in the first Hub"
            }
        },
        "Hub2_ExpressRouteGatewayScaleUnit": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "Scale Units for Express Route Gateway in the second Hub"
            }
        },
        "Hub1_P2SvpnGatewayScaleUnit": {
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 200,
            "type": "Int",
            "metadata": {
                "description": "Scale Units for Point-to-Site (P2S) VPN Gateway in the first Hub"
            }
        },
        "Hub2_P2SvpnGatewayScaleUnit": {
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 200,
            "type": "Int",
            "metadata": {
                "description": "Scale Units for Point-to-Site (P2S) VPN Gateway in the second Hub"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "vmAdminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "OSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter",
                "2019-Datacenter-Core",
                "2019-Datacenter-Core-smalldisk",
                "2019-Datacenter-Core-with-Containers",
                "2019-Datacenter-Core-with-Containers-smalldisk",
                "2019-Datacenter-smalldisk",
                "2019-Datacenter-with-Containers",
                "2019-Datacenter-with-Containers-smalldisk"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "VMVWAN",
            "metadata": {
                "description": "Name of the virtual machine."
            }
        },
        "aadTenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]",
            "metadata": {
                "description": "Azure Active Directory Tenant Id"
            }
        }
    },
    "variables": {
        "vwan_cfg": {
            "type": "Standard"
        },
        "virtual_hub1_cfg": {
            "name": "VHUB1",
            "addressSpacePrefix": "192.168.0.0/24",
            "Hub1_P2SvpnClientAddressPoolPrefix": "10.4.3.0/24",
            "firewallName": "AFW-VHUB1"
        },
        "virtual_hub2_cfg": {
            "name": "VHUB2",
            "addressSpacePrefix": "192.168.1.0/24",
            "Hub2_P2SvpnClientAddressPoolPrefix": "10.5.3.0/24",
            "firewallName": "AFW-VHUB2"
        },
        "vnet1_cfg": {
            "name": "VNET1",
            "addressSpacePrefix": "10.1.0.0/24",
            "subnetName": "SUBNET1",
            "subnetPrefix": "10.1.0.0/24",
            "nsgname": "NSG-VNET1-SUBNET1"
        },
        "vnet2_cfg": {
            "name": "VNET2",
            "addressSpacePrefix": "10.1.1.0/24",
            "subnetName": "SUBNET1",
            "subnetPrefix": "10.1.1.0/24",
            "nsgname": "NSG-VNET2-SUBNET1"
        },
        "vnet3_cfg": {
            "name": "VNET3",
            "addressSpacePrefix": "10.2.0.0/24",
            "subnetName": "SUBNET1",
            "subnetPrefix": "10.2.0.0/24",
            "nsgname": "NSG-VNET3-SUBNET1"
        },
        "vnet4_cfg": {
            "name": "VNET4",
            "addressSpacePrefix": "10.2.1.0/24",
            "subnetName": "SUBNET1",
            "subnetPrefix": "10.2.1.0/24",
            "nsgname": "NSG-VNET4-SUBNET1"
        },
        "vm1Name": "[concat(parameters('vmNamePrefix'), '1')]",
        "vm2Name": "[concat(parameters('vmNamePrefix'), '2')]",
        "vm3Name": "[concat(parameters('vmNamePrefix'), '3')]",
        "vm4Name": "[concat(parameters('vmNamePrefix'), '4')]",
        "nic1Name": "[concat(variables('vm1Name'), '-NIC')]",
        "nic2Name": "[concat(variables('vm2Name'), '-NIC')]",
        "nic3Name": "[concat(variables('vm3Name'), '-NIC')]",
        "nic4Name": "[concat(variables('vm4Name'), '-NIC')]",
        "aadIssuer": "[concat('https://sts.windows.net/', parameters('aadTenantId'), '/')]",
        "aadTenant": "[concat(environment().authentication.loginEndpoint, parameters('aadTenantId'), '/')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualWans",
            "apiversion": "2021-03-01",
            "name": "[parameters('vWANname')]",
            "location": "[parameters('hub1_location')]",
            "properties": {
                "allowVnetToVnetTraffic": true,
                "allowBranchToBranchTraffic": true,
                "type": "[variables('vwan_cfg').type]"
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs",
            "apiversion": "2021-03-01",
            "name": "[variables('virtual_hub1_cfg').name]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans', parameters('vWANname'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('virtual_hub1_cfg').addressSpacePrefix]",
                "virtualWan": {
                    "id": "[resourceId('Microsoft.Network/virtualWans', parameters('vWANname'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs",
            "apiversion": "2021-03-01",
            "name": "[variables('virtual_hub2_cfg').name]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans', parameters('vWANname'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('virtual_hub2_cfg').addressSpacePrefix]",
                "virtualWan": {
                    "id": "[resourceId('Microsoft.Network/virtualWans', parameters('vWANname'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiversion": "2021-03-01",
            "name": "Default",
            "location": "[parameters('hub1_location')]",
            "properties": {
                "sku": {
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "intrusionDetection": {
                    "mode": "Off"
                }
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiversion": "2021-03-01",
            "name": "Default/DefaultNetworkRuleCollectionGroup",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', 'Default')]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "Allow-Azure-KMS",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "*"
                                ],
                                "destinationAddresses": [
                                    "23.102.135.246"
                                ],
                                "destinationPorts": [
                                    "1688"
                                ]
                            },
                            {
                                "ruleType": "NetworkRule",
                                "name": "Allow-RDP",
                                "ipProtocols": [
                                    "TCP",
                                    "UDP"
                                ],
                                "sourceAddresses": [
                                    "10.4.3.0/24",
                                    "10.5.3.0/24"
                                ],
                                "destinationAddresses": [
                                    "10.1.0.4/24",
                                    "10.1.1.0/24",
                                    "10.2.0.0/24",
                                    "10.2.1.0/24"
                                ],
                                "destinationPorts": [
                                    "3389"
                                ]
                            }
                        ],
                        "name": "Net-Coll01",
                        "priority": 200
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiversion": "2021-03-01",
            "name": "Default/DefaultApplicationRuleCollectionGroup",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'Default', 'DefaultNetworkRuleCollectionGroup')]"
            ],
            "properties": {
                "priority": 300,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "Allow-FQDN-Tags",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [
                                    "AzureBackup",
                                    "MicrosoftActiveProtectionService",
                                    "WindowsDiagnostics",
                                    "WindowsUpdate",
                                    "AppServiceEnvironment",
                                    "AzureKubernetesService",
                                    "HDInsight",
                                    "WindowsVirtualDesktop"
                                ],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "*"
                                ]
                            },
                            {
                                "ruleType": "ApplicationRule",
                                "name": "Allow-Microsoft",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "targetFqdns": [
                                    "*.microsoft.com"
                                ],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "*"
                                ]
                            }
                        ],
                        "name": "App-Coll01",
                        "priority": 200
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiversion": "2021-03-01",
            "name": "[variables('virtual_hub1_cfg').firewallName]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'Default', 'DefaultApplicationRuleCollectionGroup')]",
                "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub1_cfg').name)]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_Hub",
                    "tier": "Premium"
                },
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub1_cfg').name)]"
                },
                "hubIPAddresses": {
                    "publicIPs": {
                        "count": 1
                    }
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', 'Default')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiversion": "2021-03-01",
            "name": "[variables('virtual_hub2_cfg').firewallName]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'Default', 'DefaultApplicationRuleCollectionGroup')]",
                "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub2_cfg').name)]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_Hub",
                    "tier": "Premium"
                },
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub2_cfg').name)]"
                },
                "hubIPAddresses": {
                    "publicIPs": {
                        "count": 1
                    }
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', 'Default')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "apiversion": "2021-03-01",
            "name": "[concat(variables('virtual_hub1_cfg').name, '/defaultRouteTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub1_cfg').name)]",
                "[resourceId('Microsoft.Network/azureFirewalls', variables('virtual_hub1_cfg').firewallName)]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "all_traffic",
                        "destinationType": "CIDR",
                        "destinations": [
                            "0.0.0.0/0",
                            "10.0.0.0/8",
                            "172.16.0.0/12",
                            "192.168.0.0/16"
                        ],
                        "nextHopType": "ResourceId",
                        "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', variables('virtual_hub1_cfg').firewallName)]"
                    }
                ],
                "labels": [
                    "default"
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "apiversion": "2021-03-01",
            "name": "[concat(variables('virtual_hub1_cfg').name, '/noneRouteTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
            ],
            "properties": {
                "labels": [
                    "none"
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "apiversion": "2021-03-01",
            "name": "[concat(variables('virtual_hub2_cfg').name, '/defaultRouteTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub2_cfg').name)]",
                "[resourceId('Microsoft.Network/azureFirewalls', variables('virtual_hub2_cfg').firewallName)]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "all_traffic",
                        "destinationType": "CIDR",
                        "destinations": [
                            "0.0.0.0/0",
                            "10.0.0.0/8",
                            "172.16.0.0/12",
                            "192.168.0.0/16"
                        ],
                        "nextHopType": "ResourceId",
                        "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', variables('virtual_hub2_cfg').firewallName)]"
                    }
                ],
                "labels": [
                    "default"
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "apiversion": "2021-03-01",
            "name": "[concat(variables('virtual_hub2_cfg').name, '/noneRouteTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
            ],
            "properties": {
                "labels": [
                    "none"
                ]
            }
        },
        {
            "type": "Microsoft.Network/vpnGateways",
            "name": "[format('{0}_S2SvpnGW', variables('virtual_hub1_cfg').name)]",
            "apiversion": "2021-03-01",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'noneRouteTable')]"
            ],
            "properties": {
                "vpnGatewayScaleUnit": "[parameters('Hub1_S2SvpnGatewayScaleUnit')]",
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub1_cfg').name)]"
                },
                "bgpSettings": {
                    "asn": 65515
                }
            }
        },
        {
            "type": "Microsoft.Network/vpnGateways",
            "name": "[format('{0}_S2SvpnGW', variables('virtual_hub2_cfg').name)]",
            "apiversion": "2021-03-01",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'noneRouteTable')]"
            ],
            "properties": {
                "vpnGatewayScaleUnit": "[parameters('Hub2_S2SvpnGatewayScaleUnit')]",
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub2_cfg').name)]"
                },
                "bgpSettings": {
                    "asn": 65515
                }
            }
        },
        {
            "type": "Microsoft.Network/expressRouteGateways",
            "apiversion": "2021-03-01",
            "name": "[format('{0}_ERGW', variables('virtual_hub1_cfg').name)]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/vpnGateways', format('{0}_S2SvpnGW', variables('virtual_hub1_cfg').name))]"
            ],
            "properties": {
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub1_cfg').name)]"
                },
                "autoScaleConfiguration": {
                    "bounds": {
                        "min": "[parameters('Hub1_ExpressRouteGatewayScaleUnit')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/expressRouteGateways",
            "apiversion": "2021-03-01",
            "name": "[format('{0}_ERGW', variables('virtual_hub2_cfg').name)]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/vpnGateways', format('{0}_S2SvpnGW', variables('virtual_hub2_cfg').name))]"
            ],
            "properties": {
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub2_cfg').name)]"
                },
                "autoScaleConfiguration": {
                    "bounds": {
                        "min": "[parameters('Hub2_ExpressRouteGatewayScaleUnit')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/vpnServerConfigurations",
            "apiversion": "2021-03-01",
            "name": "[format('{0}_P2SvpnServerConfiguration', parameters('vWANname'))]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans', parameters('vWANname'))]"
            ],
            "properties": {
                "aadAuthenticationParameters": {
                    "aadAudience": "41b23e61-6c1e-4545-b367-cd054e0ed4b4",
                    "aadIssuer": "[variables('aadIssuer')]",
                    "aadTenant": "[variables('aadTenant')]"
                },
                "vpnProtocols": [
                    "OpenVPN"
                ],
                "vpnAuthenticationTypes": [
                    "AAD"
                ]
            }
        },
        {
            "type": "Microsoft.Network/p2sVpnGateways",
            "apiversion": "2021-03-01",
            "name": "[format('{0}_P2Sgateway', variables('virtual_hub1_cfg').name)]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/vpnServerConfigurations', format('{0}_P2SvpnServerConfiguration', parameters('vWANname')))]",
                "[resourceId('Microsoft.Network/expressRouteGateways', format('{0}_ERGW', variables('virtual_hub1_cfg').name))]"
            ],
            "properties": {
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub1_cfg').name)]"
                },
                "vpnServerConfiguration": {
                    "id": "[resourceId('Microsoft.Network/vpnServerConfigurations', format('{0}_P2SvpnServerConfiguration', parameters('vWANname')))]"
                },
                "p2SConnectionConfigurations": [
                    {
                        "name": "Hub1_P2SConnectionConfigDefault",
                        "properties": {
                            "enableInternetSecurity": true,
                            "routingConfiguration": {
                                "associatedRouteTable": {
                                    "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
                                },
                                "propagatedRouteTables": {
                                    "labels": [
                                        "default"
                                    ],
                                    "ids": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
                                        }
                                    ]
                                }
                            },
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    "[variables('virtual_hub1_cfg').Hub1_P2SvpnClientAddressPoolPrefix]"
                                ]
                            }
                        }
                    }
                ],
                "vpnGatewayScaleUnit": "[parameters('Hub1_P2SvpnGatewayScaleUnit')]"
            }
        },
        {
            "type": "Microsoft.Network/p2sVpnGateways",
            "apiversion": "2021-03-01",
            "name": "[format('{0}_P2Sgateway', variables('virtual_hub2_cfg').name)]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/vpnServerConfigurations', format('{0}_P2SvpnServerConfiguration', parameters('vWANname')))]",
                "[resourceId('Microsoft.Network/expressRouteGateways', format('{0}_ERGW', variables('virtual_hub2_cfg').name))]"
            ],
            "properties": {
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('virtual_hub2_cfg').name)]"
                },
                "vpnServerConfiguration": {
                    "id": "[resourceId('Microsoft.Network/vpnServerConfigurations', format('{0}_P2SvpnServerConfiguration', parameters('vWANname')))]"
                },
                "p2SConnectionConfigurations": [
                    {
                        "name": "Hub2_P2SConnectionConfigDefault",
                        "properties": {
                            "enableInternetSecurity": true,
                            "routingConfiguration": {
                                "associatedRouteTable": {
                                    "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
                                },
                                "propagatedRouteTables": {
                                    "labels": [
                                        "default"
                                    ],
                                    "ids": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
                                        }
                                    ]
                                }
                            },
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    "[variables('virtual_hub2_cfg').Hub2_P2SvpnClientAddressPoolPrefix]"
                                ]
                            }
                        }
                    }
                ],
                "vpnGatewayScaleUnit": "[parameters('Hub2_P2SvpnGatewayScaleUnit')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet1_cfg').nsgname]",
            "location": "[parameters('hub1_location')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet2_cfg').nsgname]",
            "location": "[parameters('hub1_location')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet3_cfg').nsgname]",
            "location": "[parameters('hub2_location')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet4_cfg').nsgname]",
            "location": "[parameters('hub2_location')]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet1_cfg').name]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet1_cfg').nsgname)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1_cfg').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1_cfg').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1_cfg').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet1_cfg').nsgname)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet2_cfg').name]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet2_cfg').nsgname)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2_cfg').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet2_cfg').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2_cfg').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet2_cfg').nsgname)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet3_cfg').name]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet3_cfg').nsgname)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet3_cfg').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet3_cfg').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet3_cfg').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet3_cfg').nsgname)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiversion": "2021-03-01",
            "name": "[variables('vnet4_cfg').name]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet4_cfg').nsgname)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet4_cfg').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet4_cfg').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet4_cfg').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet4_cfg').nsgname)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
            "apiversion": "2021-03-01",
            "name": "[format('{0}/{1}_connection', variables('virtual_hub1_cfg').name, variables('vnet1_cfg').name)]",
            "dependsOn": [
                "[resourceid('Microsoft.Network/p2sVpnGateways', format('{0}_P2Sgateway', variables('virtual_hub1_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1_cfg').name)]"
            ],
            "properties": {
                "routingConfiguration": {
                    "associatedRouteTable": {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
                    },
                    "propagatedRouteTables": {
                        "labels": [
                            "default"
                        ],
                        "ids": [
                            {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
                            }
                        ]
                    }
                },
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1_cfg').name)]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
            "apiversion": "2021-03-01",
            "name": "[format('{0}/{1}_connection', variables('virtual_hub1_cfg').name, variables('vnet2_cfg').name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('virtual_hub1_cfg').name, format('{0}_connection', variables('vnet1_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2_cfg').name)]"
            ],
            "properties": {
                "routingConfiguration": {
                    "associatedRouteTable": {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
                    },
                    "propagatedRouteTables": {
                        "labels": [
                            "default"
                        ],
                        "ids": [
                            {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub1_cfg').name,'defaultRouteTable')]"
                            }
                        ]
                    }
                },
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2_cfg').name)]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
            "apiversion": "2021-03-01",
            "name": "[format('{0}/{1}_connection', variables('virtual_hub2_cfg').name, variables('vnet3_cfg').name)]",
            "dependsOn": [
                "[resourceid('Microsoft.Network/p2sVpnGateways', format('{0}_P2Sgateway', variables('virtual_hub2_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet3_cfg').name)]"
            ],
            "properties": {
                "routingConfiguration": {
                    "associatedRouteTable": {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
                    },
                    "propagatedRouteTables": {
                        "labels": [
                            "default"
                        ],
                        "ids": [
                            {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
                            }
                        ]
                    }
                },
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet3_cfg').name)]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
            "apiversion": "2021-03-01",
            "name": "[format('{0}/{1}_connection', variables('virtual_hub2_cfg').name, variables('vnet4_cfg').name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('virtual_hub2_cfg').name, format('{0}_connection', variables('vnet3_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet4_cfg').name)]"
            ],
            "properties": {
                "routingConfiguration": {
                    "associatedRouteTable": {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
                    },
                    "propagatedRouteTables": {
                        "labels": [
                            "default"
                        ],
                        "ids": [
                            {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('virtual_hub2_cfg').name,'defaultRouteTable')]"
                            }
                        ]
                    }
                },
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet4_cfg').name)]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiversion": "2021-03-01",
            "name": "[variables('nic1Name')]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('virtual_hub1_cfg').name, format('{0}_connection', variables('vnet1_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1_cfg').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet1_cfg').name, variables('vnet1_cfg').subnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('vm1Name')]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm1Name')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "name": "[concat(variables('vm1Name'), '-OSDISK')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiversion": "2021-03-01",
            "name": "[variables('nic2Name')]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('virtual_hub1_cfg').name, format('{0}_connection', variables('vnet2_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2_cfg').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet2_cfg').name, variables('vnet2_cfg').subnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('vm2Name')]",
            "location": "[parameters('hub1_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm2Name')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "name": "[concat(variables('vm2Name'), '-OSDISK')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiversion": "2021-03-01",
            "name": "[variables('nic3Name')]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('virtual_hub2_cfg').name, format('{0}_connection', variables('vnet3_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet3_cfg').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet3_cfg').name, variables('vnet3_cfg').subnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('vm3Name')]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3Name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm3Name')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "name": "[concat(variables('vm3Name'), '-OSDISK')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3Name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiversion": "2021-03-01",
            "name": "[variables('nic4Name')]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('virtual_hub2_cfg').name, format('{0}_connection', variables('vnet4_cfg').name))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet4_cfg').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet4_cfg').name, variables('vnet4_cfg').subnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('vm4Name')]",
            "location": "[parameters('hub2_location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic4Name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm4Name')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "name": "[concat(variables('vm4Name'), '-OSDISK')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic4Name'))]"
                        }
                    ]
                }
            }
        }
    ]
}