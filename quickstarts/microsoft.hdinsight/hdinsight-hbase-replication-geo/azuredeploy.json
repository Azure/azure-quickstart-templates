{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix of the HDInsight cluster name."
      }
    },
    "sshUserName": {
      "type": "string",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },

    "Vnet1Region": {
      "type": "string",
      "metadata": {
        "description": "Region for the first vNet."
      }
    },
    "Vnet2Region": {
      "type": "string",
      "metadata": {
        "description": "Region for the second vNet. This should be in another Azure region from the first vNet."
      }
    }, 
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
      "UnbuntuNodeVirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "This is the Unbuntu DNS node Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
      }
    }
  },
  "variables": {
    "Ubuntu": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04.0-LTS",
      "version": "latest"
    },
    "vNet1": {
      "name": "[concat(parameters('clusterNamePrefix'),'-vnet1')]",
      "location": "[parameters('Vnet1Region')]",
      "addressSpacePrefix": "10.1.0.0/16",
      "subnetName": "subnet1",
      "subnetPrefix": "10.1.0.0/24",
      "gatewaySubnetName": "GatewaySubnet",
      "gatewaySubnetPrefix": "10.1.255.0/27",
      "vpnGatewayName": "vnet1gw",
      "vpnGatewayIP": "vnet1gwip",
      "dnsName": "vnet1DNS",
      "dnsNICName": "vnet1DNSNIC",
      "dnsIPName": "vnet1DNSPublicIP",
      "dnsIPAddress": "10.1.0.4"
    },
    "vNet2": {
      "name": "[concat(parameters('clusterNamePrefix'),'-vnet2')]",
      "location": "[parameters('Vnet2Region')]",
      "addressSpacePrefix": "10.2.0.0/16",
      "subnetName": "subnet1",
      "subnetPrefix": "10.2.0.0/24",
      "gatewaySubnetName": "GatewaySubnet",
      "gatewaySubnetPrefix": "10.2.255.0/27",
      "vpnGatewayName": "vnet2gw",
      "vpnGatewayIP": "vnet2gwip",
      "dnsName": "vnet2DNS",
      "dnsNICName": "vnet2DNSNIC",
      "dnsIPName": "vnet2DNSPublicIP",
      "dnsIPAddress": "10.2.0.4"
    },
    "vpnConnections": {
      "name1": "vnet1tovnet2",
      "name2": "vnet2tovnet1",
      "sharedKey": "A1b2C3D4"
    },
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('sshUserName'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "networkSecurityGroupName": "vNet1-subnet1-nsg",
    "networkSecurityGroupName2": "vNet2-subnet1-nsg"
  },
  "resources": [
    {
      "comments": "Simple Network Security Group for subnet [variables('vNet1').subnetName]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-04-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('vNet1').location]",
      "properties": {}
    },
    {
      "comments": "Simple Network Security Group for subnet [variables('vNet2').subnetName]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-04-01",
      "name": "[variables('networkSecurityGroupName2')]",
      "location": "[variables('vNet2').location]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet1').name]",
      "apiVersion": "2020-04-01",
      "location": "[variables('vNet1').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet1').addressSpacePrefix]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": [
            "[variables('vNet1').dnsIPAddress]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNet1').subnetName]",
            "properties": {
              "addressPrefix": "[variables('vNet1').subnetPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          },
          {
            "name": "[variables('vNet1').gatewaySubnetName]",
            "properties": {
              "addressPrefix": "[variables('vNet1').gatewaySubnetPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vNet1').vpnGatewayIP]",
      "location": "[variables('vNet1').location]",
      "apiVersion": "2020-04-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('vNet1').vpnGatewayName]",
      "location": "[variables('vNet1').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet1').vpnGatewayIP)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1').name)]"
      ],
      "apiVersion": "2020-04-01",
      "properties": {
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "sku": {
          "name": "Basic",
          "tier": "Basic"
        },
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet1').name, variables('vNet1').gatewaySubnetName)]"
              },
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet1').vpnGatewayIP)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet2').name]",
      "apiVersion": "2020-04-01",
      "location": "[variables('vNet2').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet2').addressSpacePrefix]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": [
            "[variables('vNet2').dnsIPAddress]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNet2').subnetName]",
            "properties": {
              "addressPrefix": "[variables('vNet2').subnetPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
              }
            }
          },
          {
            "name": "[variables('vNet2').gatewaySubnetName]",
            "properties": {
              "addressPrefix": "[variables('vNet2').gatewaySubnetPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vNet2').vpnGatewayIP]",
      "location": "[variables('vNet2').location]",
      "apiVersion": "2020-04-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('vNet2').vpnGatewayName]",
      "location": "[variables('vNet2').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet2').vpnGatewayIP)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2').name)]"
      ],
      "apiVersion": "2020-04-01",
      "properties": {
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "sku": {
          "name": "Basic",
          "tier": "Basic"
        },
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet2').name, variables('vNet2').gatewaySubnetName)]"
              },
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet2').vpnGatewayIP)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('vpnConnections').name1]",
      "apiVersion": "2020-04-01",
      "location": "[variables('vNet1').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet1').vpnGatewayName)]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet2').vpnGatewayName)]"
      ],
      "properties": {
        "connectionType": "Vnet2Vnet",
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet1').vpnGatewayName)]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet2').vpnGatewayName)]"
        },
        "sharedKey": "[variables('vpnConnections').sharedKey]",
        "routingWeight": 0,
        "enableBgp": false,
        "usePolicyBasedTrafficSelectors": false
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('vpnConnections').name2]",
      "apiVersion": "2020-04-01",
      "location": "[variables('vNet2').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet2').vpnGatewayName)]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet1').vpnGatewayName)]"
      ],
      "properties": {
        "connectionType": "Vnet2Vnet",
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet2').vpnGatewayName)]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet1').vpnGatewayName)]"
        },
        "sharedKey": "[variables('vpnConnections').sharedKey]",
        "routingWeight": 0,
        "enableBgp": false,
        "usePolicyBasedTrafficSelectors": false
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vNet1').dnsIPName]",
      "location": "[variables('vNet1').location]",
      "apiVersion": "2020-04-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vNet1').dnsNICName]",
      "apiVersion": "2020-04-01",
      "location": "[variables('vNet1').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1').name)]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet1').dnsIPName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vNet1').dnsIPName)]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet1').name, variables('vNet1').subnetName)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vNet1').dnsName]",
      "apiVersion": "2019-12-01",
      "location": "[variables('vNet1').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vNet1').dnsNICName)]"
      ],
      "properties": {
        "hardwareProfile": {
        "vmSize": "[parameters('UnbuntuNodeVirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vNet1').dnsName]",
          "adminUsername": "[parameters('sshUserName')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": "[variables('ubuntu')]",
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vNet1').dnsNICName)]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vNet2').dnsIPName]",
      "location": "[variables('vNet2').location]",
      "apiVersion": "2020-04-01",
      "properties": {
      "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vNet2').dnsNICName]",
      "apiVersion": "2020-04-01",
      "location": "[variables('vNet2').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet2').name)]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet2').dnsIPName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vNet2').dnsIPName)]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet2').name, variables('vNet2').subnetName)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vNet2').dnsName]",
      "apiVersion": "2019-12-01",
      "location": "[variables('vNet2').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vNet2').dnsNICName)]"
      ],
      "properties": {
      "hardwareProfile": {
      "vmSize": "[parameters('UnbuntuNodeVirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vNet2').dnsName]",
          "adminUsername": "[parameters('sshUserName')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": "[variables('ubuntu')]",
          "osDisk": {
          "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vNet2').dnsNICName)]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "vnet1": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks',variables('vNet1').name))]"
    },
    "vnet2": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks',variables('vNet2').name))]"
    }
  }
}
