{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "defaultValue": "[concat('hdi-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the cluster to create."
      }
    },
    "clusterVersion": {
      "type": "string",
      "defaultValue": "4.0",
      "metadata": {
        "description": "The HDInsight version to deploy."
      }
    },
    "headNodeVirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_E8_v3",
      "allowedValues": [
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E20_v3",
        "Standard_E32_v3",
        "Standard_E48_v3"
      ],
      "metadata": {
        "description": "This is the headnode Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
      }
    },
    "workerNodeVirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_E8_v3",
      "allowedValues": [
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E20_v3",
        "Standard_E32_v3",
        "Standard_E48_v3"
      ],
      "metadata": {
        "description": "This is the workernode Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
      }
    },
    "workerNodeCount": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "The number of worker nodes in the cluster."
      }
    },
    "clusterLoginUserName": {
      "type": "string",
      "metadata": {
        "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "minLength": 10,
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one upper case letter, one lower case letter, and one non-alphanumeric character except (single-quote, double-quote, backslash, right-bracket, full-stop). Also, the password must not contain 3 consecutive characters from the cluster username or SSH username."
      }
    },
    "sshUserName": {
      "type": "string",
      "minLength": 2,
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster. The sshUserName can only consit of digits, upper or lowercase letters, and/or the following special characters (%&'^_`{}~). Also, it cannot be the same as the cluster login username or a reserved word"
      }
    },
    "sshPassword": {
      "type": "securestring",
      "maxLength": 72,
      "minLength": 6,
      "metadata": {
        "description": "SSH password must be 6-72 characters long and must contain at least one digit, one upper case letter, and one lower case letter.  It must not contain any 3 consecutive characters from the cluster login name"
      }
    },
    "existingClusterStorageResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The resource group name of the storage account to use as the cluster's default storage."
      }
    },
    "existingClusterStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account to use as the cluster's default storage."
      }
    },
    "newOrExistingClusterStorageContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage container to use."
      }
    },
    "existingHiveMetastoreServerResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group name where the existing metastore SQL server is located."
      }
    },
    "existingHiveMetastoreServerName": {
      "type": "string",
      "metadata": {
        "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Hive metastore."
      }
    },
    "existingHiveMetastoreDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "The external Hive metastore's existing SQL database."
      }
    },
    "existingHiveMetastoreUsername": {
      "type": "string",
      "metadata": {
        "description": "The external Hive metastore's existing SQL server admin username."
      }
    },
    "existingHiveMetastorePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The external Hive metastore's existing SQL server admin password."
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The existing virtual network resource group name."
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The existing virtual network name."
      }
    },
    "existingVirtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The existing virtual network subnet name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('clusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[parameters('location')]",
      "apiVersion": "2021-06-01",
      "properties": {
        "clusterVersion": "[parameters('clusterVersion')]",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "hadoop",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            },
            "hive-site": {
              "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
              "javax.jdo.option.ConnectionURL": "[concat('jdbc:sqlserver://', reference(resourceId(parameters('existingHiveMetastoreServerResourceGroupName'), 'Microsoft.Sql/servers',parameters('existingHiveMetastoreServerName')), '2021-02-01-preview').fullyQualifiedDomainName, ';database=',parameters('existingHiveMetastoreDatabaseName'),';encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300')]",
              "javax.jdo.option.ConnectionUserName": "[parameters('existingHiveMetastoreUsername')]",
              "javax.jdo.option.ConnectionPassword": "[parameters('existingHiveMetastorePassword')]"
            },
            "hive-env": {
              "hive_database": "Existing MSSQL Server database with SQL authentication",
              "hive_database_name": "[parameters('existingHiveMetastoreDatabaseName')]",
              "hive_database_type": "mssql",
              "hive_existing_mssql_server_database": "[parameters('existingHiveMetastoreDatabaseName')]",
              "hive_existing_mssql_server_host": "[reference(resourceId(parameters('existingHiveMetastoreServerResourceGroupName'),'Microsoft.Sql/servers',parameters('existingHiveMetastoreServerName')), '2021-02-01-preview').fullyQualifiedDomainName]",
              "hive_hostname": "[reference(resourceId(parameters('existingHiveMetastoreServerResourceGroupName'),'Microsoft.Sql/servers',parameters('existingHiveMetastoreServerName')), '2021-02-01-preview').fullyQualifiedDomainName]"

            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[replace(replace(concat(reference(resourceId(parameters('existingClusterStorageResourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('existingClusterStorageAccountName')), '2021-04-01').primaryEndpoints.blob),'https:',''),'/','')]",
              "isDefault": true,
              "container": "[parameters('newOrExistingClusterStorageContainerName')]",
              "key": "[listKeys(resourceId(parameters('existingClusterStorageResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('existingClusterStorageAccountName')), '2021-04-01').keys[0].value]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "[parameters('headNodeVirtualMachineSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
                "subnet": "[concat(resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName')), '/subnets/', parameters('existingVirtualNetworkSubnetName'))]"
              }
            },
            {
              "name": "workernode",
              "targetInstanceCount": "[parameters('workerNodeCount')]",
              "hardwareProfile": {
                "vmSize": "[parameters('workerNodeVirtualMachineSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
                "subnet": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('existingVirtualNetworkSubnetName'))]"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "cluster": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('clusterName')))]"
    }
  }
}

