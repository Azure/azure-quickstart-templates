{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentMode": {
      "defaultValue": "Validate",
      "type": "string",
      "allowedValues": [
        "Validate",
        "Deploy"
      ],
      "metadata": {
        "description": "First must pass Validate prior running Deploy"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The KeyVault name used to store the secrets."
      }
    },
    "softDeleteRetentionDays": {
      "type": "int",
      "defaultValue": 30
    },
    "diagnosticStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account used for KV audit logs"
      }
    },
    "logsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "clusterName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "apiVersion": {
      "defaultValue": "2023-08-01-preview",
      "type": "string",
      "metadata": {
        "description": "The api version for deploying a hci cluster"
      }
    },
    "witnessType": {
      "defaultValue": "No Witness",
      "type": "string",
      "allowedValues": [
        "Cloud",
        "No Witness"
      ],
      "metadata": {
        "description": "Witness Type has to be 'cloud' for a 2 node cluster. It should be empty of other cluster sizes"
      }
    },
    "ClusterWitnessStorageAccountName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Storage account name to be created for the cluster witness, required when Witness Type is cloud"
      }
    },
    "localAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "local administrator username"
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "local administrator username"
      }
    },
    "domainAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Domain administrator username"
      }
    },
    "domainAdminPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Domain administrator Password"
      }
    },
    "arbDeploymentAppID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's AppID"
      }
    },
    "arbDeploymentAppSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's Password"
      }
    },
    "arbDeploymentSPNObjectID":{
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's ObjectID"
      }
    },
    "HCIResourceProviderObjectID": {
        "type": "string",
         "minLength": 1,
        "metadata": {
          "description": "Object ID of HCI Resource Provider"
        }
    },
    "arcNodeResourceIds": {
      "defaultValue": [
      ],
      "type": "array",
      "metadata": {
        "description": "The arc for server node Ids of the hci cluster"
      }
    },
    "domainFqdn": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The domain name of the Active Directory Domain Services"
      }
    },
    "namingPrefix": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The ADFS name prefix"
      }
    },
    "adouPath": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The ADDS OU path"
      }
    },
    "securityLevel": {
      "defaultValue": "Recommended",
      "type": "string",
      "allowedValues": [
        "Recommended",
        "Customized"
      ],
      "metadata": {
        "description": "The security level data for deploying a hci cluster"
      }
    },
    "driftControlEnforced": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting driftControlEnforced data for deploying a hci cluster"
      }
    },
    "credentialGuardEnforced": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting credentialGuardEnforced data for deploying a hci cluster"
      }
    },
    "smbSigningEnforced": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting smbSigningEnforced data for deploying a hci cluster"
      }
    },
    "smbClusterEncryption": {
      "defaultValue": false,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting smbClusterEncryption data for deploying a hci cluster"
      }
    },
    "bitlockerBootVolume": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting bitlockerBootVolume data for deploying a hci cluster"
      }
    },
    "bitlockerDataVolumes": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting bitlockerDataVolumes data for deploying a hci cluster"
      }
    },
    "wdacEnforced": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting wdacEnforced data for deploying a hci cluster"
      }
    },
    "streamingDataClient": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The metrics data for deploying a hci cluster"
      }
    },
    "euLocation": {
      "defaultValue": false,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The location data for deploying a hci cluster"
      }
    },
    "episodicDataUpload": {
      "defaultValue": true,
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The diagnostic data for deploying a hci cluster"
      }
    },
    "configurationMode": {
      "defaultValue": "Express",
      "type": "string",
      "allowedValues": [
        "Express",
        "InfraOnly",
        "KeepStorage"
      ],
      "metadata": {
        "description": "The storage volume configuration mode"
      }
    },
    "subnetMask": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The subnet mask for deploying a hci cluster"
      }
    },
    "defaultGateway": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The default gateway for deploying a hci cluster"
      }
    },
    "startingIPAddress": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The starting ip address for deploying a hci cluster"
      }
    },
    "endingIPAddress": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The ending ip address for deploying a hci cluster"
      }
    },
    "dnsServers": {
      "defaultValue": [
        ""
      ],
      "type": "array",
      "metadata": {
        "description": "The dns servers for deploying a hci cluster"
      }
    },
    "physicalNodesSettings": {
      "defaultValue": [
        {
          "name": "node1",
          "ipv4Address": "100.69.32.64"
        },
        {
          "name": "node2",
          "ipv4Address": "100.69.32.65"
        }
      ],
      "type": "array",
      "metadata": {
        "description": "The physical nodes settings for deploying a hci cluster"
      }
    },
    "networkingType": {
      "defaultValue": "",
      "type": "string",
      "allowedValues": [
        "switchedMultiServerDeployment",
        "switchlessMultiServerDeployment",
        "singleServerDeployment"
      ],
      "metadata": {
        "description": "The networking type for deploying a hci cluster"
      }
    },
    "networkingPattern": {
      "defaultValue": "",
      "type": "string",
      "allowedValues": [
        "hyperConverged",
        "convergedManagementCompute"
      ],
      "metadata": {
        "description": "The networking pattern for deploying a hci cluster"
      }
    },
    "intentList": {
      "defaultValue": [
      ],
      "type": "array",
      "metadata": {
        "description": "The intent list for deploying a hci cluster"
      }
    },
    "storageNetworkList": {
      "defaultValue": [
      ],
      "type": "array",
      "metadata": {
        "description": "The storage network list for deploying a hci cluster"
      }
    },
    "storageConnectivitySwitchless": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "The storage connectivity switchless value for deploying a hci cluster"
      }
    },
    "customLocation": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The custom location for deploying a hci cluster"
      }
    }
  },
  "variables": {
    "storageWitnessNameVar": "WitnessStorageKey",
    "LocalAdminCredentialSecretName": "LocalAdminCredential",
    "domainAdminSecretName": "AzureStackLCMUserCredential",
    "arbDeploymentSpnSecretName": "DefaultARBApplication",
    "secretsLocationVar": "[concat('https://',parameters('keyVaultName'), '.vault.azure.net')]",
    "witnessTypeVar": "[if(equals(parameters('witnessType'), 'No Witness'), '','Cloud')]",
    "ClusterWitnessStorageAccountNameVar": "[if(equals(parameters('witnessType'), 'No Witness'), '', parameters('ClusterWitnessStorageAccountName'))]",
    "AzureServiceEndpointVar": "[if(equals(parameters('witnessType'), 'No Witness'), '', 'core.windows.net')]",
    "localAdminSecretValue": "[base64(concat(parameters('localAdminUserName'),':',parameters('localAdminPassword')))]",
    "domainAdminSecretValueVar": "[base64(concat(parameters('domainAdminUserName'),':',parameters('domainAdminPassword')))]",
    "arbDeploymentSpnValueVar": "[base64(concat(parameters('arbDeploymentAppID'),':',parameters('arbDeploymentAppSecret')))]",
    "CloudWithnessStorageAccountIdVar": "[resourceId('Microsoft.Storage/storageAccounts', parameters('ClusterWitnessStorageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[parameters('ClusterWitnessStorageAccountName')]",
      "location": "[parameters('location')]",
      "condition": "[equals(parameters('witnessType'), 'Cloud')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "MOCARB-SPN-Subscription-Scope-Role-Assignment",
      "location": "[parameters('location')]",
      "subscriptionId": "de3c4d5e-af08-451a-a873-438d86ab6f4b",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
           {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(concat('ARB-', parameters('arbDeploymentSPNObjectID')))]",
              "properties": {
                "mode": "Incremental",
                // "Azure Resource Bridge Deployment Role"
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '7b1f81f9-4196-4058-8aae-762e593270df')]",
                "principalId": "[parameters('arbDeploymentSPNObjectID')]"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(concat('HCIRP-', parameters('HCIResourceProviderObjectID')))]",
      "properties": {
        "mode": "Incremental",
        // "Azure Connected Machine Resource Manager"
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'f5819b54-e033-4d82-ac66-4fec3cbf3f4c')]",
        "principalId": "[parameters('HCIResourceProviderObjectID')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "copy": {
        "name": "roleAssignmentCopy",
        "count": "[length(parameters('arcNodeResourceIds'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(concat('DMR-', parameters('arcNodeResourceIds')[copyIndex()]))]",
      "properties": {
        "mode": "Incremental",
        // "Azure Stack HCI Device Management Role"
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '865ae368-6a45-4bd1-8fbf-0d5151f56fc1')]",
        //TODO: move this API version as version of ARC machine API version
        "principalId": "[reference(parameters('arcNodeResourceIds')[copyIndex()], '2023-10-03-preview', 'full').identity.principalId]",
        //TODO: need to check if the scope can be made to a resource ARC Machine
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "copy": {
        "name": "roleAssignmentCopy",
        "count": "[length(parameters('arcNodeResourceIds'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      //TODO: need to check if the name can be something else than GUID
      "name": "[guid(concat('KVSU-RoleAssign', parameters('arcNodeResourceIds')[copyIndex()]))]",
      "properties": {
        "mode": "Incremental",
        // "Key Vault Secrets User"
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '4633458b-17de-408a-b874-0445c86b69e6')]",
        //TODO: move this API version as version of ARC machine API version
        "principalId": "[reference(parameters('arcNodeResourceIds')[copyIndex()], '2023-10-03-preview', 'full').identity.principalId]",
        //"scope": "[parameters('arcNodeResourceIds')[copyIndex()]]"
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[parameters('diagnosticStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]"
      ],
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "enableSoftDelete": false,
        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionDays')]",
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "accessPolicies": [],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
      "name": "[concat(parameters('keyVaultName'), '/Microsoft.Insights/service')]",
      "apiVersion": "2016-09-01",
      "Location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticStorageAccountName'))]"
      ],
      "properties": {
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('LogsRetentionInDays')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('deploymentMode'), 'Validate')]",
      "type": "Microsoft.AzureStackHCI/clusters",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[parameters('clusterName')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[parameters('location')]",
      "properties": {
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('domainAdminSecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('domainAdminSecretValueVar')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('LocalAdminCredentialSecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('localAdminSecretValue')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('arbDeploymentSpnSecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('arbDeploymentSpnValueVar')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('storageWitnessNameVar'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "location": "[parameters('location')]",
      "condition": "[equals(parameters('witnessType'), 'Cloud')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[base64(listKeys(variables('CloudWithnessStorageAccountIdVar'), '2019-04-01').keys[0].value)]",
        "attributes": {
          "enabled": true
        }
      }
    }, 
    {
      "type": "microsoft.azurestackhci/clusters/deploymentSettings",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[format('{0}/default', parameters('clusterName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.AzureStackHCI/clusters', parameters('clusterName'))]"
      ],
      "properties": {
        "arcNodeResourceIds": "[parameters('arcNodeResourceIds')]",
        "deploymentMode": "[parameters('deploymentMode')]",
        "deploymentConfiguration": {
          "version": "10.0.0.0",
          "scaleUnits": [
            {
              "deploymentData": {
                "securitySettings": {
                  "hvciProtection": true,
                  "drtmProtection": true,
                  "driftControlEnforced": "[parameters('driftControlEnforced')]",
                  "credentialGuardEnforced": "[parameters('credentialGuardEnforced')]",
                  "smbSigningEnforced": "[parameters('smbSigningEnforced')]",
                  "smbClusterEncryption": "[parameters('smbClusterEncryption')]",
                  "sideChannelMitigationEnforced": true,
                  "bitlockerBootVolume": "[parameters('bitlockerBootVolume')]",
                  "bitlockerDataVolumes": "[parameters('bitlockerDataVolumes')]",
                  "wdacEnforced": "[parameters('wdacEnforced')]"
                },
                "observability": {
                  "streamingDataClient": "[parameters('streamingDataClient')]",
                  "euLocation": "[parameters('euLocation')]",
                  "episodicDataUpload": "[parameters('episodicDataUpload')]"
                },
                "cluster": {
                  "name": "[parameters('clusterName')]",
                  "witnessType": "[variables('witnessTypeVar')]",
                  "witnessPath": "",
                  "cloudAccountName": "[variables('ClusterWitnessStorageAccountNameVar')]",
                  "azureServiceEndpoint": "[variables('AzureServiceEndpointVar')]"
                },
                "storage": {
                  "configurationMode": "[parameters('configurationMode')]"
                },
                "namingPrefix": "[parameters('namingPrefix')]",
                "domainFqdn": "[parameters('domainFqdn')]",
                "infrastructureNetwork": [
                  {
                    "subnetMask": "[parameters('subnetMask')]",
                    "gateway": "[parameters('defaultGateway')]",
                    "ipPools": [
                      {
                        "startingAddress": "[parameters('startingIPAddress')]",
                        "endingAddress": "[parameters('endingIPAddress')]"
                      }
                    ],
                    "dnsServers": "[parameters('dnsServers')]"
                  }
                ],
                "physicalNodes": "[parameters('physicalNodesSettings')]",
                "hostNetwork": {
                  "intents": "[parameters('intentList')]",
                  "storageNetworks": "[parameters('storageNetworkList')]",
                  "storageConnectivitySwitchless": "[parameters('storageConnectivitySwitchless')]"
                },
                "adouPath": "[parameters('adouPath')]",
                "secretsLocation": "[variables('secretsLocationVar')]",
                "optionalServices": {
                  "customLocation": "[parameters('customLocation')]"
                }
              }
            }
          ]
        }
      }
    }
  ]
}