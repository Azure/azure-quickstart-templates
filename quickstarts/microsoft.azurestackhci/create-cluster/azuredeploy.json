{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "11844109174951592461"
    }
  },
  "parameters": {
    "deploymentMode": {
      "type": "string",
      "defaultValue": "Validate",
      "allowedValues": [
        "Validate",
        "Deploy"
      ],
      "metadata": {
        "description": "First must pass Validate prior running Deploy"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The KeyVault name used to store the secrets."
      }
    },
    "softDeleteRetentionDays": {
      "type": "int",
      "defaultValue": 30
    },
    "diagnosticStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account used for KV audit logs"
      }
    },
    "logsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "secretsLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The fqdn of your KeyVault"
      }
    },
    "ClusterWitnessStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The existing storage account name used for the cluster witness"
      }
    },
    "clusterName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "localAdminSecretName": {
      "type": "string",
      "defaultValue": "LocalAdminCredential",
      "allowedValues": [
        "LocalAdminCredential"
      ],
      "metadata": {
        "description": "The name can not be changed"
      }
    },
    "localAdminSecretValue": {
      "type": "securestring"
    },
    "domainAdminSecretName": {
      "type": "string",
      "defaultValue": "AzureStackLCMUserCredential",
      "allowedValues": [
        "AzureStackLCMUserCredential"
      ],
      "metadata": {
        "description": "The name can not be changed"
      }
    },
    "domainAdminSecretValue": {
      "type": "securestring"
    },
    "arbDeploymentSpnName": {
      "type": "string",
      "defaultValue": "DefaultARBApplication",
      "allowedValues": [
        "DefaultARBApplication"
      ],
      "metadata": {
        "description": "The name can not be changed"
      }
    },
    "arbDeploymentSpnValue": {
      "type": "securestring"
    },
    "storageWitnessName": {
      "type": "string",
      "defaultValue": "WitnessStorageKey",
      "allowedValues": [
        "WitnessStorageKey"
      ],
      "metadata": {
        "description": "The name can not be changed"
      }
    },
    "storageWitnessValue": {
      "type": "securestring"
    },
    "arcNodeResourceIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The arc for server node Ids of the hci cluster"
      }
    },
    "domainFqdn": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The domain name of the Active Directory Domain Services"
      }
    },
    "namingPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ADFS name prefix"
      }
    },
    "adouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ADDS OU path"
      }
    },
    "driftControlEnforced": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting driftControlEnforced data for deploying a hci cluster"
      }
    },
    "credentialGuardEnforced": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting credentialGuardEnforced data for deploying a hci cluster"
      }
    },
    "smbSigningEnforced": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting smbSigningEnforced data for deploying a hci cluster"
      }
    },
    "smbClusterEncryption": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting smbClusterEncryption data for deploying a hci cluster"
      }
    },
    "bitlockerBootVolume": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting bitlockerBootVolume data for deploying a hci cluster"
      }
    },
    "bitlockerDataVolumes": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting bitlockerDataVolumes data for deploying a hci cluster"
      }
    },
    "wdacEnforced": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The security setting wdacEnforced data for deploying a hci cluster"
      }
    },
    "streamingDataClient": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The metrics data for deploying a hci cluster"
      }
    },
    "euLocation": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The location data for deploying a hci cluster"
      }
    },
    "episodicDataUpload": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "The diagnostic data for deploying a hci cluster"
      }
    },
    "configurationMode": {
      "type": "string",
      "defaultValue": "Express",
      "allowedValues": [
        "Express",
        "InfraOnly",
        "KeepStorage"
      ],
      "metadata": {
        "description": "The storage volume configuration mode"
      }
    },
    "subnetMask": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet mask for deploying a hci cluster"
      }
    },
    "defaultGateway": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The default gateway for deploying a hci cluster"
      }
    },
    "startingIPAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The starting ip address for deploying a hci cluster"
      }
    },
    "endingIPAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ending ip address for deploying a hci cluster"
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [
        ""
      ],
      "metadata": {
        "description": "The dns servers for deploying a hci cluster"
      }
    },
    "physicalNodesSettings": {
      "type": "array",
      "defaultValue": [
        {
          "name": "node1",
          "ipv4Address": "100.69.32.64"
        },
        {
          "name": "node2",
          "ipv4Address": "100.69.32.65"
        }
      ],
      "metadata": {
        "description": "The physical nodes settings for deploying a hci cluster"
      }
    },
    "intentList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The intent list for deploying a hci cluster"
      }
    },
    "storageNetworkList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The storage network list for deploying a hci cluster"
      }
    },
    "storageConnectivitySwitchless": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "The storage connectivity switchless value for deploying a hci cluster"
      }
    },
    "customLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The custom location for deploying a hci cluster"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('diagnosticStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "enableSoftDelete": false,
        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionDays')]",
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "accessPolicies": [],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "keyValutDiagSetting",
      "properties": {
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logsRetentionInDays')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('deploymentMode'), 'Validate')]",
      "type": "Microsoft.AzureStackHCI/clusters",
      "apiVersion": "2024-01-01",
      "name": "[parameters('clusterName')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('domainAdminSecretName'))]",
      "properties": {
        "contentType": "Secret",
        "value": "[parameters('domainAdminSecretValue')]",
        "attributes": {
          "enabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('localAdminSecretName'))]",
      "properties": {
        "contentType": "Secret",
        "value": "[parameters('localAdminSecretValue')]",
        "attributes": {
          "enabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('arbDeploymentSpnName'))]",
      "properties": {
        "contentType": "Secret",
        "value": "[parameters('arbDeploymentSpnValue')]",
        "attributes": {
          "enabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('storageWitnessName'))]",
      "properties": {
        "contentType": "Secret",
        "value": "[parameters('storageWitnessValue')]",
        "attributes": {
          "enabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.AzureStackHCI/clusters/deploymentSettings",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', parameters('clusterName'), 'default')]",
      "properties": {
        "arcNodeResourceIds": "[parameters('arcNodeResourceIds')]",
        "deploymentMode": "[parameters('deploymentMode')]",
        "deploymentConfiguration": {
          "version": "10.0.0.0",
          "scaleUnits": [
            {
              "deploymentData": {
                "securitySettings": {
                  "hvciProtection": true,
                  "drtmProtection": true,
                  "driftControlEnforced": "[parameters('driftControlEnforced')]",
                  "credentialGuardEnforced": "[parameters('credentialGuardEnforced')]",
                  "smbSigningEnforced": "[parameters('smbSigningEnforced')]",
                  "smbClusterEncryption": "[parameters('smbClusterEncryption')]",
                  "sideChannelMitigationEnforced": true,
                  "bitlockerBootVolume": "[parameters('bitlockerBootVolume')]",
                  "bitlockerDataVolumes": "[parameters('bitlockerDataVolumes')]",
                  "wdacEnforced": "[parameters('wdacEnforced')]"
                },
                "observability": {
                  "streamingDataClient": "[parameters('streamingDataClient')]",
                  "euLocation": "[parameters('euLocation')]",
                  "episodicDataUpload": "[parameters('episodicDataUpload')]"
                },
                "cluster": {
                  "name": "[parameters('clusterName')]",
                  "witnessType": "Cloud",
                  "witnessPath": "",
                  "cloudAccountName": "[parameters('ClusterWitnessStorageAccountName')]",
                  "azureServiceEndpoint": "[environment().suffixes.storage]"
                },
                "storage": {
                  "configurationMode": "[parameters('configurationMode')]"
                },
                "namingPrefix": "[parameters('namingPrefix')]",
                "domainFqdn": "[parameters('domainFqdn')]",
                "infrastructureNetwork": [
                  {
                    "subnetMask": "[parameters('subnetMask')]",
                    "gateway": "[parameters('defaultGateway')]",
                    "ipPools": [
                      {
                        "startingAddress": "[parameters('startingIPAddress')]",
                        "endingAddress": "[parameters('endingIPAddress')]"
                      }
                    ],
                    "dnsServers": "[parameters('dnsServers')]"
                  }
                ],
                "physicalNodes": "[parameters('physicalNodesSettings')]",
                "hostNetwork": {
                  "intents": "[parameters('intentList')]",
                  "storageNetworks": "[parameters('storageNetworkList')]",
                  "storageConnectivitySwitchless": "[parameters('storageConnectivitySwitchless')]"
                },
                "adouPath": "[parameters('adouPath')]",
                "secretsLocation": "[parameters('secretsLocation')]",
                "optionalServices": {
                  "customLocation": "[parameters('customLocation')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.AzureStackHCI/clusters', parameters('clusterName'))]"
      ]
    }
  ]
}