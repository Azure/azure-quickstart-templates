{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentMode": {
      "defaultValue": "Validate",
      "type": "string",
      "allowedValues": [
        "Validate",
        "Deploy"
      ],
      "metadata": {
        "description": "First must pass Validate prior running Deploy"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The KeyVault name used to store the secrets."
      }
    },
    "createNewKeyVault": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set this value as false, if you are re-using a Keyvault"
      }
    },
    "softDeleteRetentionDays": {
      "type": "int",
      "defaultValue": 30
    },
    "diagnosticStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account used for KV audit logs"
      }
    },
    "logsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "clusterName": {
      "type": "string"
      // "minLength": 3,
      // "maxLength": 24
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "AzureStackLCMAdminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Deployment user username"
      }
    },
    "AzureStackLCMAdminPasssword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Deployment user password"
      }
    },
    "arbDeploymentAppID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's AppID"
      }
    },
    "arbDeploymentAppSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's Password"
      }
    },
    "arbDeploymentSPNObjectID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "ARB SPN's ObjectID"
      }
    },
    "domainFqdn": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The domain name of the Active Directory Domain Services"
      }
    },
    "arcNodeResourceIds": {
      "defaultValue": [],
      "type": "array",
      "metadata": {
        "description": "The arc for server node Ids of the hci cluster"
      }
    },
    "subnetMask": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The subnet mask for deploying a hci cluster"
      }
    },
    "defaultGateway": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The default gateway for deploying a hci cluster"
      }
    },
    "startingIPAddress": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The starting ip address for deploying a hci cluster"
      }
    },
    "endingIPAddress": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The ending ip address for deploying a hci cluster"
      }
    },
    "dnsServers": {
      "defaultValue": [
        ""
      ],
      "type": "array",
      "metadata": {
        "description": "The dns servers for deploying a hci cluster"
      }
    },
    "physicalNodesSettings": {
      "defaultValue": [
        {
          "name": "node1",
          "ipv4Address": "100.69.32.64"
        },
        {
          "name": "node2",
          "ipv4Address": "100.69.32.65"
        }
      ],
      "type": "array",
      "metadata": {
        "description": "The physical nodes settings for deploying a hci cluster"
      }
    }, 
    "customLocation": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The custom location for deploying a hci cluster"
      }
    }
  },
  "variables": {
    "domainAdminCredentialECEName": "AzureStackLCMUserCredential",
    "arbDeploymentSpnCredentialECEName": "DefaultARBApplication",
    "domainAdminSecretName": "[concat( parameters('clusterName'), '-', 'AzureStackLCMUserCredential')]",
    "arbDeploymentSpnSecretName": "[concat( parameters('clusterName'), '-', 'DefaultARBApplication')]",
    "domainAdminSecretValueVar": "[base64(concat(parameters('AzureStackLCMAdminUsername'),':',parameters('AzureStackLCMAdminPasssword')))]",
    "arbDeploymentSpnValueVar": "[base64(concat(parameters('arbDeploymentAppID'),':',parameters('arbDeploymentAppSecret')))]",
    "deploymentSecretsList":[
      {
        "secretName":  "[variables('domainAdminSecretName')]",
        "eceSecretName" :  "[variables('domainAdminCredentialECEName')]",
        "secretLocation": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/secrets/', variables('domainAdminSecretName'))]"
      },
      {
        "secretName":  "[variables('arbDeploymentSpnSecretName')]",
        "eceSecretName" :  "[variables('arbDeploymentSpnCredentialECEName')]",
        "secretLocation": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/secrets/', variables('arbDeploymentSpnSecretName'))]"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[concat('MOC-ARB-Role-Assignment',guid(concat('MOCARB-SPN-Subscription-Scope-Role-Assignment',resourceGroup().id,parameters('location'), parameters('arbDeploymentSPNObjectID'))))]",
      "location": "[parameters('location')]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(concat('ARB-', parameters('arbDeploymentSPNObjectID')))]",
              "properties": {
                "mode": "Incremental",
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '7b1f81f9-4196-4058-8aae-762e593270df')]",
                "principalId": "[parameters('arbDeploymentSPNObjectID')]"
              }
            }
          ]
        }
      }
    },
    {
      "copy": {
        "name": "roleAssignmentCopy",
        "count": "[length(parameters('arcNodeResourceIds'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(concat('DMR-', parameters('arcNodeResourceIds')[copyIndex()]))]",
      "properties": {
        "mode": "Incremental",
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '865ae368-6a45-4bd1-8fbf-0d5151f56fc1')]",
        "principalId": "[reference(parameters('arcNodeResourceIds')[copyIndex()], '2023-10-03-preview', 'full').identity.principalId]",
        "scope": "[resourceGroup().id]",
        "description": "[concat(substring(parameters('arcNodeResourceIds')[copyIndex()],lastIndexOf(parameters('arcNodeResourceIds')[copyIndex()],'/')),'- Azure Stack HCI Device Management Role')]"
      }
    },
    {
      "copy": {
        "name": "roleAssignmentCopy",
        "count": "[length(parameters('arcNodeResourceIds'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(concat('KVSU-RoleAssign', parameters('arcNodeResourceIds')[copyIndex()]))]",
      "properties": {
        "mode": "Incremental",
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(parameters('arcNodeResourceIds')[copyIndex()], '2023-10-03-preview', 'full').identity.principalId]",
        "scope": "[resourceGroup().id]",
        "description": "[concat(substring(parameters('arcNodeResourceIds')[copyIndex()],lastIndexOf(parameters('arcNodeResourceIds')[copyIndex()],'/')),'- Key Vault Secrets User')]"
      }
    },
    {
      "copy": {
        "name": "roleAssignmentCopy",
        "count": "[length(parameters('arcNodeResourceIds'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(concat('INFRAVM-RoleAssign', parameters('arcNodeResourceIds')[copyIndex()]))]",
      "properties": {
        "mode": "Incremental",
        "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'c99c945f8bd14fb1a90301460aae6068')]",
        "principalId": "[reference(parameters('arcNodeResourceIds')[copyIndex()], '2023-10-03-preview', 'full').identity.principalId]",
        "scope": "[resourceGroup().id]",
        "description": "[concat(substring(parameters('arcNodeResourceIds')[copyIndex()],lastIndexOf(parameters('arcNodeResourceIds')[copyIndex()],'/')),'- Azure Stack HCI Connected InfraVMs')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('diagnosticStorageAccountName')]",
      "location": "[parameters('location')]",
      "condition": "[parameters('createNewKeyVault')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "publicNetworkAccess": "Disabled",
        "supportsHttpsTrafficOnly": true,
         "minimumTlsVersion": "TLS1_2",
         "networkAcls": {
          "defaultAction": "Deny"
         }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "condition": "[parameters('createNewKeyVault')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]"
      ],
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "enableSoftDelete": false,
        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionDays')]",
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "accessPolicies": [],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
      "name": "[concat(parameters('keyVaultName'), '/Microsoft.Insights/service')]",
      "apiVersion": "2016-09-01",
      "Location": "[resourceGroup().location]",
      "condition": "[parameters('createNewKeyVault')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticStorageAccountName'))]"
      ],
      "properties": {
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticStorageAccountName'))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('LogsRetentionInDays')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('domainAdminSecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('domainAdminSecretValueVar')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', variables('arbDeploymentSpnSecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "contentType": "Secret",
        "value": "[variables('arbDeploymentSpnValueVar')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "microsoft.azurestackhci/clusters/deploymentSettings",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}/default', parameters('clusterName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "arcNodeResourceIds": "[parameters('arcNodeResourceIds')]",
        "deploymentMode": "[parameters('deploymentMode')]",
        "operationType": "ClusterUpgrade",
        "deploymentConfiguration": {
          "version": "10.1.0.0",
          "scaleUnits": [
            {
              "deploymentData": {
                "observability": {
                  "streamingDataClient": true,
                  "euLocation": true,
                  "episodicDataUpload": true
                },
                "cluster": {
                  "name": "[parameters('clusterName')]"
                },
                "storage": {
                  "configurationMode": "InfraOnly"
                },
                "namingPrefix": "HCI001",
                "domainFqdn": "[parameters('domainFqdn')]",
                "infrastructureNetwork": [
                  {
                    "subnetMask": "[parameters('subnetMask')]",
                    "gateway": "[parameters('defaultGateway')]",
                    "ipPools": [
                      {
                        "startingAddress": "[parameters('startingIPAddress')]",
                        "endingAddress": "[parameters('endingIPAddress')]"
                      }
                    ],
                    "dnsServers": "[parameters('dnsServers')]"
                  }
                ],
                "physicalNodes": "[parameters('physicalNodesSettings')]",
                "adouPath": "",
                "secrets": "[variables('deploymentSecretsList')]",
                "optionalServices": {
                  "customLocation": "[parameters('customLocation')]"
                }
              }
            }
          ]
        }
      }
    }
  ]
}