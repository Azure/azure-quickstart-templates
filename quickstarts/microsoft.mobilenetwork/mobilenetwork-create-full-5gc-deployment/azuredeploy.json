{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "1395733487785678329"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Region where the Mobile Network will be deployed (must match the resource group region)"
      }
    },
    "mobileNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name for the private mobile network"
      }
    },
    "mobileCountryCode": {
      "type": "string",
      "defaultValue": "001",
      "metadata": {
        "description": "The mobile country code for the private mobile network"
      }
    },
    "mobileNetworkCode": {
      "type": "string",
      "defaultValue": "01",
      "metadata": {
        "description": "The mobile network code for the private mobile network"
      }
    },
    "siteName": {
      "type": "string",
      "defaultValue": "myExampleSite",
      "metadata": {
        "description": "The name for the site"
      }
    },
    "serviceName": {
      "type": "string",
      "defaultValue": "Allow-all-traffic",
      "metadata": {
        "description": "The name of the service"
      }
    },
    "simResources": {
      "type": "array",
      "metadata": {
        "description": "An array containing properties of the SIM(s) you wish to create"
      }
    },
    "simPolicyName": {
      "type": "string",
      "defaultValue": "Default-policy",
      "metadata": {
        "description": "The name of the SIM policy"
      }
    },
    "sliceName": {
      "type": "string",
      "defaultValue": "slice-1",
      "metadata": {
        "description": "The name of the slice"
      }
    },
    "n2Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The logical name for the packet core instance N2 signalling interface. This should match one of the interfaces configured on your Azure Stack Edge machine."
      }
    },
    "n2IpAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address for the packet core instance N2 signaling interface"
      }
    },
    "n3Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The logical name for the packet core instance N3 signalling interface. This should match one of the interfaces configured on your Azure Stack Edge machine."
      }
    },
    "n3IpAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address for the packet core instance N3 interface"
      }
    },
    "n2N3Subnet": {
      "type": "string",
      "metadata": {
        "description": "The network address of the access subnet in CIDR notation"
      }
    },
    "n2N3Gateway": {
      "type": "string",
      "metadata": {
        "description": "The access subnet default gateway"
      }
    },
    "n6Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The logical name for the packet core instance N6 signalling interface. This should match one of the interfaces configured on your Azure Stack Edge machine."
      }
    },
    "n6IpAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address for the packet core instance N6 interface"
      }
    },
    "n6Subnet": {
      "type": "string",
      "metadata": {
        "description": "The network address of the data subnet in CIDR notation"
      }
    },
    "n6Gateway": {
      "type": "string",
      "metadata": {
        "description": "The data subnet default gateway"
      }
    },
    "ueIpPoolPrefix": {
      "type": "string",
      "metadata": {
        "description": "The network address of the subnet from which IP addresses must be allocated to UEs, given in CIDR notation"
      }
    },
    "dataNetworkName": {
      "type": "string",
      "defaultValue": "internet",
      "metadata": {
        "description": "The name of the data network"
      }
    },
    "coreNetworkTechnology": {
      "type": "string",
      "defaultValue": "5GC",
      "metadata": {
        "description": "The mode in which the packet core instance will run"
      }
    },
    "naptEnabled": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Whether or not Network Address and Port Translation (NAPT) should be enabled for this data network"
      }
    },
    "customLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the customLocation representing the ASE device where the packet core will be deployed. If this parameter is not specified then the 5G core will be created but will not be deployed to an ASE."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.MobileNetwork/mobileNetworks/dataNetworks",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}', parameters('mobileNetworkName'), parameters('dataNetworkName'))]",
      "location": "[parameters('location')]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/mobileNetworks/slices",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}', parameters('mobileNetworkName'), parameters('sliceName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "snssai": {
          "sst": 1
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/mobileNetworks/services",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}', parameters('mobileNetworkName'), parameters('serviceName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "servicePrecedence": 253,
        "serviceQosPolicy": {
          "maximumBitRate": {
            "uplink": "2 Gbps",
            "downlink": "2 Gbps"
          }
        },
        "pccRules": [
          {
            "ruleName": "All-traffic",
            "rulePrecedence": 253,
            "trafficControl": "Enabled",
            "serviceDataFlowTemplates": [
              {
                "templateName": "Any-traffic",
                "protocol": [
                  "ip"
                ],
                "direction": "Bidirectional",
                "remoteIpList": [
                  "any"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/mobileNetworks/simPolicies",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}', parameters('mobileNetworkName'), parameters('simPolicyName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ueAmbr": {
          "uplink": "2 Gbps",
          "downlink": "2 Gbps"
        },
        "defaultSlice": {
          "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks/slices', parameters('mobileNetworkName'), parameters('sliceName'))]"
        },
        "sliceConfigurations": [
          {
            "slice": {
              "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks/slices', parameters('mobileNetworkName'), parameters('sliceName'))]"
            },
            "defaultDataNetwork": {
              "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks/dataNetworks', parameters('mobileNetworkName'), parameters('dataNetworkName'))]"
            },
            "dataNetworkConfigurations": [
              {
                "dataNetwork": {
                  "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks/dataNetworks', parameters('mobileNetworkName'), parameters('dataNetworkName'))]"
                },
                "sessionAmbr": {
                  "uplink": "2 Gbps",
                  "downlink": "2 Gbps"
                },
                "allowedServices": [
                  {
                    "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks/services', parameters('mobileNetworkName'), parameters('serviceName'))]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks/dataNetworks', parameters('mobileNetworkName'), parameters('dataNetworkName'))]",
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]",
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks/services', parameters('mobileNetworkName'), parameters('serviceName'))]",
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks/slices', parameters('mobileNetworkName'), parameters('sliceName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/mobileNetworks/sites",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}', parameters('mobileNetworkName'), parameters('siteName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "networkFunctions": [
          {
            "id": "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes', parameters('siteName'))]"
          },
          {
            "id": "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes', parameters('siteName'), parameters('siteName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]",
        "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes', parameters('siteName'))]",
        "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes', parameters('siteName'), parameters('siteName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes/attachedDataNetworks",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('siteName'), parameters('siteName'), parameters('dataNetworkName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "n6Interface": {
          "ipv4Address": "[parameters('n6IpAddress')]",
          "ipv4Subnet": "[parameters('n6Subnet')]",
          "ipv4Gateway": "[parameters('n6Gateway')]",
          "name": "[parameters('n6Name')]"
        },
        "userEquipmentAddressPoolPrefix": [
          "[parameters('ueIpPoolPrefix')]"
        ],
        "naptConfiguration": {
          "enabled": "[parameters('naptEnabled')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes', parameters('siteName'))]",
        "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes', parameters('siteName'), parameters('siteName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes",
      "apiVersion": "2022-03-01-preview",
      "name": "[format('{0}/{1}', parameters('siteName'), parameters('siteName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "n3Interface": {
          "ipv4Address": "[parameters('n3IpAddress')]",
          "ipv4Subnet": "[parameters('n2N3Subnet')]",
          "ipv4Gateway": "[parameters('n2N3Gateway')]",
          "name": "[parameters('n3Name')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/packetCoreControlPlanes', parameters('siteName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/mobileNetworks",
      "apiVersion": "2022-03-01-preview",
      "name": "[parameters('mobileNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicLandMobileNetworkIdentifier": {
          "mcc": "[parameters('mobileCountryCode')]",
          "mnc": "[parameters('mobileNetworkCode')]"
        }
      }
    },
    {
      "copy": {
        "name": "exampleSimResources",
        "count": "[length(parameters('simResources'))]"
      },
      "type": "Microsoft.MobileNetwork/sims",
      "apiVersion": "2022-03-01-preview",
      "name": "[parameters('simResources')[copyIndex()].simName]",
      "location": "[parameters('location')]",
      "properties": {
        "integratedCircuitCardIdentifier": "[parameters('simResources')[copyIndex()].integratedCircuitCardIdentifier]",
        "internationalMobileSubscriberIdentity": "[parameters('simResources')[copyIndex()].internationalMobileSubscriberIdentity]",
        "authenticationKey": "[parameters('simResources')[copyIndex()].authenticationKey]",
        "operatorKeyCode": "[parameters('simResources')[copyIndex()].operatorKeyCode]",
        "deviceType": "[parameters('simResources')[copyIndex()].deviceType]",
        "mobileNetwork": {
          "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]"
        },
        "simPolicy": {
          "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks/simPolicies', parameters('mobileNetworkName'), parameters('simPolicyName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]",
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks/simPolicies', parameters('mobileNetworkName'), parameters('simPolicyName'))]"
      ]
    },
    {
      "type": "Microsoft.MobileNetwork/packetCoreControlPlanes",
      "apiVersion": "2022-03-01-preview",
      "name": "[parameters('siteName')]",
      "location": "[parameters('location')]",
      "properties": {
        "mobileNetwork": {
          "id": "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]"
        },
        "coreNetworkTechnology": "[parameters('coreNetworkTechnology')]",
        "customLocation": "[parameters('customLocation')]",
        "n2Interface": {
          "ipv4Address": "[parameters('n2IpAddress')]",
          "ipv4Subnet": "[parameters('n2N3Subnet')]",
          "ipv4Gateway": "[parameters('n2N3Gateway')]",
          "name": "[parameters('n2Name')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MobileNetwork/mobileNetworks', parameters('mobileNetworkName'))]"
      ]
    }
  ]
}