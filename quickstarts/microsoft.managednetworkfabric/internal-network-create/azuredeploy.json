{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "12870712601765392505"
    }
  },
  "parameters": {
    "internalNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of Internal Network"
      }
    },
    "l3IsolationDomainName": {
      "type": "string",
      "metadata": {
        "description": "Name of the L3 Isolation Domain"
      }
    },
    "annotation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Switch configuration description"
      }
    },
    "vlanId": {
      "type": "int",
      "maxValue": 4095,
      "minValue": 100,
      "metadata": {
        "description": "Vlan identifier value"
      }
    },
    "mtu": {
      "type": "int",
      "defaultValue": 1500,
      "maxValue": 9200,
      "minValue": 64,
      "metadata": {
        "description": "Maximum transmission unit"
      }
    },
    "connectedIPv4Subnets": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List with object connected IPv4 Subnets"
      }
    },
    "connectedIPv6Subnets": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List with object connected IPv6 Subnets"
      }
    },
    "staticRouteConfiguration": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Static Route Configuration model"
      }
    },
    "bgpConfiguration": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "BGP configuration properties"
      }
    },
    "isMonitoringEnabled": {
      "type": "string",
      "defaultValue": "False",
      "metadata": {
        "description": "To check whether monitoring of internal network is enabled or not"
      },
      "allowedValues": [
        "True",
        "False"
      ]
    },
    "extension": {
      "type": "string",
      "defaultValue": "NoExtension",
      "metadata": {
        "description": "Extension"
      },
      "allowedValues": [
        "NoExtension",
        "NPB"
      ]
    },
    "importRoutePolicy": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Import Route Policy configuration"
      }
    },
    "exportRoutePolicy": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Export Route Policy configuration"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks",
      "apiVersion": "2023-06-15",
      "name": "[format('{0}/{1}', parameters('l3IsolationDomainName'), parameters('internalNetworkName'))]",
      "properties": {
        "annotation": "[if(not(empty(parameters('annotation'))), parameters('annotation'), null())]",
        "vlanId": "[parameters('vlanId')]",
        "isMonitoringEnabled": "[parameters('isMonitoringEnabled')]",
        "extension": "[parameters('extension')]",
        "mtu": "[parameters('mtu')]",
        "connectedIPv4Subnets": "[if(not(empty(parameters('connectedIPv4Subnets'))), parameters('connectedIPv4Subnets'), null())]",
        "connectedIPv6Subnets": "[if(not(empty(parameters('connectedIPv6Subnets'))), parameters('connectedIPv6Subnets'), null())]",
        "staticRouteConfiguration": "[if(not(empty(parameters('staticRouteConfiguration'))), createObject('bfdConfiguration', parameters('staticRouteConfiguration').bfdConfiguration, 'ipv4Routes', if(contains(parameters('staticRouteConfiguration'), 'ipv4Routes'), parameters('staticRouteConfiguration').ipv4Routes, null()), 'ipv6Routes', if(contains(parameters('staticRouteConfiguration'), 'ipv6Routes'), parameters('staticRouteConfiguration').ipv6Routes, null()), 'extension', parameters('extension')), null())]",
        "bgpConfiguration": "[if(not(empty(parameters('bgpConfiguration'))), createObject('bfdConfiguration', if(contains(parameters('bgpConfiguration'), 'bfdConfiguration'), parameters('bgpConfiguration').bfdConfiguration, null()), 'defaultRouteOriginate', parameters('bgpConfiguration').defaultRouteOriginate, 'allowAS', parameters('bgpConfiguration').allowAS, 'allowASOverride', parameters('bgpConfiguration').allowASOverride, 'peerASN', parameters('bgpConfiguration').peerASN, 'ipv4ListenRangePrefixes', if(contains(parameters('bgpConfiguration'), 'ipv4ListenRangePrefixes'), parameters('bgpConfiguration').ipv4ListenRangePrefixes, null()), 'ipv6ListenRangePrefixes', if(contains(parameters('bgpConfiguration'), 'ipv6ListenRangePrefixes'), parameters('bgpConfiguration').ipv6ListenRangePrefixes, null()), 'ipv4NeighborAddress', if(contains(parameters('bgpConfiguration'), 'ipv4NeighborAddress'), parameters('bgpConfiguration').ipv4NeighborAddress, null()), 'ipv6NeighborAddress', if(contains(parameters('bgpConfiguration'), 'ipv6NeighborAddress'), parameters('bgpConfiguration').ipv6NeighborAddress, null()), 'annotation', if(contains(parameters('bgpConfiguration'), 'annotation'), parameters('annotation'), null())), null())]",
        "importRoutePolicy": "[if(not(empty(parameters('importRoutePolicy'))), createObject('importIpv4RoutePolicyId', if(contains(parameters('importRoutePolicy'), 'importIpv4RoutePolicyId'), parameters('importRoutePolicy').importIpv4RoutePolicyId, null()), 'importIpv6RoutePolicyId', if(contains(parameters('importRoutePolicy'), 'importIpv6RoutePolicyId'), parameters('importRoutePolicy').importIpv6RoutePolicyId, null())), null())]",
        "exportRoutePolicy": "[if(not(empty(parameters('exportRoutePolicy'))), createObject('exportIpv4RoutePolicyId', if(contains(parameters('exportRoutePolicy'), 'exportIpv4RoutePolicyId'), parameters('exportRoutePolicy').exportIpv4RoutePolicyId, null()), 'exportIpv6RoutePolicyId', if(contains(parameters('exportRoutePolicy'), 'exportIpv6RoutePolicyId'), parameters('exportRoutePolicy').exportIpv6RoutePolicyId, null())), null())]"
      },
      "metadata": {
        "description": "Create Internal Network Resource"
      }
    }
  ],
  "outputs": {
    "resourceID": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks', parameters('l3IsolationDomainName'), parameters('internalNetworkName'))]"
    }
  }
}