{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "15596621307698865807"
    }
  },
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Name of the VNet"
      }
    },
    "serverFarmName": {
      "type": "string",
      "defaultValue": "serverfarm",
      "metadata": {
        "description": "Name of the Web Farm"
      }
    },
    "site1_Name": {
      "type": "string",
      "defaultValue": "[format('webapp1-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Web App 1 name must be unique DNS name worldwide"
      }
    },
    "site2_Name": {
      "type": "string",
      "defaultValue": "[format('webapp2-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Web App 2 name must be unique DNS name worldwide"
      }
    },
    "virtualNetwork_CIDR": {
      "type": "string",
      "defaultValue": "10.200.0.0/16",
      "metadata": {
        "description": "CIDR of your VNet"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "Subnet1",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "Subnet2",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnet1_CIDR": {
      "type": "string",
      "defaultValue": "10.200.1.0/24",
      "metadata": {
        "description": "CIDR of your subnet"
      }
    },
    "subnet2_CIDR": {
      "type": "string",
      "defaultValue": "10.200.2.0/24",
      "metadata": {
        "description": "CIDR of your subnet"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "P1v2",
      "allowedValues": [
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "SKU name, must be minimum P1v2"
      }
    },
    "skuSize": {
      "type": "string",
      "defaultValue": "P1v2",
      "allowedValues": [
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "SKU size, must be minimum P1v2"
      }
    },
    "skuFamily": {
      "type": "string",
      "defaultValue": "P1v2",
      "allowedValues": [
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "SKU family, must be minimum P1v2"
      }
    },
    "privateEndpointName": {
      "type": "string",
      "defaultValue": "PrivateEndpoint1",
      "metadata": {
        "description": "Name of your Private Endpoint"
      }
    },
    "privateLinkConnectionName": {
      "type": "string",
      "defaultValue": "PrivateEndpointLink1",
      "metadata": {
        "description": "Link name between your Private Endpoint and your Web App"
      }
    }
  },
  "variables": {
    "webapp_dns_name": ".azurewebsites.net",
    "privateDNSZoneName": "privatelink.azurewebsites.net",
    "SKU_tier": "PremiumV2"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetwork_CIDR')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1_CIDR')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          },
          {
            "name": "[parameters('subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2_CIDR')]",
              "delegations": [
                {
                  "name": "delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverfarms"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[parameters('serverFarmName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[variables('SKU_tier')]",
        "size": "[parameters('skuSize')]",
        "family": "[parameters('skuFamily')]",
        "capacity": 1
      },
      "kind": "app"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('site1_Name')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('site2_Name')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]",
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet2Name'))]",
        "vnetRouteAllEnabled": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', parameters('site1_Name'), 'web')]",
      "properties": {
        "ftpsState": "AllAllowed"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('site1_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', parameters('site2_Name'), 'web')]",
      "properties": {
        "ftpsState": "AllAllowed"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('site2_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2019-08-01",
      "name": "[format('{0}/{1}', parameters('site1_Name'), format('{0}{1}', parameters('site1_Name'), variables('webapp_dns_name')))]",
      "properties": {
        "siteName": "[parameters('site1_Name')]",
        "hostNameType": "Verified"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('site1_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2019-08-01",
      "name": "[format('{0}/{1}', parameters('site2_Name'), format('{0}{1}', parameters('site2_Name'), variables('webapp_dns_name')))]",
      "properties": {
        "siteName": "[parameters('site2_Name')]",
        "hostNameType": "Verified"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('site2_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateEndpointName')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet1Name'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('privateLinkConnectionName')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('site1_Name'))]",
              "groupIds": [
                "sites"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('site1_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "[variables('privateDNSZoneName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[format('{0}/{1}', variables('privateDNSZoneName'), format('{0}-link', variables('privateDNSZoneName')))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-03-01",
      "name": "[format('{0}/{1}', parameters('privateEndpointName'), 'dnsgroupname')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config1",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
      ]
    }
  ]
}