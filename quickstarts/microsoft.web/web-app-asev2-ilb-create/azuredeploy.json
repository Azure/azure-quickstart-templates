{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aseName": {
            "type": "string",
            "metadata": {
                "description": "Name of the App Service Environment"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the App Service Environment"
            }
        },
        "existingVirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET"
            }
        },
        "existingVirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet name that will contain the App Service Environment"
            }
        },
        "internalLoadBalancingMode": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [ 0, 1, 2, 3 ],
            "metadata": {
                "description": "0 = public VIP only, 1 = only ports 80/443 are mapped to ILB VIP, 2 = only FTP ports are mapped to ILB VIP, 3 = both ports 80/443 and FTP ports are mapped to an ILB VIP."
            }
        }
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Web/hostingEnvironments",
            "name": "[parameters('aseName')]",
            "kind": "ASEV2",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[parameters('aseName')]",
                "location": "[parameters('location')]",
                "ipSslAddressCount": 0,
                "internalLoadBalancingMode": "[parameters('internalLoadBalancingMode')]",
                "virtualNetwork": {
                    "id": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('subnetName'))]"
                }
            }
        }
    ]
}
