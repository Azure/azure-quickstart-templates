@description('Web app name.')
@minLength(2)
param webAppName string = 'webApp-${uniqueString(resourceGroup().id)}'

@description('Location for all resources. This region must support Availability Zones.')
@allowed([
  'brazilsouth'
  'canadacentral'
  'centralus'
  'eastus'
  'eastus2'
  'southcentralus'
  'westus2'
  'westus3'
  'mexicocentral'
  'francecentral'
  'italynorth'
  'germanywestcentral'
  'norwayeast'
  'northeurope'
  'uksouth'
  'westeurope'
  'swedencentral'
  'switzerlandnorth'
  'polandcentral'
  'spaincentral'
  'qatarcentral'
  'uaenorth'
  'israelcentral'
  'southafricanorth'
  'australiaeast'
  'centralindia'
  'japaneast'
  'japanwest'
  'southeastasia'
  'eastasia'
  'koreacentral'
  'newzealandnorth'
  'usgovvirginia'
  'chinanorth3'
  'ussecwestcentral'
])
param location string = 'eastus'

@description('The SKU of App Service Plan.')
param sku string = 'P0v3'

@description('The Runtime stack of current web app')
param linuxFxVersion string = 'PYTHON|3.12'

var appServicePlanName = 'AppServicePlan-${webAppName}'
var vnetName = '${webAppName}vnet'
var vnetAddressPrefix = '10.0.0.0/16'
var subnetName = '${webAppName}sn'
var subnetAddressPrefix = '10.0.0.0/24'
var diagnosticSettingsName = 'diagnosticSettings-${webAppName}'
var logAnalyticsName = 'logAnalytics-${webAppName}'
var appInsightName = 'appInsights-${webAppName}'

resource virtualNetwork 'Microsoft.Network/virtualNetworks@2024-03-01' = {
  name: vnetName
  location: location
  properties: {
    addressSpace: {
      addressPrefixes: [
        vnetAddressPrefix
      ]
    }
    subnets: [
      {
        name: subnetName
        properties: {
          addressPrefix: subnetAddressPrefix
          delegations: [
            {
              name: 'delegation'
              properties: {
                serviceName: 'Microsoft.Web/serverFarms'
              }
            }
          ]
        }
      }
    ]
  }
}

resource appServicePlan 'Microsoft.Web/serverfarms@2024-04-01' = {
  name: appServicePlanName
  location: location
  sku: {
    name: sku
    capacity: 3
  }
  kind: 'linux'
  properties: {
    reserved: true
    zoneRedundant: true
    elasticScaleEnabled: true
    maximumElasticWorkerCount: 30
  }
}

// basic publishing creds
// ip security restrictions
// FW and NSG
resource webApp 'Microsoft.Web/sites@2024-04-01' = {
  name: webAppName
  location: location
  properties: {
    serverFarmId: appServicePlan.id
    virtualNetworkSubnetId: virtualNetwork.properties.subnets[0].id
    vnetRouteAllEnabled: true
    vnetBackupRestoreEnabled: true
    vnetContentShareEnabled: true
    vnetImagePullEnabled: true
    httpsOnly: true
    endToEndEncryptionEnabled: true
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    sshEnabled: false
    ipMode: 'IPv4AndIPv6'
    siteConfig: {
      linuxFxVersion: linuxFxVersion
      minTlsVersion: '1.3'
      minTlsCipherSuite: 'TLS_AES_256_GCM_SHA384'
      scmMinTlsVersion: '1.3'
      ftpsState: 'Disabled'
      http20Enabled: true
      remoteDebuggingEnabled: false
      antivirusScanEnabled: true
      detailedErrorLoggingEnabled: true
      httpLoggingEnabled: true
      requestTracingEnabled: true
    }
  }
  identity: {
    type: 'SystemAssigned'
  }
  dependsOn: [
    logAnalyticsWorkspace
  ]
}

resource webAppSlot 'Microsoft.Web/sites/slots@2024-04-01' = {
  parent: webApp
  name: 'stage'
  location: location
  properties: {
    serverFarmId: appServicePlan.id
    virtualNetworkSubnetId: virtualNetwork.properties.subnets[0].id
    vnetRouteAllEnabled: true
    vnetBackupRestoreEnabled: true
    vnetContentShareEnabled: true
    vnetImagePullEnabled: true
    httpsOnly: true
    endToEndEncryptionEnabled: true
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    sshEnabled: false
    ipMode: 'IPv4AndIPv6'
    siteConfig: {
      linuxFxVersion: linuxFxVersion
      minTlsVersion: '1.3'
      minTlsCipherSuite: 'TLS_AES_256_GCM_SHA384'
      scmMinTlsVersion: '1.3'
      ftpsState: 'Disabled'
      http20Enabled: true
      remoteDebuggingEnabled: false
      antivirusScanEnabled: true
      detailedErrorLoggingEnabled: true
      httpLoggingEnabled: true
      requestTracingEnabled: true
    }
  }
  identity: {
    type: 'SystemAssigned'
  }
}

resource appServiceLogging 'Microsoft.Web/sites/config@2024-04-01' = {
  parent: webApp
  name: 'appsettings'
  properties: {
    APPINSIGHTS_INSTRUMENTATIONKEY: appInsights.properties.InstrumentationKey
  }
  dependsOn: [
    appServiceSiteExtension
  ]
}

resource appServiceSiteExtension 'Microsoft.Web/sites/siteextensions@2024-04-01' = {
  parent: webApp
  name: 'Microsoft.ApplicationInsights.AzureWebSites'
  dependsOn: [
    appInsights
  ]
}

resource appServiceAppSettings 'Microsoft.Web/sites/config@2024-04-01' = {
  parent: webApp
  name: 'logs'
  properties: {
    applicationLogs: {
      fileSystem: {
        level: 'Warning'
      }
    }
    httpLogs: {
      fileSystem: {
        retentionInMb: 40
        enabled: true
      }
    }
    failedRequestsTracing: {
      enabled: true
    }
    detailedErrorMessages: {
      enabled: true
    }
  }
}

resource appInsights 'Microsoft.Insights/components@2020-02-02' = {
  name: appInsightName
  location: location
  kind: 'string'
  properties: {
    Application_Type: 'web'
    WorkspaceResourceId: logAnalyticsWorkspace.id
  }
}

resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2020-08-01' = {
  name: logAnalyticsName
  location: location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
    retentionInDays: 120
    features: {
      searchVersion: 1
      legacy: 0
      enableLogAccessUsingOnlyResourcePermissions: true
    }
  }
}
