{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "metadata": {
                "description": "Storage account type"
            }
        },
        "fileShareName": {
            "type": "string",
            "defaultValue": "sftpfileshare",
            "metadata": {
                "description": "Name of file share to be created"
            }
        },
        "sftpUser": {
            "type": "string",
            "metadata": {
                "description": "Username to use for SFTP access"
            }
        },
        "sftpPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password to use for SFTP access"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Primary location for resources"
            }
        }
    },
    "variables": {
        "scriptName": "createFileShare",
        "identityName": "scratch",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "roleDefinitionName": "[guid(variables('identityName'), variables('roleDefinitionId'))]",
        "sftpContainerName": "sftp",
        "sftpContainerGroupName": "sftp-group",
        "sftpContainerImage": "atmoz/sftp:latest",
        "sftpEnvVariable": "[concat(parameters('sftpUser'), ':', parameters('sftpPassword'), ':1001')]",
        "storageAccountName": "[concat('sftpstg', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('roleDefinitionName')]",
            "dependsOn": [
                "[variables('identityName')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[reference(variables('identityName')).principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {},
            "dependsOn": [
                "[variables('roleDefinitionName')]" // need to create a slight delay for the roleAssignment to replicate before the deployment script can run
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('scriptName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "kind": "AzurePowerShell",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": { /*ttk bug*/
                    }
                }
            },
            "properties": {
                "forceUpdateTag": "1",
                "azPowerShellVersion": "3.0",
                "arguments": "[format(' -storageAccountName {0} -fileShareName {1} -resourceGroupName {2}', variables('storageAccountName'), parameters('fileShareName'), resourceGroup().name)]",
                "scriptContent": "param([string] $storageAccountName, [string] $fileShareName, [string] $resourceGroupName) Get-AzStorageAccount -StorageAccountName $storageAccountName -ResourceGroupName $resourceGroupName | New-AzStorageShare -Name $fileShareName",
                "timeout": "PT5M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "[variables('sftpContainerGroupName')]",
            "apiVersion": "2019-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('scriptName')]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "[variables('sftpContainerName')]",
                        "properties": {
                            "image": "[variables('sftpContainerImage')]",
                            "environmentVariables": [
                                {
                                    "name": "SFTP_USERS",
                                    "value": "[variables('sftpEnvVariable')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 2,
                                    "memoryInGB": 1
                                }
                            },
                            "ports": [
                                {
                                    "port": 22
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "[concat('/home/', parameters('sftpUser'), '/upload')]",
                                    "name": "sftpvolume",
                                    "readOnly": false
                                }
                            ]
                        }
                    }
                ],
                "osType": "Linux",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "protocol": "Tcp",
                            "port": 22
                        }
                    ]
                },
                "restartPolicy": "OnFailure",
                "volumes": [
                    {
                        "name": "sftpvolume",
                        "azureFile": {
                            "readOnly": false,
                            "shareName": "[parameters('fileShareName')]",
                            "storageAccountName": "[variables('storageAccountName')]",
                            "storageAccountKey": "[listKeys(variables('storageAccountName'),'2018-02-01').keys[0].value]"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "containerIPv4Address": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', variables('sftpContainerGroupName'))).ipAddress.ip]"
        }
    }
}
