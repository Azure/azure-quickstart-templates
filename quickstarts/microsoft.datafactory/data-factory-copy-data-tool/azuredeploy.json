{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.61.36676",
      "templateHash": "16322015979173827105"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of the blob storage."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('storage{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Azure storage account that contains the input/output data."
      }
    },
    "blobContainerName": {
      "type": "string",
      "defaultValue": "[format('blob{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the blob container in the Azure Storage account."
      }
    },
    "managedIdentityName": {
      "type": "string",
      "defaultValue": "[format('blob{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the managed identity created to access the Azure Storage account."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation."
      }
    },
    "csvFilename": {
      "type": "string",
      "defaultValue": "moviesDB2.csv",
      "metadata": {
        "description": "The file name that contains the content for the Data Factory"
      }
    }
  },
  "variables": {
    "$fxv#0": "\r\n$localFileName = \"${env:contentUri}\" | Split-Path -Leaf\r\n\r\nInvoke-WebRequest -Uri \"${env:contentUri}\" -OutFile $localFileName\r\n\r\n$storageAccount = Get-AzStorageAccount -ResourceGroupName \"${Env:RGName}\" -Name \"${Env:SAName}\" \r\n\r\n$ctx = $storageAccount.Context\r\n\r\nSet-AzStorageBlobContent -Container \"${Env:ContainerName}\" -Blob \"input/$localFileName\" -Context $ctx -StandardBlobTier 'Hot' -File $localFileName\r\n",
    "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "bootstrapRoleAssignmentName": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), variables('roleDefinitionId'))]",
    "contentUri": "[uri(parameters('_artifactsLocation'), format('{0}{1}', parameters('csvFilename'), parameters('_artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[variables('bootstrapRoleAssignmentName')]",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))).principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "copyFile",
      "location": "[parameters('location')]",
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
        }
      },
      "properties": {
        "azPowerShellVersion": "8.0",
        "arguments": "-name FileCreationScript",
        "environmentVariables": [
          {
            "name": "RGName",
            "value": "[resourceGroup().name]"
          },
          {
            "name": "SAName",
            "value": "[parameters('storageAccountName')]"
          },
          {
            "name": "ContainerName",
            "value": "[parameters('blobContainerName')]"
          },
          {
            "name": "contentUri",
            "value": "[variables('contentUri')]"
          }
        ],
        "scriptContent": "[variables('$fxv#0')]",
        "timeout": "PT1H",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('bootstrapRoleAssignmentName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
      ]
    }
  ]
}