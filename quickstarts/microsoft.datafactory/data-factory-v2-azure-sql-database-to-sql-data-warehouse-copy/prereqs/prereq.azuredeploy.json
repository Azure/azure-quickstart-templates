{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for DB Admin"
      }
    },
    "databaseAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for DB Admin"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]",
    "serverName": "[concat('server', uniqueString(resourceGroup().id))]",
    "databaseName": "SourceDB",
    "databaseEdition": "Standard",
    "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "databaseRequestedServiceObjectiveName": "S3",
    "dataWarehouseName": "SinkDW",
    "dataWarehouseEdition": "DataWarehouse",
    "dataWarehouseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "dataWarehouseServiceObjectiveName": "DW400c"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2021-01-01",
      "comments": "Storage account ",
      "tags": {
        "displayName": "Storage Account"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "name": "[variables('serverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('location')]",
      "apiVersion": "2021-02-01-preview",
      "tags": {
        "displayName": "server"
      },
      "properties": {
        "administratorLogin": "[parameters('databaseAdminUsername')]",
        "administratorLoginPassword": "[parameters('databaseAdminPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[parameters('location')]",
          "apiVersion": "2021-02-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "location": "[parameters('location')]",
          "apiVersion": "2021-02-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
          ],
          "tags": {
            "displayName": "database"
          },
          "properties": {
            "collation": "[variables('databaseCollation')]",
            "edition": "[variables('databaseEdition')]",
            "maxSizeBytes": "268435456000",
            "requestedServiceObjectiveName": "[variables('databaseRequestedServiceObjectiveName')]",
            "sampleName": "AdventureWorksLT"
          }
        },
        {
          "name": "[variables('dataWarehouseName')]",
          "type": "databases",
          "location": "[parameters('location')]",
          "apiVersion": "2021-02-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
          ],
          "tags": {
            "displayName": "data warehouse"
          },
          "properties": {
            "collation": "[variables('dataWarehouseCollation')]",
            "edition": "[variables('dataWarehouseEdition')]",
            "requestedServiceObjectiveName": "[variables('dataWarehouseServiceObjectiveName')]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "storageAccountResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    },
    "serverName": {
      "type": "string",
      "value": "[variables('serverName')]"
    },
    "databaseName": {
      "type": "string",
      "value": "[variables('databaseName')]"
    },
    "dataWarehouseName": {
      "type": "string",
      "value": "[variables('dataWarehouseName')]"
    },
    "databaseAdminUsername": {
      "type": "string",
      "value": "[parameters('databaseAdminUsername')]"
    }
  }
}