{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "5731616221036912762"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "prefix": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource name."
      }
    },
    "virtualNetworkAddressSpace": {
      "type": "array",
      "metadata": {
        "description": "Virtual network resource Address Space."
      }
    },
    "subnetName1": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource Subnet name."
      }
    },
    "subnetName2": {
      "type": "string"
    },
    "subnetAddressPrefix1": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource Subnet Address Prefix."
      }
    },
    "subnetAddressPrefix2": {
      "type": "string"
    },
    "clusterVmSize": {
      "type": "string"
    },
    "helmRepo": {
      "type": "string",
      "metadata": {
        "description": "Public Helm Repo Name"
      }
    },
    "helmRepoURL": {
      "type": "string",
      "metadata": {
        "description": "Public Helm Repo URL"
      }
    },
    "helmApp": {
      "type": "string",
      "metadata": {
        "description": "Public Helm App"
      }
    },
    "helmAppName": {
      "type": "string",
      "metadata": {
        "description": "Public Helm App Name"
      }
    },
    "grafanaObject": {
      "type": "object"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-aks', parameters('prefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "7392823171926592278"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-07-31-preview",
              "name": "[format('{0}-aks', parameters('prefix'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks', parameters('prefix'))), '2023-07-31-preview').principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks', parameters('prefix')))]"
              ]
            }
          ],
          "outputs": {
            "aksManagedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks', parameters('prefix')))]"
            },
            "aksManagedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks', parameters('prefix'))), '2023-07-31-preview').principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetAddressPrefix1": {
            "value": "[parameters('subnetAddressPrefix1')]"
          },
          "subnetAddressPrefix2": {
            "value": "[parameters('subnetAddressPrefix2')]"
          },
          "subnetName1": {
            "value": "[parameters('subnetName1')]"
          },
          "subnetName2": {
            "value": "[parameters('subnetName2')]"
          },
          "virtualNetworkAddressSpace": {
            "value": "[parameters('virtualNetworkAddressSpace')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "1942350553572611689"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network resource name."
              }
            },
            "virtualNetworkAddressSpace": {
              "type": "array",
              "metadata": {
                "description": "Virtual network resource Address Space."
              }
            },
            "subnetName1": {
              "type": "string",
              "metadata": {
                "description": "Virtual network resource Subnet name."
              }
            },
            "subnetName2": {
              "type": "string"
            },
            "subnetAddressPrefix1": {
              "type": "string",
              "metadata": {
                "description": "Virtual network resource Subnet Address Prefix."
              }
            },
            "subnetAddressPrefix2": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-01-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[parameters('virtualNetworkAddressSpace')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName1'))]",
              "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix1')]",
                "privateEndpointNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName2'))]",
              "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix2')]",
                "privateEndpointNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkObject": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2024-01-01', 'full')]"
            },
            "virtualNetworkName": {
              "type": "string",
              "value": "[parameters('virtualNetworkName')]"
            },
            "virtualNetworkId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            },
            "subnet1Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName1'))]"
            },
            "subnet2Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName2'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Kubernetes",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Network'), '2022-09-01').outputs.subnet2Id.value]"
          },
          "userAssignedIdentities": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aks', parameters('prefix'))), '2022-09-01').outputs.aksManagedIdentityId.value]"
          },
          "vmSize": {
            "value": "[parameters('clusterVmSize')]"
          },
          "helmRepo": {
            "value": "[parameters('helmRepo')]"
          },
          "helmRepoURL": {
            "value": "[parameters('helmRepoURL')]"
          },
          "helmApp": {
            "value": "[parameters('helmApp')]"
          },
          "helmAppName": {
            "value": "[parameters('helmAppName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "88019027783981284"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "helmRepo": {
              "type": "string",
              "defaultValue": "prometheus-community",
              "metadata": {
                "description": "Public Helm Repo Name"
              }
            },
            "helmRepoURL": {
              "type": "string",
              "defaultValue": "https://prometheus-community.github.io/helm-charts",
              "metadata": {
                "description": "Public Helm Repo URL"
              }
            },
            "helmApp": {
              "type": "string",
              "defaultValue": "prometheus-community/kube-prometheus-stack",
              "metadata": {
                "description": "Public Helm App"
              }
            },
            "helmAppName": {
              "type": "string",
              "defaultValue": "prometheus",
              "metadata": {
                "description": "Public Helm App Name"
              }
            }
          },
          "variables": {
            "$fxv#0": "#!/bin/bash\nset -e\n\n# Download and install Helm\nwget -O helm.tgz https://get.helm.sh/helm-v3.15.4-linux-amd64.tar.gz\ntar -zxvf helm.tgz\nmv linux-amd64/helm /usr/local/bin/helm\n# Install kubectl\naz aks install-cli\n\n# Get cluster credentials\naz aks get-credentials -g $RESOURCEGROUP -n $CLUSTER_NAME\n\n# Install Simple Helm Chart https://github.com/bitnami/azure-marketplace-charts\n\nhelm repo add \\\n    $HELM_REPO \\\n    $HELM_REPO_URL\n\nhelm repo update\n\nhelm install $HELM_APP_NAME \\\n    $HELM_APP \\\n    --namespace monitoring \\\n    --create-namespace\n\nkubectlcontent='apiVersion: v1\nkind: Service\nmetadata:\n  name: prom-pls-svc\n  annotations:\n    service.beta.kubernetes.io/azure-load-balancer-internal: \"true\" # Use an internal LB with PLS\n    service.beta.kubernetes.io/azure-pls-create: \"true\"\n    service.beta.kubernetes.io/azure-pls-name: prometheusManagedPls\n    service.beta.kubernetes.io/azure-pls-resource-group: '\"$RESOURCEGROUP\"'\n    service.beta.kubernetes.io/azure-pls-proxy-protocol: \"false\"\n    service.beta.kubernetes.io/azure-pls-visibility: \"*\"\nspec:\n  type: LoadBalancer\n  selector:\n    # app: myApp\n    app.kubernetes.io/name: prometheus\n    prometheus: prometheus-kube-prometheus-prometheus # note that this is related to the release name\n  ports:\n    - name: http-web\n      protocol: TCP\n      port: 9090\n      targetPort: 9090\n'\n\necho \"$kubectlcontent\" | kubectl --namespace monitoring apply -f -\n\necho \\{\\\"plsName\\\":\\\"prometheusManagedPls\\\"\\} > $AZ_SCRIPTS_OUTPUT_PATH",
            "helmRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
            "helmRoleAssignmentName": "[guid(variables('helmRoleDefinitionId'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'helmIdentityName'), resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2024-04-02-preview",
              "name": "[format('{0}-aks', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('userAssignedIdentities'))]": {}
                }
              },
              "sku": {
                "name": "Base",
                "tier": "Standard"
              },
              "properties": {
                "nodeResourceGroup": "[format('{0}-aks-MC', parameters('prefix'))]",
                "dnsPrefix": "[format('{0}-aks-dns', parameters('prefix'))]",
                "disableLocalAccounts": false,
                "networkProfile": {
                  "loadBalancerSku": "standard",
                  "networkPlugin": "azure",
                  "networkPluginMode": "overlay",
                  "networkDataplane": "azure",
                  "networkPolicy": "azure"
                },
                "addonProfiles": {
                  "azureKeyvaultSecretsProvider": {
                    "enabled": true,
                    "config": {
                      "enableSecretRotation": "false",
                      "rotationPollInterval": "2m"
                    }
                  }
                },
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "osDiskSizeGB": 128,
                    "count": 1,
                    "enableAutoScaling": true,
                    "minCount": 1,
                    "maxCount": 2,
                    "vmSize": "[parameters('vmSize')]",
                    "osType": "Linux",
                    "osSKU": "Ubuntu",
                    "type": "VirtualMachineScaleSets",
                    "mode": "System",
                    "maxPods": 110,
                    "enableNodePublicIP": false,
                    "vnetSubnetID": "[parameters('subnetId')]"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-07-31-preview",
              "name": "helmIdentityName",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[variables('helmRoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[variables('helmRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'helmIdentityName'), '2023-07-31-preview').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'helmIdentityName')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2023-08-01",
              "name": "helmCustomScript",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'helmIdentityName'))]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azCliVersion": "2.63.0",
                "timeout": "PT300M",
                "environmentVariables": [
                  {
                    "name": "RESOURCEGROUP",
                    "secureValue": "[resourceGroup().name]"
                  },
                  {
                    "name": "CLUSTER_NAME",
                    "secureValue": "[format('{0}-aks', parameters('prefix'))]"
                  },
                  {
                    "name": "HELM_REPO",
                    "secureValue": "[parameters('helmRepo')]"
                  },
                  {
                    "name": "HELM_REPO_URL",
                    "secureValue": "[parameters('helmRepoURL')]"
                  },
                  {
                    "name": "HELM_APP",
                    "secureValue": "[parameters('helmApp')]"
                  },
                  {
                    "name": "HELM_APP_NAME",
                    "secureValue": "[parameters('helmAppName')]"
                  }
                ],
                "scriptContent": "[variables('$fxv#0')]",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', format('{0}-aks', parameters('prefix')))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('helmRoleAssignmentName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'helmIdentityName')]"
              ]
            }
          ],
          "outputs": {
            "kubernetesName": {
              "type": "string",
              "value": "[format('{0}-aks', parameters('prefix'))]"
            },
            "kubernetesId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerService/managedClusters', format('{0}-aks', parameters('prefix')))]"
            },
            "nodeResourceGroup": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', format('{0}-aks', parameters('prefix'))), '2024-04-02-preview').nodeResourceGroup]"
            },
            "helmOutput": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'helmCustomScript'), '2023-08-01').outputs.plsName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-aks', parameters('prefix')))]",
        "[resourceId('Microsoft.Resources/deployments', 'Network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Grafana",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "apiKey": {
            "value": "[parameters('grafanaObject').apiKey]"
          },
          "autoGeneratedDomainNameLabelScope": {
            "value": "[parameters('grafanaObject').autoGeneratedDomainNameLabelScope]"
          },
          "deterministicOutboundIP": {
            "value": "[parameters('grafanaObject').deterministicOutboundIP]"
          },
          "grafanaMajorVersion": {
            "value": "[parameters('grafanaObject').grafanaMajorVersion]"
          },
          "grafanaSkuName": {
            "value": "[parameters('grafanaObject').grafanaSkuName]"
          },
          "publicNetworkAccess": {
            "value": "[parameters('grafanaObject').publicNetworkAccess]"
          },
          "smtp": {
            "value": "[parameters('grafanaObject').grafanaConfigurations.smtp]"
          },
          "zoneRedundancy": {
            "value": "[parameters('grafanaObject').zoneRedundancy]"
          },
          "privateDnsZoneName": {
            "value": "[parameters('grafanaObject').privateDnsZoneName]"
          },
          "privateLinkServiceUrl": {
            "value": "[parameters('grafanaObject').privateLinkServiceUrl]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Network'), '2022-09-01').outputs.virtualNetworkId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Network'), '2022-09-01').outputs.subnet1Id.value]"
          },
          "helmOutput": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Kubernetes'), '2022-09-01').outputs.helmOutput.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "18197254254175745040"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "apiKey": {
              "type": "string"
            },
            "autoGeneratedDomainNameLabelScope": {
              "type": "string"
            },
            "deterministicOutboundIP": {
              "type": "string"
            },
            "grafanaMajorVersion": {
              "type": "string"
            },
            "grafanaSkuName": {
              "type": "string"
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "smtp": {
              "type": "bool"
            },
            "zoneRedundancy": {
              "type": "string"
            },
            "privateDnsZoneName": {
              "type": "string"
            },
            "privateLinkServiceUrl": {
              "type": "string"
            },
            "virtualNetworkId": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "helmOutput": {
              "type": "string"
            },
            "privateLinkResourceId": {
              "type": "string",
              "defaultValue": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/privateLinkServices/{2}', subscription().subscriptionId, resourceGroup().name, parameters('helmOutput'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Dashboard/grafana",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}-grafana', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('grafanaSkuName')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "apiKey": "[parameters('apiKey')]",
                "autoGeneratedDomainNameLabelScope": "[parameters('autoGeneratedDomainNameLabelScope')]",
                "deterministicOutboundIP": "[parameters('deterministicOutboundIP')]",
                "grafanaConfigurations": {
                  "smtp": {
                    "enabled": "[parameters('smtp')]"
                  }
                },
                "grafanaMajorVersion": "[parameters('grafanaMajorVersion')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix'))), '1')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix'))), '2023-09-01', 'full').identity.principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), toLower(parameters('virtualNetworkName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-pe', format('{0}-grafana', parameters('prefix')))]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-pe', format('{0}-grafana', parameters('prefix')))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix')))]",
                      "groupIds": [
                        "[split(split('Microsoft.Dashboard/grafana', '/')[1], '@')[0]]"
                      ],
                      "privateLinkServiceConnectionState": {
                        "description": "Auto-Approved",
                        "status": "Approved"
                      }
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', format('{0}-pe', format('{0}-grafana', parameters('prefix'))), format('{0}-dnszonegroup', format('{0}-grafana', parameters('prefix'))))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[replace(parameters('privateDnsZoneName'), '.', '-')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', format('{0}-grafana', parameters('prefix'))))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Dashboard/grafana/managedPrivateEndpoints",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}/{1}', format('{0}-grafana', parameters('prefix')), 'prometheusManagedPls')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkResourceId": "[parameters('privateLinkResourceId')]",
                "privateLinkServiceUrl": "[parameters('privateLinkServiceUrl')]",
                "requestMessage": "Please approve my connection"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', format('{0}-grafana', parameters('prefix'))))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PrivateLinkApprovalScripts",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "privateLinkServicenName": {
                    "value": "prometheusManagedPls"
                  },
                  "helmOutput": {
                    "value": "[parameters('helmOutput')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.30.23.60470",
                      "templateHash": "8569543795179704440"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Location of all resources to be deployed"
                      }
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "privateLinkServicenType": {
                      "type": "string",
                      "defaultValue": "Microsoft.Network/privateLinkServices",
                      "metadata": {
                        "description": "Private link service type"
                      }
                    },
                    "privateLinkServicenName": {
                      "type": "string",
                      "metadata": {
                        "description": "Private link service Name"
                      }
                    },
                    "helmOutput": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "#!/bin/bash\nset -e\n\n# Approve private endpoint connection\npecname=$(az network private-endpoint-connection list \\\n  --name $PRIVATE_LINK_SERVICE_NAME \\\n  --resource-group $PRIVATE_LINK_SERVICE_RG \\\n  --type  $PRIVATE_LINK_SERVICE_TYPE \\\n  --query \"[0].name\" --output tsv)\n\naz network private-endpoint-connection approve \\\n  --name $pecname \\\n  --resource-name $PRIVATE_LINK_SERVICE_NAME \\\n  --resource-group $PRIVATE_LINK_SERVICE_RG \\\n  --description \"Please approve $PLS_RESOURSENAME\" \\\n  --type  $PRIVATE_LINK_SERVICE_TYPE",
                    "identityName": "[format('scratch{0}', uniqueString(resourceGroup().id))]",
                    "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                    "roleAssignmentName": "[guid(variables('roleDefinitionId'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), resourceGroup().id)]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-07-31-preview",
                      "name": "[variables('identityName')]",
                      "location": "[parameters('location')]"
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[variables('roleAssignmentName')]",
                      "properties": {
                        "roleDefinitionId": "[variables('roleDefinitionId')]",
                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2023-07-31-preview').principalId]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "customScript",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
                        }
                      },
                      "properties": {
                        "forceUpdateTag": "[parameters('utcValue')]",
                        "azCliVersion": "2.63.0",
                        "timeout": "PT300M",
                        "environmentVariables": [
                          {
                            "name": "PRIVATE_LINK_SERVICE_NAME",
                            "secureValue": "[parameters('privateLinkServicenName')]"
                          },
                          {
                            "name": "PRIVATE_LINK_SERVICE_RG",
                            "secureValue": "[resourceGroup().name]"
                          },
                          {
                            "name": "PRIVATE_LINK_SERVICE_TYPE",
                            "secureValue": "[parameters('privateLinkServicenType')]"
                          },
                          {
                            "name": "PLS_RESOURSENAME",
                            "secureValue": "[parameters('helmOutput')]"
                          }
                        ],
                        "scriptContent": "[variables('$fxv#0')]",
                        "cleanupPreference": "OnSuccess",
                        "retentionInterval": "P1D"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignmentName'))]",
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana/managedPrivateEndpoints', format('{0}-grafana', parameters('prefix')), 'prometheusManagedPls')]"
              ]
            }
          ],
          "outputs": {
            "grafaneEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Dashboard/grafana', format('{0}-grafana', parameters('prefix'))), '2023-09-01').endpoint]"
            },
            "mpeplsEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Dashboard/grafana/managedPrivateEndpoints', format('{0}-grafana', parameters('prefix')), 'prometheusManagedPls'), '2023-09-01').privateLinkServiceUrl]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Kubernetes')]",
        "[resourceId('Microsoft.Resources/deployments', 'Network')]"
      ]
    }
  ],
  "outputs": {
    "grafanaEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Grafana'), '2022-09-01').outputs.grafaneEndpoint.value]"
    },
    "mpeplsEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Grafana'), '2022-09-01').outputs.mpeplsEndpoint.value]"
    }
  }
}