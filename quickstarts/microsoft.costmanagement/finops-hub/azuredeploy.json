{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "6665130305505342036"
    }
  },
  "parameters": {
    "hubName": {
      "type": "string",
      "metadata": {
        "description": "Optional. Name of the hub. Used to ensure unique resource names. Default: \"finops-hub\"."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Azure location where all resources should be created. See https://aka.ms/azureregions. Default: Same as deployment."
      }
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS"
      ],
      "metadata": {
        "description": "Optional. Storage SKU to use. LRS = Lowest cost, ZRS = High availability. Note Standard SKUs are not available for Data Lake gen2 storage. Allowed: Premium_LRS, Premium_ZRS. Default: Premium_LRS."
      }
    },
    "enableInfrastructureEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enable infrastructure encryption on the storage account. Default = false."
      }
    },
    "remoteHubStorageUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Storage account to push data to for ingestion into a remote hub."
      }
    },
    "remoteHubStorageKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Storage account key to use when pushing data to a remote hub."
      }
    },
    "dataExplorerName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the Azure Data Explorer cluster to use for advanced analytics. If empty, Azure Data Explorer will not be deployed. Required to use with Power BI if you have more than $2-5M/mo in costs being monitored. Default: \"\" (do not use)."
      }
    },
    "dataExplorerSku": {
      "type": "string",
      "defaultValue": "Dev(No SLA)_Standard_D11_v2",
      "allowedValues": [
        "Dev(No SLA)_Standard_E2a_v4",
        "Dev(No SLA)_Standard_D11_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D16d_v5",
        "Standard_D32d_v4",
        "Standard_D32d_v5",
        "Standard_DS13_v2+1TB_PS",
        "Standard_DS13_v2+2TB_PS",
        "Standard_DS14_v2+3TB_PS",
        "Standard_DS14_v2+4TB_PS",
        "Standard_E2a_v4",
        "Standard_E2ads_v5",
        "Standard_E2d_v4",
        "Standard_E2d_v5",
        "Standard_E4a_v4",
        "Standard_E4ads_v5",
        "Standard_E4d_v4",
        "Standard_E4d_v5",
        "Standard_E8a_v4",
        "Standard_E8ads_v5",
        "Standard_E8as_v4+1TB_PS",
        "Standard_E8as_v4+2TB_PS",
        "Standard_E8as_v5+1TB_PS",
        "Standard_E8as_v5+2TB_PS",
        "Standard_E8d_v4",
        "Standard_E8d_v5",
        "Standard_E8s_v4+1TB_PS",
        "Standard_E8s_v4+2TB_PS",
        "Standard_E8s_v5+1TB_PS",
        "Standard_E8s_v5+2TB_PS",
        "Standard_E16a_v4",
        "Standard_E16ads_v5",
        "Standard_E16as_v4+3TB_PS",
        "Standard_E16as_v4+4TB_PS",
        "Standard_E16as_v5+3TB_PS",
        "Standard_E16as_v5+4TB_PS",
        "Standard_E16d_v4",
        "Standard_E16d_v5",
        "Standard_E16s_v4+3TB_PS",
        "Standard_E16s_v4+4TB_PS",
        "Standard_E16s_v5+3TB_PS",
        "Standard_E16s_v5+4TB_PS",
        "Standard_E64i_v3",
        "Standard_E80ids_v4",
        "Standard_EC8ads_v5",
        "Standard_EC8as_v5+1TB_PS",
        "Standard_EC8as_v5+2TB_PS",
        "Standard_EC16ads_v5",
        "Standard_EC16as_v5+3TB_PS",
        "Standard_EC16as_v5+4TB_PS",
        "Standard_L4s",
        "Standard_L8as_v3",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_L8s_v3",
        "Standard_L16as_v3",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L16s_v3",
        "Standard_L32as_v3",
        "Standard_L32s_v3"
      ],
      "metadata": {
        "description": "Optional. Name of the Azure Data Explorer SKU. Default: \"Dev(No SLA)_Standard_D11_v2\"."
      }
    },
    "dataExplorerCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 1000,
      "metadata": {
        "description": "Optional. Number of nodes to use in the cluster. Allowed values: 1 for the Basic SKU tier and 2-1000 for Standard. Default: 1 for dev/test SKUs, 2 for standard SKUs."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags to apply to all resources. We will also add the cm-resource-parent tag for improved cost roll-ups in Cost Management."
      }
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
      }
    },
    "scopesToMonitor": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of scope IDs to monitor and ingest cost for."
      }
    },
    "exportRetentionInDays": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Number of days of data to retain in the msexports container. Default: 0."
      }
    },
    "ingestionRetentionInMonths": {
      "type": "int",
      "defaultValue": 13,
      "metadata": {
        "description": "Optional. Number of months of data to retain in the ingestion container. Default: 13."
      }
    },
    "dataExplorerRawRetentionInDays": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Number of days of data to retain in the Data Explorer *_raw tables. Default: 0."
      }
    },
    "dataExplorerFinalRetentionInMonths": {
      "type": "int",
      "defaultValue": 13,
      "metadata": {
        "description": "Optional. Number of months of data to retain in the Data Explorer *_final_v* tables. Default: 13."
      }
    },
    "enablePublicAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable public access to FinOps hubs resources.  Default: true."
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.20.30.0/26",
      "metadata": {
        "description": "Optional. Address space for the workload. A /26 is required for the workload. Default: \"10.20.30.0/26\"."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hubName": {
            "value": "[parameters('hubName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageSku": {
            "value": "[parameters('storageSku')]"
          },
          "enableInfrastructureEncryption": {
            "value": "[parameters('enableInfrastructureEncryption')]"
          },
          "dataExplorerName": {
            "value": "[parameters('dataExplorerName')]"
          },
          "dataExplorerSku": {
            "value": "[parameters('dataExplorerSku')]"
          },
          "dataExplorerCapacity": {
            "value": "[parameters('dataExplorerCapacity')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "scopesToMonitor": {
            "value": "[parameters('scopesToMonitor')]"
          },
          "exportRetentionInDays": {
            "value": "[parameters('exportRetentionInDays')]"
          },
          "ingestionRetentionInMonths": {
            "value": "[parameters('ingestionRetentionInMonths')]"
          },
          "dataExplorerRawRetentionInDays": {
            "value": "[parameters('dataExplorerRawRetentionInDays')]"
          },
          "dataExplorerFinalRetentionInMonths": {
            "value": "[parameters('dataExplorerFinalRetentionInMonths')]"
          },
          "remoteHubStorageUri": {
            "value": "[parameters('remoteHubStorageUri')]"
          },
          "remoteHubStorageKey": {
            "value": "[parameters('remoteHubStorageKey')]"
          },
          "enablePublicAccess": {
            "value": "[parameters('enablePublicAccess')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "9032999427449681343"
            }
          },
          "parameters": {
            "hubName": {
              "type": "string",
              "metadata": {
                "description": "Optional. Name of the hub. Used to ensure unique resource names. Default: \"finops-hub\"."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Azure location where all resources should be created. See https://aka.ms/azureregions. Default: (resource group location)."
              }
            },
            "storageSku": {
              "type": "string",
              "defaultValue": "Premium_LRS",
              "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS"
              ],
              "metadata": {
                "description": "Optional. Storage SKU to use. LRS = Lowest cost, ZRS = High availability. Note Standard SKUs are not available for Data Lake gen2 storage. Allowed: Premium_LRS, Premium_ZRS. Default: Premium_LRS."
              }
            },
            "enableInfrastructureEncryption": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. Enable infrastructure encryption on the storage account. Default = false."
              }
            },
            "remoteHubStorageUri": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Remote storage account for ingestion dataset."
              }
            },
            "remoteHubStorageKey": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Storage account key for remote storage account."
              }
            },
            "dataExplorerName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Name of the Azure Data Explorer cluster to use for advanced analytics. If empty, Azure Data Explorer will not be deployed. Required to use with Power BI if you have more than $2-5M/mo in costs being monitored. Default: \"\" (do not use)."
              }
            },
            "dataExplorerSku": {
              "type": "string",
              "defaultValue": "Dev(No SLA)_Standard_D11_v2",
              "allowedValues": [
                "Dev(No SLA)_Standard_E2a_v4",
                "Dev(No SLA)_Standard_D11_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D16d_v5",
                "Standard_D32d_v4",
                "Standard_D32d_v5",
                "Standard_DS13_v2+1TB_PS",
                "Standard_DS13_v2+2TB_PS",
                "Standard_DS14_v2+3TB_PS",
                "Standard_DS14_v2+4TB_PS",
                "Standard_E2a_v4",
                "Standard_E2ads_v5",
                "Standard_E2d_v4",
                "Standard_E2d_v5",
                "Standard_E4a_v4",
                "Standard_E4ads_v5",
                "Standard_E4d_v4",
                "Standard_E4d_v5",
                "Standard_E8a_v4",
                "Standard_E8ads_v5",
                "Standard_E8as_v4+1TB_PS",
                "Standard_E8as_v4+2TB_PS",
                "Standard_E8as_v5+1TB_PS",
                "Standard_E8as_v5+2TB_PS",
                "Standard_E8d_v4",
                "Standard_E8d_v5",
                "Standard_E8s_v4+1TB_PS",
                "Standard_E8s_v4+2TB_PS",
                "Standard_E8s_v5+1TB_PS",
                "Standard_E8s_v5+2TB_PS",
                "Standard_E16a_v4",
                "Standard_E16ads_v5",
                "Standard_E16as_v4+3TB_PS",
                "Standard_E16as_v4+4TB_PS",
                "Standard_E16as_v5+3TB_PS",
                "Standard_E16as_v5+4TB_PS",
                "Standard_E16d_v4",
                "Standard_E16d_v5",
                "Standard_E16s_v4+3TB_PS",
                "Standard_E16s_v4+4TB_PS",
                "Standard_E16s_v5+3TB_PS",
                "Standard_E16s_v5+4TB_PS",
                "Standard_E64i_v3",
                "Standard_E80ids_v4",
                "Standard_EC8ads_v5",
                "Standard_EC8as_v5+1TB_PS",
                "Standard_EC8as_v5+2TB_PS",
                "Standard_EC16ads_v5",
                "Standard_EC16as_v5+3TB_PS",
                "Standard_EC16as_v5+4TB_PS",
                "Standard_L4s",
                "Standard_L8as_v3",
                "Standard_L8s",
                "Standard_L8s_v2",
                "Standard_L8s_v3",
                "Standard_L16as_v3",
                "Standard_L16s",
                "Standard_L16s_v2",
                "Standard_L16s_v3",
                "Standard_L32as_v3",
                "Standard_L32s_v3"
              ],
              "metadata": {
                "description": "Optional. Name of the Azure Data Explorer SKU. Default: \"Dev(No SLA)_Standard_D11_v2\"."
              }
            },
            "dataExplorerCapacity": {
              "type": "int",
              "defaultValue": 1,
              "minValue": 1,
              "maxValue": 1000,
              "metadata": {
                "description": "Optional. Number of nodes to use in the cluster. Allowed values: 1 for the Basic SKU tier and 2-1000 for Standard. Default: 1 for dev/test SKUs, 2 for standard SKUs."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags to apply to all resources. We will also add the cm-resource-parent tag for improved cost roll-ups in Cost Management."
              }
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
              }
            },
            "scopesToMonitor": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of scope IDs to monitor and ingest cost for."
              }
            },
            "exportRetentionInDays": {
              "type": "int",
              "defaultValue": 0,
              "metadata": {
                "description": "Optional. Number of days of data to retain in the msexports container. Default: 0."
              }
            },
            "ingestionRetentionInMonths": {
              "type": "int",
              "defaultValue": 13,
              "metadata": {
                "description": "Optional. Number of months of data to retain in the ingestion container. Default: 13."
              }
            },
            "dataExplorerRawRetentionInDays": {
              "type": "int",
              "defaultValue": 0,
              "metadata": {
                "description": "Optional. Number of days of data to retain in the Data Explorer *_raw tables. Default: 0."
              }
            },
            "dataExplorerFinalRetentionInMonths": {
              "type": "int",
              "defaultValue": 13,
              "metadata": {
                "description": "Optional. Number of months of data to retain in the Data Explorer *_final_v* tables. Default: 13."
              }
            },
            "enablePublicAccess": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable public access to the data lake. Default: true."
              }
            },
            "virtualNetworkAddressPrefix": {
              "type": "string",
              "defaultValue": "10.20.30.0/26",
              "metadata": {
                "description": "Optional. Address space for the workload. A /26 is required for the workload. Default: \"10.20.30.0/26\"."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry to track anonymous module usage trends, monitor for bugs, and improve future releases."
              }
            }
          },
          "variables": {
            "$fxv#0": "0.9",
            "finOpsToolkitVersion": "0.9",
            "resourceTags": "[union(parameters('tags'), createObject('cm-resource-parent', format('{0}/providers/Microsoft.Cloud/hubs/{1}', resourceGroup().id, parameters('hubName')), 'ftk-version', variables('finOpsToolkitVersion'), 'ftk-tool', 'FinOps hubs'))]",
            "uniqueSuffix": "[uniqueString(parameters('hubName'), resourceGroup().id)]",
            "dataFactoryPrefix": "[format('{0}-engine', replace(parameters('hubName'), '_', '-'))]",
            "dataFactorySuffix": "[format('-{0}', variables('uniqueSuffix'))]",
            "dataFactoryName": "[replace(format('{0}{1}', take(variables('dataFactoryPrefix'), sub(63, length(variables('dataFactorySuffix')))), variables('dataFactorySuffix')), '--', '-')]",
            "deployDataExplorer": "[not(empty(parameters('dataExplorerName')))]",
            "telemetryId": "[join(createArray('00f120b5-2007-6120-0000-40b000000000_', if(or(empty(parameters('remoteHubStorageUri')), empty(parameters('remoteHubStorageKey'))), '', 'R'), substring(split(parameters('storageSku'), '_')[1], 0, 1), if(empty(parameters('dataExplorerName')), '', format('X{0}', substring(parameters('dataExplorerSku'), 0, 1))), if(empty(parameters('dataExplorerName')), '', replace(replace(replace(replace(replace(replace(replace(replace(split(split(parameters('dataExplorerSku'), 'Standard_')[1], '_')[0], 'C', ''), 'D', ''), 'E', ''), 'L', ''), 'a', ''), 'd', ''), 'i', ''), 's', '')), if(or(empty(parameters('dataExplorerName')), equals(parameters('dataExplorerCapacity'), 1)), '', format('x{0}', parameters('dataExplorerCapacity'))), if(parameters('enablePublicAccess'), '', 'P')), '')]"
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}_{1}', variables('telemetryId'), uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "FinOps toolkit",
                      "version": "[variables('$fxv#0')]"
                    }
                  },
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.DataFactory/factories",
              "apiVersion": "2018-06-01",
              "name": "[variables('dataFactoryName')]",
              "location": "[parameters('location')]",
              "tags": "[union(variables('resourceTags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.DataFactory/factories'), createObject()))]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "globalConfigurations": {
                  "PipelineBillingEnabled": "true"
                }
              }
            },
            {
              "condition": "[not(parameters('enablePublicAccess'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "vnet",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "hubName": {
                    "value": "[parameters('hubName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "virtualNetworkAddressPrefix": {
                    "value": "[parameters('virtualNetworkAddressPrefix')]"
                  },
                  "tags": {
                    "value": "[variables('resourceTags')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "981936302292714375"
                    }
                  },
                  "parameters": {
                    "hubName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the hub. Used to ensure unique resource names."
                      }
                    },
                    "virtualNetworkAddressPrefix": {
                      "type": "string",
                      "defaultValue": "10.20.30.0/26",
                      "metadata": {
                        "description": "Optional. Address space for the workload. A /26 is required for the workload. Default: \"10.20.30.0/26\"."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Azure location where all resources should be created. See https://aka.ms/azureregions. Default: (resource group location)."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to all resources."
                      }
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
                      }
                    }
                  },
                  "variables": {
                    "safeHubName": "[replace(replace(toLower(parameters('hubName')), '-', ''), '_', '')]",
                    "vNetName": "[format('{0}-vnet-{1}', variables('safeHubName'), parameters('location'))]",
                    "nsgName": "[format('{0}-nsg', variables('vNetName'))]",
                    "subnets": [
                      {
                        "name": "private-endpoint-subnet",
                        "properties": {
                          "addressPrefix": "[cidrSubnet(parameters('virtualNetworkAddressPrefix'), 28, 0)]",
                          "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                          },
                          "serviceEndpoints": [
                            {
                              "service": "Microsoft.Storage"
                            }
                          ]
                        }
                      },
                      {
                        "name": "script-subnet",
                        "properties": {
                          "addressPrefix": "[cidrSubnet(parameters('virtualNetworkAddressPrefix'), 28, 1)]",
                          "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                          },
                          "delegations": [
                            {
                              "name": "Microsoft.ContainerInstance/containerGroups",
                              "properties": {
                                "serviceName": "Microsoft.ContainerInstance/containerGroups"
                              }
                            }
                          ],
                          "serviceEndpoints": [
                            {
                              "service": "Microsoft.Storage"
                            }
                          ]
                        }
                      },
                      {
                        "name": "dataExplorer-subnet",
                        "properties": {
                          "addressPrefix": "[cidrSubnet(parameters('virtualNetworkAddressPrefix'), 27, 1)]",
                          "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                          }
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[variables('nsgName')]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/networkSecurityGroups'), createObject()))]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowVnetInBound",
                            "properties": {
                              "priority": 100,
                              "direction": "Inbound",
                              "access": "Allow",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork"
                            }
                          },
                          {
                            "name": "AllowAzureLoadBalancerInBound",
                            "properties": {
                              "priority": 200,
                              "direction": "Inbound",
                              "access": "Allow",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*"
                            }
                          },
                          {
                            "name": "DenyAllInBound",
                            "properties": {
                              "priority": 4096,
                              "direction": "Inbound",
                              "access": "Deny",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*"
                            }
                          },
                          {
                            "name": "AllowVnetOutBound",
                            "properties": {
                              "priority": 100,
                              "direction": "Outbound",
                              "access": "Allow",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork"
                            }
                          },
                          {
                            "name": "AllowInternetOutBound",
                            "properties": {
                              "priority": 200,
                              "direction": "Outbound",
                              "access": "Allow",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "Internet"
                            }
                          },
                          {
                            "name": "DenyAllOutBound",
                            "properties": {
                              "priority": 4096,
                              "direction": "Outbound",
                              "access": "Deny",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-11-01",
                      "name": "[variables('vNetName')]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/virtualNetworks'), createObject()))]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('virtualNetworkAddressPrefix')]"
                          ]
                        },
                        "subnets": "[variables('subnets')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "vNetId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
                    },
                    "vNetName": {
                      "type": "string",
                      "value": "[variables('vNetName')]"
                    },
                    "vNetAddressSpace": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '2023-11-01').addressSpace.addressPrefixes]"
                    },
                    "vNetSubnets": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '2023-11-01').subnets]"
                    },
                    "finopsHubSubnetId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '2023-11-01').subnets[0].id]"
                    },
                    "scriptSubnetId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '2023-11-01').subnets[1].id]"
                    },
                    "dataExplorerSubnetId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '2023-11-01').subnets[2].id]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "hubName": {
                    "value": "[parameters('hubName')]"
                  },
                  "uniqueSuffix": {
                    "value": "[variables('uniqueSuffix')]"
                  },
                  "sku": {
                    "value": "[parameters('storageSku')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[variables('resourceTags')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableInfrastructureEncryption": {
                    "value": "[parameters('enableInfrastructureEncryption')]"
                  },
                  "scopesToMonitor": {
                    "value": "[parameters('scopesToMonitor')]"
                  },
                  "msexportRetentionInDays": {
                    "value": "[parameters('exportRetentionInDays')]"
                  },
                  "ingestionRetentionInMonths": {
                    "value": "[parameters('ingestionRetentionInMonths')]"
                  },
                  "rawRetentionInDays": {
                    "value": "[parameters('dataExplorerRawRetentionInDays')]"
                  },
                  "finalRetentionInMonths": {
                    "value": "[parameters('dataExplorerFinalRetentionInMonths')]"
                  },
                  "virtualNetworkId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.vNetId.value))]",
                  "privateEndpointSubnetId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.finopsHubSubnetId.value))]",
                  "scriptSubnetId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.scriptSubnetId.value))]",
                  "enablePublicAccess": {
                    "value": "[parameters('enablePublicAccess')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "4390747260549399432"
                    }
                  },
                  "parameters": {
                    "hubName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the FinOps hub instance. Used to ensure unique resource names."
                      }
                    },
                    "uniqueSuffix": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Suffix to add to the storage account name to ensure uniqueness."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Azure location where all resources should be created. See https://aka.ms/azureregions. Default: (resource group location)."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "Premium_LRS",
                      "allowedValues": [
                        "Premium_LRS",
                        "Premium_ZRS"
                      ],
                      "metadata": {
                        "description": "Optional. Storage SKU to use. LRS = Lowest cost, ZRS = High availability. Note Standard SKUs are not available for Data Lake gen2 storage. Allowed: Premium_LRS, Premium_ZRS. Default: Premium_LRS."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to all resources."
                      }
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
                      }
                    },
                    "scopesToMonitor": {
                      "type": "array",
                      "metadata": {
                        "description": "Optional. List of scope IDs to monitor and ingest cost for."
                      }
                    },
                    "msexportRetentionInDays": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Optional. Number of days of data to retain in the msexports container. Default: 0."
                      }
                    },
                    "ingestionRetentionInMonths": {
                      "type": "int",
                      "defaultValue": 13,
                      "metadata": {
                        "description": "Optional. Number of months of data to retain in the ingestion container. Default: 13."
                      }
                    },
                    "enableInfrastructureEncryption": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Optional. Enable infrastructure encryption on the storage account. Default = false."
                      }
                    },
                    "rawRetentionInDays": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Optional. Number of days of data to retain in the Data Explorer *_raw tables. Default: 0."
                      }
                    },
                    "finalRetentionInMonths": {
                      "type": "int",
                      "defaultValue": 13,
                      "metadata": {
                        "description": "Optional. Number of months of data to retain in the Data Explorer *_final_v* tables. Default: 13."
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Id of the virtual network for private endpoints."
                      }
                    },
                    "privateEndpointSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Id of the subnet for private endpoints."
                      }
                    },
                    "scriptSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Id of the virtual network for running deployment scripts."
                      }
                    },
                    "enablePublicAccess": {
                      "type": "bool",
                      "metadata": {
                        "description": "Optional. Enable public access to the data lake.  Default: false."
                      }
                    }
                  },
                  "variables": {
                    "$fxv#0": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"BilledCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"BilledCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingPeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"BillingPeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingPeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"BillingPeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeClass\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeClass\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeFrequency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeFrequency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargePeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"ChargePeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargePeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"ChargePeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountStatus\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountStatus\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ConsumedQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ConsumedQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ConsumedUnit\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ConsumedUnit\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ContractedCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ContractedCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ContractedUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ContractedUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"EffectiveCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InvoiceIssuerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InvoiceIssuerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ListCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ListCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ListUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ListUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PricingCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"PricingQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingUnit\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PricingUnit\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ProviderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ProviderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PublisherName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PublisherName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"RegionId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"RegionId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"RegionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"RegionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuPriceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuPriceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Tags\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Tags\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountOwnerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountOwnerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BilledCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BilledCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BilledUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BilledUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingExchangeRate\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BillingExchangeRate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingExchangeRateDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_BillingExchangeRateDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingProfileId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingProfileId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingProfileName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingProfileName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ContractedCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_ContractedCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CostAllocationRuleName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CostAllocationRuleName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CostCenter\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CostCenter\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CustomerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CustomerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CustomerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CustomerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_EffectiveCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_EffectiveCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_EffectiveUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_EffectiveUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceIssuerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceIssuerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceSectionId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceSectionId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceSectionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceSectionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ListCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_ListCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PartnerCreditApplied\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PartnerCreditApplied\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PartnerCreditRate\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PartnerCreditRate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingBlockSize\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_PricingBlockSize\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingUnitDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingUnitDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PublisherCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PublisherCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PublisherId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PublisherId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResellerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResellerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResellerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResellerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResourceGroupName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResourceGroupName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ServicePeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_ServicePeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ServicePeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_ServicePeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuDetails\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuDetails\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuIsCreditEligible\", \"type\": \"Boolean\" },\r\n        \"sink\": { \"name\": \"x_SkuIsCreditEligible\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOfferId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOfferId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOrderId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOrderId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOrderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOrderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuPartNumber\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuPartNumber\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuRegion\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuRegion\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuServiceFamily\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuServiceFamily\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuTerm\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuTerm\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuTier\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuTier\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#1": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"BilledCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"BilledCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingPeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"BillingPeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingPeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"BillingPeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeClass\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeClass\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeFrequency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeFrequency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargePeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"ChargePeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargePeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"ChargePeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountStatus\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountStatus\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ConsumedQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ConsumedQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ConsumedUnit\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ConsumedUnit\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ContractedCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ContractedCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ContractedUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ContractedUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"EffectiveCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InvoiceIssuerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InvoiceIssuerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ListCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ListCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ListUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ListUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PricingCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"PricingQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingUnit\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PricingUnit\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ProviderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ProviderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PublisherName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PublisherName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"RegionId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"RegionId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"RegionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"RegionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuPriceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuPriceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Tags\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Tags\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountOwnerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountOwnerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BilledCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BilledCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BilledUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BilledUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingExchangeRate\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BillingExchangeRate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingExchangeRateDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_BillingExchangeRateDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingProfileId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingProfileId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingProfileName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingProfileName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ContractedCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_ContractedCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CostAllocationRuleName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CostAllocationRuleName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CostCenter\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CostCenter\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CustomerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CustomerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CustomerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CustomerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_EffectiveCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_EffectiveCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_EffectiveUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_EffectiveUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceIssuerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceIssuerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceSectionId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceSectionId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceSectionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceSectionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ListCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_ListCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PartnerCreditApplied\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PartnerCreditApplied\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PartnerCreditRate\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PartnerCreditRate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingBlockSize\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_PricingBlockSize\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingUnitDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingUnitDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PublisherCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PublisherCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PublisherId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PublisherId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResellerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResellerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResellerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResellerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResourceGroupName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResourceGroupName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ServicePeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_ServicePeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ServicePeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_ServicePeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuDetails\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuDetails\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuIsCreditEligible\", \"type\": \"Boolean\" },\r\n        \"sink\": { \"name\": \"x_SkuIsCreditEligible\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOfferId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOfferId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOrderId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOrderId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOrderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOrderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuPartNumber\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuPartNumber\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuRegion\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuRegion\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuServiceFamily\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuServiceFamily\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuTerm\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuTerm\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuTier\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuTier\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#10": "0.9",
                    "$fxv#11": "# Copyright (c) Microsoft Corporation.\r\n# Licensed under the MIT License.\r\n\r\nWrite-Output \"Updating settings.json file...\"\r\nWrite-Output \"  Storage account: $env:storageAccountName\"\r\nWrite-Output \"  Container: $env:containerName\"\r\n\r\n$validateScopes = { $_.Length -gt 45 }\r\n\r\n# Initialize variables\r\n$fileName = 'settings.json'\r\n$filePath = Join-Path -Path . -ChildPath $fileName\r\n$newScopes = $env:scopes.Split('|') | Where-Object $validateScopes | ForEach-Object { @{ scope = $_ } }\r\n\r\n# Get storage context\r\n$storageContext = @{\r\n    Context   = New-AzStorageContext -StorageAccountName $env:storageAccountName -UseConnectedAccount\r\n    Container = $env:containerName\r\n}\r\n\r\n# Download existing settings, if they exist\r\n$blob = Get-AzStorageBlobContent @storageContext -Blob $fileName -Destination $filePath -Force\r\nif ($blob)\r\n{\r\n    $text = Get-Content $filePath -Raw\r\n    Write-Output \"---------\"\r\n    Write-Output $text\r\n    Write-Output \"---------\"\r\n    $json = $text | ConvertFrom-Json\r\n    Write-Output \"Existing settings.json file found. Updating...\"\r\n\r\n    # Rename exportScopes to scopes + convert to object array\r\n    if ($json.exportScopes)\r\n    {\r\n        Write-Output \"  Updating exportScopes...\"\r\n        if ($json.exportScopes[0] -is [string])\r\n        {\r\n            Write-Output \"    Converting string array to object array...\"\r\n            $json.exportScopes = @($json.exportScopes | Where-Object $validateScopes | ForEach-Object { @{ scope = $_ } })\r\n            if (-not ($json.exportScopes -is [array]))\r\n            {\r\n                Write-Output \"    Converting single object to object array...\"\r\n                $json.exportScopes = @($json.exportScopes)\r\n            }\r\n        }\r\n\r\n        Write-Output \"    Renaming to 'scopes'...\"\r\n        $json | Add-Member -MemberType NoteProperty -Name scopes -Value $json.exportScopes\r\n        $json.PSObject.Properties.Remove('exportScopes')\r\n    }\r\n\r\n    # Force string array to object array with unique values\r\n    if ($json.scopes)\r\n    {\r\n        Write-Output \"  Converting string array to object array...\"\r\n        $scopeArray = @()\r\n        $json.scopes | Where-Object $validateScopes | ForEach-Object { $scopeArray += $_ } | Select-Object -Unique\r\n        $json.scopes = @() + $scopeArray\r\n    }\r\n}\r\n\r\n# Set default if not found\r\nif (!$json)\r\n{\r\n    Write-Output \"No existing settings.json file found. Creating new file...\"\r\n    $json = [ordered]@{\r\n        '$schema' = 'https://aka.ms/finops/hubs/settings-schema'\r\n        type      = 'HubInstance'\r\n        version   = ''\r\n        learnMore = 'https://aka.ms/finops/hubs'\r\n        scopes    = @()\r\n        retention = @{\r\n            'msexports' = @{\r\n                days = 0\r\n            }\r\n            'ingestion' = @{\r\n                months = 13\r\n            }\r\n            'raw'       = @{\r\n                days = 0\r\n            }\r\n            'final'     = @{\r\n                months = 13\r\n            }\r\n        }\r\n    }\r\n\r\n    $text = $json | ConvertTo-Json\r\n    Write-Output \"---------\"\r\n    Write-Output $text\r\n    Write-Output \"---------\"\r\n}\r\n\r\n# Set default retention\r\nif (!($json.retention))\r\n{\r\n    # In case the retention object is not present in the settings.json file (versions before 0.4), add it with default values\r\n    $retention = @\"\r\n    {\r\n        \"msexports\": {\r\n            \"days\": 0\r\n        },\r\n        \"ingestion\": {\r\n            \"months\": 13\r\n        },\r\n        \"raw\": {\r\n            \"days\": 0\r\n        },\r\n        \"final\": {\r\n            \"months\": 13\r\n        }\r\n    }\r\n\"@\r\n    $json | Add-Member -Name retention -Value (ConvertFrom-Json $retention) -MemberType NoteProperty\r\n}\r\n\r\n# Set or update msexports retention\r\nif (!($json.retention.msexports))\r\n{\r\n    $json.retention | Add-Member -Name msexports -Value (ConvertFrom-Json \"{\"\"days\"\":$($env:msexportRetentionInDays)}\") -MemberType NoteProperty\r\n}\r\nelse\r\n{\r\n    $json.retention.msexports.days = [Int32]::Parse($env:msexportRetentionInDays)\r\n}\r\n\r\n# Set or update ingestion retention\r\nif (!($json.retention.ingestion))\r\n{\r\n    $json.retention | Add-Member -Name ingestion -Value (ConvertFrom-Json \"{\"\"months\"\":$($env:ingestionRetentionInMonths)}\") -MemberType NoteProperty\r\n}\r\nelse\r\n{\r\n    $json.retention.ingestion.months = [Int32]::Parse($env:ingestionRetentionInMonths)\r\n}\r\n\r\n# Set or update raw retention\r\nif (!($json.retention.raw))\r\n{\r\n    $json.retention | Add-Member -Name raw -Value (ConvertFrom-Json \"{\"\"days\"\":$($env:rawRetentionInDays)}\") -MemberType NoteProperty\r\n}\r\nelse\r\n{\r\n    $json.retention.raw.days = [Int32]::Parse($env:rawRetentionInDays)\r\n}\r\n\r\n# Set or update final retention\r\nif (!($json.retention.final))\r\n{\r\n    $json.retention | Add-Member -Name final -Value (ConvertFrom-Json \"{\"\"months\"\":$($env:finalRetentionInMonths)}\") -MemberType NoteProperty\r\n}\r\nelse\r\n{\r\n    $json.retention.final.months = [Int32]::Parse($env:finalRetentionInMonths)\r\n}\r\n\r\n# Updating settings\r\nWrite-Output \"Updating version to $env:ftkVersion...\"\r\n$json.version = $env:ftkVersion\r\n$json.scopes = (@() + $json.scopes + $newScopes) | Select-Object -Unique\r\nif ($null -eq $json.scopes) { $json.scopes = @() }\r\n$text = $json | ConvertTo-Json\r\nWrite-Output \"---------\"\r\nWrite-Output $text\r\nWrite-Output \"---------\"\r\n$text | Out-File $filePath\r\n\r\n# Upload new/updated settings\r\nWrite-Output \"Uploading settings.json file...\"\r\nSet-AzStorageBlobContent @storageContext -File $filePath -Force | Out-Null\r\n\r\n# Save focusSchemaFile file to storage\r\n$schemaFiles = $env:schemaFiles | ConvertFrom-Json -Depth 10\r\nWrite-Output \"Uploading ${$schemaFiles.PSObject.Properties.Count} schema files...\"\r\n$schemaFiles.PSObject.Properties | ForEach-Object {\r\n    $fileName = \"$($_.Name).json\"\r\n    $tempPath = \"./$fileName\"\r\n    Write-Output \"  Uploading $($_.Name).json...\"\r\n    $_.Value | Out-File $tempPath\r\n    Set-AzStorageBlobContent @storageContext -File $tempPath -Blob \"schemas/$fileName\" -Force | Out-Null\r\n}\r\n",
                    "$fxv#2": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"AvailabilityZone\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"AvailabilityZone\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BilledCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"BilledCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingPeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"BillingPeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingPeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"BillingPeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeFrequency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeFrequency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargePeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"ChargePeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargePeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"ChargePeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ChargeSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ChargeSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CommitmentDiscountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CommitmentDiscountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"EffectiveCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InvoiceIssuerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InvoiceIssuerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ListCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ListCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ListUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ListUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PricingCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"PricingQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PricingUnit\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PricingUnit\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ProviderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ProviderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PublisherName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PublisherName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Region\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Region\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuPriceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuPriceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SubAccountType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SubAccountType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Tags\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Tags\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UsageQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"UsageQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UsageUnit\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"UsageUnit\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_AccountOwnerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_AccountOwnerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BilledCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BilledCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BilledUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BilledUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingExchangeRate\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_BillingExchangeRate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingExchangeRateDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_BillingExchangeRateDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingProfileId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingProfileId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_BillingProfileName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_BillingProfileName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ChargeId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ChargeId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CostAllocationRuleName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CostAllocationRuleName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CostCenter\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CostCenter\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CustomerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CustomerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_CustomerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_CustomerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_EffectiveCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_EffectiveCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_EffectiveUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_EffectiveUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceIssuerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceIssuerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceSectionId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceSectionId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_InvoiceSectionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_InvoiceSectionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_OnDemandCost\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_OnDemandCost\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_OnDemandCostInUsd\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_OnDemandCostInUsd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_OnDemandUnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_OnDemandUnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PartnerCreditApplied\", \"type\": \"Boolean\" },\r\n        \"sink\": { \"name\": \"x_PartnerCreditApplied\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PartnerCreditRate\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_PartnerCreditRate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingBlockSize\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"x_PricingBlockSize\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PricingUnitDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PricingUnitDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PublisherCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PublisherCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_PublisherId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_PublisherId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResellerId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResellerId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResellerName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResellerName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResourceGroupName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResourceGroupName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ServicePeriodEnd\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_ServicePeriodEnd\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_ServicePeriodStart\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"x_ServicePeriodStart\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuDescription\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuDescription\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuDetails\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuDetails\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuIsCreditEligible\", \"type\": \"Boolean\" },\r\n        \"sink\": { \"name\": \"x_SkuIsCreditEligible\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuMeterSubcategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuMeterSubcategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOfferId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOfferId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOrderId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOrderId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuOrderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuOrderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuPartNumber\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuPartNumber\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuRegion\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuRegion\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuServiceFamily\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuServiceFamily\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuTerm\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuTerm\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"x_SkuTier\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"x_SkuTier\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#3": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"EnrollmentNumber\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"EnrollmentNumber\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterID\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterID\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterSubCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterSubCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceFamily\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceFamily\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Product\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Product\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuID\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuID\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ProductID\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ProductID\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterRegion\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterRegion\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UnitOfMeasure\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"UnitOfMeasure\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PartNumber\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PartNumber\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveStartDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"EffectiveStartDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveEndDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"EffectiveEndDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"UnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BasePrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"BasePrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MarketPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"MarketPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CurrencyCode\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CurrencyCode\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"IncludedQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"IncludedQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"OfferID\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"OfferID\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Term\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Term\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PriceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PriceType\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#4": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingAccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingAccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingProfileId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingProfileId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingProfileName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingProfileName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ServiceFamily\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ServiceFamily\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Product\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Product\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ProductId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ProductId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UnitOfMeasure\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"UnitOfMeasure\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterSubCategory\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterSubCategory\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterRegion\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterRegion\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"TierMinimumUnits\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"TierMinimumUnits\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveStartDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"EffectiveStartDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EffectiveEndDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"EffectiveEndDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UnitPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"UnitPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BasePrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"BasePrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MarketPrice\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"MarketPrice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Currency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Currency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingCurrency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingCurrency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Term\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Term\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PriceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PriceType\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#5": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"InstanceFlexibilityGroup\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InstanceFlexibilityGroup\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InstanceFlexibilityRatio\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"InstanceFlexibilityRatio\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InstanceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InstanceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Kind\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Kind\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservationOrderId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ReservationOrderId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservationId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ReservationId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservedHours\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"ReservedHours\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"TotalReservedQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"TotalReservedQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UsageDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"UsageDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"UsedHours\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"UsedHours\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#6": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"SKU\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SKU\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Location\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Location\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CostWithNoReservedInstances\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CostWithNoReservedInstances\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"FirstUsageDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"FirstUsageDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InstanceFlexibilityRatio\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"InstanceFlexibilityRatio\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InstanceFlexibilityGroup\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InstanceFlexibilityGroup\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"LookBackPeriod\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"LookBackPeriod\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"NetSavings\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"NetSavings\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"NormalizedSize\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"NormalizedSize\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"RecommendedQuantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"RecommendedQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"RecommendedQuantityNormalized\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"RecommendedQuantityNormalized\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Scope\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Scope\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuProperties\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuProperties\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Term\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Term\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"TotalCostWithReservedInstances\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"TotalCostWithReservedInstances\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#7": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"Cost With No ReservedInstances\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CostWithNoReservedInstancesJson\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"First UsageDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"FirstUsageDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Instance Flexibility Ratio\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"InstanceFlexibilityRatio\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Instance Flexibility Group\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InstanceFlexibilityGroup\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Location\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Location\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"LookBackPeriod\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"LookBackPeriod\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MeterID\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"MeterId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Net Savings\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"NetSavingsJson\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Normalized Size\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"NormalizedSize\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Recommended Quantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"RecommendedQuantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Recommended Quantity Normalized\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"RecommendedQuantityNormalized\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ResourceType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ResourceType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"scope\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Scope\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"SkuName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Sku Properties\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"SkuProperties\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Term\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Term\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Total Cost With ReservedInstances\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"TotalCostWithReservedInstancesJson\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#8": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"AccountName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"AccountName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"AccountOwnerEmail\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"AccountOwnerEmail\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Amount\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"Amount\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ArmSkuName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ArmSkuName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingFrequency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingFrequency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingMonth\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingMonth\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CostCenter\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CostCenter\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Currency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Currency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"CurrentEnrollmentId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"CurrentEnrollmentId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"DepartmentName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"DepartmentName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Description\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Description\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EventDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"EventDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EventType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"EventType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"MonetaryCommitment\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"MonetaryCommitment\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Overage\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"Overage\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PurchasingSubscriptionGuid\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PurchasingSubscriptionGuid\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PurchasingSubscriptionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PurchasingSubscriptionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PurchasingEnrollment\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PurchasingEnrollment\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Quantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"Quantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Region\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Region\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservationOrderId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ReservationOrderId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservationOrderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ReservationOrderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Term\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Term\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "$fxv#9": "{\r\n  \"additionalColumns\": [],\r\n  \"translator\": {\r\n    \"type\": \"TabularTranslator\",\r\n    \"mappings\": [\r\n      {\r\n        \"source\": { \"name\": \"Amount\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"Amount\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ArmSkuName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ArmSkuName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingFrequency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingFrequency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingProfileId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingProfileId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"BillingProfileName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"BillingProfileName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Currency\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Currency\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Description\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Description\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EventDate\", \"type\": \"DateTimeOffset\" },\r\n        \"sink\": { \"name\": \"EventDate\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"EventType\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"EventType\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Invoice\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Invoice\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InvoiceId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InvoiceId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InvoiceSectionId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InvoiceSectionId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"InvoiceSectionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"InvoiceSectionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PurchasingSubscriptionGuid\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PurchasingSubscriptionGuid\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"PurchasingSubscriptionName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"PurchasingSubscriptionName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Quantity\", \"type\": \"Decimal\" },\r\n        \"sink\": { \"name\": \"Quantity\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Region\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Region\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservationOrderId\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ReservationOrderId\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"ReservationOrderName\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"ReservationOrderName\" }\r\n      },\r\n      {\r\n        \"source\": { \"name\": \"Term\", \"type\": \"String\" },\r\n        \"sink\": { \"name\": \"Term\" }\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
                    "safeHubName": "[replace(replace(toLower(parameters('hubName')), '-', ''), '_', '')]",
                    "storageAccountSuffix": "[parameters('uniqueSuffix')]",
                    "storageAccountName": "[format('{0}{1}', take(variables('safeHubName'), sub(24, length(variables('storageAccountSuffix')))), variables('storageAccountSuffix'))]",
                    "scriptStorageAccountName": "[format('{0}script{1}', take(variables('safeHubName'), sub(16, length(variables('storageAccountSuffix')))), variables('storageAccountSuffix'))]",
                    "schemaFiles": {
                      "focuscost_1.0r2": "[variables('$fxv#0')]",
                      "focuscost_1.0": "[variables('$fxv#1')]",
                      "focuscost_1.0-preview(v1)": "[variables('$fxv#2')]",
                      "pricesheet_2023-05-01_ea": "[variables('$fxv#3')]",
                      "pricesheet_2023-05-01_mca": "[variables('$fxv#4')]",
                      "reservationdetails_2023-03-01": "[variables('$fxv#5')]",
                      "reservationrecommendations_2023-05-01_ea": "[variables('$fxv#6')]",
                      "reservationrecommendations_2023-05-01_mca": "[variables('$fxv#7')]",
                      "reservationtransactions_2023-05-01_ea": "[variables('$fxv#8')]",
                      "reservationtransactions_2023-05-01_mca": "[variables('$fxv#9')]"
                    },
                    "blobUploadRbacRoles": [
                      "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                      "69566ab7-960f-475b-8e7c-b3118f30c6bd"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('storageAccountName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('sku')]"
                      },
                      "kind": "BlockBlobStorage",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), createObject()))]",
                      "properties": "[union(if(not(parameters('enableInfrastructureEncryption')), createObject(), createObject('encryption', createObject('keySource', 'Microsoft.Storage', 'requireInfrastructureEncryption', parameters('enableInfrastructureEncryption')))), createObject('supportsHttpsTrafficOnly', true(), 'allowSharedKeyAccess', true(), 'isHnsEnabled', true(), 'minimumTlsVersion', 'TLS1_2', 'allowBlobPublicAccess', false(), 'publicNetworkAccess', 'Enabled', 'networkAcls', createObject('bypass', 'AzureServices', 'defaultAction', if(parameters('enablePublicAccess'), 'Allow', 'Deny'))))]"
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('scriptStorageAccountName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "kind": "StorageV2",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), createObject()))]",
                      "properties": {
                        "supportsHttpsTrafficOnly": true,
                        "allowSharedKeyAccess": true,
                        "isHnsEnabled": false,
                        "minimumTlsVersion": "TLS1_2",
                        "allowBlobPublicAccess": false,
                        "publicNetworkAccess": "Enabled",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Deny",
                          "virtualNetworkRules": [
                            {
                              "id": "[parameters('scriptSubnetId')]",
                              "action": "Allow"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/privateDnsZones'), createObject()))]",
                      "properties": {}
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/privateDnsZones'), createObject()))]",
                      "properties": {}
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[format('privatelink.queue.{0}', environment().suffixes.storage)]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/privateDnsZones'), createObject()))]",
                      "properties": {}
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[format('privatelink.table.{0}', environment().suffixes.storage)]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Storage/privateDnsZones'), createObject()))]",
                      "properties": {}
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', format('privatelink.blob.{0}', environment().suffixes.storage), format('{0}-link', replace(format('privatelink.blob.{0}', environment().suffixes.storage), '.', '-')))]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones/virtualNetworkLinks'), createObject()))]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', format('privatelink.dfs.{0}', environment().suffixes.storage), format('{0}-link', replace(format('privatelink.dfs.{0}', environment().suffixes.storage), '.', '-')))]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones/virtualNetworkLinks'), createObject()))]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.dfs.{0}', environment().suffixes.storage))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', format('privatelink.queue.{0}', environment().suffixes.storage), format('{0}-link', replace(format('privatelink.queue.{0}', environment().suffixes.storage), '.', '-')))]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones/virtualNetworkLinks'), createObject()))]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.queue.{0}', environment().suffixes.storage))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', format('privatelink.table.{0}', environment().suffixes.storage), format('{0}-link', replace(format('privatelink.table.{0}', environment().suffixes.storage), '.', '-')))]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones/virtualNetworkLinks'), createObject()))]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.table.{0}', environment().suffixes.storage))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}-blob-ep', variables('storageAccountName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateEndpoints'), createObject()))]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "blobLink",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                              "groupIds": [
                                "blob"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}-blob-ep', variables('scriptStorageAccountName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateEndpoints'), createObject()))]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "scriptLink",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('scriptStorageAccountName'))]",
                              "groupIds": [
                                "blob"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('scriptStorageAccountName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}-dfs-ep', variables('storageAccountName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateEndpoints'), createObject()))]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "dfsLink",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                              "groupIds": [
                                "dfs"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', format('{0}-blob-ep', variables('storageAccountName')), 'storage-endpoint-zone')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-blob-ep', variables('storageAccountName')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', format('{0}-dfs-ep', variables('storageAccountName')), 'dfs-endpoint-zone')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.dfs.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-dfs-ep', variables('storageAccountName')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.dfs.{0}', environment().suffixes.storage))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', format('{0}-blob-ep', variables('scriptStorageAccountName')), 'blob-endpoint-zone')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-blob-ep', variables('scriptStorageAccountName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'config')]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'msexports')]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'ingestion')]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-01-31",
                      "name": "[format('{0}_blobManager', variables('storageAccountName'))]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), createObject()))]",
                      "location": "[parameters('location')]"
                    },
                    {
                      "copy": {
                        "name": "identityRoleAssignments",
                        "count": "[length(variables('blobUploadRbacRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('blobUploadRbacRoles')[copyIndex()], resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_blobManager', variables('storageAccountName'))))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('blobUploadRbacRoles')[copyIndex()])]",
                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_blobManager', variables('storageAccountName'))), '2023-01-31').principalId]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_blobManager', variables('storageAccountName')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('{0}_uploadSettings', variables('storageAccountName'))]",
                      "kind": "AzurePowerShell",
                      "location": "[if(startsWith(parameters('location'), 'china'), 'chinaeast2', parameters('location'))]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject()))]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_blobManager', variables('storageAccountName'))))]": {}
                        }
                      },
                      "properties": "[union(if(parameters('enablePublicAccess'), createObject(), createObject('storageAccountSettings', createObject('storageAccountName', variables('scriptStorageAccountName')), 'containerSettings', createObject('containerGroupName', format('{0}cg', variables('scriptStorageAccountName')), 'subnetIds', createArray(createObject('id', parameters('scriptSubnetId')))))), createObject('azPowerShellVersion', '9.0', 'retentionInterval', 'PT1H', 'environmentVariables', createArray(createObject('name', 'ftkVersion', 'value', variables('$fxv#10')), createObject('name', 'scopes', 'value', join(parameters('scopesToMonitor'), '|')), createObject('name', 'msexportRetentionInDays', 'value', string(parameters('msexportRetentionInDays'))), createObject('name', 'ingestionRetentionInMonths', 'value', string(parameters('ingestionRetentionInMonths'))), createObject('name', 'rawRetentionInDays', 'value', string(parameters('rawRetentionInDays'))), createObject('name', 'finalRetentionInMonths', 'value', string(parameters('finalRetentionInMonths'))), createObject('name', 'storageAccountName', 'value', variables('storageAccountName')), createObject('name', 'containerName', 'value', 'config'), createObject('name', 'schemaFiles', 'value', string(variables('schemaFiles')))), 'scriptContent', variables('$fxv#11')))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-blob-ep', variables('storageAccountName')))]",
                        "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', format('{0}-blob-ep', variables('storageAccountName')), 'storage-endpoint-zone')]",
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', 'config')]",
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_blobManager', variables('storageAccountName')))]",
                        "identityRoleAssignments",
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-blob-ep', variables('scriptStorageAccountName')))]",
                        "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', format('{0}-blob-ep', variables('scriptStorageAccountName')), 'blob-endpoint-zone')]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('scriptStorageAccountName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the storage account."
                      },
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the storage account."
                      },
                      "value": "[variables('storageAccountName')]"
                    },
                    "scriptStorageAccountResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the storage account."
                      },
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('scriptStorageAccountName'))]"
                    },
                    "scriptStorageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the storage account."
                      },
                      "value": "[variables('scriptStorageAccountName')]"
                    },
                    "configContainer": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the container used for configuration settings."
                      },
                      "value": "config"
                    },
                    "exportContainer": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the container used for Cost Management exports."
                      },
                      "value": "msexports"
                    },
                    "ingestionContainer": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the container used for normalized data ingestion."
                      },
                      "value": "ingestion"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
              ]
            },
            {
              "condition": "[variables('deployDataExplorer')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dataExplorer",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "clusterName": {
                    "value": "[parameters('dataExplorerName')]"
                  },
                  "clusterSku": {
                    "value": "[parameters('dataExplorerSku')]"
                  },
                  "clusterCapacity": {
                    "value": "[parameters('dataExplorerCapacity')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[variables('resourceTags')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "dataFactoryName": {
                    "value": "[variables('dataFactoryName')]"
                  },
                  "rawRetentionInDays": {
                    "value": "[parameters('dataExplorerRawRetentionInDays')]"
                  },
                  "virtualNetworkId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.vNetId.value))]",
                  "privateEndpointSubnetId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.dataExplorerSubnetId.value))]",
                  "enablePublicAccess": {
                    "value": "[parameters('enablePublicAccess')]"
                  },
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.name.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "15559057084461761997"
                    }
                  },
                  "parameters": {
                    "clusterName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Name of the Azure Data Explorer cluster to use for advanced analytics. If empty, Azure Data Explorer will not be deployed. Required to use with Power BI if you have more than $2-5M/mo in costs being monitored. Default: \"\" (do not use)."
                      }
                    },
                    "clusterSku": {
                      "type": "string",
                      "defaultValue": "Dev(No SLA)_Standard_E2a_v4",
                      "allowedValues": [
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Dev(No SLA)_Standard_D11_v2",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D16d_v5",
                        "Standard_D32d_v4",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_E2a_v4",
                        "Standard_E2ads_v5",
                        "Standard_E2d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4a_v4",
                        "Standard_E4ads_v5",
                        "Standard_E4d_v4",
                        "Standard_E4d_v5",
                        "Standard_E8a_v4",
                        "Standard_E8ads_v5",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E8d_v4",
                        "Standard_E8d_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16a_v4",
                        "Standard_E16ads_v5",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E16d_v4",
                        "Standard_E16d_v5",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_EC8ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16ads_v5",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8as_v3",
                        "Standard_L8s",
                        "Standard_L8s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16as_v3",
                        "Standard_L16s",
                        "Standard_L16s_v2",
                        "Standard_L16s_v3",
                        "Standard_L32as_v3",
                        "Standard_L32s_v3"
                      ],
                      "metadata": {
                        "description": "Optional. Name of the Azure Data Explorer SKU. Default: \"Dev(No SLA)_Standard_E2a_v4\"."
                      }
                    },
                    "clusterCapacity": {
                      "type": "int",
                      "defaultValue": 1,
                      "minValue": 1,
                      "maxValue": 1000,
                      "metadata": {
                        "description": "Optional. Number of nodes to use in the cluster. Allowed values: 1 for the Basic SKU tier and 2-1000 for Standard. Default: 1 for dev/test SKUs, 2 for standard SKUs."
                      }
                    },
                    "forceUpdateTag": {
                      "type": "string",
                      "defaultValue": "[utcNow()]",
                      "metadata": {
                        "description": "Optional. Forces the table to be updated if different from the last time it was deployed."
                      }
                    },
                    "continueOnErrors": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Optional. If true, ingestion will continue even if some rows fail to ingest. Default: false."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Azure location to use for the managed identity and deployment script to auto-start triggers. Default: (resource group location)."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to all resources."
                      }
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
                      }
                    },
                    "dataFactoryName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Data Factory instance."
                      }
                    },
                    "rawRetentionInDays": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Optional. Number of days of data to retain in the Data Explorer *_raw tables. Default: 0."
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the storage account to use for data ingestion."
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Resource ID of the virtual network for private endpoints."
                      }
                    },
                    "privateEndpointSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Resource ID of the subnet for private endpoints."
                      }
                    },
                    "enablePublicAccess": {
                      "type": "bool",
                      "metadata": {
                        "description": "Optional. Enable public access."
                      }
                    }
                  },
                  "variables": {
                    "$fxv#0": "0.9",
                    "$fxv#1": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n.create-or-alter function \r\nwith (docstring = 'Return details about the specified ID.', folder = 'OpenData/Internal')\r\n_resource_type_1(id: string) {\r\n    dynamic({\r\n        \"arizeai.observabilityeval/organizations\": { \"SingularDisplayName\": \"Azure Native Arize AI Cloud Service\" }\r\n        ,\"astronomer.astro/organizations\": { \"SingularDisplayName\": \"Astro Organization\" }\r\n        ,\"citrix.services/xenappessentials\": { \"SingularDisplayName\": \"Citrix Virtual Apps Essentials\" }\r\n        ,\"citrix.services/xendesktopessentials\": { \"SingularDisplayName\": \"Citrix Virtual Desktops Essentials\" }\r\n        ,\"commvault.contentstore/cloudaccounts\": { \"SingularDisplayName\": \"Commvault Cloud Account\" }\r\n        ,\"commvault.contentstore/cloudaccounts/plans\": { \"SingularDisplayName\": \"Commvault.ContentStore cloud accounts plan\" }\r\n        ,\"commvault.contentstore/cloudaccounts/protectiongroups\": { \"SingularDisplayName\": \"Commvault.ContentStore cloud accounts protection group\" }\r\n        ,\"commvault.contentstore/cloudaccounts/protectiongroups/protecteditems\": { \"SingularDisplayName\": \"Commvault.ContentStore cloud accounts protection groups protected item\" }\r\n        ,\"commvault.contentstore/cloudaccounts/storages\": { \"SingularDisplayName\": \"Commvault.ContentStore cloud accounts storage\" }\r\n        ,\"dell.storage/filesystems\": { \"SingularDisplayName\": \"Dell APEX File Storage, An Azure Native Service\" }\r\n        ,\"dynatrace.observability/monitors\": { \"SingularDisplayName\": \"Dynatrace\" }\r\n        ,\"github.network/networksettings\": { \"SingularDisplayName\": \"GitHub.Network network setting\" }\r\n        ,\"informatica.datamanagement/organizations\": { \"SingularDisplayName\": \"Informatica Organization\" }\r\n        ,\"lambdatest.hyperexecute/organizations\": { \"SingularDisplayName\": \"Azure Native LambdaTest Cloud Service\" }\r\n        ,\"microsoft.aad/domainservices\": { \"SingularDisplayName\": \"Microsoft Entra Domain Services\" }\r\n        ,\"microsoft.aadiam/diagnosticsettings\": { \"SingularDisplayName\": \"Microsoft.aadiam diagnostic setting\" }\r\n        ,\"microsoft.aadiam/privatelinkforazuread\": { \"SingularDisplayName\": \"Private Link for Microsoft Entra ID\" }\r\n        ,\"microsoft.advisor/advisorscore\": { \"SingularDisplayName\": \"Microsoft.Advisor advisor score\" }\r\n        ,\"microsoft.advisor/assessments\": { \"SingularDisplayName\": \"Microsoft.Advisor assessment\" }\r\n        ,\"microsoft.advisor/configurations\": { \"SingularDisplayName\": \"Microsoft.Advisor configuration\" }\r\n        ,\"microsoft.advisor/generaterecommendations\": { \"SingularDisplayName\": \"Microsoft.Advisor generate recommendation\" }\r\n        ,\"microsoft.advisor/metadata\": { \"SingularDisplayName\": \"Microsoft.Advisor metadata\" }\r\n        ,\"microsoft.advisor/recommendations\": { \"SingularDisplayName\": \"Microsoft.Advisor recommendation\" }\r\n        ,\"microsoft.advisor/recommendations/suppressions\": { \"SingularDisplayName\": \"Microsoft.Advisor recommendations suppression\" }\r\n        ,\"microsoft.advisor/resiliencyreviews\": { \"SingularDisplayName\": \"Microsoft.Advisor resiliency review\" }\r\n        ,\"microsoft.agfoodplatform/farmbeats\": { \"SingularDisplayName\": \"Azure Data Manager for Agriculture\" }\r\n        ,\"microsoft.agfoodplatform/farmbeatsextensiondefinitions\": { \"SingularDisplayName\": \"Microsoft.AgFoodPlatform farm beats extension definition\" }\r\n        ,\"microsoft.agfoodplatform/farmbeatssolutiondefinitions\": { \"SingularDisplayName\": \"Microsoft.AgFoodPlatform farm beats solution definition\" }\r\n        ,\"microsoft.agricultureplatform/agriservices\": { \"SingularDisplayName\": \"Agriculture data solutions\" }\r\n        ,\"microsoft.akshybrid/agentpools\": { \"SingularDisplayName\": \"Microsoft.AksHybrid agent pool\" }\r\n        ,\"microsoft.akshybrid/provisionedclusters\": { \"SingularDisplayName\": \"Microsoft.AksHybrid provisioned cluster\" }\r\n        ,\"microsoft.akshybrid/upgradeprofiles\": { \"SingularDisplayName\": \"Microsoft.AksHybrid upgrade profile\" }\r\n        ,\"microsoft.alertsmanagement/actionrules\": { \"SingularDisplayName\": \"Alert processing rule\" }\r\n        ,\"microsoft.alertsmanagement/alerts\": { \"SingularDisplayName\": \"Microsoft.AlertsManagement alert\" }\r\n        ,\"microsoft.alertsmanagement/alerts/enrichments\": { \"SingularDisplayName\": \"Microsoft.AlertsManagement alerts enrichment\" }\r\n        ,\"microsoft.alertsmanagement/prometheusrulegroups\": { \"SingularDisplayName\": \"Prometheus rule group\" }\r\n        ,\"microsoft.alertsmanagement/smartdetectoralertrules\": { \"SingularDisplayName\": \"Smart detector alert rule\" }\r\n        ,\"microsoft.alertsmanagement/smartgroups\": { \"SingularDisplayName\": \"Microsoft.AlertsManagement smart group\" }\r\n        ,\"microsoft.alertsmanagement/tenantactivitylogalerts\": { \"SingularDisplayName\": \"Microsoft.AlertsManagement tenant activity log alert\" }\r\n        ,\"microsoft.all/arcvirtualmachines\": { \"SingularDisplayName\": \"Azure Arc virtual machine\" }\r\n        ,\"microsoft.all/hcivirtualmachines\": { \"SingularDisplayName\": \"Azure Local Virtual Machine - Azure Arc\" }\r\n        ,\"microsoft.all/virtualmachines\": { \"SingularDisplayName\": \"Virtual machine\" }\r\n        ,\"microsoft.analysisservices/servers\": { \"SingularDisplayName\": \"Analysis Services server\" }\r\n        ,\"microsoft.anybuild/clusters\": { \"SingularDisplayName\": \"AnyBuild cluster\" }\r\n        ,\"microsoft.apicenter/deletedservices\": { \"SingularDisplayName\": \"Microsoft.ApiCenter deleted service\" }\r\n        ,\"microsoft.apicenter/services\": { \"SingularDisplayName\": \"API Center\" }\r\n        ,\"microsoft.apicenter/services/workspaces\": { \"SingularDisplayName\": \"Workspace\" }\r\n        ,\"microsoft.apimanagement/gateways\": { \"SingularDisplayName\": \"API Management gateway\" }\r\n        ,\"microsoft.apimanagement/gateways/configconnections\": { \"SingularDisplayName\": \"Microsoft.ApiManagement gateways config connection\" }\r\n        ,\"microsoft.apimanagement/service\": { \"SingularDisplayName\": \"API Management service\" }\r\n        ,\"microsoft.apimanagement/service/workspaces\": { \"SingularDisplayName\": \"Workspace\" }\r\n        ,\"microsoft.apisecurity/defendersettings\": { \"SingularDisplayName\": \"Microsoft.ApiSecurity defender setting\" }\r\n        ,\"microsoft.app/builders\": { \"SingularDisplayName\": \"Microsoft.App builder\" }\r\n        ,\"microsoft.app/builders/builds\": { \"SingularDisplayName\": \"Microsoft.App builders build\" }\r\n        ,\"microsoft.app/connectedenvironments\": { \"SingularDisplayName\": \"Container Apps Connected Environment\" }\r\n        ,\"microsoft.app/containerapps\": { \"SingularDisplayName\": \"Container App\" }\r\n        ,\"microsoft.app/jobs\": { \"SingularDisplayName\": \"Container App Job\" }\r\n        ,\"microsoft.app/logicapps\": { \"SingularDisplayName\": \"Logic app\" }\r\n        ,\"microsoft.app/logicapps/workflows\": { \"SingularDisplayName\": \"Logic app workflow\" }\r\n        ,\"microsoft.app/managedenvironments\": { \"SingularDisplayName\": \"Container Apps Environment\" }\r\n        ,\"microsoft.app/sessionpools\": { \"SingularDisplayName\": \"Container App Session Pool\" }\r\n        ,\"microsoft.app/spaces\": { \"SingularDisplayName\": \"App Space\" }\r\n        ,\"microsoft.appassessment/migrateprojects\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate project\" }\r\n        ,\"microsoft.appassessment/migrateprojects/assessments\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate projects assessment\" }\r\n        ,\"microsoft.appassessment/migrateprojects/assessments/assessedapplications\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate projects assessments assessed application\" }\r\n        ,\"microsoft.appassessment/migrateprojects/assessments/assessedmachines\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate projects assessments assessed machine\" }\r\n        ,\"microsoft.appassessment/migrateprojects/assessments/machinestoassess\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate projects assessments machines to asses\" }\r\n        ,\"microsoft.appassessment/migrateprojects/sites\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate projects site\" }\r\n        ,\"microsoft.appassessment/migrateprojects/sites/applianceconfigurations\": { \"SingularDisplayName\": \"Microsoft.AppAssessment migrate projects sites appliance configuration\" }\r\n        ,\"microsoft.appcomplianceautomation/reports\": { \"SingularDisplayName\": \"Microsoft.AppComplianceAutomation report\" }\r\n        ,\"microsoft.appcomplianceautomation/reports/evidences\": { \"SingularDisplayName\": \"Microsoft.AppComplianceAutomation reports evidence\" }\r\n        ,\"microsoft.appcomplianceautomation/reports/scopingconfigurations\": { \"SingularDisplayName\": \"Microsoft.AppComplianceAutomation reports scoping configuration\" }\r\n        ,\"microsoft.appcomplianceautomation/reports/snapshots\": { \"SingularDisplayName\": \"Microsoft.AppComplianceAutomation reports snapshot\" }\r\n        ,\"microsoft.appcomplianceautomation/reports/snapshots/controls\": { \"SingularDisplayName\": \"Microsoft.AppComplianceAutomation reports snapshots control\" }\r\n        ,\"microsoft.appcomplianceautomation/reports/webhooks\": { \"SingularDisplayName\": \"Microsoft.AppComplianceAutomation reports webhook\" }\r\n        ,\"microsoft.appconfiguration/configurationstores\": { \"SingularDisplayName\": \"App Configuration\" }\r\n        ,\"microsoft.appplatform/spring\": { \"SingularDisplayName\": \"Azure Spring Apps\" }\r\n        ,\"microsoft.appsecurity/appprotectmanagedrulesetmanifests\": { \"SingularDisplayName\": \"Microsoft.AppSecurity app protect managed rule set manifest\" }\r\n        ,\"microsoft.appsecurity/policies\": { \"SingularDisplayName\": \"App Protect Policy\" }\r\n        ,\"microsoft.arc/all\": { \"SingularDisplayName\": \"Azure Arc enabled resource\" }\r\n        ,\"microsoft.arc/allfairfax\": { \"SingularDisplayName\": \"Azure Arc enabled resource\" }\r\n        ,\"microsoft.arc/kubernetesresources\": { \"SingularDisplayName\": \"Azure Arc Kubernetes cluster\" }\r\n        ,\"microsoft.arc/kubernetesresourcesfairfax\": { \"SingularDisplayName\": \"Azure Arc Kubernetes cluster\" }\r\n        ,\"microsoft.arcnetworking/arcnwloadbalancers\": { \"SingularDisplayName\": \"Microsoft.ArcNetworking arc nw load balancer\" }\r\n        ,\"microsoft.attestation/attestationproviders\": { \"SingularDisplayName\": \"Attestation provider\" }\r\n        ,\"microsoft.authorization/accessreviewhistorydefinitions\": { \"SingularDisplayName\": \"Microsoft.Authorization access review history definition\" }\r\n        ,\"microsoft.authorization/accessreviewscheduledefinitions\": { \"SingularDisplayName\": \"Microsoft.Authorization access review schedule definition\" }\r\n        ,\"microsoft.authorization/accessreviewscheduledefinitions/instances\": { \"SingularDisplayName\": \"Microsoft.Authorization access review schedule definitions instance\" }\r\n        ,\"microsoft.authorization/accessreviewscheduledefinitions/instances/decisions\": { \"SingularDisplayName\": \"Microsoft.Authorization access review schedule definitions instances decision\" }\r\n        ,\"microsoft.authorization/accessreviewschedulesettings\": { \"SingularDisplayName\": \"Microsoft.Authorization access review schedule setting\" }\r\n        ,\"microsoft.authorization/datapolicymanifests\": { \"SingularDisplayName\": \"Microsoft.Authorization data policy manifest\" }\r\n        ,\"microsoft.authorization/denyassignments\": { \"SingularDisplayName\": \"Microsoft.Authorization deny assignment\" }\r\n        ,\"microsoft.authorization/locks\": { \"SingularDisplayName\": \"Microsoft.Authorization lock\" }\r\n        ,\"microsoft.authorization/policyassignments\": { \"SingularDisplayName\": \"Microsoft.Authorization policy assignment\" }\r\n        ,\"microsoft.authorization/policydefinitions\": { \"SingularDisplayName\": \"Microsoft.Authorization policy definition\" }\r\n        ,\"microsoft.authorization/policydefinitions/versions\": { \"SingularDisplayName\": \"Microsoft.Authorization policy definitions version\" }\r\n        ,\"microsoft.authorization/policyexemptions\": { \"SingularDisplayName\": \"Microsoft.Authorization policy exemption\" }\r\n        ,\"microsoft.authorization/policysetdefinitions\": { \"SingularDisplayName\": \"Microsoft.Authorization policy set definition\" }\r\n        ,\"microsoft.authorization/policysetdefinitions/versions\": { \"SingularDisplayName\": \"Microsoft.Authorization policy set definitions version\" }\r\n        ,\"microsoft.authorization/privatelinkassociations\": { \"SingularDisplayName\": \"Microsoft.Authorization private link association\" }\r\n        ,\"microsoft.authorization/provideroperations\": { \"SingularDisplayName\": \"Microsoft.Authorization provider operation\" }\r\n        ,\"microsoft.authorization/resourcemanagementprivatelinks\": { \"SingularDisplayName\": \"Resource management private link\" }\r\n        ,\"microsoft.authorization/roleassignmentapprovals\": { \"SingularDisplayName\": \"Microsoft.Authorization role assignment approval\" }\r\n        ,\"microsoft.authorization/roleassignmentapprovals/stages\": { \"SingularDisplayName\": \"Microsoft.Authorization role assignment approvals stage\" }\r\n        ,\"microsoft.authorization/roleassignments\": { \"SingularDisplayName\": \"Microsoft.Authorization role assignment\" }\r\n        ,\"microsoft.authorization/roleassignmentscheduleinstances\": { \"SingularDisplayName\": \"Microsoft.Authorization role assignment schedule instance\" }\r\n        ,\"microsoft.authorization/roleassignmentschedulerequests\": { \"SingularDisplayName\": \"Microsoft.Authorization role assignment schedule request\" }\r\n        ,\"microsoft.authorization/roleassignmentschedules\": { \"SingularDisplayName\": \"Microsoft.Authorization role assignment schedule\" }\r\n        ,\"microsoft.authorization/roledefinitions\": { \"SingularDisplayName\": \"Microsoft.Authorization role definition\" }\r\n        ,\"microsoft.authorization/roleeligibilityscheduleinstances\": { \"SingularDisplayName\": \"Microsoft.Authorization role eligibility schedule instance\" }\r\n        ,\"microsoft.authorization/roleeligibilityschedulerequests\": { \"SingularDisplayName\": \"Microsoft.Authorization role eligibility schedule request\" }\r\n        ,\"microsoft.authorization/roleeligibilityschedules\": { \"SingularDisplayName\": \"Microsoft.Authorization role eligibility schedule\" }\r\n        ,\"microsoft.authorization/rolemanagementalertconfigurations\": { \"SingularDisplayName\": \"Microsoft.Authorization role management alert configuration\" }\r\n        ,\"microsoft.authorization/rolemanagementalertdefinitions\": { \"SingularDisplayName\": \"Microsoft.Authorization role management alert definition\" }\r\n        ,\"microsoft.authorization/rolemanagementalertoperations\": { \"SingularDisplayName\": \"Microsoft.Authorization role management alert operation\" }\r\n        ,\"microsoft.authorization/rolemanagementalerts\": { \"SingularDisplayName\": \"Microsoft.Authorization role management alert\" }\r\n        ,\"microsoft.authorization/rolemanagementalerts/alertincidents\": { \"SingularDisplayName\": \"Microsoft.Authorization role management alerts alert incident\" }\r\n        ,\"microsoft.authorization/rolemanagementpolicies\": { \"SingularDisplayName\": \"Microsoft.Authorization role management policy\" }\r\n        ,\"microsoft.authorization/rolemanagementpolicyassignments\": { \"SingularDisplayName\": \"Microsoft.Authorization role management policy assignment\" }\r\n        ,\"microsoft.automanage/bestpractices\": { \"SingularDisplayName\": \"Microsoft.Automanage best practice\" }\r\n        ,\"microsoft.automanage/bestpractices/versions\": { \"SingularDisplayName\": \"Microsoft.Automanage best practices version\" }\r\n        ,\"microsoft.automanage/configurationprofileassignments\": { \"SingularDisplayName\": \"Microsoft.Automanage configuration profile assignment\" }\r\n        ,\"microsoft.automanage/configurationprofileassignments/reports\": { \"SingularDisplayName\": \"Microsoft.Automanage configuration profile assignments report\" }\r\n        ,\"microsoft.automanage/configurationprofiles\": { \"SingularDisplayName\": \"Microsoft.Automanage configuration profile\" }\r\n        ,\"microsoft.automanage/configurationprofiles/versions\": { \"SingularDisplayName\": \"Microsoft.Automanage configuration profiles version\" }\r\n        ,\"microsoft.automanage/serviceprincipals\": { \"SingularDisplayName\": \"ServicePrincipals\" }\r\n        ,\"microsoft.automation/automationaccounts\": { \"SingularDisplayName\": \"Automation account\" }\r\n        ,\"microsoft.automation/automationaccounts/hybridrunbookworkergroups\": { \"SingularDisplayName\": \"Automation hybrid worker group\" }\r\n        ,\"microsoft.automation/automationaccounts/runbooks\": { \"SingularDisplayName\": \"Automation runbook\" }\r\n        ,\"microsoft.autonomousdevelopmentplatform/accounts\": { \"SingularDisplayName\": \"Microsoft.AutonomousDevelopmentPlatform account\" }\r\n        ,\"microsoft.autonomousdevelopmentplatform/accounts/datapools\": { \"SingularDisplayName\": \"Microsoft.AutonomousDevelopmentPlatform accounts data pool\" }\r\n        ,\"microsoft.autonomousdevelopmentplatform/workspaces\": { \"SingularDisplayName\": \"Microsoft.AutonomousDevelopmentPlatform workspace\" }\r\n        ,\"microsoft.avs/privateclouds\": { \"SingularDisplayName\": \"Azure VMware Solution private cloud\" }\r\n        ,\"microsoft.awsconnector/accessanalyzeranalyzers\": { \"SingularDisplayName\": \"Access Analyzer Analyzer\" }\r\n        ,\"microsoft.awsconnector/acmcertificatesummaries\": { \"SingularDisplayName\": \"ACM Certificate Summary\" }\r\n        ,\"microsoft.awsconnector/apigatewayrestapis\": { \"SingularDisplayName\": \"Api Gateway Rest Api\" }\r\n        ,\"microsoft.awsconnector/apigatewaystages\": { \"SingularDisplayName\": \"Api Gateway Stage\" }\r\n        ,\"microsoft.awsconnector/applicationautoscalingscalabletargets\": { \"SingularDisplayName\": \"Application Auto Scaling Scalable Target\" }\r\n        ,\"microsoft.awsconnector/appsyncgraphqlapis\": { \"SingularDisplayName\": \"App Sync Graphql Api\" }\r\n        ,\"microsoft.awsconnector/autoscalingautoscalinggroups\": { \"SingularDisplayName\": \"Auto Scaling Auto Scaling Group\" }\r\n        ,\"microsoft.awsconnector/cloudformationstacks\": { \"SingularDisplayName\": \"Cloud Formation Stack\" }\r\n        ,\"microsoft.awsconnector/cloudformationstacksets\": { \"SingularDisplayName\": \"Cloud Formation Stack Set\" }\r\n        ,\"microsoft.awsconnector/cloudfrontdistributions\": { \"SingularDisplayName\": \"Cloud Front Distribution\" }\r\n        ,\"microsoft.awsconnector/cloudtrailtrails\": { \"SingularDisplayName\": \"Cloud Trail Trail\" }\r\n        ,\"microsoft.awsconnector/cloudwatchalarms\": { \"SingularDisplayName\": \"Cloud Watch Alarm\" }\r\n        ,\"microsoft.awsconnector/codebuildprojects\": { \"SingularDisplayName\": \"Code Build Project\" }\r\n        ,\"microsoft.awsconnector/codebuildsourcecredentialsinfos\": { \"SingularDisplayName\": \"Code Build Source Credentials Info\" }\r\n        ,\"microsoft.awsconnector/configserviceconfigurationrecorders\": { \"SingularDisplayName\": \"Config  Service Configuration Recorder\" }\r\n        ,\"microsoft.awsconnector/configserviceconfigurationrecorderstatuses\": { \"SingularDisplayName\": \"Config  Service Configuration Recorder Status\" }\r\n        ,\"microsoft.awsconnector/configservicedeliverychannels\": { \"SingularDisplayName\": \"Config  Service Delivery Channel\" }\r\n        ,\"microsoft.awsconnector/databasemigrationservicereplicationinstances\": { \"SingularDisplayName\": \"Database  Migration  Service Replication Instance\" }\r\n        ,\"microsoft.awsconnector/daxclusters\": { \"SingularDisplayName\": \"DAX Cluster\" }\r\n        ,\"microsoft.awsconnector/dynamodbcontinuousbackupsdescriptions\": { \"SingularDisplayName\": \"Dynamo DB Continuous Backups Description\" }\r\n        ,\"microsoft.awsconnector/dynamodbtables\": { \"SingularDisplayName\": \"Dynamo DB Table\" }\r\n        ,\"microsoft.awsconnector/ec2accountattributes\": { \"SingularDisplayName\": \"EC2 Account Attribute\" }\r\n        ,\"microsoft.awsconnector/ec2addresses\": { \"SingularDisplayName\": \"EC2 Address\" }\r\n        ,\"microsoft.awsconnector/ec2flowlogs\": { \"SingularDisplayName\": \"EC2 Flow Log\" }\r\n        ,\"microsoft.awsconnector/ec2images\": { \"SingularDisplayName\": \"EC2 Image\" }\r\n        ,\"microsoft.awsconnector/ec2instances\": { \"SingularDisplayName\": \"Microsoft.AwsConnector ec2 instance\" }\r\n        ,\"microsoft.awsconnector/ec2instancestatuses\": { \"SingularDisplayName\": \"EC2 Instance Status\" }\r\n        ,\"microsoft.awsconnector/ec2ipams\": { \"SingularDisplayName\": \"EC2 Ipam\" }\r\n        ,\"microsoft.awsconnector/ec2keypairs\": { \"SingularDisplayName\": \"EC2 Key Pair\" }\r\n        ,\"microsoft.awsconnector/ec2networkacls\": { \"SingularDisplayName\": \"EC2 Network Acl\" }\r\n        ,\"microsoft.awsconnector/ec2networkinterfaces\": { \"SingularDisplayName\": \"EC2 Network Interface\" }\r\n        ,\"microsoft.awsconnector/ec2routetables\": { \"SingularDisplayName\": \"EC2 Route Table\" }\r\n        ,\"microsoft.awsconnector/ec2securitygroups\": { \"SingularDisplayName\": \"EC2 Security Group\" }\r\n        ,\"microsoft.awsconnector/ec2snapshots\": { \"SingularDisplayName\": \"EC2 Snapshot\" }\r\n        ,\"microsoft.awsconnector/ec2subnets\": { \"SingularDisplayName\": \"EC2 Subnet\" }\r\n        ,\"microsoft.awsconnector/ec2volumes\": { \"SingularDisplayName\": \"EC2 Volume\" }\r\n        ,\"microsoft.awsconnector/ec2vpcendpoints\": { \"SingularDisplayName\": \"EC2 VPCEndpoint\" }\r\n        ,\"microsoft.awsconnector/ec2vpcpeeringconnections\": { \"SingularDisplayName\": \"EC2 VPCPeering Connection\" }\r\n        ,\"microsoft.awsconnector/ec2vpcs\": { \"SingularDisplayName\": \"EC2 VPC\" }\r\n        ,\"microsoft.awsconnector/ecrimagedetails\": { \"SingularDisplayName\": \"ECR Image Detail\" }\r\n        ,\"microsoft.awsconnector/ecrrepositories\": { \"SingularDisplayName\": \"ECR Repository\" }\r\n        ,\"microsoft.awsconnector/ecsclusters\": { \"SingularDisplayName\": \"ECS Cluster\" }\r\n        ,\"microsoft.awsconnector/ecsservices\": { \"SingularDisplayName\": \"ECS Service\" }\r\n        ,\"microsoft.awsconnector/ecstaskdefinitions\": { \"SingularDisplayName\": \"ECS Task Definition\" }\r\n        ,\"microsoft.awsconnector/efsfilesystems\": { \"SingularDisplayName\": \"EFS File System\" }\r\n        ,\"microsoft.awsconnector/efsmounttargets\": { \"SingularDisplayName\": \"EFS Mount Target\" }\r\n        ,\"microsoft.awsconnector/eksnodegroups\": { \"SingularDisplayName\": \"EKS Nodegroup\" }\r\n        ,\"microsoft.awsconnector/elasticbeanstalkapplications\": { \"SingularDisplayName\": \"Elastic Beanstalk Application\" }\r\n        ,\"microsoft.awsconnector/elasticbeanstalkconfigurationtemplates\": { \"SingularDisplayName\": \"Elastic Beanstalk Configuration Template\" }\r\n        ,\"microsoft.awsconnector/elasticbeanstalkenvironments\": { \"SingularDisplayName\": \"Elastic Beanstalk Environment\" }\r\n        ,\"microsoft.awsconnector/elasticloadbalancingv2listeners\": { \"SingularDisplayName\": \"Elastic Load Balancing V2 Listener\" }\r\n        ,\"microsoft.awsconnector/elasticloadbalancingv2loadbalancers\": { \"SingularDisplayName\": \"Elastic Load Balancing V2 Load Balancer\" }\r\n        ,\"microsoft.awsconnector/elasticloadbalancingv2targetgroups\": { \"SingularDisplayName\": \"Elastic Load Balancing V2 Target Group\" }\r\n        ,\"microsoft.awsconnector/elasticloadbalancingv2targethealthdescriptions\": { \"SingularDisplayName\": \"Elastic  Load  Balancing v2 Target Health Description\" }\r\n        ,\"microsoft.awsconnector/elasticsearchdomains\": { \"SingularDisplayName\": \"Elasticsearch Domain\" }\r\n        ,\"microsoft.awsconnector/emrclusters\": { \"SingularDisplayName\": \"EMR Cluster\" }\r\n        ,\"microsoft.awsconnector/guarddutydetectors\": { \"SingularDisplayName\": \"Guard Duty Detector\" }\r\n        ,\"microsoft.awsconnector/iamaccesskeylastuseds\": { \"SingularDisplayName\": \"IAM Access Key Last Used\" }\r\n        ,\"microsoft.awsconnector/iamaccesskeymetadata\": { \"SingularDisplayName\": \"IAM Access Key Metadata\" }\r\n        ,\"microsoft.awsconnector/iamgroups\": { \"SingularDisplayName\": \"IAM Group\" }\r\n        ,\"microsoft.awsconnector/iaminstanceprofiles\": { \"SingularDisplayName\": \"IAM Instance Profile\" }\r\n        ,\"microsoft.awsconnector/iammanagedpolicies\": { \"SingularDisplayName\": \"IAM Managed Policy\" }\r\n        ,\"microsoft.awsconnector/iammfadevices\": { \"SingularDisplayName\": \"IAM MFADevice\" }\r\n        ,\"microsoft.awsconnector/iampasswordpolicies\": { \"SingularDisplayName\": \"IAM Password Policy\" }\r\n        ,\"microsoft.awsconnector/iampolicyversions\": { \"SingularDisplayName\": \"IAM Policy Version\" }\r\n        ,\"microsoft.awsconnector/iamroles\": { \"SingularDisplayName\": \"IAM Role\" }\r\n        ,\"microsoft.awsconnector/iamservercertificates\": { \"SingularDisplayName\": \"IAM Server Certificate\" }\r\n        ,\"microsoft.awsconnector/iamuserpolicies\": { \"SingularDisplayName\": \"IAM User Policy\" }\r\n        ,\"microsoft.awsconnector/iamvirtualmfadevices\": { \"SingularDisplayName\": \"IAM Virtual MFADevice\" }\r\n        ,\"microsoft.awsconnector/kmsaliases\": { \"SingularDisplayName\": \"KMS Alias\" }\r\n        ,\"microsoft.awsconnector/kmskeys\": { \"SingularDisplayName\": \"KMS Key\" }\r\n        ,\"microsoft.awsconnector/lambdafunctioncodelocations\": { \"SingularDisplayName\": \"Lambda Function Code Location\" }\r\n        ,\"microsoft.awsconnector/lambdafunctionconfigurations\": { \"SingularDisplayName\": \"Microsoft.AwsConnector lambda function configuration\" }\r\n        ,\"microsoft.awsconnector/lambdafunctions\": { \"SingularDisplayName\": \"Lambda Function\" }\r\n        ,\"microsoft.awsconnector/licensemanagerlicenses\": { \"SingularDisplayName\": \"License Manager License\" }\r\n        ,\"microsoft.awsconnector/lightsailbuckets\": { \"SingularDisplayName\": \"Lightsail Bucket\" }\r\n        ,\"microsoft.awsconnector/lightsailinstances\": { \"SingularDisplayName\": \"Lightsail Instance\" }\r\n        ,\"microsoft.awsconnector/logsloggroups\": { \"SingularDisplayName\": \"Logs Log Group\" }\r\n        ,\"microsoft.awsconnector/logslogstreams\": { \"SingularDisplayName\": \"Logs Log Stream\" }\r\n        ,\"microsoft.awsconnector/logsmetricfilters\": { \"SingularDisplayName\": \"Logs Metric Filter\" }\r\n        ,\"microsoft.awsconnector/logssubscriptionfilters\": { \"SingularDisplayName\": \"Logs Subscription Filter\" }\r\n        ,\"microsoft.awsconnector/macie2jobsummaries\": { \"SingularDisplayName\": \"Macie2 Job Summary\" }\r\n        ,\"microsoft.awsconnector/macieallowlists\": { \"SingularDisplayName\": \"Macie Allow List\" }\r\n        ,\"microsoft.awsconnector/networkfirewallfirewallpolicies\": { \"SingularDisplayName\": \"Network Firewall Firewall Policy\" }\r\n        ,\"microsoft.awsconnector/networkfirewallfirewalls\": { \"SingularDisplayName\": \"Network Firewall Firewall\" }\r\n        ,\"microsoft.awsconnector/networkfirewallrulegroups\": { \"SingularDisplayName\": \"Network Firewall Rule Group\" }\r\n        ,\"microsoft.awsconnector/opensearchdomainstatuses\": { \"SingularDisplayName\": \"Open Search Domain Status\" }\r\n        ,\"microsoft.awsconnector/opensearchservicedomains\": { \"SingularDisplayName\": \"Open Search Service Domain\" }\r\n        ,\"microsoft.awsconnector/organizationsaccounts\": { \"SingularDisplayName\": \"Organizations Account\" }\r\n        ,\"microsoft.awsconnector/organizationsorganizations\": { \"SingularDisplayName\": \"Organizations Organization\" }\r\n        ,\"microsoft.awsconnector/rdsdbclusters\": { \"SingularDisplayName\": \"RDS DBCluster\" }\r\n        ,\"microsoft.awsconnector/rdsdbinstances\": { \"SingularDisplayName\": \"RDS DBInstance\" }\r\n        ,\"microsoft.awsconnector/rdsdbsnapshotattributesresults\": { \"SingularDisplayName\": \"RDS DBSnapshot Attributes Result\" }\r\n        ,\"microsoft.awsconnector/rdsdbsnapshots\": { \"SingularDisplayName\": \"RDS DBSnapshot\" }\r\n        ,\"microsoft.awsconnector/rdseventsubscriptions\": { \"SingularDisplayName\": \"RDS Event Subscription\" }\r\n        ,\"microsoft.awsconnector/rdsexporttasks\": { \"SingularDisplayName\": \"RDS Export Task\" }\r\n        ,\"microsoft.awsconnector/redshiftclusterparametergroups\": { \"SingularDisplayName\": \"Redshift Cluster Parameter Group\" }\r\n        ,\"microsoft.awsconnector/redshiftclusters\": { \"SingularDisplayName\": \"Redshift Cluster\" }\r\n        ,\"microsoft.awsconnector/route53domainsdomainsummaries\": { \"SingularDisplayName\": \"Route 53  Domains Domain Summary\" }\r\n        ,\"microsoft.awsconnector/route53hostedzones\": { \"SingularDisplayName\": \"Route53 Hosted Zone\" }\r\n        ,\"microsoft.awsconnector/route53resourcerecordsets\": { \"SingularDisplayName\": \"Route 53 Resource Record Set\" }\r\n        ,\"microsoft.awsconnector/s3accesscontrolpolicies\": { \"SingularDisplayName\": \"S3 Access Control Policy\" }\r\n        ,\"microsoft.awsconnector/s3accesspoints\": { \"SingularDisplayName\": \"S3 Access Point\" }\r\n        ,\"microsoft.awsconnector/s3bucketpolicies\": { \"SingularDisplayName\": \"S3 Bucket Policy\" }\r\n        ,\"microsoft.awsconnector/s3buckets\": { \"SingularDisplayName\": \"S3 Bucket\" }\r\n        ,\"microsoft.awsconnector/s3controlmultiregionaccesspointpolicydocuments\": { \"SingularDisplayName\": \"S3  Control Multi Region Access Point Policy Document\" }\r\n        ,\"microsoft.awsconnector/sagemakerapps\": { \"SingularDisplayName\": \"Sage Maker App\" }\r\n        ,\"microsoft.awsconnector/sagemakerdevices\": { \"SingularDisplayName\": \"Sage Maker Device\" }\r\n        ,\"microsoft.awsconnector/sagemakerimages\": { \"SingularDisplayName\": \"Sage Maker Image\" }\r\n        ,\"microsoft.awsconnector/sagemakernotebookinstancesummaries\": { \"SingularDisplayName\": \"Sage Maker Notebook Instance Summary\" }\r\n        ,\"microsoft.awsconnector/secretsmanagerresourcepolicies\": { \"SingularDisplayName\": \"Secrets Manager Resource Policy\" }\r\n        ,\"microsoft.awsconnector/secretsmanagersecrets\": { \"SingularDisplayName\": \"Secrets Manager Secret\" }\r\n        ,\"microsoft.awsconnector/snssubscriptions\": { \"SingularDisplayName\": \"SNS Subscription\" }\r\n        ,\"microsoft.awsconnector/snstopics\": { \"SingularDisplayName\": \"SNS Topic\" }\r\n        ,\"microsoft.awsconnector/sqsqueues\": { \"SingularDisplayName\": \"SQS Queue\" }\r\n        ,\"microsoft.awsconnector/ssminstanceinformations\": { \"SingularDisplayName\": \"SSM Instance Information\" }\r\n        ,\"microsoft.awsconnector/ssmparameters\": { \"SingularDisplayName\": \"SSM Parameter\" }\r\n        ,\"microsoft.awsconnector/ssmresourcecompliancesummaryitems\": { \"SingularDisplayName\": \"SSM Resource Compliance Summary Item\" }\r\n        ,\"microsoft.awsconnector/wafv2ipsets\": { \"SingularDisplayName\": \"WAFv2 IPSet\" }\r\n        ,\"microsoft.awsconnector/wafv2loggingconfigurations\": { \"SingularDisplayName\": \"WAFv2 Logging Configuration\" }\r\n        ,\"microsoft.awsconnector/wafv2webaclassociations\": { \"SingularDisplayName\": \"WAFv2 Web ACLAssociation\" }\r\n        ,\"microsoft.awsconnector/wafwebaclsummaries\": { \"SingularDisplayName\": \"WAF Web ACLSummary\" }\r\n        ,\"microsoft.azureactivedirectory/b2cdirectories\": { \"SingularDisplayName\": \"B2C tenant\" }\r\n        ,\"microsoft.azureactivedirectory/ciamdirectories\": { \"SingularDisplayName\": \"External Configuration Tenant\" }\r\n        ,\"microsoft.azureactivedirectory/guestusages\": { \"SingularDisplayName\": \"Guest Usage\" }\r\n        ,\"microsoft.azurearcdata/datacontrollers\": { \"SingularDisplayName\": \"Azure Arc data controller\" }\r\n        ,\"microsoft.azurearcdata/mysqlserver\": { \"SingularDisplayName\": \"MySql Server - Azure Arc\" }\r\n        ,\"microsoft.azurearcdata/postgresinstances\": { \"SingularDisplayName\": \"PostgreSQL server ? Azure Arc\" }\r\n        ,\"microsoft.azurearcdata/postgressqlserver\": { \"SingularDisplayName\": \"PostgresSql Server - Azure Arc\" }\r\n        ,\"microsoft.azurearcdata/sqlmanagedinstances\": { \"SingularDisplayName\": \"SQL managed instance - Azure Arc\" }\r\n        ,\"microsoft.azurearcdata/sqlserveresulicenses\": { \"SingularDisplayName\": \"SQL Server ESU license\" }\r\n        ,\"microsoft.azurearcdata/sqlserverinstances\": { \"SingularDisplayName\": \"SQL Server - Azure Arc\" }\r\n        ,\"microsoft.azurearcdata/sqlserverinstances/databases\": { \"SingularDisplayName\": \"SQL Server database - Azure Arc\" }\r\n        ,\"microsoft.azurearcdata/sqlserverlicenses\": { \"SingularDisplayName\": \"SQL Server License\" }\r\n        ,\"microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems\": { \"SingularDisplayName\": \"Microsoft.AzureBusinessContinuity deleted unified protected item\" }\r\n        ,\"microsoft.azurebusinesscontinuity/unifiedprotecteditems\": { \"SingularDisplayName\": \"Microsoft.AzureBusinessContinuity unified protected item\" }\r\n        ,\"microsoft.azurecis/aadapplications\": { \"SingularDisplayName\": \"Microsoft.AzureCis AAD application\" }\r\n        ,\"microsoft.azurecis/addressrecords\": { \"SingularDisplayName\": \"Microsoft.AzureCis address record\" }\r\n        ,\"microsoft.azurecis/autopilotenvironments\": { \"SingularDisplayName\": \"Microsoft.AzureCis autopilot environment\" }\r\n        ,\"microsoft.azurecis/autopilotmachinefunctions\": { \"SingularDisplayName\": \"Microsoft.AzureCis autopilot machine function\" }\r\n        ,\"microsoft.azurecis/autopilotsoftwareloadbalancevirtualips\": { \"SingularDisplayName\": \"Microsoft.AzureCis auto pilot software load balance virtual IP\" }\r\n        ,\"microsoft.azurecis/canonicalnamerecords\": { \"SingularDisplayName\": \"Microsoft.AzureCis canonical name record\" }\r\n        ,\"microsoft.azurecis/dsmsallowlists\": { \"SingularDisplayName\": \"Microsoft.AzureCis ds msallowlist\" }\r\n        ,\"microsoft.azurecis/dsmscertificates\": { \"SingularDisplayName\": \"Microsoft.AzureCis dsms certificate\" }\r\n        ,\"microsoft.azurecis/dsmsrootfolders\": { \"SingularDisplayName\": \"Microsoft.AzureCis dsms root folder\" }\r\n        ,\"microsoft.azurecis/dstsapplications\": { \"SingularDisplayName\": \"Microsoft.AzureCis dsts application\" }\r\n        ,\"microsoft.azurecis/dstsserviceaccounts\": { \"SingularDisplayName\": \"Microsoft.AzureCis dsts service account\" }\r\n        ,\"microsoft.azurecis/dstsserviceclientidentities\": { \"SingularDisplayName\": \"Microsoft.AzureCis dsts service client identity\" }\r\n        ,\"microsoft.azurecis/genericgenevaactions\": { \"SingularDisplayName\": \"Microsoft.AzureCis generic geneva action\" }\r\n        ,\"microsoft.azurecis/plannedquotas\": { \"SingularDisplayName\": \"Microsoft.AzureCis planned quota\" }\r\n        ,\"microsoft.azurecis/pointerrecords\": { \"SingularDisplayName\": \"Microsoft.AzureCis pointer record\" }\r\n        ,\"microsoft.azurecis/publishconfigvalues\": { \"SingularDisplayName\": \"Microsoft.AzureCis publish config value\" }\r\n        ,\"microsoft.azurecis/pushagentv2accounts\": { \"SingularDisplayName\": \"Microsoft.AzureCis push agent v2 account\" }\r\n        ,\"microsoft.azurecis/servicerecords\": { \"SingularDisplayName\": \"Microsoft.AzureCis service record\" }\r\n        ,\"microsoft.azurecis/sharedconfigvalues\": { \"SingularDisplayName\": \"Microsoft.AzureCis shared config value\" }\r\n        ,\"microsoft.azuredatatransfer/connections\": { \"SingularDisplayName\": \"Connection\" }\r\n        ,\"microsoft.azuredatatransfer/connections/flows\": { \"SingularDisplayName\": \"Flow\" }\r\n        ,\"microsoft.azuredatatransfer/pipelines\": { \"SingularDisplayName\": \"Pipeline\" }\r\n        ,\"microsoft.azurefleet/fleets\": { \"SingularDisplayName\": \"Compute Fleet\" }\r\n        ,\"microsoft.azurefleet/fleetscomputehub\": { \"SingularDisplayName\": \"Compute Fleet\" }\r\n        ,\"microsoft.azureimagetestingforlinux/jobs\": { \"SingularDisplayName\": \"Microsoft.AzureImageTestingForLinux job\" }\r\n        ,\"microsoft.azureimagetestingforlinux/jobtemplates\": { \"SingularDisplayName\": \"Microsoft.AzureImageTestingForLinux job template\" }\r\n        ,\"microsoft.azurelargeinstance/azurelargeinstances\": { \"SingularDisplayName\": \"Azure Large Instance\" }\r\n        ,\"microsoft.azurelargeinstance/azurelargestorageinstances\": { \"SingularDisplayName\": \"Microsoft.AzureLargeInstance Azure large storage instance\" }\r\n        ,\"microsoft.azurepercept/accounts\": { \"SingularDisplayName\": \"Microsoft.AzurePercept account\" }\r\n        ,\"microsoft.azurepercept/accounts/devices\": { \"SingularDisplayName\": \"Microsoft.AzurePercept accounts device\" }\r\n        ,\"microsoft.azurepercept/accounts/devices/sensors\": { \"SingularDisplayName\": \"Microsoft.AzurePercept accounts devices sensor\" }\r\n        ,\"microsoft.azurepercept/accounts/sensors\": { \"SingularDisplayName\": \"Microsoft.AzurePercept accounts sensor\" }\r\n        ,\"microsoft.azurepercept/accounts/solutioninstances\": { \"SingularDisplayName\": \"Microsoft.AzurePercept accounts solutioninstance\" }\r\n        ,\"microsoft.azurepercept/accounts/solutions\": { \"SingularDisplayName\": \"Microsoft.AzurePercept accounts solution\" }\r\n        ,\"microsoft.azurepercept/accounts/targets\": { \"SingularDisplayName\": \"Microsoft.AzurePercept accounts target\" }\r\n        ,\"microsoft.azureplaywrightservice/accounts\": { \"SingularDisplayName\": \"Playwright Testing\" }\r\n        ,\"microsoft.azurescan/scanningaccounts\": { \"SingularDisplayName\": \"ESRP Scan\" }\r\n        ,\"microsoft.azuresphere/catalogs\": { \"SingularDisplayName\": \"Azure Sphere Catalog\" }\r\n        ,\"microsoft.azurespherev2/catalogs\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalog\" }\r\n        ,\"microsoft.azurespherev2/catalogs/artifacts\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs artifact\" }\r\n        ,\"microsoft.azurespherev2/catalogs/certificates\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs certificate\" }\r\n        ,\"microsoft.azurespherev2/catalogs/deviceregistrations\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs device registration\" }\r\n        ,\"microsoft.azurespherev2/catalogs/provisioningpackages\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs provisioning package\" }\r\n        ,\"microsoft.azurespherev2/catalogs/syndicationchannels\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs syndication channel\" }\r\n        ,\"microsoft.azurespherev2/catalogs/syndicationchannels/deployments\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs syndication channels deployment\" }\r\n        ,\"microsoft.azurespherev2/catalogs/updatepackages\": { \"SingularDisplayName\": \"Microsoft.AzureSphereV2 catalogs update package\" }\r\n        ,\"microsoft.azurestack/cloudmanifestfiles\": { \"SingularDisplayName\": \"Microsoft.AzureStack cloud manifest file\" }\r\n        ,\"microsoft.azurestack/linkedsubscriptions\": { \"SingularDisplayName\": \"Microsoft.AzureStack linked subscription\" }\r\n        ,\"microsoft.azurestack/registrations\": { \"SingularDisplayName\": \"Microsoft.AzureStack registration\" }\r\n        ,\"microsoft.azurestack/registrations/customersubscriptions\": { \"SingularDisplayName\": \"Microsoft.AzureStack registrations customer subscription\" }\r\n        ,\"microsoft.azurestack/registrations/products\": { \"SingularDisplayName\": \"Microsoft.AzureStack registrations product\" }\r\n        ,\"microsoft.azurestackhci/clusters\": { \"SingularDisplayName\": \"Azure Local\" }\r\n        ,\"microsoft.azurestackhci/devicepools\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI device pool\" }\r\n        ,\"microsoft.azurestackhci/edgedevices\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI edge device\" }\r\n        ,\"microsoft.azurestackhci/edgedevices/jobs\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI edge devices job\" }\r\n        ,\"microsoft.azurestackhci/edgemachines\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI edge machine\" }\r\n        ,\"microsoft.azurestackhci/edgemachines/jobs\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI edge machines job\" }\r\n        ,\"microsoft.azurestackhci/edgenodepools\": { \"SingularDisplayName\": \"Azure Stack\" }\r\n        ,\"microsoft.azurestackhci/galleryimages\": { \"SingularDisplayName\": \"Azure Local Gallery image\" }\r\n        ,\"microsoft.azurestackhci/logicalnetworks\": { \"SingularDisplayName\": \"Azure Local Logical network\" }\r\n        ,\"microsoft.azurestackhci/marketplacegalleryimages\": { \"SingularDisplayName\": \"Azure Local Marketplace Gallery image\" }\r\n        ,\"microsoft.azurestackhci/networkinterfaces\": { \"SingularDisplayName\": \"Azure Local VM Network Interface\" }\r\n        ,\"microsoft.azurestackhci/networksecuritygroups\": { \"SingularDisplayName\": \"Azure Local Network Security Group\" }\r\n        ,\"microsoft.azurestackhci/networksecuritygroups/securityrules\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI network security groups security rule\" }\r\n        ,\"microsoft.azurestackhci/storagecontainers\": { \"SingularDisplayName\": \"Azure Local Storage path\" }\r\n        ,\"microsoft.azurestackhci/virtualharddisks\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI virtual hard disk\" }\r\n        ,\"microsoft.azurestackhci/virtualmachineinstances\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI virtual machine instance\" }\r\n        ,\"microsoft.azurestackhci/virtualmachineinstances/guestagents\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI virtual machine instances guest agent\" }\r\n        ,\"microsoft.azurestackhci/virtualmachineinstances/hybrididentitymetadata\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI virtual machine instances hybrid identity metadata\" }\r\n        ,\"microsoft.azurestackhci/virtualmachines\": { \"SingularDisplayName\": \"Azure Local virtual machine - Azure Arc\" }\r\n        ,\"microsoft.azurestackhci/virtualnetworks\": { \"SingularDisplayName\": \"Microsoft.AzureStackHCI virtual network\" }\r\n        ,\"microsoft.backupsolutions/vmwareapplications\": { \"SingularDisplayName\": \"Microsoft.BackupSolutions vmware application\" }\r\n        ,\"microsoft.bakeryhybrid/pies\": { \"SingularDisplayName\": \"Microsoft.BakeryHybrid py\" }\r\n        ,\"microsoft.bakeryhybrid/pies/nestedresourcetype\": { \"SingularDisplayName\": \"Microsoft.BakeryHybrid pies nested resource type\" }\r\n        ,\"microsoft.baremetal/baremetalconnections\": { \"SingularDisplayName\": \"Microsoft.BareMetal bare metal connection\" }\r\n        ,\"microsoft.baremetal/crayservers\": { \"SingularDisplayName\": \"Cray Server\" }\r\n        ,\"microsoft.baremetal/monitoringservers\": { \"SingularDisplayName\": \"Monitoring Server\" }\r\n        ,\"microsoft.baremetal/peeringsettings\": { \"SingularDisplayName\": \"Microsoft.BareMetal peering setting\" }\r\n        ,\"microsoft.baremetalinfrastructure/baremetalinstances\": { \"SingularDisplayName\": \"BareMetal Instance\" }\r\n        ,\"microsoft.baremetalinfrastructure/baremetalstorageinstances\": { \"SingularDisplayName\": \"Microsoft.BareMetalInfrastructure bare metal storage instance\" }\r\n        ,\"microsoft.batch/batchaccounts\": { \"SingularDisplayName\": \"Batch account\" }\r\n        ,\"microsoft.billing/billingaccounts\": { \"SingularDisplayName\": \"Microsoft.Billing billing account\" }\r\n        ,\"microsoft.billing/billingaccounts/agreements\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts agreement\" }\r\n        ,\"microsoft.billing/billingaccounts/associatedtenants\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts associated tenant\" }\r\n        ,\"microsoft.billing/billingaccounts/availablebalance\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts available balance\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profile\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/availablebalance\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles available balance\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles billing role assignment\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles billing role definition\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/billingsubscriptions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles billing subscription\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/customers\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles customer\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/customers/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles customers billing role assignment\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/customers/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles customers billing role definition\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/customers/transfers\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles customers transfer\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/instructions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles instruction\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoices\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoicesections\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice section\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoicesections/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice sections billing role assignment\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoicesections/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice sections billing role definition\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoicesections/billingsubscriptions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice sections billing subscription\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoicesections/products\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice sections product\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/invoicesections/transfers\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles invoice sections transfer\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/paymentmethodlinks\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles payment method link\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/policies\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles policy\" }\r\n        ,\"microsoft.billing/billingaccounts/billingprofiles/transactions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing profiles transaction\" }\r\n        ,\"microsoft.billing/billingaccounts/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing role assignment\" }\r\n        ,\"microsoft.billing/billingaccounts/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing role definition\" }\r\n        ,\"microsoft.billing/billingaccounts/billingsubscriptionaliases\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing subscription aliase\" }\r\n        ,\"microsoft.billing/billingaccounts/billingsubscriptions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing subscription\" }\r\n        ,\"microsoft.billing/billingaccounts/billingsubscriptions/invoices\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts billing subscriptions invoice\" }\r\n        ,\"microsoft.billing/billingaccounts/customers\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts customer\" }\r\n        ,\"microsoft.billing/billingaccounts/customers/billingsubscriptions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts customers billing subscription\" }\r\n        ,\"microsoft.billing/billingaccounts/customers/policies\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts customers policy\" }\r\n        ,\"microsoft.billing/billingaccounts/customers/products\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts customers product\" }\r\n        ,\"microsoft.billing/billingaccounts/departments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts department\" }\r\n        ,\"microsoft.billing/billingaccounts/departments/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts departments billing role assignment\" }\r\n        ,\"microsoft.billing/billingaccounts/departments/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts departments billing role definition\" }\r\n        ,\"microsoft.billing/billingaccounts/departments/enrollmentaccounts\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts departments enrollment account\" }\r\n        ,\"microsoft.billing/billingaccounts/enrollmentaccounts\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts enrollment account\" }\r\n        ,\"microsoft.billing/billingaccounts/enrollmentaccounts/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts enrollment accounts billing role assignment\" }\r\n        ,\"microsoft.billing/billingaccounts/enrollmentaccounts/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts enrollment accounts billing role definition\" }\r\n        ,\"microsoft.billing/billingaccounts/incentiveschedules\": { \"SingularDisplayName\": \"Incentive Schedule\" }\r\n        ,\"microsoft.billing/billingaccounts/incentiveschedules/milestones\": { \"SingularDisplayName\": \"Milestone\" }\r\n        ,\"microsoft.billing/billingaccounts/invoices\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts invoice\" }\r\n        ,\"microsoft.billing/billingaccounts/invoicesections\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts invoice section\" }\r\n        ,\"microsoft.billing/billingaccounts/invoicesections/billingsubscriptions\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts invoice sections billing subscription\" }\r\n        ,\"microsoft.billing/billingaccounts/invoicesections/products\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts invoice sections product\" }\r\n        ,\"microsoft.billing/billingaccounts/invoicesections/transfers\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts invoice sections transfer\" }\r\n        ,\"microsoft.billing/billingaccounts/lineofcredit\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts line of credit\" }\r\n        ,\"microsoft.billing/billingaccounts/migrations\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts migration\" }\r\n        ,\"microsoft.billing/billingaccounts/paymentmethods\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts payment method\" }\r\n        ,\"microsoft.billing/billingaccounts/policies\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts policy\" }\r\n        ,\"microsoft.billing/billingaccounts/products\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts product\" }\r\n        ,\"microsoft.billing/billingaccounts/reservationorders\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts reservation order\" }\r\n        ,\"microsoft.billing/billingaccounts/reservationorders/reservations\": { \"SingularDisplayName\": \"Microsoft.Billing billing accounts reservation orders reservation\" }\r\n        ,\"microsoft.billing/billingaccounts/savingsplanorders\": { \"SingularDisplayName\": \"Savings plan order\" }\r\n        ,\"microsoft.billing/billingaccounts/savingsplanorders/savingsplans\": { \"SingularDisplayName\": \"Savings plan\" }\r\n        ,\"microsoft.billing/billingperiods\": { \"SingularDisplayName\": \"Microsoft.Billing billing period\" }\r\n        ,\"microsoft.billing/billingproperty\": { \"SingularDisplayName\": \"Microsoft.Billing billing property\" }\r\n        ,\"microsoft.billing/billingrequests\": { \"SingularDisplayName\": \"Microsoft.Billing billing request\" }\r\n        ,\"microsoft.billing/billingroleassignments\": { \"SingularDisplayName\": \"Microsoft.Billing billing role assignment\" }\r\n        ,\"microsoft.billing/billingroledefinitions\": { \"SingularDisplayName\": \"Microsoft.Billing billing role definition\" }\r\n        ,\"microsoft.billing/enrollmentaccounts\": { \"SingularDisplayName\": \"Microsoft.Billing enrollment account\" }\r\n        ,\"microsoft.billing/paymentmethods\": { \"SingularDisplayName\": \"Microsoft.Billing payment method\" }\r\n        ,\"microsoft.billing/policies\": { \"SingularDisplayName\": \"Microsoft.Billing policy\" }\r\n        ,\"microsoft.billing/promotions\": { \"SingularDisplayName\": \"Microsoft.Billing promotion\" }\r\n        ,\"microsoft.billing/transfers\": { \"SingularDisplayName\": \"Microsoft.Billing transfer\" }\r\n        ,\"microsoft.billingbenefits/incentiveschedules\": { \"SingularDisplayName\": \"Incentive Schedule\" }\r\n        ,\"microsoft.billingbenefits/incentiveschedules/milestones\": { \"SingularDisplayName\": \"Milestone\" }\r\n        ,\"microsoft.billingbenefits/maccs\": { \"SingularDisplayName\": \"Microsoft Azure Consumption Commitment\" }\r\n        ,\"microsoft.billingbenefits/reservationorderaliases\": { \"SingularDisplayName\": \"Microsoft.BillingBenefits reservation order aliase\" }\r\n        ,\"microsoft.billingbenefits/savingsplanorderaliases\": { \"SingularDisplayName\": \"Microsoft.BillingBenefits savings plan order aliase\" }\r\n        ,\"microsoft.billingbenefits/savingsplanorders\": { \"SingularDisplayName\": \"Savings plan order\" }\r\n        ,\"microsoft.billingbenefits/savingsplanorders/savingsplans\": { \"SingularDisplayName\": \"Savings plan\" }\r\n        ,\"microsoft.bing/accounts\": { \"SingularDisplayName\": \"Bing Resource\" }\r\n        ,\"microsoft.blockchain/blockchainmembers\": { \"SingularDisplayName\": \"Microsoft.Blockchain blockchain member\" }\r\n        ,\"microsoft.blockchain/blockchainmembers/transactionnodes\": { \"SingularDisplayName\": \"Microsoft.Blockchain blockchain members transaction node\" }\r\n        ,\"microsoft.blockchaintokens/tokenservices\": { \"SingularDisplayName\": \"Microsoft.BlockchainTokens token service\" }\r\n        ,\"microsoft.blockchaintokens/tokenservices/blockchainnetworks\": { \"SingularDisplayName\": \"Microsoft.BlockchainTokens token services blockchain network\" }\r\n        ,\"microsoft.blockchaintokens/tokenservices/groups\": { \"SingularDisplayName\": \"Microsoft.BlockchainTokens token services group\" }\r\n        ,\"microsoft.blockchaintokens/tokenservices/groups/accounts\": { \"SingularDisplayName\": \"Microsoft.BlockchainTokens token services groups account\" }\r\n        ,\"microsoft.blockchaintokens/tokenservices/tokentemplates\": { \"SingularDisplayName\": \"Microsoft.BlockchainTokens token services token template\" }\r\n        ,\"microsoft.bluefin/instances\": { \"SingularDisplayName\": \"Microsoft.Bluefin instance\" }\r\n        ,\"microsoft.bluefin/instances/datasets\": { \"SingularDisplayName\": \"Microsoft.Bluefin instances dataset\" }\r\n        ,\"microsoft.bluefin/instances/pipelines\": { \"SingularDisplayName\": \"Microsoft.Bluefin instances pipeline\" }\r\n        ,\"microsoft.blueprint/blueprintassignments\": { \"SingularDisplayName\": \"Microsoft.Blueprint blueprint assignment\" }\r\n        ,\"microsoft.blueprint/blueprints\": { \"SingularDisplayName\": \"Microsoft.Blueprint blueprint\" }\r\n        ,\"microsoft.blueprint/blueprints/artifacts\": { \"SingularDisplayName\": \"Microsoft.Blueprint blueprints artifact\" }\r\n        ,\"microsoft.blueprint/blueprints/versions\": { \"SingularDisplayName\": \"Microsoft.Blueprint blueprints version\" }\r\n        ,\"microsoft.botservice/botservices\": { \"SingularDisplayName\": \"Bot Service\" }\r\n        ,\"microsoft.cache/redis\": { \"SingularDisplayName\": \"Redis cache\" }\r\n        ,\"microsoft.cache/redisenterprise\": { \"SingularDisplayName\": \"Redis Enterprise cluster\" }\r\n        ,\"microsoft.cache/redisenterprise/databases\": { \"SingularDisplayName\": \"Redis Enterprise database\" }\r\n        ,\"microsoft.capacity/reservationorders\": { \"SingularDisplayName\": \"Reservation order\" }\r\n        ,\"microsoft.capacity/reservationorders/reservations\": { \"SingularDisplayName\": \"Reservation\" }\r\n        ,\"microsoft.cascade/sites\": { \"SingularDisplayName\": \"Microsoft.Cascade site\" }\r\n        ,\"microsoft.cdn/cdnwebapplicationfirewallpolicies\": { \"SingularDisplayName\": \"Content Delivery Network WAF policy\" }\r\n        ,\"microsoft.cdn/edgeactions\": { \"SingularDisplayName\": \"Edge Action\" }\r\n        ,\"microsoft.cdn/profiles\": { \"SingularDisplayName\": \"Front Door and CDN profile\" }\r\n        ,\"microsoft.cdn/profiles/afdendpoints\": { \"SingularDisplayName\": \"Endpoint\" }\r\n        ,\"microsoft.cdn/profiles/afdendpoints/routes\": { \"SingularDisplayName\": \"Route\" }\r\n        ,\"microsoft.cdn/profiles/customdomains\": { \"SingularDisplayName\": \"Custom domain\" }\r\n        ,\"microsoft.cdn/profiles/endpoints\": { \"SingularDisplayName\": \"CDN endpoint\" }\r\n        ,\"microsoft.cdn/profiles/endpoints/customdomains\": { \"SingularDisplayName\": \"CDN custom domain\" }\r\n        ,\"microsoft.cdn/profiles/endpoints/origins\": { \"SingularDisplayName\": \"CDN origin\" }\r\n        ,\"microsoft.cdn/profiles/origingroups\": { \"SingularDisplayName\": \"Origin group\" }\r\n        ,\"microsoft.cdn/profiles/origingroups/origins\": { \"SingularDisplayName\": \"Origin\" }\r\n        ,\"microsoft.cdn/profiles/rulesets\": { \"SingularDisplayName\": \"Rule set\" }\r\n        ,\"microsoft.cdn/profiles/rulesets/rules\": { \"SingularDisplayName\": \"Rule\" }\r\n        ,\"microsoft.cdn/profiles/secrets\": { \"SingularDisplayName\": \"Secret\" }\r\n        ,\"microsoft.cdn/profiles/securitypolicies\": { \"SingularDisplayName\": \"Security policy\" }\r\n        ,\"microsoft.certificateregistration/certificateorders\": { \"SingularDisplayName\": \"App Service certificate\" }\r\n        ,\"microsoft.certify/testsuites\": { \"SingularDisplayName\": \"Microsoft.Certify test suite\" }\r\n        ,\"microsoft.certify/validationjobs\": { \"SingularDisplayName\": \"Microsoft.Certify validation job\" }\r\n        ,\"microsoft.changeanalysis/profile\": { \"SingularDisplayName\": \"Microsoft.ChangeAnalysis profile\" }\r\n        ,\"microsoft.changesafety/changestates\": { \"SingularDisplayName\": \"Microsoft.ChangeSafety change state\" }\r\n        ,\"microsoft.changesafety/changestates/stageprogressions\": { \"SingularDisplayName\": \"Microsoft.ChangeSafety change states stage progression\" }\r\n        ,\"microsoft.changesafety/stagemaps\": { \"SingularDisplayName\": \"Microsoft.ChangeSafety stage map\" }\r\n        ,\"microsoft.changesafety/validations\": { \"SingularDisplayName\": \"Microsoft.ChangeSafety validation\" }\r\n        ,\"microsoft.changesafety/validators\": { \"SingularDisplayName\": \"Microsoft.ChangeSafety validator\" }\r\n        ,\"microsoft.changesafety/validators/versions\": { \"SingularDisplayName\": \"Microsoft.ChangeSafety validators version\" }\r\n        ,\"microsoft.chaos/experiments\": { \"SingularDisplayName\": \"Chaos Experiment\" }\r\n        ,\"microsoft.chaos/privateaccesses\": { \"SingularDisplayName\": \"Agent Private Access\" }\r\n        ,\"microsoft.chaos/targets\": { \"SingularDisplayName\": \"Microsoft.Chaos target\" }\r\n        ,\"microsoft.chaos/targets/capabilities\": { \"SingularDisplayName\": \"Microsoft.Chaos targets capability\" }\r\n        ,\"microsoft.classiccompute/domainnames\": { \"SingularDisplayName\": \"Cloud service (classic)\" }\r\n        ,\"microsoft.classiccompute/domainnames/slots/roles\": { \"SingularDisplayName\": \"Cloud service role (classic)\" }\r\n        ,\"microsoft.classiccompute/virtualmachines\": { \"SingularDisplayName\": \"Virtual machine (classic)\" }\r\n        ,\"microsoft.classicnetwork/networksecuritygroups\": { \"SingularDisplayName\": \"Network security group (classic)\" }\r\n        ,\"microsoft.classicnetwork/reservedips\": { \"SingularDisplayName\": \"Reserved IP address (classic)\" }\r\n        ,\"microsoft.classicnetwork/virtualnetworks\": { \"SingularDisplayName\": \"Virtual network (classic)\" }\r\n        ,\"microsoft.classicstorage/storageaccounts\": { \"SingularDisplayName\": \"Storage account (classic)\" }\r\n        ,\"microsoft.classicstorage/storageaccounts/disks\": { \"SingularDisplayName\": \"Disk (classic)\" }\r\n        ,\"microsoft.classicstorage/storageaccounts/osimages\": { \"SingularDisplayName\": \"OS image (classic)\" }\r\n        ,\"microsoft.classicstorage/storageaccounts/vmimages\": { \"SingularDisplayName\": \"VM image (classic)\" }\r\n        ,\"microsoft.cleanroom/cleanrooms\": { \"SingularDisplayName\": \"Microsoft.CleanRoom cleanroom\" }\r\n        ,\"microsoft.cleanroom/collaborations\": { \"SingularDisplayName\": \"Microsoft.CleanRoom collaboration\" }\r\n        ,\"microsoft.cleanroom/collaborations/contracts\": { \"SingularDisplayName\": \"Microsoft.CleanRoom collaborations contract\" }\r\n        ,\"microsoft.cleanroom/consortiums\": { \"SingularDisplayName\": \"Microsoft.CleanRoom consortium\" }\r\n        ,\"microsoft.cleanroom/microservices\": { \"SingularDisplayName\": \"Microsoft.CleanRoom microservice\" }\r\n        ,\"microsoft.cloud/hubs\": { \"SingularDisplayName\": \"FinOps hub\" }\r\n        ,\"microsoft.clouddeviceplatform/delegatedidentities\": { \"SingularDisplayName\": \"Microsoft.CloudDevicePlatform delegated identity\" }\r\n        ,\"microsoft.cloudhealth/healthmodels\": { \"SingularDisplayName\": \"Health Model\" }\r\n        ,\"microsoft.cloudtest/accounts\": { \"SingularDisplayName\": \"CloudTest Account\" }\r\n        ,\"microsoft.cloudtest/buildcaches\": { \"SingularDisplayName\": \"1ES Build Cache\" }\r\n        ,\"microsoft.cloudtest/hostedpools\": { \"SingularDisplayName\": \"1ES Hosted Pool\" }\r\n        ,\"microsoft.cloudtest/images\": { \"SingularDisplayName\": \"1ES Image\" }\r\n        ,\"microsoft.cloudtest/pools\": { \"SingularDisplayName\": \"CloudTest Pool\" }\r\n        ,\"microsoft.clusterstor/nodes\": { \"SingularDisplayName\": \"ClusterStor\" }\r\n        ,\"microsoft.codesigning/codesigningaccounts\": { \"SingularDisplayName\": \"Trusted Signing Account\" }\r\n        ,\"microsoft.codespaces/plans\": { \"SingularDisplayName\": \"Microsoft.Codespaces plan\" }\r\n    })[tolower(id)]\r\n}\r\n",
                    "$fxv#2": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n.create-or-alter function \r\nwith (docstring = 'Return details about the specified ID.', folder = 'OpenData/Internal')\r\n_resource_type_2(id: string) {\r\n    dynamic({\r\n        \"microsoft.cognitiveservices/accounts\": { \"SingularDisplayName\": \"Azure AI services\" }\r\n        ,\"microsoft.cognitiveservices/commitmentplans\": { \"SingularDisplayName\": \"Microsoft.CognitiveServices commitment plan\" }\r\n        ,\"microsoft.cognitiveservices/commitmentplans/accountassociations\": { \"SingularDisplayName\": \"Microsoft.CognitiveServices commitment plans account association\" }\r\n        ,\"microsoft.communication/communicationservices\": { \"SingularDisplayName\": \"Communication Service\" }\r\n        ,\"microsoft.communication/emailservices\": { \"SingularDisplayName\": \"Email Communication Service\" }\r\n        ,\"microsoft.communication/emailservices/domains\": { \"SingularDisplayName\": \"Email Communication Services Domain\" }\r\n        ,\"microsoft.community/communitytrainings\": { \"SingularDisplayName\": \"Community Training\" }\r\n        ,\"microsoft.compositesolutions/compositesolutiondefinitions\": { \"SingularDisplayName\": \"Microsoft.CompositeSolutions composite solution definition\" }\r\n        ,\"microsoft.compositesolutions/compositesolutions\": { \"SingularDisplayName\": \"Microsoft.CompositeSolutions composite solution\" }\r\n        ,\"microsoft.compute/availabilitysets\": { \"SingularDisplayName\": \"Availability set\" }\r\n        ,\"microsoft.compute/capacityreservationgroups\": { \"SingularDisplayName\": \"Capacity Reservation Group\" }\r\n        ,\"microsoft.compute/capacityreservationgroups/capacityreservations\": { \"SingularDisplayName\": \"Capacity reservation\" }\r\n        ,\"microsoft.compute/capacityreservationgroupscomputehub\": { \"SingularDisplayName\": \"Capacity Reservation Group\" }\r\n        ,\"microsoft.compute/cloudservices\": { \"SingularDisplayName\": \"Cloud service (extended support)\" }\r\n        ,\"microsoft.compute/computefleetinstances\": { \"SingularDisplayName\": \"Instance\" }\r\n        ,\"microsoft.compute/computefleetscalesets\": { \"SingularDisplayName\": \"Virtual machine scale set\" }\r\n        ,\"microsoft.compute/diskaccesses\": { \"SingularDisplayName\": \"Disk Access\" }\r\n        ,\"microsoft.compute/diskencryptionsets\": { \"SingularDisplayName\": \"Disk Encryption Set\" }\r\n        ,\"microsoft.compute/disks\": { \"SingularDisplayName\": \"Disk\" }\r\n        ,\"microsoft.compute/galleries\": { \"SingularDisplayName\": \"Azure compute gallery\" }\r\n        ,\"microsoft.compute/galleries/applications\": { \"SingularDisplayName\": \"VM application definition\" }\r\n        ,\"microsoft.compute/galleries/applications/versions\": { \"SingularDisplayName\": \"VM application version\" }\r\n        ,\"microsoft.compute/galleries/images\": { \"SingularDisplayName\": \"VM image definition\" }\r\n        ,\"microsoft.compute/galleries/images/versions\": { \"SingularDisplayName\": \"VM image version\" }\r\n        ,\"microsoft.compute/galleries/imagescomputehub\": { \"SingularDisplayName\": \"VM image definition\" }\r\n        ,\"microsoft.compute/hostgroups\": { \"SingularDisplayName\": \"Host group\" }\r\n        ,\"microsoft.compute/hostgroups/hosts\": { \"SingularDisplayName\": \"Host\" }\r\n        ,\"microsoft.compute/hostgroupscomputehub\": { \"SingularDisplayName\": \"Host group\" }\r\n        ,\"microsoft.compute/images\": { \"SingularDisplayName\": \"Image\" }\r\n        ,\"microsoft.compute/imagescomputehub\": { \"SingularDisplayName\": \"Image\" }\r\n        ,\"microsoft.compute/locations/communitygalleries/images\": { \"SingularDisplayName\": \"Community image\" }\r\n        ,\"microsoft.compute/locations/communitygalleries/imagescomputehub\": { \"SingularDisplayName\": \"Community image\" }\r\n        ,\"microsoft.compute/proximityplacementgroups\": { \"SingularDisplayName\": \"Proximity placement group\" }\r\n        ,\"microsoft.compute/proximityplacementgroupscomputehub\": { \"SingularDisplayName\": \"Proximity placement group\" }\r\n        ,\"microsoft.compute/restorepointcollections\": { \"SingularDisplayName\": \"Restore Point Collection\" }\r\n        ,\"microsoft.compute/restorepointcollections/restorepoints\": { \"SingularDisplayName\": \"Restore Point\" }\r\n        ,\"microsoft.compute/snapshots\": { \"SingularDisplayName\": \"Snapshot\" }\r\n        ,\"microsoft.compute/sshpublickeys\": { \"SingularDisplayName\": \"SSH key\" }\r\n        ,\"microsoft.compute/standbypoolinstance\": { \"SingularDisplayName\": \"Standby pool\" }\r\n        ,\"microsoft.compute/virtualmachinecomputehub\": { \"SingularDisplayName\": \"Virtual machine\" }\r\n        ,\"microsoft.compute/virtualmachineflexinstances\": { \"SingularDisplayName\": \"Instance\" }\r\n        ,\"microsoft.compute/virtualmachines\": { \"SingularDisplayName\": \"Virtual machine\" }\r\n        ,\"microsoft.compute/virtualmachines/providers/guestconfigurationassignments\": { \"SingularDisplayName\": \"Guest Assignment\" }\r\n        ,\"microsoft.compute/virtualmachinescalesets\": { \"SingularDisplayName\": \"Virtual machine scale set\" }\r\n        ,\"microsoft.compute/virtualmachinescalesets/providers/guestconfigurationassignments\": { \"SingularDisplayName\": \"Guest Assignment\" }\r\n        ,\"microsoft.compute/virtualmachinescalesets/virtualmachines\": { \"SingularDisplayName\": \"Virtual machine scale set instance\" }\r\n        ,\"microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses\": { \"SingularDisplayName\": \"Public IP address\" }\r\n        ,\"microsoft.compute/virtualmachinescalesetscomputehub\": { \"SingularDisplayName\": \"Virtual machine scale set\" }\r\n        ,\"microsoft.computehub/advisorcost\": { \"SingularDisplayName\": \"Recommendations\" }\r\n        ,\"microsoft.computehub/advisoroperationalexcellence\": { \"SingularDisplayName\": \"Recommendations\" }\r\n        ,\"microsoft.computehub/advisorperformance\": { \"SingularDisplayName\": \"Recommendations\" }\r\n        ,\"microsoft.computehub/advisorreliability\": { \"SingularDisplayName\": \"Recommendations\" }\r\n        ,\"microsoft.computehub/advisorsecurity\": { \"SingularDisplayName\": \"Recommendations\" }\r\n        ,\"microsoft.computehub/all\": { \"SingularDisplayName\": \"All resources\" }\r\n        ,\"microsoft.computehub/backup\": { \"SingularDisplayName\": \"Backup job\" }\r\n        ,\"microsoft.computehub/computehubmain\": { \"SingularDisplayName\": \"Compute infrastructure\" }\r\n        ,\"microsoft.computehub/healthevents\": { \"SingularDisplayName\": \"Health events\" }\r\n        ,\"microsoft.computehub/linuxostype\": { \"SingularDisplayName\": \"Linux OS\" }\r\n        ,\"microsoft.computehub/microsoftdefenderfreetrialsubscription\": { \"SingularDisplayName\": \"Microsoft defender\" }\r\n        ,\"microsoft.computehub/microsoftdefenderstandardsubscription\": { \"SingularDisplayName\": \"Microsoft defender\" }\r\n        ,\"microsoft.computehub/outages\": { \"SingularDisplayName\": \"Outages\" }\r\n        ,\"microsoft.computehub/powerstatedeallocated\": { \"SingularDisplayName\": \"Power states\" }\r\n        ,\"microsoft.computehub/powerstaterunning\": { \"SingularDisplayName\": \"Power states\" }\r\n        ,\"microsoft.computehub/powerstatestopped\": { \"SingularDisplayName\": \"Power states\" }\r\n        ,\"microsoft.computehub/provisioningstatefailedresources\": { \"SingularDisplayName\": \"Provisioning states\" }\r\n        ,\"microsoft.computehub/provisioningstatesucceededresources\": { \"SingularDisplayName\": \"Provisioning states\" }\r\n        ,\"microsoft.computehub/windowsostype\": { \"SingularDisplayName\": \"Windows OS\" }\r\n        ,\"microsoft.computeschedule/autoactions\": { \"SingularDisplayName\": \"Automatic Action\" }\r\n        ,\"microsoft.computeschedule/autoactions/occurrences\": { \"SingularDisplayName\": \"Microsoft.ComputeSchedule auto actions occurrence\" }\r\n        ,\"microsoft.confidentialledger/ledgers\": { \"SingularDisplayName\": \"Confidential Ledger\" }\r\n        ,\"microsoft.confidentialledger/managedccfs\": { \"SingularDisplayName\": \"Managed CCF App\" }\r\n        ,\"microsoft.confluent/agreements\": { \"SingularDisplayName\": \"Microsoft.Confluent agreement\" }\r\n        ,\"microsoft.confluent/organizations\": { \"SingularDisplayName\": \"Confluent organization\" }\r\n        ,\"microsoft.connectedcache/cachenodes\": { \"SingularDisplayName\": \"Connected Cache for ISP\" }\r\n        ,\"microsoft.connectedcache/enterprisecustomers\": { \"SingularDisplayName\": \"Connected Cache for Enterprise & Education\" }\r\n        ,\"microsoft.connectedcache/enterprisemcccustomers\": { \"SingularDisplayName\": \"Connected Cache for Enterprise & Education\" }\r\n        ,\"microsoft.connectedcache/enterprisemcccustomers/enterprisemcccachenodes\": { \"SingularDisplayName\": \"MCC CacheNode for Enterprise\" }\r\n        ,\"microsoft.connectedcache/ispcustomers\": { \"SingularDisplayName\": \"Connected Cache for ISP\" }\r\n        ,\"microsoft.connectedcredentials/credentials\": { \"SingularDisplayName\": \"Microsoft.ConnectedCredentials credential\" }\r\n        ,\"microsoft.connectedvehicle/platformaccounts\": { \"SingularDisplayName\": \"Microsoft.ConnectedVehicle platform account\" }\r\n        ,\"microsoft.connectedvmwarevsphere/clusters\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere cluster\" }\r\n        ,\"microsoft.connectedvmwarevsphere/datastores\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere datastore\" }\r\n        ,\"microsoft.connectedvmwarevsphere/hosts\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere host\" }\r\n        ,\"microsoft.connectedvmwarevsphere/resourcepools\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere resource pool\" }\r\n        ,\"microsoft.connectedvmwarevsphere/vcenters\": { \"SingularDisplayName\": \"VMware vCenter\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualmachineinstances\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere virtual machine instance\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualmachineinstances/guestagents\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere virtual machine instances guest agent\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualmachineinstances/hybrididentitymetadata\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere virtual machine instances hybrid identity metadata\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualmachines\": { \"SingularDisplayName\": \"VMware + AVS virtual machine\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualmachines/providers/guestconfigurationassignments\": { \"SingularDisplayName\": \"Guest Assignment\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualmachinetemplates\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere virtual machine template\" }\r\n        ,\"microsoft.connectedvmwarevsphere/virtualnetworks\": { \"SingularDisplayName\": \"Microsoft.ConnectedVMwarevSphere virtual network\" }\r\n        ,\"microsoft.consumption/budgets\": { \"SingularDisplayName\": \"Microsoft.Consumption budget\" }\r\n        ,\"microsoft.consumption/credits\": { \"SingularDisplayName\": \"Microsoft.Consumption credit\" }\r\n        ,\"microsoft.consumption/pricesheets\": { \"SingularDisplayName\": \"Microsoft.Consumption pricesheet\" }\r\n        ,\"microsoft.containerinstance/containergroupprofiles\": { \"SingularDisplayName\": \"Microsoft.ContainerInstance container group profile\" }\r\n        ,\"microsoft.containerinstance/containergroupprofiles/revisions\": { \"SingularDisplayName\": \"Microsoft.ContainerInstance container group profiles revision\" }\r\n        ,\"microsoft.containerinstance/containergroups\": { \"SingularDisplayName\": \"Container instances\" }\r\n        ,\"microsoft.containerinstance/ngroups\": { \"SingularDisplayName\": \"Microsoft.ContainerInstance ngroup\" }\r\n        ,\"microsoft.containerregistry/registries\": { \"SingularDisplayName\": \"Container registry\" }\r\n        ,\"microsoft.containerregistry/registries/replications\": { \"SingularDisplayName\": \"Container registry replication\" }\r\n        ,\"microsoft.containerregistry/registries/scopemaps\": { \"SingularDisplayName\": \"Container registry scope map\" }\r\n        ,\"microsoft.containerregistry/registries/tokens\": { \"SingularDisplayName\": \"Container registry token\" }\r\n        ,\"microsoft.containerregistry/registries/webhooks\": { \"SingularDisplayName\": \"Container registry webhook\" }\r\n        ,\"microsoft.containerservice/fleets\": { \"SingularDisplayName\": \"Kubernetes fleet manager\" }\r\n        ,\"microsoft.containerservice/managedclusters\": { \"SingularDisplayName\": \"Kubernetes service\" }\r\n        ,\"microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/extensions\": { \"SingularDisplayName\": \"Kubernetes service extension\" }\r\n        ,\"microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations\": { \"SingularDisplayName\": \"GitOps configuration\" }\r\n        ,\"microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces\": { \"SingularDisplayName\": \"Kubernetes namespace\" }\r\n        ,\"microsoft.containerservice/managedclustersnapshots\": { \"SingularDisplayName\": \"Microsoft.ContainerService managedclustersnapshot\" }\r\n        ,\"microsoft.containerservice/snapshots\": { \"SingularDisplayName\": \"Microsoft.ContainerService snapshot\" }\r\n        ,\"microsoft.containerstorage/pools\": { \"SingularDisplayName\": \"Container storage\" }\r\n        ,\"microsoft.costmanagement/alerts\": { \"SingularDisplayName\": \"Microsoft.CostManagement alert\" }\r\n        ,\"microsoft.costmanagement/budgets\": { \"SingularDisplayName\": \"Microsoft.CostManagement budget\" }\r\n        ,\"microsoft.costmanagement/cloudconnectors\": { \"SingularDisplayName\": \"Microsoft.CostManagement cloud connector\" }\r\n        ,\"microsoft.costmanagement/connectors\": { \"SingularDisplayName\": \"Microsoft.CostManagement connector\" }\r\n        ,\"microsoft.costmanagement/costallocationrules\": { \"SingularDisplayName\": \"Microsoft.CostManagement cost allocation rule\" }\r\n        ,\"microsoft.costmanagement/costdetailsoperationresults\": { \"SingularDisplayName\": \"Microsoft.CostManagement cost details operation result\" }\r\n        ,\"microsoft.costmanagement/exports\": { \"SingularDisplayName\": \"Microsoft.CostManagement export\" }\r\n        ,\"microsoft.costmanagement/externalbillingaccounts\": { \"SingularDisplayName\": \"Microsoft.CostManagement external billing account\" }\r\n        ,\"microsoft.costmanagement/externalsubscriptions\": { \"SingularDisplayName\": \"Microsoft.CostManagement external subscription\" }\r\n        ,\"microsoft.costmanagement/markuprules\": { \"SingularDisplayName\": \"Microsoft.CostManagement markup rule\" }\r\n        ,\"microsoft.costmanagement/operationstatus\": { \"SingularDisplayName\": \"Microsoft.CostManagement operation statu\" }\r\n        ,\"microsoft.costmanagement/reportconfigs\": { \"SingularDisplayName\": \"Microsoft.CostManagement reportconfig\" }\r\n        ,\"microsoft.costmanagement/reports\": { \"SingularDisplayName\": \"Microsoft.CostManagement report\" }\r\n        ,\"microsoft.costmanagement/scheduledactions\": { \"SingularDisplayName\": \"Microsoft.CostManagement scheduled action\" }\r\n        ,\"microsoft.costmanagement/settings\": { \"SingularDisplayName\": \"Microsoft.CostManagement setting\" }\r\n        ,\"microsoft.costmanagement/views\": { \"SingularDisplayName\": \"Microsoft.CostManagement view\" }\r\n        ,\"microsoft.customerlockbox/requests\": { \"SingularDisplayName\": \"Microsoft.CustomerLockbox request\" }\r\n        ,\"microsoft.customerlockbox/tenantoptedin\": { \"SingularDisplayName\": \"Microsoft.CustomerLockbox tenant opted in\" }\r\n        ,\"microsoft.customproviders/associations\": { \"SingularDisplayName\": \"Microsoft.CustomProviders association\" }\r\n        ,\"microsoft.customproviders/resourceproviders\": { \"SingularDisplayName\": \"Microsoft.CustomProviders resource provider\" }\r\n        ,\"microsoft.dashboard/dashboards\": { \"SingularDisplayName\": \"Azure Monitor Dashboard\" }\r\n        ,\"microsoft.dashboard/grafana\": { \"SingularDisplayName\": \"Azure Managed Grafana\" }\r\n        ,\"microsoft.dataaccelerator/indexclusters\": { \"SingularDisplayName\": \"Microsoft.DataAccelerator index cluster\" }\r\n        ,\"microsoft.databasefleetmanager/fleets\": { \"SingularDisplayName\": \"Database fleet manager\" }\r\n        ,\"microsoft.databasefleetmanager/fleets/fleetspaces\": { \"SingularDisplayName\": \"Fleetspaces\" }\r\n        ,\"microsoft.databasefleetmanager/fleets/fleetspaces/databases\": { \"SingularDisplayName\": \"Fleet managed database\" }\r\n        ,\"microsoft.databasefleetmanager/fleets/tiers\": { \"SingularDisplayName\": \"tier\" }\r\n        ,\"microsoft.databasewatcher/watchers\": { \"SingularDisplayName\": \"Database watcher\" }\r\n        ,\"microsoft.databox/jobs\": { \"SingularDisplayName\": \"Azure Data Box\" }\r\n        ,\"microsoft.databoxedge/databoxedgedevices\": { \"SingularDisplayName\": \"Azure Stack Edge / Data Box Gateway\" }\r\n        ,\"microsoft.databricks/accessconnectors\": { \"SingularDisplayName\": \"Access Connector for Azure Databricks\" }\r\n        ,\"microsoft.databricks/workspaces\": { \"SingularDisplayName\": \"Azure Databricks Service\" }\r\n        ,\"microsoft.datacatalog/catalogs\": { \"SingularDisplayName\": \"Data catalog\" }\r\n        ,\"microsoft.datacollaboration/workspaces\": { \"SingularDisplayName\": \"Project CI\" }\r\n        ,\"microsoft.datadog/agreements\": { \"SingularDisplayName\": \"Microsoft.Datadog agreement\" }\r\n        ,\"microsoft.datadog/monitors\": { \"SingularDisplayName\": \"Datadog\" }\r\n        ,\"microsoft.datadog/subscriptionstatuses\": { \"SingularDisplayName\": \"Microsoft.Datadog subscription statuse\" }\r\n        ,\"microsoft.datafactory/datafactories\": { \"SingularDisplayName\": \"Data factory\" }\r\n        ,\"microsoft.datafactory/factories\": { \"SingularDisplayName\": \"Data factory (V2)\" }\r\n        ,\"microsoft.datafactory/factories/pipelines\": { \"SingularDisplayName\": \"Data Factory pipeline\" }\r\n        ,\"microsoft.datafactory/factories/triggers\": { \"SingularDisplayName\": \"Data Factory trigger\" }\r\n        ,\"microsoft.datalakeanalytics/accounts\": { \"SingularDisplayName\": \"Data Lake Analytics account\" }\r\n        ,\"microsoft.datalakestore/accounts\": { \"SingularDisplayName\": \"Data Lake Storage Gen1\" }\r\n        ,\"microsoft.datamigration/databasemigrations\": { \"SingularDisplayName\": \"Microsoft.DataMigration database migration\" }\r\n        ,\"microsoft.datamigration/migrationservices\": { \"SingularDisplayName\": \"Microsoft.DataMigration migration service\" }\r\n        ,\"microsoft.datamigration/services\": { \"SingularDisplayName\": \"Azure Database Migration Service (classic)\" }\r\n        ,\"microsoft.datamigration/services/projects\": { \"SingularDisplayName\": \"Azure Database Migration Project\" }\r\n        ,\"microsoft.datamigration/sqlmigrationservices\": { \"SingularDisplayName\": \"Azure Database Migration Service\" }\r\n        ,\"microsoft.dataprotection/backupvaults\": { \"SingularDisplayName\": \"Backup vault\" }\r\n        ,\"microsoft.dataprotection/resourceguards\": { \"SingularDisplayName\": \"Resource Guard\" }\r\n        ,\"microsoft.datareplication/replicationfabrics\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication fabric\" }\r\n        ,\"microsoft.datareplication/replicationfabrics/fabricagents\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication fabrics fabric agent\" }\r\n        ,\"microsoft.datareplication/replicationfabrics/fabricagents/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication fabrics fabric agents operation\" }\r\n        ,\"microsoft.datareplication/replicationfabrics/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication fabrics operation\" }\r\n        ,\"microsoft.datareplication/replicationvaults\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vault\" }\r\n        ,\"microsoft.datareplication/replicationvaults/alertsettings\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults alert setting\" }\r\n        ,\"microsoft.datareplication/replicationvaults/events\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults event\" }\r\n        ,\"microsoft.datareplication/replicationvaults/jobs\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults job\" }\r\n        ,\"microsoft.datareplication/replicationvaults/jobs/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults jobs operation\" }\r\n        ,\"microsoft.datareplication/replicationvaults/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults operation\" }\r\n        ,\"microsoft.datareplication/replicationvaults/privateendpointconnectionproxies\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults private endpoint connection proxy\" }\r\n        ,\"microsoft.datareplication/replicationvaults/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults private endpoint connection\" }\r\n        ,\"microsoft.datareplication/replicationvaults/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults private link resource\" }\r\n        ,\"microsoft.datareplication/replicationvaults/protecteditems\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults protected item\" }\r\n        ,\"microsoft.datareplication/replicationvaults/protecteditems/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults protected items operation\" }\r\n        ,\"microsoft.datareplication/replicationvaults/protecteditems/recoverypoints\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults protected items recovery point\" }\r\n        ,\"microsoft.datareplication/replicationvaults/replicationextensions\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults replication extension\" }\r\n        ,\"microsoft.datareplication/replicationvaults/replicationextensions/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults replication extensions operation\" }\r\n        ,\"microsoft.datareplication/replicationvaults/replicationpolicies\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults replication policy\" }\r\n        ,\"microsoft.datareplication/replicationvaults/replicationpolicies/operations\": { \"SingularDisplayName\": \"Microsoft.DataReplication replication vaults replication policies operation\" }\r\n        ,\"microsoft.datashare/accounts\": { \"SingularDisplayName\": \"Data Share\" }\r\n        ,\"microsoft.dbformariadb/servers\": { \"SingularDisplayName\": \"Azure Database for MariaDB server\" }\r\n        ,\"microsoft.dbformysql/flexibleservers\": { \"SingularDisplayName\": \"Azure Database for MySQL flexible server\" }\r\n        ,\"microsoft.dbformysql/servers\": { \"SingularDisplayName\": \"MySQL server\" }\r\n        ,\"microsoft.dbforpostgresql/flexibleservers\": { \"SingularDisplayName\": \"Azure Database for PostgreSQL flexible server\" }\r\n        ,\"microsoft.dbforpostgresql/servergroupsv2\": { \"SingularDisplayName\": \"Azure Cosmos DB for PostgreSQL Cluster\" }\r\n        ,\"microsoft.dbforpostgresql/servers\": { \"SingularDisplayName\": \"PostgreSQL server\" }\r\n        ,\"microsoft.delegatednetwork/controller\": { \"SingularDisplayName\": \"Microsoft.DelegatedNetwork controller\" }\r\n        ,\"microsoft.delegatednetwork/delegatedsubnets\": { \"SingularDisplayName\": \"Microsoft.DelegatedNetwork delegated subnet\" }\r\n        ,\"microsoft.delegatednetwork/orchestrators\": { \"SingularDisplayName\": \"Microsoft.DelegatedNetwork orchestrator\" }\r\n        ,\"microsoft.dependencymap/maps\": { \"SingularDisplayName\": \"Microsoft.DependencyMap map\" }\r\n        ,\"microsoft.dependencymap/maps/discoverysources\": { \"SingularDisplayName\": \"Microsoft.DependencyMap maps discovery source\" }\r\n        ,\"microsoft.deploymentmanager/artifactsources\": { \"SingularDisplayName\": \"Microsoft.DeploymentManager artifact source\" }\r\n        ,\"microsoft.deploymentmanager/rollouts\": { \"SingularDisplayName\": \"Rollout\" }\r\n        ,\"microsoft.deploymentmanager/servicetopologies\": { \"SingularDisplayName\": \"Microsoft.DeploymentManager service topology\" }\r\n        ,\"microsoft.deploymentmanager/servicetopologies/services\": { \"SingularDisplayName\": \"Microsoft.DeploymentManager service topologies service\" }\r\n        ,\"microsoft.deploymentmanager/servicetopologies/services/serviceunits\": { \"SingularDisplayName\": \"Microsoft.DeploymentManager service topologies services service unit\" }\r\n        ,\"microsoft.deploymentmanager/steps\": { \"SingularDisplayName\": \"Microsoft.DeploymentManager step\" }\r\n        ,\"microsoft.desktopvirtualization/appattachpackages\": { \"SingularDisplayName\": \"App attach package\" }\r\n        ,\"microsoft.desktopvirtualization/applicationgroups\": { \"SingularDisplayName\": \"Application group\" }\r\n        ,\"microsoft.desktopvirtualization/hostpools\": { \"SingularDisplayName\": \"Host pool\" }\r\n        ,\"microsoft.desktopvirtualization/scalingplans\": { \"SingularDisplayName\": \"Scaling plan\" }\r\n        ,\"microsoft.desktopvirtualization/workspaces\": { \"SingularDisplayName\": \"Workspace\" }\r\n        ,\"microsoft.devai/instances\": { \"SingularDisplayName\": \"Microsoft.DevAI instance\" }\r\n        ,\"microsoft.devai/instances/experiments\": { \"SingularDisplayName\": \"Microsoft.DevAI instances experiment\" }\r\n        ,\"microsoft.devai/instances/sandboxes\": { \"SingularDisplayName\": \"Microsoft.DevAI instances sandbox\" }\r\n        ,\"microsoft.devai/instances/sandboxes/experiments\": { \"SingularDisplayName\": \"Microsoft.DevAI instances sandboxes experiment\" }\r\n        ,\"microsoft.devcenter/devcenters\": { \"SingularDisplayName\": \"Dev center\" }\r\n        ,\"microsoft.devcenter/devcenters/devboxdefinitions\": { \"SingularDisplayName\": \"Dev Box definition\" }\r\n        ,\"microsoft.devcenter/networkconnections\": { \"SingularDisplayName\": \"Network connection\" }\r\n        ,\"microsoft.devcenter/plans\": { \"SingularDisplayName\": \"Dev center plan\" }\r\n        ,\"microsoft.devcenter/projects\": { \"SingularDisplayName\": \"Project\" }\r\n        ,\"microsoft.devcenter/projects/pools\": { \"SingularDisplayName\": \"Pool\" }\r\n        ,\"microsoft.developmentwindows365/developmentcloudpcdelegatedmsis\": { \"SingularDisplayName\": \"Microsoft.DevelopmentWindows365 development cloud pc delegated msi\" }\r\n        ,\"microsoft.devhub/iacprofiles\": { \"SingularDisplayName\": \"Infrastructure as Code Automation\" }\r\n        ,\"microsoft.devhub/templates\": { \"SingularDisplayName\": \"Microsoft.DevHub template\" }\r\n        ,\"microsoft.devhub/templates/versions\": { \"SingularDisplayName\": \"Microsoft.DevHub templates version\" }\r\n        ,\"microsoft.devhub/workflows\": { \"SingularDisplayName\": \"Microsoft.DevHub workflow\" }\r\n        ,\"microsoft.deviceonboarding/discoveryservices\": { \"SingularDisplayName\": \"Microsoft.DeviceOnboarding discovery service\" }\r\n        ,\"microsoft.deviceonboarding/discoveryservices/ownershipvoucherpublickeys\": { \"SingularDisplayName\": \"Microsoft.DeviceOnboarding discovery services ownership voucher public key\" }\r\n        ,\"microsoft.deviceonboarding/onboardingservices\": { \"SingularDisplayName\": \"Microsoft.DeviceOnboarding onboarding service\" }\r\n        ,\"microsoft.deviceonboarding/onboardingservices/policies\": { \"SingularDisplayName\": \"Microsoft.DeviceOnboarding onboarding services policy\" }\r\n        ,\"microsoft.deviceregistry/assetendpointprofiles\": { \"SingularDisplayName\": \"IoT Asset Endpoint Profile\" }\r\n        ,\"microsoft.deviceregistry/assets\": { \"SingularDisplayName\": \"IoT Asset\" }\r\n        ,\"microsoft.deviceregistry/billingcontainers\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry billing container\" }\r\n        ,\"microsoft.deviceregistry/devices\": { \"SingularDisplayName\": \"IoT Device\" }\r\n        ,\"microsoft.deviceregistry/discoveredassetendpointprofiles\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry discovered asset endpoint profile\" }\r\n        ,\"microsoft.deviceregistry/discoveredassets\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry discovered asset\" }\r\n        ,\"microsoft.deviceregistry/namespaces\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry namespace\" }\r\n        ,\"microsoft.deviceregistry/namespaces/assetendpointprofiles\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry namespaces asset endpoint profile\" }\r\n        ,\"microsoft.deviceregistry/namespaces/assets\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry namespaces asset\" }\r\n        ,\"microsoft.deviceregistry/namespaces/devices\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry namespaces device\" }\r\n        ,\"microsoft.deviceregistry/namespaces/discoveredassetendpointprofiles\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry namespaces discovered asset endpoint profile\" }\r\n        ,\"microsoft.deviceregistry/namespaces/discoveredassets\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry namespaces discovered asset\" }\r\n        ,\"microsoft.deviceregistry/schemaregistries\": { \"SingularDisplayName\": \"IoT Schema Registry\" }\r\n        ,\"microsoft.deviceregistry/schemaregistries/schemas\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry schema registries schema\" }\r\n        ,\"microsoft.deviceregistry/schemaregistries/schemas/schemaversions\": { \"SingularDisplayName\": \"Microsoft.DeviceRegistry schema registries schemas schema version\" }\r\n        ,\"microsoft.devices/iothubs\": { \"SingularDisplayName\": \"IoT hub\" }\r\n        ,\"microsoft.devices/provisioningservices\": { \"SingularDisplayName\": \"Azure IoT Hub Device Provisioning Service (DPS)\" }\r\n        ,\"microsoft.deviceupdate/accounts\": { \"SingularDisplayName\": \"Device Update for IoT Hub\" }\r\n        ,\"microsoft.deviceupdate/updateaccounts\": { \"SingularDisplayName\": \"Device Update Account\" }\r\n        ,\"microsoft.deviceupdate/updateaccounts/activedeployments\": { \"SingularDisplayName\": \"Device Update Active Deployment\" }\r\n        ,\"microsoft.deviceupdate/updateaccounts/agents\": { \"SingularDisplayName\": \"Device Update Agent\" }\r\n        ,\"microsoft.deviceupdate/updateaccounts/deployments\": { \"SingularDisplayName\": \"Device Update Deployment\" }\r\n        ,\"microsoft.deviceupdate/updateaccounts/deviceclasses\": { \"SingularDisplayName\": \"Device Update Device Class\" }\r\n        ,\"microsoft.deviceupdate/updateaccounts/updates\": { \"SingularDisplayName\": \"Device Update\" }\r\n        ,\"microsoft.devops/pipelines\": { \"SingularDisplayName\": \"Microsoft.DevOps pipeline\" }\r\n        ,\"microsoft.devopsinfrastructure/pools\": { \"SingularDisplayName\": \"Managed DevOps Pool\" }\r\n        ,\"microsoft.devspaces/controllers\": { \"SingularDisplayName\": \"Microsoft.DevSpaces controller\" }\r\n        ,\"microsoft.devtestlab/labs\": { \"SingularDisplayName\": \"DevTest lab\" }\r\n        ,\"microsoft.devtestlab/labs/virtualmachines\": { \"SingularDisplayName\": \"DevTest Lab virtual machine\" }\r\n        ,\"microsoft.devtestlab/schedules\": { \"SingularDisplayName\": \"Microsoft.DevTestLab schedule\" }\r\n        ,\"microsoft.devtunnels/tunnelplans\": { \"SingularDisplayName\": \"Dev Tunnels Domain\" }\r\n        ,\"microsoft.diagnostics/apollo\": { \"SingularDisplayName\": \"Microsoft.Diagnostics apollo\" }\r\n        ,\"microsoft.digitaltwins/digitaltwinsinstances\": { \"SingularDisplayName\": \"Azure Digital Twins\" }\r\n        ,\"microsoft.documentdb/cassandraclusters\": { \"SingularDisplayName\": \"Azure Managed Instance for Apache Cassandra\" }\r\n        ,\"microsoft.documentdb/databaseaccounts\": { \"SingularDisplayName\": \"Cosmos DB account\" }\r\n        ,\"microsoft.documentdb/fleets\": { \"SingularDisplayName\": \"Cosmos DB Fleet\" }\r\n        ,\"microsoft.documentdb/mongoclusters\": { \"SingularDisplayName\": \"Azure Cosmos DB for MongoDB (vCore)\" }\r\n        ,\"microsoft.documentdb/throughputpools\": { \"SingularDisplayName\": \"Microsoft.DocumentDB throughput pool\" }\r\n        ,\"microsoft.documentdb/throughputpools/throughputpoolaccounts\": { \"SingularDisplayName\": \"Microsoft.DocumentDB throughput pools throughput pool account\" }\r\n        ,\"microsoft.domainregistration/domains\": { \"SingularDisplayName\": \"App Service Domain\" }\r\n        ,\"microsoft.domainregistration/topleveldomains\": { \"SingularDisplayName\": \"Microsoft.DomainRegistration top level domain\" }\r\n        ,\"microsoft.durabletask/namespaces\": { \"SingularDisplayName\": \"Microsoft.DurableTask namespace\" }\r\n        ,\"microsoft.durabletask/namespaces/taskhubs\": { \"SingularDisplayName\": \"Task Hub\" }\r\n        ,\"microsoft.durabletask/schedulers\": { \"SingularDisplayName\": \"Durable Task Scheduler\" }\r\n        ,\"microsoft.durabletask/schedulers/taskhubs\": { \"SingularDisplayName\": \"Task Hub\" }\r\n        ,\"microsoft.dynamics365fraudprotection/instances\": { \"SingularDisplayName\": \"Microsoft.Dynamics365FraudProtection instance\" }\r\n        ,\"microsoft.easm/workspaces\": { \"SingularDisplayName\": \"Microsoft Defender EASM\" }\r\n        ,\"microsoft.edge/configurations\": { \"SingularDisplayName\": \"Site configuration\" }\r\n        ,\"microsoft.edge/configurations/arcgatewayconfigurations\": { \"SingularDisplayName\": \"Microsoft.Edge configurations arc gateway configuration\" }\r\n        ,\"microsoft.edge/configurations/connectivityconfigurations\": { \"SingularDisplayName\": \"Microsoft.Edge configurations connectivity configuration\" }\r\n        ,\"microsoft.edge/configurations/dynamicconfigurations\": { \"SingularDisplayName\": \"Microsoft.Edge configurations dynamic configuration\" }\r\n        ,\"microsoft.edge/configurations/dynamicconfigurations/versions\": { \"SingularDisplayName\": \"Microsoft.Edge configurations dynamic configurations version\" }\r\n        ,\"microsoft.edge/configurations/networkconfigurations\": { \"SingularDisplayName\": \"Microsoft.Edge configurations network configuration\" }\r\n        ,\"microsoft.edge/configurations/securityconfigurations\": { \"SingularDisplayName\": \"Microsoft.Edge configurations security configuration\" }\r\n        ,\"microsoft.edge/configurations/timeserverconfigurations\": { \"SingularDisplayName\": \"Microsoft.Edge configurations time server configuration\" }\r\n        ,\"microsoft.edge/connectivitystatuses\": { \"SingularDisplayName\": \"Microsoft.Edge connectivity statuse\" }\r\n        ,\"microsoft.edge/disconnectedoperations\": { \"SingularDisplayName\": \"Azure Local - disconnected operations\" }\r\n        ,\"microsoft.edge/siteawareresourcetypes\": { \"SingularDisplayName\": \"Microsoft.Edge site aware resource type\" }\r\n        ,\"microsoft.edge/sites\": { \"SingularDisplayName\": \"Site manager - Azure Arc\" }\r\n        ,\"microsoft.edge/updates\": { \"SingularDisplayName\": \"Microsoft.Edge update\" }\r\n        ,\"microsoft.edgemarketplace/offers\": { \"SingularDisplayName\": \"Microsoft.EdgeMarketplace offer\" }\r\n        ,\"microsoft.edgemarketplace/publishers\": { \"SingularDisplayName\": \"Microsoft.EdgeMarketplace publisher\" }\r\n        ,\"microsoft.edgeorder/addresses\": { \"SingularDisplayName\": \"Azure Edge Hardware Center Address\" }\r\n        ,\"microsoft.edgeorder/bootstrapconfigurations\": { \"SingularDisplayName\": \"Site Key\" }\r\n        ,\"microsoft.edgeorder/orderitems\": { \"SingularDisplayName\": \"Azure Edge Hardware Center\" }\r\n        ,\"microsoft.edgeorder/virtual_orderitems\": { \"SingularDisplayName\": \"Device\" }\r\n        ,\"microsoft.edgezones/extendedzones\": { \"SingularDisplayName\": \"Microsoft.EdgeZones extended zone\" }\r\n        ,\"microsoft.education/grants\": { \"SingularDisplayName\": \"Microsoft.Education grant\" }\r\n        ,\"microsoft.education/labs\": { \"SingularDisplayName\": \"Microsoft.Education lab\" }\r\n        ,\"microsoft.education/labs/joinrequests\": { \"SingularDisplayName\": \"Microsoft.Education labs join request\" }\r\n        ,\"microsoft.education/labs/students\": { \"SingularDisplayName\": \"Microsoft.Education labs student\" }\r\n        ,\"microsoft.education/studentlabs\": { \"SingularDisplayName\": \"Microsoft.Education student lab\" }\r\n        ,\"microsoft.elastic/monitors\": { \"SingularDisplayName\": \"Elastic\" }\r\n        ,\"microsoft.elasticsan/elasticsans\": { \"SingularDisplayName\": \"Elastic SAN\" }\r\n        ,\"microsoft.energydataplatform/energyservices\": { \"SingularDisplayName\": \"Microsoft.EnergyDataPlatform energy service\" }\r\n        ,\"microsoft.enterpriseknowledgegraph/services\": { \"SingularDisplayName\": \"Microsoft.EnterpriseKnowledgeGraph service\" }\r\n        ,\"microsoft.enterprisesupport/enterprisesupports\": { \"SingularDisplayName\": \"Microsoft.EnterpriseSupport enterprise support\" }\r\n        ,\"microsoft.eventgrid/domains\": { \"SingularDisplayName\": \"Event Grid Domain\" }\r\n        ,\"microsoft.eventgrid/domains/topics\": { \"SingularDisplayName\": \"Event Grid Domain Topic\" }\r\n        ,\"microsoft.eventgrid/eventsubscriptions\": { \"SingularDisplayName\": \"Microsoft.EventGrid event subscription\" }\r\n        ,\"microsoft.eventgrid/extensiontopics\": { \"SingularDisplayName\": \"Event Grid extension topic\" }\r\n        ,\"microsoft.eventgrid/namespaces\": { \"SingularDisplayName\": \"Event Grid Namespace\" }\r\n        ,\"microsoft.eventgrid/namespaces/topics\": { \"SingularDisplayName\": \"Event Grid Namespace Topic\" }\r\n        ,\"microsoft.eventgrid/namespaces/topics/eventsubscriptions\": { \"SingularDisplayName\": \"Event Subscription\" }\r\n        ,\"microsoft.eventgrid/namespaces/topicspaces\": { \"SingularDisplayName\": \"Event Grid Topic Space\" }\r\n        ,\"microsoft.eventgrid/partnerconfigurations\": { \"SingularDisplayName\": \"Event Grid Partner Configuration\" }\r\n        ,\"microsoft.eventgrid/partnerdestinations\": { \"SingularDisplayName\": \"Event Grid Partner Destination\" }\r\n        ,\"microsoft.eventgrid/partnernamespaces\": { \"SingularDisplayName\": \"Event Grid Partner Namespace\" }\r\n        ,\"microsoft.eventgrid/partnernamespaces/channels\": { \"SingularDisplayName\": \"Event Grid Channel\" }\r\n        ,\"microsoft.eventgrid/partnerregistrations\": { \"SingularDisplayName\": \"Event Grid Partner Registration\" }\r\n        ,\"microsoft.eventgrid/partnertopics\": { \"SingularDisplayName\": \"Event Grid Partner Topic\" }\r\n        ,\"microsoft.eventgrid/systemtopics\": { \"SingularDisplayName\": \"Event Grid System Topic\" }\r\n        ,\"microsoft.eventgrid/systemtopics/eventsubscriptions\": { \"SingularDisplayName\": \"Event Grid Subscriptions\" }\r\n        ,\"microsoft.eventgrid/topics\": { \"SingularDisplayName\": \"Event Grid Topic\" }\r\n        ,\"microsoft.eventgrid/topictypes\": { \"SingularDisplayName\": \"Microsoft.EventGrid topic type\" }\r\n        ,\"microsoft.eventgrid/verifiedpartners\": { \"SingularDisplayName\": \"Microsoft.EventGrid verified partner\" }\r\n        ,\"microsoft.eventhub/clusters\": { \"SingularDisplayName\": \"Event Hubs Cluster\" }\r\n        ,\"microsoft.eventhub/namespaces\": { \"SingularDisplayName\": \"Event Hubs namespace\" }\r\n        ,\"microsoft.eventhub/namespaces/disasterrecoveryconfigs\": { \"SingularDisplayName\": \"Event Hubs Geo-DR Alias\" }\r\n        ,\"microsoft.eventhub/namespaces/eventhubs\": { \"SingularDisplayName\": \"Event Hubs Instance\" }\r\n        ,\"microsoft.eventhub/namespaces/providers/diagnosticsettings\": { \"SingularDisplayName\": \"Diagnostic settings\" }\r\n        ,\"microsoft.eventhub/namespaces/schemagroups\": { \"SingularDisplayName\": \"Schema Group\" }\r\n        ,\"microsoft.experimentation/experimentworkspaces\": { \"SingularDisplayName\": \"Experiment Workspace\" }\r\n        ,\"microsoft.extendedlocation/customlocations\": { \"SingularDisplayName\": \"Custom location\" }\r\n        ,\"microsoft.fabric/capacities\": { \"SingularDisplayName\": \"Fabric Capacity\" }\r\n        ,\"microsoft.fabric/privatelinkservicesforfabric\": { \"SingularDisplayName\": \"Microsoft.Fabric private link services for fabric\" }\r\n        ,\"microsoft.fabric/privatelinkservicesforfabric/operationresults\": { \"SingularDisplayName\": \"Microsoft.Fabric private link services for fabric operation result\" }\r\n        ,\"microsoft.fabric/privatelinkservicesforfabric/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.Fabric private link services for fabric private endpoint connection\" }\r\n        ,\"microsoft.fabric/privatelinkservicesforfabric/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.Fabric private link services for fabric private link resource\" }\r\n        ,\"microsoft.fairfieldgardens/deviceprovisioningstates\": { \"SingularDisplayName\": \"Microsoft.FairfieldGardens device provisioning state\" }\r\n        ,\"microsoft.fairfieldgardens/provisioningresources\": { \"SingularDisplayName\": \"Fairfield Gardens\" }\r\n        ,\"microsoft.fairfieldgardens/provisioningresources/provisioningpolicies\": { \"SingularDisplayName\": \"Provisioning policy\" }\r\n        ,\"microsoft.falcon/namespaces\": { \"SingularDisplayName\": \"Microsoft.Falcon namespace\" }\r\n        ,\"microsoft.features/featureprovidernamespaces/featureconfigurations\": { \"SingularDisplayName\": \"Preview features\" }\r\n        ,\"microsoft.fidalgo/devcenters\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenter\" }\r\n        ,\"microsoft.fidalgo/devcenters/attachednetworks\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters attachednetwork\" }\r\n        ,\"microsoft.fidalgo/devcenters/catalogs\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters catalog\" }\r\n        ,\"microsoft.fidalgo/devcenters/catalogs/items\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters catalogs item\" }\r\n        ,\"microsoft.fidalgo/devcenters/devboxdefinitions\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters devboxdefinition\" }\r\n        ,\"microsoft.fidalgo/devcenters/environmenttypes\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters environment type\" }\r\n        ,\"microsoft.fidalgo/devcenters/galleries\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters gallery\" }\r\n        ,\"microsoft.fidalgo/devcenters/galleries/images\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters galleries image\" }\r\n        ,\"microsoft.fidalgo/devcenters/galleries/images/versions\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters galleries images version\" }\r\n        ,\"microsoft.fidalgo/devcenters/mappings\": { \"SingularDisplayName\": \"Microsoft.Fidalgo devcenters mapping\" }\r\n        ,\"microsoft.fidalgo/machinedefinitions\": { \"SingularDisplayName\": \"Microsoft.Fidalgo machinedefinition\" }\r\n        ,\"microsoft.fidalgo/networksettings\": { \"SingularDisplayName\": \"Microsoft.Fidalgo networksetting\" }\r\n        ,\"microsoft.fidalgo/networksettings/healthchecks\": { \"SingularDisplayName\": \"Microsoft.Fidalgo networksettings healthcheck\" }\r\n        ,\"microsoft.fidalgo/projects\": { \"SingularDisplayName\": \"Microsoft.Fidalgo project\" }\r\n        ,\"microsoft.fidalgo/projects/attachednetworks\": { \"SingularDisplayName\": \"Microsoft.Fidalgo projects attachednetwork\" }\r\n        ,\"microsoft.fidalgo/projects/devboxdefinitions\": { \"SingularDisplayName\": \"Microsoft.Fidalgo projects devboxdefinition\" }\r\n        ,\"microsoft.fidalgo/projects/environments\": { \"SingularDisplayName\": \"Microsoft.Fidalgo projects environment\" }\r\n        ,\"microsoft.fidalgo/projects/pools\": { \"SingularDisplayName\": \"Microsoft.Fidalgo projects pool\" }\r\n        ,\"microsoft.fileshares/fileshares\": { \"SingularDisplayName\": \"File share\" }\r\n        ,\"microsoft.fluidrelay/fluidrelayservers\": { \"SingularDisplayName\": \"Fluid Relay\" }\r\n        ,\"microsoft.footprintmonitoring/profiles\": { \"SingularDisplayName\": \"Microsoft.FootprintMonitoring profile\" }\r\n        ,\"microsoft.footprintmonitoring/profiles/experiments\": { \"SingularDisplayName\": \"Microsoft.FootprintMonitoring profiles experiment\" }\r\n        ,\"microsoft.footprintmonitoring/profiles/measurementendpoints\": { \"SingularDisplayName\": \"Microsoft.FootprintMonitoring profiles measurement endpoint\" }\r\n        ,\"microsoft.footprintmonitoring/profiles/measurementendpoints/conditions\": { \"SingularDisplayName\": \"Microsoft.FootprintMonitoring profiles measurement endpoints condition\" }\r\n        ,\"microsoft.gallery/myareas/galleryitems\": { \"SingularDisplayName\": \"Template\" }\r\n        ,\"microsoft.genomics/accounts\": { \"SingularDisplayName\": \"Genomics account\" }\r\n        ,\"microsoft.graph/azureadapplication\": { \"SingularDisplayName\": \"Entra application\" }\r\n        ,\"microsoft.graph/azureadapplicationprototype\": { \"SingularDisplayName\": \"Microsoft.Graph Azure ad application prototype\" }\r\n        ,\"microsoft.graphservices/accounts\": { \"SingularDisplayName\": \"Metered API account\" }\r\n        ,\"microsoft.guestconfiguration/guestconfigurationassignments\": { \"SingularDisplayName\": \"Microsoft.GuestConfiguration guest configuration assignment\" }\r\n        ,\"microsoft.guestconfiguration/guestconfigurationassignments/reports\": { \"SingularDisplayName\": \"Microsoft.GuestConfiguration guest configuration assignments report\" }\r\n        ,\"microsoft.hanaonazure/hanainstances\": { \"SingularDisplayName\": \"SAP HANA on Azure\" }\r\n        ,\"microsoft.hanaonazure/sapmonitors\": { \"SingularDisplayName\": \"Azure Monitor for SAP Solutions (classic)\" }\r\n        ,\"microsoft.hardware/orders\": { \"SingularDisplayName\": \"Microsoft.Hardware order\" }\r\n        ,\"microsoft.hardwaresecuritymodules/cloudhsmclusters\": { \"SingularDisplayName\": \"Azure Cloud HSM\" }\r\n        ,\"microsoft.hdinsight/clusterpools\": { \"SingularDisplayName\": \"Azure HDInsight on AKS cluster pool\" }\r\n        ,\"microsoft.hdinsight/clusterpools/clusters\": { \"SingularDisplayName\": \"Azure HDInsight on AKS cluster\" }\r\n        ,\"microsoft.hdinsight/clusterpools/clusters/instanceviews\": { \"SingularDisplayName\": \"Microsoft.HDInsight clusterpools clusters instance view\" }\r\n        ,\"microsoft.hdinsight/clusters\": { \"SingularDisplayName\": \"HDInsight cluster\" }\r\n        ,\"microsoft.healthbot/healthbots\": { \"SingularDisplayName\": \"Healthcare agent service\" }\r\n        ,\"microsoft.healthcareapis/services\": { \"SingularDisplayName\": \"Azure API for FHIR\" }\r\n        ,\"microsoft.healthcareapis/workspaces\": { \"SingularDisplayName\": \"Health Data Services workspace\" }\r\n        ,\"microsoft.healthcareapis/workspaces/dicomservices\": { \"SingularDisplayName\": \"DICOM service\" }\r\n        ,\"microsoft.healthcareapis/workspaces/fhirservices\": { \"SingularDisplayName\": \"FHIR service\" }\r\n        ,\"microsoft.healthcareapis/workspaces/iotconnectors\": { \"SingularDisplayName\": \"MedTech service\" }\r\n        ,\"microsoft.healthdataaiservices/deidservices\": { \"SingularDisplayName\": \"De-identification Service\" }\r\n        ,\"microsoft.healthmodel/healthmodels\": { \"SingularDisplayName\": \"Health Model\" }\r\n        ,\"microsoft.healthplatform/accounts\": { \"SingularDisplayName\": \"Microsoft.HealthPlatform account\" }\r\n        ,\"microsoft.help/diagnostics\": { \"SingularDisplayName\": \"Microsoft.Help diagnostic\" }\r\n        ,\"microsoft.help/selfhelp\": { \"SingularDisplayName\": \"Microsoft.Help self help\" }\r\n        ,\"microsoft.help/simplifiedsolutions\": { \"SingularDisplayName\": \"Microsoft.Help simplified solution\" }\r\n        ,\"microsoft.help/solutions\": { \"SingularDisplayName\": \"Microsoft.Help solution\" }\r\n        ,\"microsoft.help/troubleshooters\": { \"SingularDisplayName\": \"Microsoft.Help troubleshooter\" }\r\n        ,\"microsoft.hpcworkbench/instances\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instance\" }\r\n        ,\"microsoft.hpcworkbench/instances/chambers\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances chamber\" }\r\n        ,\"microsoft.hpcworkbench/instances/chambers/accessprofiles\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances chambers access profile\" }\r\n        ,\"microsoft.hpcworkbench/instances/chambers/filerequests\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances chambers file request\" }\r\n        ,\"microsoft.hpcworkbench/instances/chambers/files\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances chambers file\" }\r\n        ,\"microsoft.hpcworkbench/instances/chambers/storages\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances chambers storage\" }\r\n        ,\"microsoft.hpcworkbench/instances/chambers/workloads\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances chambers workload\" }\r\n        ,\"microsoft.hpcworkbench/instances/consortiums\": { \"SingularDisplayName\": \"Microsoft.HpcWorkbench instances consortium\" }\r\n        ,\"microsoft.hybridcloud/cloudconnections\": { \"SingularDisplayName\": \"Microsoft.HybridCloud cloud connection\" }\r\n        ,\"microsoft.hybridcloud/cloudconnectors\": { \"SingularDisplayName\": \"Microsoft.HybridCloud cloud connector\" }\r\n        ,\"microsoft.hybridcompute/arcserverwithwac\": { \"SingularDisplayName\": \"Machine - Azure Arc\" }\r\n        ,\"microsoft.hybridcompute/gateways\": { \"SingularDisplayName\": \"Arc gateway\" }\r\n        ,\"microsoft.hybridcompute/licenses\": { \"SingularDisplayName\": \"Extended Security Updates - Windows Server 2012/R2\" }\r\n        ,\"microsoft.hybridcompute/machines\": { \"SingularDisplayName\": \"Machine - Azure Arc\" }\r\n        ,\"microsoft.hybridcompute/machines/microsoft.awsconnector/ec2instances\": { \"SingularDisplayName\": \"Microsoft.AwsConnector ec2 instance\" }\r\n        ,\"microsoft.hybridcompute/machines/microsoft.connectedvmwarevsphere/virtualmachineinstances\": { \"SingularDisplayName\": \"VMware + AVS virtual machine\" }\r\n        ,\"microsoft.hybridcompute/machines/providers/guestconfigurationassignments\": { \"SingularDisplayName\": \"Guest Assignment\" }\r\n        ,\"microsoft.hybridcompute/machinesesu\": { \"SingularDisplayName\": \"Machine - Azure Arc\" }\r\n        ,\"microsoft.hybridcompute/machinespaygo\": { \"SingularDisplayName\": \"Machine - Azure Arc\" }\r\n        ,\"microsoft.hybridcompute/machinessoftwareassurance\": { \"SingularDisplayName\": \"Machine - Azure Arc\" }\r\n        ,\"microsoft.hybridcompute/machinessovereign\": { \"SingularDisplayName\": \"Machine - Azure Arc\" }\r\n        ,\"microsoft.hybridcompute/privatelinkscopes\": { \"SingularDisplayName\": \"Azure Arc Private Link Scope\" }\r\n        ,\"microsoft.hybridcompute/settings\": { \"SingularDisplayName\": \"Microsoft.HybridCompute setting\" }\r\n        ,\"microsoft.hybridconnectivity/endpoints\": { \"SingularDisplayName\": \"Microsoft.HybridConnectivity endpoint\" }\r\n        ,\"microsoft.hybridconnectivity/endpoints/serviceconfigurations\": { \"SingularDisplayName\": \"Microsoft.HybridConnectivity endpoints service configuration\" }\r\n        ,\"microsoft.hybridconnectivity/publiccloudconnectors\": { \"SingularDisplayName\": \"Multicloud connector\" }\r\n        ,\"microsoft.hybridconnectivity/solutionconfigurations\": { \"SingularDisplayName\": \"Microsoft.HybridConnectivity solution configuration\" }\r\n        ,\"microsoft.hybridconnectivity/solutionconfigurations/inventory\": { \"SingularDisplayName\": \"Microsoft.HybridConnectivity solution configurations inventory\" }\r\n        ,\"microsoft.hybridconnectivity/solutiontypes\": { \"SingularDisplayName\": \"Microsoft.HybridConnectivity solution type\" }\r\n        ,\"microsoft.hybridcontainerservice/kubernetesversions\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService kubernetes version\" }\r\n        ,\"microsoft.hybridcontainerservice/provisionedclusterinstances\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService provisioned cluster instance\" }\r\n        ,\"microsoft.hybridcontainerservice/provisionedclusterinstances/agentpools\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService provisioned cluster instances agent pool\" }\r\n        ,\"microsoft.hybridcontainerservice/provisionedclusterinstances/hybrididentitymetadata\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService provisioned cluster instances hybrid identity metadata\" }\r\n        ,\"microsoft.hybridcontainerservice/provisionedclusterinstances/upgradeprofiles\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService provisioned cluster instances upgrade profile\" }\r\n        ,\"microsoft.hybridcontainerservice/provisionedclusters\": { \"SingularDisplayName\": \"Kubernetes hybrid - Azure Arc\" }\r\n        ,\"microsoft.hybridcontainerservice/skus\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService SKU\" }\r\n        ,\"microsoft.hybridcontainerservice/storagespaces\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService storage space\" }\r\n        ,\"microsoft.hybridcontainerservice/virtualnetworks\": { \"SingularDisplayName\": \"Microsoft.HybridContainerService virtual network\" }\r\n        ,\"microsoft.hybriddata/datamanagers\": { \"SingularDisplayName\": \"Microsoft.HybridData data manager\" }\r\n        ,\"microsoft.hybriddata/datamanagers/dataservices\": { \"SingularDisplayName\": \"Microsoft.HybridData data managers data service\" }\r\n        ,\"microsoft.hybriddata/datamanagers/dataservices/jobdefinitions\": { \"SingularDisplayName\": \"Microsoft.HybridData data managers data services job definition\" }\r\n        ,\"microsoft.hybriddata/datamanagers/dataservices/jobdefinitions/jobs\": { \"SingularDisplayName\": \"Microsoft.HybridData data managers data services job definitions job\" }\r\n        ,\"microsoft.hybriddata/datamanagers/datastores\": { \"SingularDisplayName\": \"Microsoft.HybridData data managers data store\" }\r\n        ,\"microsoft.hybriddata/datamanagers/datastoretypes\": { \"SingularDisplayName\": \"Microsoft.HybridData data managers data store type\" }\r\n        ,\"microsoft.hybriddata/datamanagers/publickeys\": { \"SingularDisplayName\": \"Microsoft.HybridData data managers public key\" }\r\n        ,\"microsoft.hybridnetwork/configurationgroupvalues\": { \"SingularDisplayName\": \"Configuration Group Value\" }\r\n        ,\"microsoft.hybridnetwork/devices\": { \"SingularDisplayName\": \"Azure Network Function Manager ? Device\" }\r\n        ,\"microsoft.hybridnetwork/networkfunctions\": { \"SingularDisplayName\": \"Azure Network Function Manager ? Network Function\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publisher\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers/artifactstores\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publishers artifact store\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers/configurationgroupschemas\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publishers configuration group schema\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers/networkfunctiondefinitiongroups\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publishers network function definition group\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publishers network function definition groups network function definition version\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers/networkservicedesigngroups\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publishers network service design group\" }\r\n        ,\"microsoft.hybridnetwork/proxypublishers/networkservicedesigngroups/networkservicedesignversions\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork proxy publishers network service design groups network service design version\" }\r\n        ,\"microsoft.hybridnetwork/publishers\": { \"SingularDisplayName\": \"Publisher\" }\r\n        ,\"microsoft.hybridnetwork/publishers/artifactstores\": { \"SingularDisplayName\": \"Publisher Artifact Store\" }\r\n        ,\"microsoft.hybridnetwork/publishers/artifactstores/artifactmanifests\": { \"SingularDisplayName\": \"Publisher Artifact Manifest\" }\r\n        ,\"microsoft.hybridnetwork/publishers/configurationgroupschemas\": { \"SingularDisplayName\": \"Configuration Group Schema\" }\r\n        ,\"microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups\": { \"SingularDisplayName\": \"Network Function Definition\" }\r\n        ,\"microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions\": { \"SingularDisplayName\": \"Network Function Definition Version\" }\r\n        ,\"microsoft.hybridnetwork/publishers/networkservicedesigngroups\": { \"SingularDisplayName\": \"Network Service Design\" }\r\n        ,\"microsoft.hybridnetwork/publishers/networkservicedesigngroups/networkservicedesignversions\": { \"SingularDisplayName\": \"Network Service Design Version\" }\r\n        ,\"microsoft.hybridnetwork/servicemanagementcontainers\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork service management container\" }\r\n        ,\"microsoft.hybridnetwork/servicemanagementcontainers/rolloutsequences\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork service management containers rollout sequence\" }\r\n        ,\"microsoft.hybridnetwork/servicemanagementcontainers/rollouttiers\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork service management containers rollout tier\" }\r\n        ,\"microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork service management containers update specification\" }\r\n        ,\"microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork service management containers update specifications rollout\" }\r\n        ,\"microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts/statuses\": { \"SingularDisplayName\": \"Microsoft.HybridNetwork service management containers update specifications rollouts statuse\" }\r\n        ,\"microsoft.hybridnetwork/sitenetworkservices\": { \"SingularDisplayName\": \"Site Network Service\" }\r\n        ,\"microsoft.hybridnetwork/sites\": { \"SingularDisplayName\": \"Site\" }\r\n        ,\"microsoft.hybridnetwork/vendors\": { \"SingularDisplayName\": \"Azure Network Function Manager ? vendor\" }\r\n        ,\"microsoft.hybridonboarding/extensionmanagers\": { \"SingularDisplayName\": \"Microsoft.HybridOnboarding extension manager\" }\r\n        ,\"microsoft.impact/connectors\": { \"SingularDisplayName\": \"Impact Reporting Connector\" }\r\n        ,\"microsoft.impact/impactcategories\": { \"SingularDisplayName\": \"Microsoft.Impact impact category\" }\r\n        ,\"microsoft.impact/topologyimpacts\": { \"SingularDisplayName\": \"Microsoft.Impact topology impact\" }\r\n        ,\"microsoft.impact/workloadimpacts\": { \"SingularDisplayName\": \"Microsoft.Impact workload impact\" }\r\n        ,\"microsoft.impact/workloadimpacts/insights\": { \"SingularDisplayName\": \"Microsoft.Impact workload impacts insight\" }\r\n        ,\"microsoft.importexport/jobs\": { \"SingularDisplayName\": \"Microsoft.ImportExport job\" }\r\n        ,\"microsoft.insights/actiongroups\": { \"SingularDisplayName\": \"Action group\" }\r\n        ,\"microsoft.insights/activitylogalerts\": { \"SingularDisplayName\": \"Activity log alert rule\" }\r\n        ,\"microsoft.insights/alertrules\": { \"SingularDisplayName\": \"Microsoft.Insights alertrule\" }\r\n        ,\"microsoft.insights/alertrules/incidents\": { \"SingularDisplayName\": \"Microsoft.insights alertrules incident\" }\r\n        ,\"microsoft.insights/autoscalesettings\": { \"SingularDisplayName\": \"Microsoft.Insights autoscalesetting\" }\r\n        ,\"microsoft.insights/components\": { \"SingularDisplayName\": \"Application Insights app\" }\r\n        ,\"microsoft.insights/datacollectionendpoints\": { \"SingularDisplayName\": \"Data collection endpoint\" }\r\n        ,\"microsoft.insights/datacollectionruleassociations\": { \"SingularDisplayName\": \"Microsoft.Insights data collection rule association\" }\r\n        ,\"microsoft.insights/datacollectionrules\": { \"SingularDisplayName\": \"Data collection rule\" }\r\n        ,\"microsoft.insights/diagnosticsettings\": { \"SingularDisplayName\": \"Diagnostic settings\" }\r\n        ,\"microsoft.insights/diagnosticsettingscategories\": { \"SingularDisplayName\": \"Microsoft.Insights diagnostic settings category\" }\r\n        ,\"microsoft.insights/guestdiagnosticsettings\": { \"SingularDisplayName\": \"Microsoft.insights guest diagnostic setting\" }\r\n        ,\"microsoft.insights/guestdiagnosticsettingsassociation\": { \"SingularDisplayName\": \"Microsoft.insights guest diagnostic settings association\" }\r\n        ,\"microsoft.insights/logprofiles\": { \"SingularDisplayName\": \"Microsoft.Insights logprofile\" }\r\n        ,\"microsoft.insights/metricalerts\": { \"SingularDisplayName\": \"Metric alert rule\" }\r\n        ,\"microsoft.insights/notificationstatus\": { \"SingularDisplayName\": \"Microsoft.Insights notification statu\" }\r\n        ,\"microsoft.insights/privatelinkscopeoperationstatuses\": { \"SingularDisplayName\": \"Microsoft.insights private link scope operation statuse\" }\r\n        ,\"microsoft.insights/privatelinkscopes\": { \"SingularDisplayName\": \"Azure Monitor Private Link Scope\" }\r\n        ,\"microsoft.insights/scheduledqueryrules\": { \"SingularDisplayName\": \"Log search alert rule\" }\r\n        ,\"microsoft.insights/tenantactiongroups\": { \"SingularDisplayName\": \"Microsoft.Insights tenant action group\" }\r\n        ,\"microsoft.insights/tenantactiongroups/notificationstatus\": { \"SingularDisplayName\": \"Microsoft.Insights tenant action groups notification statu\" }\r\n        ,\"microsoft.insights/vminsightsonboardingstatuses\": { \"SingularDisplayName\": \"Microsoft.Insights VM insights onboarding statuse\" }\r\n        ,\"microsoft.insights/webtests\": { \"SingularDisplayName\": \"Application Insights availability test\" }\r\n        ,\"microsoft.insights/workbooks\": { \"SingularDisplayName\": \"Azure Workbook\" }\r\n        ,\"microsoft.insights/workbooktemplates\": { \"SingularDisplayName\": \"Azure Workbook Template\" }\r\n        ,\"microsoft.integrationspaces/spaces\": { \"SingularDisplayName\": \"Integration Environment\" }\r\n        ,\"microsoft.intelligentitdigitaltwin/digitaltwins\": { \"SingularDisplayName\": \"Microsoft.IntelligentITDigitalTwin digital twin\" }\r\n        ,\"microsoft.intelligentitdigitaltwin/digitaltwins/assets\": { \"SingularDisplayName\": \"Microsoft.IntelligentITDigitalTwin digital twins asset\" }\r\n        ,\"microsoft.intelligentitdigitaltwin/digitaltwins/executionplans\": { \"SingularDisplayName\": \"Microsoft.IntelligentITDigitalTwin digital twins execution plan\" }\r\n        ,\"microsoft.intelligentitdigitaltwin/digitaltwins/testplans\": { \"SingularDisplayName\": \"Microsoft.IntelligentITDigitalTwin digital twins test plan\" }\r\n    })[tolower(id)]\r\n}\r\n",
                    "$fxv#3": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n.create-or-alter function \r\nwith (docstring = 'Return details about the specified ID.', folder = 'OpenData/Internal')\r\n_resource_type_3(id: string) {\r\n    dynamic({\r\n        \"microsoft.intelligentitdigitaltwin/digitaltwins/tests\": { \"SingularDisplayName\": \"Microsoft.IntelligentITDigitalTwin digital twins test\" }\r\n        ,\"microsoft.inventory/subscriptioninternalproperties\": { \"SingularDisplayName\": \"Microsoft.Inventory subscription internal property\" }\r\n        ,\"microsoft.iotcentral/iotapps\": { \"SingularDisplayName\": \"IoT Central Application\" }\r\n        ,\"microsoft.iotfirmwaredefense/workspaces\": { \"SingularDisplayName\": \"Firmware analysis workspace\" }\r\n        ,\"microsoft.iotfirmwaredefense/workspaces/firmwares\": { \"SingularDisplayName\": \"Microsoft.IoTFirmwareDefense workspaces firmware\" }\r\n        ,\"microsoft.iotfirmwaredefense/workspaces/firmwares/summaries\": { \"SingularDisplayName\": \"Microsoft.IoTFirmwareDefense workspaces firmwares summary\" }\r\n        ,\"microsoft.iotoperations/instances\": { \"SingularDisplayName\": \"Azure IoT Operations\" }\r\n        ,\"microsoft.iotoperations/instances/brokers\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances broker\" }\r\n        ,\"microsoft.iotoperations/instances/brokers/authentications\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances brokers authentication\" }\r\n        ,\"microsoft.iotoperations/instances/brokers/authorizations\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances brokers authorization\" }\r\n        ,\"microsoft.iotoperations/instances/brokers/listeners\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances brokers listener\" }\r\n        ,\"microsoft.iotoperations/instances/dataflowendpoints\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances dataflow endpoint\" }\r\n        ,\"microsoft.iotoperations/instances/dataflowprofiles\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances dataflow profile\" }\r\n        ,\"microsoft.iotoperations/instances/dataflowprofiles/dataflows\": { \"SingularDisplayName\": \"Microsoft.IoTOperations instances dataflow profiles dataflow\" }\r\n        ,\"microsoft.iotoperationsdataprocessor/instances\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsDataProcessor instance\" }\r\n        ,\"microsoft.iotoperationsdataprocessor/instances/datasets\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsDataProcessor instances dataset\" }\r\n        ,\"microsoft.iotoperationsdataprocessor/instances/pipelines\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsDataProcessor instances pipeline\" }\r\n        ,\"microsoft.iotoperationsmq/mq\": { \"SingularDisplayName\": \"IoT Operations Ops MQ\" }\r\n        ,\"microsoft.iotoperationsmq/mq/broker\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq broker\" }\r\n        ,\"microsoft.iotoperationsmq/mq/broker/authentication\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq broker authentication\" }\r\n        ,\"microsoft.iotoperationsmq/mq/broker/authorization\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq broker authorization\" }\r\n        ,\"microsoft.iotoperationsmq/mq/broker/listener\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq broker listener\" }\r\n        ,\"microsoft.iotoperationsmq/mq/datalakeconnector\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq data lake connector\" }\r\n        ,\"microsoft.iotoperationsmq/mq/datalakeconnector/topicmap\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq data lake connector topic map\" }\r\n        ,\"microsoft.iotoperationsmq/mq/diagnosticservice\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq diagnostic service\" }\r\n        ,\"microsoft.iotoperationsmq/mq/kafkaconnector\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq kafka connector\" }\r\n        ,\"microsoft.iotoperationsmq/mq/kafkaconnector/topicmap\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq kafka connector topic map\" }\r\n        ,\"microsoft.iotoperationsmq/mq/mqttbridgeconnector\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq mqtt bridge connector\" }\r\n        ,\"microsoft.iotoperationsmq/mq/mqttbridgeconnector/topicmap\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsMQ mq mqtt bridge connector topic map\" }\r\n        ,\"microsoft.iotoperationsorchestrator/instances\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsOrchestrator instance\" }\r\n        ,\"microsoft.iotoperationsorchestrator/solutions\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsOrchestrator solution\" }\r\n        ,\"microsoft.iotoperationsorchestrator/targets\": { \"SingularDisplayName\": \"Microsoft.IoTOperationsOrchestrator target\" }\r\n        ,\"microsoft.iotsecurity/alerttypes\": { \"SingularDisplayName\": \"Microsoft.IoTSecurity alert type\" }\r\n        ,\"microsoft.iotsecurity/defendersettings\": { \"SingularDisplayName\": \"Microsoft.IoTSecurity defender setting\" }\r\n        ,\"microsoft.iotsecurity/onpremisesensors\": { \"SingularDisplayName\": \"Microsoft.IoTSecurity on premise sensor\" }\r\n        ,\"microsoft.iotsecurity/recommendationtypes\": { \"SingularDisplayName\": \"Microsoft.IoTSecurity recommendation type\" }\r\n        ,\"microsoft.iotsecurity/sensors\": { \"SingularDisplayName\": \"Microsoft.IoTSecurity sensor\" }\r\n        ,\"microsoft.iotsecurity/sites\": { \"SingularDisplayName\": \"Microsoft.IoTSecurity site\" }\r\n        ,\"microsoft.keyvault/managedhsms\": { \"SingularDisplayName\": \"Azure Key Vault Managed HSM\" }\r\n        ,\"microsoft.keyvault/vaults\": { \"SingularDisplayName\": \"Key vault\" }\r\n        ,\"microsoft.kubernetes/connectedclusters\": { \"SingularDisplayName\": \"Kubernetes - Azure Arc\" }\r\n        ,\"microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/extensions\": { \"SingularDisplayName\": \"Kubernetes - Azure Arc extension\" }\r\n        ,\"microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations\": { \"SingularDisplayName\": \"GitOps configuration\" }\r\n        ,\"microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces\": { \"SingularDisplayName\": \"Kubernetes - Azure Arc namespace\" }\r\n        ,\"microsoft.kubernetesconfiguration/extensions\": { \"SingularDisplayName\": \"Kubernetes service extension\" }\r\n        ,\"microsoft.kubernetesconfiguration/extensiontypes\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration extension type\" }\r\n        ,\"microsoft.kubernetesconfiguration/extensiontypes/versions\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration extension types version\" }\r\n        ,\"microsoft.kubernetesconfiguration/fluxconfigurations\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration flux configuration\" }\r\n        ,\"microsoft.kubernetesconfiguration/fluxconfigurations/operations\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration flux configurations operation\" }\r\n        ,\"microsoft.kubernetesconfiguration/privatelinkscopes\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration private link scope\" }\r\n        ,\"microsoft.kubernetesconfiguration/privatelinkscopes/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration private link scopes private endpoint connection\" }\r\n        ,\"microsoft.kubernetesconfiguration/privatelinkscopes/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration private link scopes private link resource\" }\r\n        ,\"microsoft.kubernetesconfiguration/sourcecontrolconfigurations\": { \"SingularDisplayName\": \"Microsoft.KubernetesConfiguration source control configuration\" }\r\n        ,\"microsoft.kubernetesruntime/bgppeers\": { \"SingularDisplayName\": \"Microsoft.KubernetesRuntime bgp peer\" }\r\n        ,\"microsoft.kubernetesruntime/loadbalancers\": { \"SingularDisplayName\": \"Arc Load Balancer\" }\r\n        ,\"microsoft.kubernetesruntime/services\": { \"SingularDisplayName\": \"Microsoft.KubernetesRuntime service\" }\r\n        ,\"microsoft.kubernetesruntime/storageclasses\": { \"SingularDisplayName\": \"Microsoft.KubernetesRuntime storage class\" }\r\n        ,\"microsoft.kusto/clusters\": { \"SingularDisplayName\": \"Azure Data Explorer Cluster\" }\r\n        ,\"microsoft.kusto/clusters/databases\": { \"SingularDisplayName\": \"Azure Data Explorer Database\" }\r\n        ,\"microsoft.labservices/labaccounts\": { \"SingularDisplayName\": \"Lab account\" }\r\n        ,\"microsoft.labservices/labaccounts/labs\": { \"SingularDisplayName\": \"Lab\" }\r\n        ,\"microsoft.labservices/labplans\": { \"SingularDisplayName\": \"Lab plan\" }\r\n        ,\"microsoft.labservices/labs\": { \"SingularDisplayName\": \"Lab\" }\r\n        ,\"microsoft.liftrpilot/organizations\": { \"SingularDisplayName\": \"Microsoft.LiftrPilot organization\" }\r\n        ,\"microsoft.loadtestservice/loadtestmappings\": { \"SingularDisplayName\": \"Microsoft.LoadTestService load test mapping\" }\r\n        ,\"microsoft.loadtestservice/loadtestprofilemappings\": { \"SingularDisplayName\": \"Microsoft.LoadTestService load test profile mapping\" }\r\n        ,\"microsoft.loadtestservice/loadtests\": { \"SingularDisplayName\": \"Azure Load Testing\" }\r\n        ,\"microsoft.logic/businessprocesses\": { \"SingularDisplayName\": \"Business Process\" }\r\n        ,\"microsoft.logic/integrationaccounts\": { \"SingularDisplayName\": \"Logic app integration account\" }\r\n        ,\"microsoft.logic/integrationserviceenvironments\": { \"SingularDisplayName\": \"Integration Service Environment\" }\r\n        ,\"microsoft.logic/integrationserviceenvironments/health\": { \"SingularDisplayName\": \"Microsoft.Logic integration service environments health\" }\r\n        ,\"microsoft.logic/integrationserviceenvironments/managedapis\": { \"SingularDisplayName\": \"Managed Connector\" }\r\n        ,\"microsoft.logic/workflows\": { \"SingularDisplayName\": \"Logic app\" }\r\n        ,\"microsoft.logz/monitors\": { \"SingularDisplayName\": \"Logz.io\" }\r\n        ,\"microsoft.logz/monitors/accounts\": { \"SingularDisplayName\": \"Logz sub account\" }\r\n        ,\"microsoft.m365/m365resources\": { \"SingularDisplayName\": \"Microsoft.M365 m365 resource\" }\r\n        ,\"microsoft.m365consumptionservices/services\": { \"SingularDisplayName\": \"Microsoft.M365ConsumptionServices service\" }\r\n        ,\"microsoft.machinelearning/commitmentplans\": { \"SingularDisplayName\": \"Microsoft.MachineLearning commitment plan\" }\r\n        ,\"microsoft.machinelearning/commitmentplans/commitmentassociations\": { \"SingularDisplayName\": \"Microsoft.MachineLearning commitment plans commitment association\" }\r\n        ,\"microsoft.machinelearning/webservices\": { \"SingularDisplayName\": \"Machine Learning Studio (classic) web service\" }\r\n        ,\"microsoft.machinelearning/workspaces\": { \"SingularDisplayName\": \"Machine Learning Studio (classic) workspace\" }\r\n        ,\"microsoft.machinelearningexperimentation/accounts\": { \"SingularDisplayName\": \"Microsoft.MachineLearningExperimentation account\" }\r\n        ,\"microsoft.machinelearningexperimentation/accounts/workspaces\": { \"SingularDisplayName\": \"Microsoft.MachineLearningExperimentation accounts workspace\" }\r\n        ,\"microsoft.machinelearningexperimentation/accounts/workspaces/projects\": { \"SingularDisplayName\": \"Microsoft.MachineLearningExperimentation accounts workspaces project\" }\r\n        ,\"microsoft.machinelearningservices/aistudio\": { \"SingularDisplayName\": \"Azure AI Foundry\" }\r\n        ,\"microsoft.machinelearningservices/registries\": { \"SingularDisplayName\": \"Azure Machine Learning registry\" }\r\n        ,\"microsoft.machinelearningservices/workspaces\": { \"SingularDisplayName\": \"Azure Machine Learning workspace\" }\r\n        ,\"microsoft.machinelearningservices/workspaces/onlineendpoints\": { \"SingularDisplayName\": \"Machine learning online endpoint\" }\r\n        ,\"microsoft.machinelearningservices/workspaces/onlineendpoints/deployments\": { \"SingularDisplayName\": \"Machine learning online deployment\" }\r\n        ,\"microsoft.maintenance/configurationassignments\": { \"SingularDisplayName\": \"Microsoft.Maintenance configuration assignment\" }\r\n        ,\"microsoft.maintenance/maintenanceconfigurations\": { \"SingularDisplayName\": \"Maintenance Configuration\" }\r\n        ,\"microsoft.maintenance/maintenanceconfigurationsbladeresource\": { \"SingularDisplayName\": \"Maintenance configuration\" }\r\n        ,\"microsoft.maintenance/publicmaintenanceconfigurations\": { \"SingularDisplayName\": \"Microsoft.Maintenance public maintenance configuration\" }\r\n        ,\"microsoft.managedidentity/identities\": { \"SingularDisplayName\": \"Microsoft.ManagedIdentity identity\" }\r\n        ,\"microsoft.managedidentity/userassignedidentities\": { \"SingularDisplayName\": \"Managed Identity\" }\r\n        ,\"microsoft.managednetwork/managednetworks\": { \"SingularDisplayName\": \"Microsoft.ManagedNetwork managed network\" }\r\n        ,\"microsoft.managednetwork/managednetworks/managednetworkgroups\": { \"SingularDisplayName\": \"Microsoft.ManagedNetwork managed networks managed network group\" }\r\n        ,\"microsoft.managednetwork/managednetworks/managednetworkpeeringpolicies\": { \"SingularDisplayName\": \"Microsoft.ManagedNetwork managed networks managed network peering policy\" }\r\n        ,\"microsoft.managednetworkfabric/accesscontrollists\": { \"SingularDisplayName\": \"Access Control List (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/internetgatewayrules\": { \"SingularDisplayName\": \"Internet Gateway Rule (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/internetgateways\": { \"SingularDisplayName\": \"Internet Gateway (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/ipcommunities\": { \"SingularDisplayName\": \"IP Community (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/ipextendedcommunities\": { \"SingularDisplayName\": \"IP Extended Community (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/ipprefixes\": { \"SingularDisplayName\": \"IP Prefix (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/l2isolationdomains\": { \"SingularDisplayName\": \"Layer 2 Isolation Domain (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/l3isolationdomains\": { \"SingularDisplayName\": \"Layer 3 Isolation Domain (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/l3isolationdomains/externalnetworks\": { \"SingularDisplayName\": \"External Network (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/l3isolationdomains/internalnetworks\": { \"SingularDisplayName\": \"Internal Network (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/neighborgroups\": { \"SingularDisplayName\": \"Neighbor Group (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkdevices\": { \"SingularDisplayName\": \"Network Device (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkdevices/networkinterfaces\": { \"SingularDisplayName\": \"Network Interface (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkfabriccontrollers\": { \"SingularDisplayName\": \"Network Fabric Controller (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkfabrics\": { \"SingularDisplayName\": \"Network Fabric (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkfabrics/networktonetworkinterconnects\": { \"SingularDisplayName\": \"Network to Network Interconnect (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkfabricskus\": { \"SingularDisplayName\": \"Network Fabric SKU (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkmonitors\": { \"SingularDisplayName\": \"Microsoft.ManagedNetworkFabric network monitor\" }\r\n        ,\"microsoft.managednetworkfabric/networkpacketbrokers\": { \"SingularDisplayName\": \"Network Packet Broker (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networkracks\": { \"SingularDisplayName\": \"Network Rack (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networktaprules\": { \"SingularDisplayName\": \"Network Tap Rule (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/networktaps\": { \"SingularDisplayName\": \"Network Tap (Operator Nexus)\" }\r\n        ,\"microsoft.managednetworkfabric/routepolicies\": { \"SingularDisplayName\": \"Route Policy (Operator Nexus)\" }\r\n        ,\"microsoft.managedservices/marketplaceregistrationdefinitions\": { \"SingularDisplayName\": \"Microsoft.ManagedServices marketplace registration definition\" }\r\n        ,\"microsoft.managedservices/registrationassignments\": { \"SingularDisplayName\": \"Microsoft.ManagedServices registration assignment\" }\r\n        ,\"microsoft.managedservices/registrationdefinitions\": { \"SingularDisplayName\": \"Azure Lighthouse\" }\r\n        ,\"microsoft.management/managementgroups\": { \"SingularDisplayName\": \"Microsoft.Management management group\" }\r\n        ,\"microsoft.management/managementgroups/microsoft.resources/deploymentstacks\": { \"SingularDisplayName\": \"Deployment stack\" }\r\n        ,\"microsoft.management/managementgroups/providers/privatelinkassociations\": { \"SingularDisplayName\": \"Application Gateway\" }\r\n        ,\"microsoft.management/managementgroups/providers/templatespecs\": { \"SingularDisplayName\": \"Template spec\" }\r\n        ,\"microsoft.management/managementgroups/settings\": { \"SingularDisplayName\": \"Microsoft.Management management groups setting\" }\r\n        ,\"microsoft.management/managementgroups/subscriptions\": { \"SingularDisplayName\": \"Microsoft.Management management groups subscription\" }\r\n        ,\"microsoft.managementpartner/partners\": { \"SingularDisplayName\": \"Microsoft.ManagementPartner partner\" }\r\n        ,\"microsoft.manufacturingplatform/manufacturingdataservices\": { \"SingularDisplayName\": \"Factory Operations Agent in Azure AI Foundry\" }\r\n        ,\"microsoft.maps/accounts\": { \"SingularDisplayName\": \"Azure Maps Account\" }\r\n        ,\"microsoft.maps/accounts/creators\": { \"SingularDisplayName\": \"Azure Maps Creator Resource\" }\r\n        ,\"microsoft.marketplace/privatestores\": { \"SingularDisplayName\": \"Microsoft.Marketplace private store\" }\r\n        ,\"microsoft.marketplace/privatestores/adminrequestapprovals\": { \"SingularDisplayName\": \"Microsoft.Marketplace private stores admin request approval\" }\r\n        ,\"microsoft.marketplace/privatestores/collections\": { \"SingularDisplayName\": \"Microsoft.Marketplace private stores collection\" }\r\n        ,\"microsoft.marketplace/privatestores/collections/offers\": { \"SingularDisplayName\": \"Microsoft.Marketplace private stores collections offer\" }\r\n        ,\"microsoft.marketplace/privatestores/offers\": { \"SingularDisplayName\": \"Microsoft.Marketplace private stores offer\" }\r\n        ,\"microsoft.marketplace/privatestores/requestapprovals\": { \"SingularDisplayName\": \"Microsoft.Marketplace private stores request approval\" }\r\n        ,\"microsoft.media/mediaservices\": { \"SingularDisplayName\": \"Media service\" }\r\n        ,\"microsoft.media/mediaservices/accountfilters\": { \"SingularDisplayName\": \"Microsoft.Media media services account filter\" }\r\n        ,\"microsoft.media/mediaservices/assets\": { \"SingularDisplayName\": \"Microsoft.Media media services asset\" }\r\n        ,\"microsoft.media/mediaservices/assets/assetfilters\": { \"SingularDisplayName\": \"Microsoft.Media media services assets asset filter\" }\r\n        ,\"microsoft.media/mediaservices/assets/tracks\": { \"SingularDisplayName\": \"Microsoft.Media media services assets track\" }\r\n        ,\"microsoft.media/mediaservices/assets/tracks/operationresults\": { \"SingularDisplayName\": \"Microsoft.Media media services assets tracks operation result\" }\r\n        ,\"microsoft.media/mediaservices/assets/tracks/operationstatuses\": { \"SingularDisplayName\": \"Microsoft.Media media services assets tracks operation statuse\" }\r\n        ,\"microsoft.media/mediaservices/contentkeypolicies\": { \"SingularDisplayName\": \"Microsoft.Media media services content key policy\" }\r\n        ,\"microsoft.media/mediaservices/liveevents\": { \"SingularDisplayName\": \"Live event\" }\r\n        ,\"microsoft.media/mediaservices/liveevents/liveoutputs\": { \"SingularDisplayName\": \"Microsoft.Media mediaservices live events live output\" }\r\n        ,\"microsoft.media/mediaservices/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.Media mediaservices private endpoint connection\" }\r\n        ,\"microsoft.media/mediaservices/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.Media mediaservices private link resource\" }\r\n        ,\"microsoft.media/mediaservices/streamingendpoints\": { \"SingularDisplayName\": \"Streaming Endpoint\" }\r\n        ,\"microsoft.media/mediaservices/streaminglocators\": { \"SingularDisplayName\": \"Microsoft.Media media services streaming locator\" }\r\n        ,\"microsoft.media/mediaservices/streamingpolicies\": { \"SingularDisplayName\": \"Microsoft.Media media services streaming policy\" }\r\n        ,\"microsoft.media/mediaservices/transforms\": { \"SingularDisplayName\": \"Microsoft.Media media services transform\" }\r\n        ,\"microsoft.media/mediaservices/transforms/jobs\": { \"SingularDisplayName\": \"Microsoft.Media media services transforms job\" }\r\n        ,\"microsoft.mesh/worlds\": { \"SingularDisplayName\": \"Microsoft.Mesh world\" }\r\n        ,\"microsoft.mesh/worlds/events\": { \"SingularDisplayName\": \"Microsoft.Mesh worlds event\" }\r\n        ,\"microsoft.mesh/worlds/events/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.Mesh worlds events access policy\" }\r\n        ,\"microsoft.mesh/worlds/spaces\": { \"SingularDisplayName\": \"Microsoft.Mesh worlds space\" }\r\n        ,\"microsoft.mesh/worlds/spaces/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.Mesh worlds spaces access policy\" }\r\n        ,\"microsoft.mesh/worlds/templates\": { \"SingularDisplayName\": \"Microsoft.Mesh worlds template\" }\r\n        ,\"microsoft.mesh/worlds/templates/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.Mesh worlds templates access policy\" }\r\n        ,\"microsoft.messagingcatalog/catalogs\": { \"SingularDisplayName\": \"Microsoft.MessagingCatalog catalog\" }\r\n        ,\"microsoft.messagingconnectors/connectors\": { \"SingularDisplayName\": \"Microsoft.MessagingConnectors connector\" }\r\n        ,\"microsoft.metaverse/metaverses\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverse\" }\r\n        ,\"microsoft.metaverse/metaverses/events\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverses event\" }\r\n        ,\"microsoft.metaverse/metaverses/events/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverses events access policy\" }\r\n        ,\"microsoft.metaverse/metaverses/spaces\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverses space\" }\r\n        ,\"microsoft.metaverse/metaverses/spaces/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverses spaces access policy\" }\r\n        ,\"microsoft.metaverse/metaverses/templates\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverses template\" }\r\n        ,\"microsoft.metaverse/metaverses/templates/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.Metaverse metaverses templates access policy\" }\r\n        ,\"microsoft.migrate/assessmentprojects\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment project\" }\r\n        ,\"microsoft.migrate/assessmentprojects/aksassessmentoptions\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects aks assessment option\" }\r\n        ,\"microsoft.migrate/assessmentprojects/aksassessments\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects aks assessment\" }\r\n        ,\"microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects aks assessments assessed web app\" }\r\n        ,\"microsoft.migrate/assessmentprojects/aksassessments/clusters\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects aks assessments cluster\" }\r\n        ,\"microsoft.migrate/assessmentprojects/aksassessments/summaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects aks assessments summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/assessmentoptions\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects assessment option\" }\r\n        ,\"microsoft.migrate/assessmentprojects/avsassessmentoptions\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects avs assessment option\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business case\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/avssummaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases avs summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/evaluatedavsmachines\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases evaluated avs machine\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/evaluatedmachines\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases evaluated machine\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/evaluatedsqlentities\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases evaluated sql entity\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/evaluatedwebapps\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases evaluated web app\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/iaassummaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases iaas summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/overviewsummaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases overview summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/businesscases/paassummaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects business cases paas summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects group\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/assessments\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups assessment\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups assessments assessed machine\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/avsassessments\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups avs assessment\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups avs assessments avs assessed machine\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/sqlassessments\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups sql assessment\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups sql assessments assessed sql database\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups sql assessments assessed sql instance\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups sql assessments assessed sql machine\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups sql assessments recommended assessed entity\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups sql assessments summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/webappassessments\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups web app assessment\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups web app assessments assessed web app\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/webappassessments/summaries\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups web app assessments summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects groups web app assessments web app service plan\" }\r\n        ,\"microsoft.migrate/assessmentprojects/hypervcollectors\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects hypervcollector\" }\r\n        ,\"microsoft.migrate/assessmentprojects/importcollectors\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects importcollector\" }\r\n        ,\"microsoft.migrate/assessmentprojects/machines\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects machine\" }\r\n        ,\"microsoft.migrate/assessmentprojects/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects private endpoint connection\" }\r\n        ,\"microsoft.migrate/assessmentprojects/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects private link resource\" }\r\n        ,\"microsoft.migrate/assessmentprojects/projectsummary\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects project summary\" }\r\n        ,\"microsoft.migrate/assessmentprojects/servercollectors\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects servercollector\" }\r\n        ,\"microsoft.migrate/assessmentprojects/sqlassessmentoptions\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects sql assessment option\" }\r\n        ,\"microsoft.migrate/assessmentprojects/sqlcollectors\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects sqlcollector\" }\r\n        ,\"microsoft.migrate/assessmentprojects/vmwarecollectors\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects vmwarecollector\" }\r\n        ,\"microsoft.migrate/assessmentprojects/webappassessmentoptions\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects web app assessment option\" }\r\n        ,\"microsoft.migrate/assessmentprojects/webappcollectors\": { \"SingularDisplayName\": \"Microsoft.Migrate assessment projects web app collector\" }\r\n        ,\"microsoft.migrate/migrateprojects\": { \"SingularDisplayName\": \"Microsoft.Migrate migrate project\" }\r\n        ,\"microsoft.migrate/migrateprojects/databaseinstances\": { \"SingularDisplayName\": \"Microsoft.Migrate migrate projects database instance\" }\r\n        ,\"microsoft.migrate/migrateprojects/databases\": { \"SingularDisplayName\": \"Microsoft.Migrate migrate projects database\" }\r\n        ,\"microsoft.migrate/migrateprojects/machines\": { \"SingularDisplayName\": \"Microsoft.Migrate migrate projects machine\" }\r\n        ,\"microsoft.migrate/migrateprojects/migrateevents\": { \"SingularDisplayName\": \"Microsoft.Migrate migrate projects migrate event\" }\r\n        ,\"microsoft.migrate/migrateprojects/solutions\": { \"SingularDisplayName\": \"Microsoft.Migrate migrate projects solution\" }\r\n        ,\"microsoft.migrate/modernizeprojects\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize project\" }\r\n        ,\"microsoft.migrate/modernizeprojects/deployedresources\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects deployed resource\" }\r\n        ,\"microsoft.migrate/modernizeprojects/jobs\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects job\" }\r\n        ,\"microsoft.migrate/modernizeprojects/jobs/operations\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects jobs operation\" }\r\n        ,\"microsoft.migrate/modernizeprojects/migrateagents\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects migrate agent\" }\r\n        ,\"microsoft.migrate/modernizeprojects/migrateagents/operations\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects migrate agents operation\" }\r\n        ,\"microsoft.migrate/modernizeprojects/operations\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects operation\" }\r\n        ,\"microsoft.migrate/modernizeprojects/workloaddeployments\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects workload deployment\" }\r\n        ,\"microsoft.migrate/modernizeprojects/workloaddeployments/operations\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects workload deployments operation\" }\r\n        ,\"microsoft.migrate/modernizeprojects/workloadinstances\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects workload instance\" }\r\n        ,\"microsoft.migrate/modernizeprojects/workloadinstances/operations\": { \"SingularDisplayName\": \"Microsoft.Migrate modernize projects workload instances operation\" }\r\n        ,\"microsoft.migrate/movecollections\": { \"SingularDisplayName\": \"Microsoft.Migrate move collection\" }\r\n        ,\"microsoft.migrate/movecollections/moveresources\": { \"SingularDisplayName\": \"Microsoft.Migrate move collections move resource\" }\r\n        ,\"microsoft.migrate/projects\": { \"SingularDisplayName\": \"Migration project\" }\r\n        ,\"microsoft.mission/approvals\": { \"SingularDisplayName\": \"Approval\" }\r\n        ,\"microsoft.mission/catalogs\": { \"SingularDisplayName\": \"Catalog\" }\r\n        ,\"microsoft.mission/communities\": { \"SingularDisplayName\": \"Community\" }\r\n        ,\"microsoft.mission/communities/communityendpoints\": { \"SingularDisplayName\": \"Community endpoint\" }\r\n        ,\"microsoft.mission/communities/transithubs\": { \"SingularDisplayName\": \"Transit hub\" }\r\n        ,\"microsoft.mission/enclaveconnections\": { \"SingularDisplayName\": \"Enclave connection\" }\r\n        ,\"microsoft.mission/externalconnections\": { \"SingularDisplayName\": \"Microsoft.Mission external connection\" }\r\n        ,\"microsoft.mission/internalconnections\": { \"SingularDisplayName\": \"Microsoft.Mission internal connection\" }\r\n        ,\"microsoft.mission/virtualenclaves\": { \"SingularDisplayName\": \"Enclave\" }\r\n        ,\"microsoft.mission/virtualenclaves/enclaveendpoints\": { \"SingularDisplayName\": \"Enclave endpoint\" }\r\n        ,\"microsoft.mission/virtualenclaves/endpoints\": { \"SingularDisplayName\": \"Endpoint\" }\r\n        ,\"microsoft.mission/virtualenclaves/workloads\": { \"SingularDisplayName\": \"Workload\" }\r\n        ,\"microsoft.mixedreality/objectanchorsaccounts\": { \"SingularDisplayName\": \"Object Anchors Account\" }\r\n        ,\"microsoft.mixedreality/objectunderstandingaccounts\": { \"SingularDisplayName\": \"Object Understanding Account\" }\r\n        ,\"microsoft.mixedreality/remoterenderingaccounts\": { \"SingularDisplayName\": \"Remote Rendering Account\" }\r\n        ,\"microsoft.mixedreality/spatialanchorsaccounts\": { \"SingularDisplayName\": \"Spatial Anchors Account\" }\r\n        ,\"microsoft.mixedreality/spatialmapsaccounts\": { \"SingularDisplayName\": \"Microsoft.MixedReality spatial maps account\" }\r\n        ,\"microsoft.mobilenetwork/amfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork amf deployment\" }\r\n        ,\"microsoft.mobilenetwork/clusterservices\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork cluster service\" }\r\n        ,\"microsoft.mobilenetwork/mobilenetworks\": { \"SingularDisplayName\": \"Mobile Network\" }\r\n        ,\"microsoft.mobilenetwork/mobilenetworks/datanetworks\": { \"SingularDisplayName\": \"Data Network\" }\r\n        ,\"microsoft.mobilenetwork/mobilenetworks/services\": { \"SingularDisplayName\": \"Service\" }\r\n        ,\"microsoft.mobilenetwork/mobilenetworks/simpolicies\": { \"SingularDisplayName\": \"SIM Policy\" }\r\n        ,\"microsoft.mobilenetwork/mobilenetworks/sites\": { \"SingularDisplayName\": \"Mobile Network Site\" }\r\n        ,\"microsoft.mobilenetwork/mobilenetworks/slices\": { \"SingularDisplayName\": \"Slice\" }\r\n        ,\"microsoft.mobilenetwork/nrfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork nrf deployment\" }\r\n        ,\"microsoft.mobilenetwork/nssfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork nssf deployment\" }\r\n        ,\"microsoft.mobilenetwork/observabilityservices\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork observability service\" }\r\n        ,\"microsoft.mobilenetwork/packetcorecontrolplanes\": { \"SingularDisplayName\": \"Packet Core Control Plane\" }\r\n        ,\"microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes\": { \"SingularDisplayName\": \"Packet Core Data Plane\" }\r\n        ,\"microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks\": { \"SingularDisplayName\": \"Attached Data Network\" }\r\n        ,\"microsoft.mobilenetwork/packetcorecontrolplaneversions\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork packet core control plane version\" }\r\n        ,\"microsoft.mobilenetwork/radioaccessnetworks\": { \"SingularDisplayName\": \"Radio Access Network Insights\" }\r\n        ,\"microsoft.mobilenetwork/sdmdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork sdm deployment\" }\r\n        ,\"microsoft.mobilenetwork/simgroups\": { \"SingularDisplayName\": \"SIM Group\" }\r\n        ,\"microsoft.mobilenetwork/simgroups/sims\": { \"SingularDisplayName\": \"SIM\" }\r\n        ,\"microsoft.mobilenetwork/sims\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork sim\" }\r\n        ,\"microsoft.mobilenetwork/smfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork smf deployment\" }\r\n        ,\"microsoft.mobilenetwork/upfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork upf deployment\" }\r\n        ,\"microsoft.mobilenetwork/virtualizedmmedeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork virtualized mme deployment\" }\r\n        ,\"microsoft.mobilenetwork/vnfagentdeployments\": { \"SingularDisplayName\": \"Microsoft.MobileNetwork vnf agent deployment\" }\r\n        ,\"microsoft.mobilepacketcore/amfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore amf deployment\" }\r\n        ,\"microsoft.mobilepacketcore/clusterservices\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore cluster service\" }\r\n        ,\"microsoft.mobilepacketcore/networkfunctions\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore network function\" }\r\n        ,\"microsoft.mobilepacketcore/nrfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore nrf deployment\" }\r\n        ,\"microsoft.mobilepacketcore/nssfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore nssf deployment\" }\r\n        ,\"microsoft.mobilepacketcore/observabilityservices\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore observability service\" }\r\n        ,\"microsoft.mobilepacketcore/smfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore smf deployment\" }\r\n        ,\"microsoft.mobilepacketcore/upfdeployments\": { \"SingularDisplayName\": \"Microsoft.MobilePacketCore upf deployment\" }\r\n        ,\"microsoft.modsimworkbench/workbenches\": { \"SingularDisplayName\": \"Modeling and Simulation Workbench\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers\": { \"SingularDisplayName\": \"Chamber\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers/connectors\": { \"SingularDisplayName\": \"Chamber Connector\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers/filerequests\": { \"SingularDisplayName\": \"Chamber Data Pipeline File Request\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers/files\": { \"SingularDisplayName\": \"Chamber Data Pipeline File\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers/licenses\": { \"SingularDisplayName\": \"Chamber License\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers/storages\": { \"SingularDisplayName\": \"Chamber Storage\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/chambers/workloads\": { \"SingularDisplayName\": \"Chamber VM\" }\r\n        ,\"microsoft.modsimworkbench/workbenches/sharedstorages\": { \"SingularDisplayName\": \"Shared Storage\" }\r\n        ,\"microsoft.monitor/accounts\": { \"SingularDisplayName\": \"Azure Monitor workspace\" }\r\n        ,\"microsoft.monitor/investigations\": { \"SingularDisplayName\": \"Microsoft.Monitor investigation\" }\r\n        ,\"microsoft.monitor/pipelinegroups\": { \"SingularDisplayName\": \"Azure Monitor pipeline\" }\r\n        ,\"microsoft.mysqldiscovery/mysqlsites\": { \"SingularDisplayName\": \"Microsoft.MySQLDiscovery my sqlsite\" }\r\n        ,\"microsoft.mysqldiscovery/mysqlsites/agents\": { \"SingularDisplayName\": \"Microsoft.MySQLDiscovery my sqlsites agent\" }\r\n        ,\"microsoft.mysqldiscovery/mysqlsites/errorsummaries\": { \"SingularDisplayName\": \"Microsoft.MySQLDiscovery my sqlsites error summary\" }\r\n        ,\"microsoft.mysqldiscovery/mysqlsites/mysqlservers\": { \"SingularDisplayName\": \"Microsoft.MySQLDiscovery my sqlsites my sqlserver\" }\r\n        ,\"microsoft.mysqldiscovery/mysqlsites/summaries\": { \"SingularDisplayName\": \"Microsoft.MySQLDiscovery my sqlsites summary\" }\r\n        ,\"microsoft.netapp/netappaccounts\": { \"SingularDisplayName\": \"NetApp account\" }\r\n        ,\"microsoft.netapp/netappaccounts/backupvaults\": { \"SingularDisplayName\": \"Backup vault\" }\r\n        ,\"microsoft.netapp/netappaccounts/capacitypools\": { \"SingularDisplayName\": \"Capacity pool\" }\r\n        ,\"microsoft.netapp/netappaccounts/capacitypools/volumes\": { \"SingularDisplayName\": \"Volume\" }\r\n        ,\"microsoft.netapp/netappaccounts/capacitypools/volumes/snapshots\": { \"SingularDisplayName\": \"Snapshot\" }\r\n        ,\"microsoft.netapp/netappaccounts/capacitypools/volumes/volumequotarules\": { \"SingularDisplayName\": \"User and group quota\" }\r\n        ,\"microsoft.netapp/netappaccounts/snapshotpolicies\": { \"SingularDisplayName\": \"Snapshot policy\" }\r\n        ,\"microsoft.netapp/netappaccounts/volumegroups\": { \"SingularDisplayName\": \"VolumeGroup\" }\r\n        ,\"microsoft.network/applicationgatewayavailablessloptions\": { \"SingularDisplayName\": \"Microsoft.Network application gateway available ssl option\" }\r\n        ,\"microsoft.network/applicationgatewayavailablessloptions/predefinedpolicies\": { \"SingularDisplayName\": \"Microsoft.Network application gateway available ssl options predefined policy\" }\r\n        ,\"microsoft.network/applicationgateways\": { \"SingularDisplayName\": \"Application gateway\" }\r\n        ,\"microsoft.network/applicationgatewaywebapplicationfirewallpolicies\": { \"SingularDisplayName\": \"Application Gateway WAF policy\" }\r\n        ,\"microsoft.network/applicationsecuritygroups\": { \"SingularDisplayName\": \"Application security group\" }\r\n        ,\"microsoft.network/azurefirewalls\": { \"SingularDisplayName\": \"Firewall\" }\r\n        ,\"microsoft.network/azurewebcategories\": { \"SingularDisplayName\": \"Microsoft.Network Azure web category\" }\r\n        ,\"microsoft.network/bastionhosts\": { \"SingularDisplayName\": \"Bastion\" }\r\n        ,\"microsoft.network/cloudserviceslots\": { \"SingularDisplayName\": \"Microsoft.Network cloud service slot\" }\r\n        ,\"microsoft.network/connections\": { \"SingularDisplayName\": \"Connection\" }\r\n        ,\"microsoft.network/customipprefixes\": { \"SingularDisplayName\": \"Custom IP Prefix\" }\r\n        ,\"microsoft.network/ddoscustompolicies\": { \"SingularDisplayName\": \"Microsoft.Network DDoS custom policy\" }\r\n        ,\"microsoft.network/ddosprotectionplans\": { \"SingularDisplayName\": \"DDoS protection plan\" }\r\n        ,\"microsoft.network/dnsforwardingrulesets\": { \"SingularDisplayName\": \"DNS forwarding ruleset\" }\r\n        ,\"microsoft.network/dnsresolverdomainlists\": { \"SingularDisplayName\": \"DNS Domain List\" }\r\n        ,\"microsoft.network/dnsresolverpolicies\": { \"SingularDisplayName\": \"DNS Security Policy\" }\r\n        ,\"microsoft.network/dnsresolvers\": { \"SingularDisplayName\": \"DNS private resolver\" }\r\n        ,\"microsoft.network/dnszones\": { \"SingularDisplayName\": \"DNS zone\" }\r\n        ,\"microsoft.network/dscpconfigurations\": { \"SingularDisplayName\": \"Microsoft.Network DSCP configuration\" }\r\n        ,\"microsoft.network/expressroutecircuits\": { \"SingularDisplayName\": \"ExpressRoute circuit\" }\r\n        ,\"microsoft.network/expressroutecrossconnections\": { \"SingularDisplayName\": \"Microsoft.Network express route cross connection\" }\r\n        ,\"microsoft.network/expressroutecrossconnections/peerings\": { \"SingularDisplayName\": \"Microsoft.Network express route cross connections peering\" }\r\n        ,\"microsoft.network/expressroutegateways\": { \"SingularDisplayName\": \"ExpressRoute Gateway\" }\r\n        ,\"microsoft.network/expressroutegateways/expressrouteconnections\": { \"SingularDisplayName\": \"Microsoft.Network express route gateways express route connection\" }\r\n        ,\"microsoft.network/expressrouteports\": { \"SingularDisplayName\": \"ExpressRoute Direct\" }\r\n        ,\"microsoft.network/expressrouteportslocations\": { \"SingularDisplayName\": \"Microsoft.Network express route ports location\" }\r\n        ,\"microsoft.network/firewallpolicies\": { \"SingularDisplayName\": \"Firewall Policy\" }\r\n        ,\"microsoft.network/frontdoors\": { \"SingularDisplayName\": \"Front Door and CDN profiles\" }\r\n        ,\"microsoft.network/frontdoorwebapplicationfirewallpolicies\": { \"SingularDisplayName\": \"Front Door WAF policy\" }\r\n        ,\"microsoft.network/ipallocations\": { \"SingularDisplayName\": \"Microsoft.Network IP allocation\" }\r\n        ,\"microsoft.network/ipgroups\": { \"SingularDisplayName\": \"IP Group\" }\r\n        ,\"microsoft.network/loadbalancers\": { \"SingularDisplayName\": \"Load balancer\" }\r\n        ,\"microsoft.network/localnetworkgateways\": { \"SingularDisplayName\": \"Local network gateway\" }\r\n        ,\"microsoft.network/natgateways\": { \"SingularDisplayName\": \"NAT gateway\" }\r\n        ,\"microsoft.network/networkexperimentprofiles\": { \"SingularDisplayName\": \"Microsoft.Network network experiment profile\" }\r\n        ,\"microsoft.network/networkexperimentprofiles/experiments\": { \"SingularDisplayName\": \"Microsoft.Network network experiment profiles experiment\" }\r\n        ,\"microsoft.network/networkinterfaces\": { \"SingularDisplayName\": \"Network interface\" }\r\n        ,\"microsoft.network/networkmanagerconnections\": { \"SingularDisplayName\": \"Microsoft.Network network manager connection\" }\r\n        ,\"microsoft.network/networkmanagers\": { \"SingularDisplayName\": \"Network manager\" }\r\n        ,\"microsoft.network/networkmanagers/connectivityconfigurations\": { \"SingularDisplayName\": \"Network manager\" }\r\n        ,\"microsoft.network/networkmanagers/ipampools\": { \"SingularDisplayName\": \"IP address pool\" }\r\n        ,\"microsoft.network/networkmanagers/networkgroups\": { \"SingularDisplayName\": \"Network manager\" }\r\n        ,\"microsoft.network/networkmanagers/routingconfigurations\": { \"SingularDisplayName\": \"Network manager\" }\r\n        ,\"microsoft.network/networkmanagers/securityadminconfigurations\": { \"SingularDisplayName\": \"Network manager\" }\r\n        ,\"microsoft.network/networkmanagers/securityuserconfigurations\": { \"SingularDisplayName\": \"Network manager\" }\r\n        ,\"microsoft.network/networkmanagers/verifierworkspaces\": { \"SingularDisplayName\": \"Verifier Workspace\" }\r\n        ,\"microsoft.network/networkprofiles\": { \"SingularDisplayName\": \"Microsoft.Network network profile\" }\r\n        ,\"microsoft.network/networksecuritygroups\": { \"SingularDisplayName\": \"Network security group\" }\r\n        ,\"microsoft.network/networksecurityperimeters\": { \"SingularDisplayName\": \"Network Security Perimeter\" }\r\n        ,\"microsoft.network/networksecurityperimeters/profiles\": { \"SingularDisplayName\": \"Network Security Perimeter Profile\" }\r\n        ,\"microsoft.network/networkverifiers\": { \"SingularDisplayName\": \"Virtual Network Verifier\" }\r\n        ,\"microsoft.network/networkvirtualappliances\": { \"SingularDisplayName\": \"Microsoft.Network network virtual appliance\" }\r\n        ,\"microsoft.network/networkwatchers\": { \"SingularDisplayName\": \"Network Watcher\" }\r\n        ,\"microsoft.network/networkwatchers/flowlogs\": { \"SingularDisplayName\": \"Flow log\" }\r\n        ,\"microsoft.network/p2svpngateways\": { \"SingularDisplayName\": \"VPN Gateway (Point to Site)\" }\r\n        ,\"microsoft.network/privatednszones\": { \"SingularDisplayName\": \"Private DNS zone\" }\r\n        ,\"microsoft.network/privateendpoints\": { \"SingularDisplayName\": \"Private endpoint\" }\r\n        ,\"microsoft.network/privatelinkservices\": { \"SingularDisplayName\": \"Private link service\" }\r\n        ,\"microsoft.network/publicipaddresses\": { \"SingularDisplayName\": \"Public IP address\" }\r\n        ,\"microsoft.network/publicipprefixes\": { \"SingularDisplayName\": \"Public IP Prefix\" }\r\n        ,\"microsoft.network/routefilters\": { \"SingularDisplayName\": \"Route filter\" }\r\n        ,\"microsoft.network/routetables\": { \"SingularDisplayName\": \"Route table\" }\r\n        ,\"microsoft.network/securitypartnerproviders\": { \"SingularDisplayName\": \"Microsoft.Network security partner provider\" }\r\n        ,\"microsoft.network/serviceendpointpolicies\": { \"SingularDisplayName\": \"Service endpoint policy\" }\r\n        ,\"microsoft.network/trafficmanagergeographichierarchies\": { \"SingularDisplayName\": \"Microsoft.Network traffic manager geographic hierarchy\" }\r\n        ,\"microsoft.network/trafficmanagerprofiles\": { \"SingularDisplayName\": \"Traffic Manager profile\" }\r\n        ,\"microsoft.network/trafficmanagerusermetricskeys\": { \"SingularDisplayName\": \"Microsoft.Network traffic manager user metrics key\" }\r\n        ,\"microsoft.network/virtualhubs\": { \"SingularDisplayName\": \"Microsoft.Network/virtualHub\" }\r\n        ,\"microsoft.network/virtualnetworkgateways\": { \"SingularDisplayName\": \"Virtual network gateway\" }\r\n        ,\"microsoft.network/virtualnetworks\": { \"SingularDisplayName\": \"Virtual network\" }\r\n        ,\"microsoft.network/virtualnetworktaps\": { \"SingularDisplayName\": \"Virtual network terminal access point\" }\r\n        ,\"microsoft.network/virtualrouters\": { \"SingularDisplayName\": \"Microsoft.Network virtual router\" }\r\n        ,\"microsoft.network/virtualrouters/peerings\": { \"SingularDisplayName\": \"Microsoft.Network virtual routers peering\" }\r\n        ,\"microsoft.network/virtualwans\": { \"SingularDisplayName\": \"Virtual WAN\" }\r\n        ,\"microsoft.network/vpngateways\": { \"SingularDisplayName\": \"VPN Gateway (Site to Site)\" }\r\n        ,\"microsoft.network/vpngateways/vpnconnections\": { \"SingularDisplayName\": \"Microsoft.Network VPN gateways VPN connection\" }\r\n        ,\"microsoft.network/vpngateways/vpnconnections/vpnlinkconnections\": { \"SingularDisplayName\": \"Microsoft.Network VPN gateways VPN connections VPN link connection\" }\r\n        ,\"microsoft.network/vpnserverconfigurations\": { \"SingularDisplayName\": \"Microsoft.Network VPN server configuration\" }\r\n        ,\"microsoft.network/vpnsites\": { \"SingularDisplayName\": \"Microsoft.Network VPN site\" }\r\n        ,\"microsoft.network/vpnsites/vpnsitelinks\": { \"SingularDisplayName\": \"Microsoft.Network VPN sites VPN site link\" }\r\n        ,\"microsoft.networkanalytics/dataconnectors\": { \"SingularDisplayName\": \"AIOps - Data Connector\" }\r\n        ,\"microsoft.networkanalytics/datalakehouses\": { \"SingularDisplayName\": \"AIOps - Data LakeHouse\" }\r\n        ,\"microsoft.networkanalytics/dataproducts\": { \"SingularDisplayName\": \"Azure Operator Insights ? Data Product\" }\r\n        ,\"microsoft.networkanalytics/dataproducts/datatypes\": { \"SingularDisplayName\": \"Data Type\" }\r\n        ,\"microsoft.networkanalytics/dataproductscatalogs\": { \"SingularDisplayName\": \"Microsoft.NetworkAnalytics data products catalog\" }\r\n        ,\"microsoft.networkanalytics/metricsingestionendpoints\": { \"SingularDisplayName\": \"Microsoft.NetworkAnalytics metrics ingestion endpoint\" }\r\n        ,\"microsoft.networkanalytics/networkanalyticsproducts\": { \"SingularDisplayName\": \"Microsoft.NetworkAnalytics network analytics product\" }\r\n        ,\"microsoft.networkcloud/baremetalmachines\": { \"SingularDisplayName\": \"Bare Metal Machine (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/cloudservicesnetworks\": { \"SingularDisplayName\": \"Cloud Services Network (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/clustermanagers\": { \"SingularDisplayName\": \"Cluster Manager (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/clusters\": { \"SingularDisplayName\": \"Cluster (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/clusters/baremetalmachinekeysets\": { \"SingularDisplayName\": \"Cluster Bare Metal Machine Key Set (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/clusters/bmckeysets\": { \"SingularDisplayName\": \"Cluster Baseboard Management Controller Key Set (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/clusters/metricsconfigurations\": { \"SingularDisplayName\": \"Cluster Metrics Configuration (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/edgeclustermachineskus\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud edge cluster machine SKU\" }\r\n        ,\"microsoft.networkcloud/edgeclusterruntimeversions\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud edge cluster runtime version\" }\r\n        ,\"microsoft.networkcloud/edgeclusters\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud edge cluster\" }\r\n        ,\"microsoft.networkcloud/edgeclusters/nodes\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud edge clusters node\" }\r\n        ,\"microsoft.networkcloud/edgeclusterskus\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud edge cluster SKU\" }\r\n        ,\"microsoft.networkcloud/kubernetesclusters\": { \"SingularDisplayName\": \"Kubernetes Cluster (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/kubernetesclusters/agentpools\": { \"SingularDisplayName\": \"Agent Pool (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/kubernetesclusters/features\": { \"SingularDisplayName\": \"Kubernetes Cluster Feature (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/l2networks\": { \"SingularDisplayName\": \"Layer 2 Network (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/l3networks\": { \"SingularDisplayName\": \"Layer 3 Network (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/racks\": { \"SingularDisplayName\": \"Compute Rack (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/rackskus\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud rack SKU\" }\r\n        ,\"microsoft.networkcloud/registrationhubs\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud registration hub\" }\r\n        ,\"microsoft.networkcloud/registrationhubs/images\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud registration hubs image\" }\r\n        ,\"microsoft.networkcloud/registrationhubs/machines\": { \"SingularDisplayName\": \"Microsoft.NetworkCloud registration hubs machine\" }\r\n        ,\"microsoft.networkcloud/storageappliances\": { \"SingularDisplayName\": \"Storage Appliance (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/trunkednetworks\": { \"SingularDisplayName\": \"Trunked Network (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/virtualmachines\": { \"SingularDisplayName\": \"Virtual Machine (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/virtualmachines/consoles\": { \"SingularDisplayName\": \"Virtual Machine Console (Operator Nexus)\" }\r\n        ,\"microsoft.networkcloud/volumes\": { \"SingularDisplayName\": \"Volume (Operator Nexus)\" }\r\n        ,\"microsoft.networkfunction/azuretrafficcollectors\": { \"SingularDisplayName\": \"ExpressRoute traffic collector\" }\r\n        ,\"microsoft.networkfunction/meshvpns\": { \"SingularDisplayName\": \"Mesh VPN\" }\r\n        ,\"microsoft.nexusidentity/identitycontrollers\": { \"SingularDisplayName\": \"Microsoft.NexusIdentity identity controller\" }\r\n        ,\"microsoft.nexusidentity/identitysets\": { \"SingularDisplayName\": \"Microsoft.NexusIdentity identity set\" }\r\n        ,\"microsoft.notebooks/notebookproxies\": { \"SingularDisplayName\": \"Microsoft.Notebooks notebook proxy\" }\r\n        ,\"microsoft.notificationhubs/namespaces\": { \"SingularDisplayName\": \"Notification Hub Namespace\" }\r\n        ,\"microsoft.notificationhubs/namespaces/notificationhubs\": { \"SingularDisplayName\": \"Notification Hub\" }\r\n        ,\"microsoft.objectstore/osnamespaces\": { \"SingularDisplayName\": \"Microsoft.ObjectStore os namespace\" }\r\n        ,\"microsoft.offazure/hypervsites\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv site\" }\r\n        ,\"microsoft.offazure/hypervsites/clusters\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites cluster\" }\r\n        ,\"microsoft.offazure/hypervsites/hosts\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites host\" }\r\n        ,\"microsoft.offazure/hypervsites/jobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites job\" }\r\n        ,\"microsoft.offazure/hypervsites/machines\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites machine\" }\r\n        ,\"microsoft.offazure/hypervsites/machines/softwareinventories\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites machines software inventory\" }\r\n        ,\"microsoft.offazure/hypervsites/operationsstatus\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites operations statu\" }\r\n        ,\"microsoft.offazure/hypervsites/runasaccounts\": { \"SingularDisplayName\": \"Microsoft.OffAzure hyperv sites run as account\" }\r\n        ,\"microsoft.offazure/importsites\": { \"SingularDisplayName\": \"Microsoft.OffAzure import site\" }\r\n        ,\"microsoft.offazure/importsites/deletejobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure import sites delete job\" }\r\n        ,\"microsoft.offazure/importsites/exportjobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure import sites export job\" }\r\n        ,\"microsoft.offazure/importsites/importjobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure import sites import job\" }\r\n        ,\"microsoft.offazure/importsites/jobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure import sites job\" }\r\n        ,\"microsoft.offazure/importsites/machines\": { \"SingularDisplayName\": \"Microsoft.OffAzure import sites machine\" }\r\n        ,\"microsoft.offazure/mastersites\": { \"SingularDisplayName\": \"Microsoft.OffAzure master site\" }\r\n        ,\"microsoft.offazure/mastersites/operationsstatus\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites operations statu\" }\r\n        ,\"microsoft.offazure/mastersites/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites private endpoint connection\" }\r\n        ,\"microsoft.offazure/mastersites/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites private link resource\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql site\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/discoverysitedatasources\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites discovery site data source\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/jobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites job\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/operationsstatus\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites operations statu\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/runasaccounts\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites run as account\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/sqlavailabilitygroups\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites sql availability group\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/sqldatabases\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites sql database\" }\r\n        ,\"microsoft.offazure/mastersites/sqlsites/sqlservers\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites sql sites sql server\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app site\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/discoverysitedatasources\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites discovery site data source\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/extendedmachines\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites extended machine\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/iiswebapplications\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites iis web application\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/iiswebservers\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites iis web server\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/runasaccounts\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites runasaccount\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/tomcatwebapplications\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites tomcat web application\" }\r\n        ,\"microsoft.offazure/mastersites/webappsites/tomcatwebservers\": { \"SingularDisplayName\": \"Microsoft.OffAzure master sites web app sites tomcat web server\" }\r\n        ,\"microsoft.offazure/serversites\": { \"SingularDisplayName\": \"Microsoft.OffAzure server site\" }\r\n        ,\"microsoft.offazure/serversites/jobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure server sites job\" }\r\n        ,\"microsoft.offazure/serversites/machines\": { \"SingularDisplayName\": \"Microsoft.OffAzure server sites machine\" }\r\n        ,\"microsoft.offazure/serversites/machines/softwareinventories\": { \"SingularDisplayName\": \"Microsoft.OffAzure server sites machines software inventory\" }\r\n        ,\"microsoft.offazure/serversites/operationsstatus\": { \"SingularDisplayName\": \"Microsoft.OffAzure server sites operations statu\" }\r\n        ,\"microsoft.offazure/serversites/runasaccounts\": { \"SingularDisplayName\": \"Microsoft.OffAzure server sites run as account\" }\r\n        ,\"microsoft.offazure/vmwaresites\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware site\" }\r\n        ,\"microsoft.offazure/vmwaresites/hosts\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites host\" }\r\n        ,\"microsoft.offazure/vmwaresites/jobs\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites job\" }\r\n        ,\"microsoft.offazure/vmwaresites/machines\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites machine\" }\r\n        ,\"microsoft.offazure/vmwaresites/machines/softwareinventories\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites machines software inventory\" }\r\n        ,\"microsoft.offazure/vmwaresites/operationsstatus\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites operations statu\" }\r\n        ,\"microsoft.offazure/vmwaresites/runasaccounts\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites run as account\" }\r\n        ,\"microsoft.offazure/vmwaresites/vcenters\": { \"SingularDisplayName\": \"Microsoft.OffAzure vmware sites vcenter\" }\r\n        ,\"microsoft.offazurespringboot/springbootsites\": { \"SingularDisplayName\": \"Microsoft.OffAzureSpringBoot springbootsite\" }\r\n        ,\"microsoft.offazurespringboot/springbootsites/errorsummaries\": { \"SingularDisplayName\": \"Microsoft.OffAzureSpringBoot springbootsites error summary\" }\r\n        ,\"microsoft.offazurespringboot/springbootsites/springbootapps\": { \"SingularDisplayName\": \"Microsoft.OffAzureSpringBoot springbootsites springbootapp\" }\r\n        ,\"microsoft.offazurespringboot/springbootsites/springbootservers\": { \"SingularDisplayName\": \"Microsoft.OffAzureSpringBoot springbootsites springbootserver\" }\r\n        ,\"microsoft.offazurespringboot/springbootsites/summaries\": { \"SingularDisplayName\": \"Microsoft.OffAzureSpringBoot springbootsites summary\" }\r\n        ,\"microsoft.onlineexperimentation/workspaces\": { \"SingularDisplayName\": \"Online Experimentation Workspace\" }\r\n        ,\"microsoft.openenergyplatform/energyservices\": { \"SingularDisplayName\": \"Azure Data Manager for Energy\" }\r\n        ,\"microsoft.openlogisticsplatform/workspaces\": { \"SingularDisplayName\": \"Microsoft.OpenLogisticsPlatform workspace\" }\r\n        ,\"microsoft.openlogisticsplatform/workspaces/applicationregistrations\": { \"SingularDisplayName\": \"Microsoft.OpenLogisticsPlatform workspaces application registration\" }\r\n        ,\"microsoft.openlogisticsplatform/workspaces/applications\": { \"SingularDisplayName\": \"Microsoft.OpenLogisticsPlatform workspaces application\" }\r\n        ,\"microsoft.openlogisticsplatform/workspaces/eventgridfilters\": { \"SingularDisplayName\": \"Microsoft.OpenLogisticsPlatform workspaces event grid filter\" }\r\n        ,\"microsoft.openlogisticsplatform/workspaces/shares\": { \"SingularDisplayName\": \"Microsoft.OpenLogisticsPlatform workspaces share\" }\r\n        ,\"microsoft.openlogisticsplatform/workspaces/sharesubscriptions\": { \"SingularDisplayName\": \"Microsoft.OpenLogisticsPlatform workspaces share subscription\" }\r\n        ,\"microsoft.operationalinsights/clusters\": { \"SingularDisplayName\": \"Log Analytics dedicated cluster\" }\r\n        ,\"microsoft.operationalinsights/querypacks\": { \"SingularDisplayName\": \"Log Analytics query pack\" }\r\n        ,\"microsoft.operationalinsights/workspaces\": { \"SingularDisplayName\": \"Log Analytics workspace\" }\r\n        ,\"microsoft.operationsmanagement/managementassociations\": { \"SingularDisplayName\": \"Microsoft.OperationsManagement management association\" }\r\n        ,\"microsoft.operationsmanagement/solutions\": { \"SingularDisplayName\": \"Solution\" }\r\n        ,\"microsoft.operatorvoicemail/operatorvoicemailinstances\": { \"SingularDisplayName\": \"Microsoft.OperatorVoicemail operator voicemail instance\" }\r\n    })[tolower(id)]\r\n}\r\n",
                    "$fxv#4": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n.create-or-alter function \r\nwith (docstring = 'Return details about the specified ID.', folder = 'OpenData/Internal')\r\n_resource_type_4(id: string) {\r\n    dynamic({\r\n        \"microsoft.oraclediscovery/oraclesites\": { \"SingularDisplayName\": \"Microsoft.OracleDiscovery oracle site\" }\r\n        ,\"microsoft.oraclediscovery/oraclesites/errorsummaries\": { \"SingularDisplayName\": \"Microsoft.OracleDiscovery oracle sites error summary\" }\r\n        ,\"microsoft.oraclediscovery/oraclesites/oracledatabases\": { \"SingularDisplayName\": \"Microsoft.OracleDiscovery oracle sites oracle database\" }\r\n        ,\"microsoft.oraclediscovery/oraclesites/oracleservers\": { \"SingularDisplayName\": \"Microsoft.OracleDiscovery oracle sites oracle server\" }\r\n        ,\"microsoft.oraclediscovery/oraclesites/summaries\": { \"SingularDisplayName\": \"Microsoft.OracleDiscovery oracle sites summary\" }\r\n        ,\"microsoft.orbital/cloudaccessrouters\": { \"SingularDisplayName\": \"Cloud Access Router\" }\r\n        ,\"microsoft.orbital/contactprofiles\": { \"SingularDisplayName\": \"Contact Profile\" }\r\n        ,\"microsoft.orbital/edgesites\": { \"SingularDisplayName\": \"Edge Site\" }\r\n        ,\"microsoft.orbital/geocatalogs\": { \"SingularDisplayName\": \"GeoCatalog\" }\r\n        ,\"microsoft.orbital/globalcommunicationssites\": { \"SingularDisplayName\": \"Microsoft.Orbital global communications site\" }\r\n        ,\"microsoft.orbital/groundstations\": { \"SingularDisplayName\": \"Ground Station\" }\r\n        ,\"microsoft.orbital/l2connections\": { \"SingularDisplayName\": \"L2 Connection\" }\r\n        ,\"microsoft.orbital/sdwancontrollers\": { \"SingularDisplayName\": \"SDWAN Controller\" }\r\n        ,\"microsoft.orbital/spacecrafts\": { \"SingularDisplayName\": \"Spacecraft\" }\r\n        ,\"microsoft.orbital/spacecrafts/contacts\": { \"SingularDisplayName\": \"Contact\" }\r\n        ,\"microsoft.orbital/terminals\": { \"SingularDisplayName\": \"Cloud Access Terminal\" }\r\n        ,\"microsoft.partnermanagedconsumerrecurrence/recurrences\": { \"SingularDisplayName\": \"Microsoft.PartnerManagedConsumerRecurrence recurrence\" }\r\n        ,\"microsoft.partnermanagedconsumerrecurrence/recurrences/operationresult\": { \"SingularDisplayName\": \"Microsoft.PartnerManagedConsumerRecurrence recurrences operation result\" }\r\n        ,\"microsoft.peering/peerasns\": { \"SingularDisplayName\": \"Microsoft.Peering peer asn\" }\r\n        ,\"microsoft.peering/peerings\": { \"SingularDisplayName\": \"Peering\" }\r\n        ,\"microsoft.peering/peerings/registeredasns\": { \"SingularDisplayName\": \"Registered ASN\" }\r\n        ,\"microsoft.peering/peerings/registeredprefixes\": { \"SingularDisplayName\": \"Registered prefix\" }\r\n        ,\"microsoft.peering/peeringservices\": { \"SingularDisplayName\": \"Peering Service\" }\r\n        ,\"microsoft.peering/peeringservices/prefixes\": { \"SingularDisplayName\": \"Peering Service Prefix\" }\r\n        ,\"microsoft.pki/pkis\": { \"SingularDisplayName\": \"Microsoft.Pki PKI\" }\r\n        ,\"microsoft.pki/pkis/certificateauthorities\": { \"SingularDisplayName\": \"Microsoft.Pki pkis certificate authority\" }\r\n        ,\"microsoft.pki/pkis/enrollmentpolicies\": { \"SingularDisplayName\": \"Microsoft.Pki pkis enrollment policy\" }\r\n        ,\"microsoft.policyinsights/attestations\": { \"SingularDisplayName\": \"Microsoft.PolicyInsights attestation\" }\r\n        ,\"microsoft.policyinsights/policymetadata\": { \"SingularDisplayName\": \"Microsoft.PolicyInsights policy metadata\" }\r\n        ,\"microsoft.policyinsights/remediations\": { \"SingularDisplayName\": \"Microsoft.PolicyInsights remediation\" }\r\n        ,\"microsoft.portal/consoles\": { \"SingularDisplayName\": \"Microsoft.Portal console\" }\r\n        ,\"microsoft.portal/dashboards\": { \"SingularDisplayName\": \"Shared dashboard\" }\r\n        ,\"microsoft.portal/tenantconfigurations\": { \"SingularDisplayName\": \"Microsoft.Portal tenant configuration\" }\r\n        ,\"microsoft.portal/usersettings\": { \"SingularDisplayName\": \"Microsoft.Portal user setting\" }\r\n        ,\"microsoft.portal/virtual-privatedashboards\": { \"SingularDisplayName\": \"Private dashboard\" }\r\n        ,\"microsoft.portalservices/copilotsettings\": { \"SingularDisplayName\": \"Microsoft.PortalServices copilot setting\" }\r\n        ,\"microsoft.portalservices/dashboards\": { \"SingularDisplayName\": \"Shared dashboard\" }\r\n        ,\"microsoft.portalservices/extensions\": { \"SingularDisplayName\": \"Portal Extension\" }\r\n        ,\"microsoft.portalservices/extensions/deployments\": { \"SingularDisplayName\": \"Extension Deployment\" }\r\n        ,\"microsoft.portalservices/extensions/slots\": { \"SingularDisplayName\": \"Extension Slot\" }\r\n        ,\"microsoft.portalservices/extensions/versions\": { \"SingularDisplayName\": \"Extension Version\" }\r\n        ,\"microsoft.portalservices/settings\": { \"SingularDisplayName\": \"Microsoft.PortalServices setting\" }\r\n        ,\"microsoft.powerbi/privatelinkservicesforpowerbi\": { \"SingularDisplayName\": \"Microsoft.PowerBI private link services for power bi\" }\r\n        ,\"microsoft.powerbi/privatelinkservicesforpowerbi/privateendpointconnections\": { \"SingularDisplayName\": \"Microsoft.PowerBI private link services for power bi private endpoint connection\" }\r\n        ,\"microsoft.powerbi/privatelinkservicesforpowerbi/privatelinkresources\": { \"SingularDisplayName\": \"Microsoft.PowerBI private link services for power bi private link resource\" }\r\n        ,\"microsoft.powerbi/workspacecollections\": { \"SingularDisplayName\": \"Microsoft.PowerBI workspace collection\" }\r\n        ,\"microsoft.powerbidedicated/autoscalevcores\": { \"SingularDisplayName\": \"Microsoft.PowerBIDedicated auto scale vcore\" }\r\n        ,\"microsoft.powerbidedicated/capacities\": { \"SingularDisplayName\": \"Power BI Embedded\" }\r\n        ,\"microsoft.powerplatform/accounts\": { \"SingularDisplayName\": \"Microsoft.PowerPlatform account\" }\r\n        ,\"microsoft.professionalservice/resources\": { \"SingularDisplayName\": \"Professional Service\" }\r\n        ,\"microsoft.programmableconnectivity/gateways\": { \"SingularDisplayName\": \"APC Gateway\" }\r\n        ,\"microsoft.programmableconnectivity/operatorapiconnections\": { \"SingularDisplayName\": \"APC Operator API Connection\" }\r\n        ,\"microsoft.programmableconnectivity/operatorapiplans\": { \"SingularDisplayName\": \"APC Operator API Plan\" }\r\n        ,\"microsoft.proposal/proposals\": { \"SingularDisplayName\": \"Microsoft.Proposal proposal\" }\r\n        ,\"microsoft.providerhub/providerregistrations\": { \"SingularDisplayName\": \"Resource Provider as a Service\" }\r\n        ,\"microsoft.providerhub/providerregistrations/customrollouts\": { \"SingularDisplayName\": \"Rollout\" }\r\n        ,\"microsoft.providerhub/providerregistrations/defaultrollouts\": { \"SingularDisplayName\": \"Rollout\" }\r\n        ,\"microsoft.providerhub/providerregistrations/resourcetyperegistrations\": { \"SingularDisplayName\": \"Resource Type\" }\r\n        ,\"microsoft.providerhub/providerregistrations/resourcetyperegistrations/resourcetyperegistrations\": { \"SingularDisplayName\": \"Resource Type\" }\r\n        ,\"microsoft.providerhubdevtest/regionalstresstests\": { \"SingularDisplayName\": \"Microsoft.ProviderHubDevTest regional stresstest\" }\r\n        ,\"microsoft.providerhubdevtest/stresstests\": { \"SingularDisplayName\": \"Microsoft.ProviderHubDevTest stresstest\" }\r\n        ,\"microsoft.purview/accounts\": { \"SingularDisplayName\": \"Microsoft Purview account\" }\r\n        ,\"microsoft.quantum/workspaces\": { \"SingularDisplayName\": \"Quantum Workspace\" }\r\n        ,\"microsoft.quota/groupquotas\": { \"SingularDisplayName\": \"Microsoft.Quota group quota\" }\r\n        ,\"microsoft.quota/groupquotas/groupquotarequests\": { \"SingularDisplayName\": \"Microsoft.Quota group quotas group quota request\" }\r\n        ,\"microsoft.quota/groupquotas/quotaallocationrequests\": { \"SingularDisplayName\": \"Microsoft.Quota group quotas quota allocation request\" }\r\n        ,\"microsoft.quota/groupquotas/quotaallocations\": { \"SingularDisplayName\": \"Microsoft.Quota group quotas quota allocation\" }\r\n        ,\"microsoft.quota/groupquotas/subscriptionrequests\": { \"SingularDisplayName\": \"Microsoft.Quota group quotas subscription request\" }\r\n        ,\"microsoft.quota/groupquotas/subscriptions\": { \"SingularDisplayName\": \"Microsoft.Quota group quotas subscription\" }\r\n        ,\"microsoft.quota/quotarequests\": { \"SingularDisplayName\": \"Microsoft.Quota quota request\" }\r\n        ,\"microsoft.quota/quotas\": { \"SingularDisplayName\": \"Microsoft.Quota quota\" }\r\n        ,\"microsoft.quota/usages\": { \"SingularDisplayName\": \"Microsoft.Quota usage\" }\r\n        ,\"microsoft.recommendationsservice/accounts\": { \"SingularDisplayName\": \"Intelligent Recommendations Account\" }\r\n        ,\"microsoft.recommendationsservice/accounts/modeling\": { \"SingularDisplayName\": \"Modeling\" }\r\n        ,\"microsoft.recommendationsservice/accounts/serviceendpoints\": { \"SingularDisplayName\": \"Service Endpoint\" }\r\n        ,\"microsoft.recoveryservices/replicationeligibilityresults\": { \"SingularDisplayName\": \"Microsoft.RecoveryServices replication eligibility result\" }\r\n        ,\"microsoft.recoveryservices/vaults\": { \"SingularDisplayName\": \"Recovery Services vault\" }\r\n        ,\"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\": { \"SingularDisplayName\": \"Backup Item\" }\r\n        ,\"microsoft.recoveryservicesbvtd/vaults\": { \"SingularDisplayName\": \"Recovery Services BVTD\" }\r\n        ,\"microsoft.recoveryservicesbvtd2/vaults\": { \"SingularDisplayName\": \"Recovery Services BVTD2\" }\r\n        ,\"microsoft.recoveryservicesintd/vaults\": { \"SingularDisplayName\": \"Recovery Services INTD\" }\r\n        ,\"microsoft.recoveryservicesintd2/vaults\": { \"SingularDisplayName\": \"Recovery Services INTD2\" }\r\n        ,\"microsoft.redhatopenshift/openshiftclusters\": { \"SingularDisplayName\": \"Azure Red Hat OpenShift cluster\" }\r\n        ,\"microsoft.relationships/dependencyof\": { \"SingularDisplayName\": \"Dependency Relationship\" }\r\n        ,\"microsoft.relationships/servicegroupmember\": { \"SingularDisplayName\": \"Service group member relationship\" }\r\n        ,\"microsoft.relay/namespaces\": { \"SingularDisplayName\": \"Relay\" }\r\n        ,\"microsoft.relay/namespaces/hybridconnections\": { \"SingularDisplayName\": \"Hybrid connection\" }\r\n        ,\"microsoft.relay/namespaces/wcfrelays\": { \"SingularDisplayName\": \"WCF relay\" }\r\n        ,\"microsoft.resilience/resiliencestates\": { \"SingularDisplayName\": \"Microsoft.Resilience resilience state\" }\r\n        ,\"microsoft.resourceconnector/appliances\": { \"SingularDisplayName\": \"Resource bridge\" }\r\n        ,\"microsoft.resourcegraph/queries\": { \"SingularDisplayName\": \"Resource Graph query\" }\r\n        ,\"microsoft.resourcehealth/availabilitystatuses\": { \"SingularDisplayName\": \"Microsoft.ResourceHealth availability statuse\" }\r\n        ,\"microsoft.resourcehealth/childavailabilitystatuses\": { \"SingularDisplayName\": \"Microsoft.ResourceHealth child availability statuse\" }\r\n        ,\"microsoft.resourcehealth/emergingissues\": { \"SingularDisplayName\": \"Microsoft.ResourceHealth emerging issue\" }\r\n        ,\"microsoft.resourcehealth/events\": { \"SingularDisplayName\": \"Microsoft.ResourceHealth event\" }\r\n        ,\"microsoft.resourcehealth/events/impactedresources\": { \"SingularDisplayName\": \"Microsoft.ResourceHealth events impacted resource\" }\r\n        ,\"microsoft.resourcehealth/metadata\": { \"SingularDisplayName\": \"Microsoft.ResourceHealth metadata\" }\r\n        ,\"microsoft.resources/builtintemplatespecs\": { \"SingularDisplayName\": \"Built-in template spec\" }\r\n        ,\"microsoft.resources/changes\": { \"SingularDisplayName\": \"Microsoft.Resources change\" }\r\n        ,\"microsoft.resources/databoundaries\": { \"SingularDisplayName\": \"Microsoft.Resources data boundary\" }\r\n        ,\"microsoft.resources/deletedresources\": { \"SingularDisplayName\": \"Recycle Bin\" }\r\n        ,\"microsoft.resources/deployments\": { \"SingularDisplayName\": \"Microsoft.Resources deployment\" }\r\n        ,\"microsoft.resources/deployments/operations\": { \"SingularDisplayName\": \"Microsoft.Resources deployments operation\" }\r\n        ,\"microsoft.resources/deploymentscripts\": { \"SingularDisplayName\": \"Deployment Script\" }\r\n        ,\"microsoft.resources/deploymentstacks\": { \"SingularDisplayName\": \"Deployment stack\" }\r\n        ,\"microsoft.resources/mobobrokers\": { \"SingularDisplayName\": \"Microsoft.Resources mobo broker\" }\r\n        ,\"microsoft.resources/resourcechange\": { \"SingularDisplayName\": \"Change Analysis\" }\r\n        ,\"microsoft.resources/resourcechanges\": { \"SingularDisplayName\": \"Resource change\" }\r\n        ,\"microsoft.resources/resourcegraphvisualizer\": { \"SingularDisplayName\": \"Resource Graph Visualizer\" }\r\n        ,\"microsoft.resources/resourcegroups\": { \"SingularDisplayName\": \"Microsoft.Resources resource group\" }\r\n        ,\"microsoft.resources/resources\": { \"SingularDisplayName\": \"Resource\" }\r\n        ,\"microsoft.resources/snapshots\": { \"SingularDisplayName\": \"Microsoft.Resources snapshot\" }\r\n        ,\"microsoft.resources/subscriptions\": { \"SingularDisplayName\": \"Subscription\" }\r\n        ,\"microsoft.resources/subscriptions/resourcegroups\": { \"SingularDisplayName\": \"Resource group\" }\r\n        ,\"microsoft.resources/tags\": { \"SingularDisplayName\": \"Microsoft.Resources tag\" }\r\n        ,\"microsoft.resources/templatespecs\": { \"SingularDisplayName\": \"Template spec\" }\r\n        ,\"microsoft.saas/applications\": { \"SingularDisplayName\": \"Software as a Service (classic)\" }\r\n        ,\"microsoft.saas/resources\": { \"SingularDisplayName\": \"SaaS\" }\r\n        ,\"microsoft.saas/saasresources\": { \"SingularDisplayName\": \"SaaS (classic)\" }\r\n        ,\"microsoft.saashub/cloudservices\": { \"SingularDisplayName\": \"Microsoft.SaaSHub cloud service\" }\r\n        ,\"microsoft.saashub/cloudservices/hidden\": { \"SingularDisplayName\": \"Microsoft SaaS\" }\r\n        ,\"microsoft.salescopilot/conversationintelligencerecordingaccounts\": { \"SingularDisplayName\": \"Microsoft.SalesCopilot conversation intelligence recording account\" }\r\n        ,\"microsoft.scheduler/jobcollections\": { \"SingularDisplayName\": \"Scheduler job collection\" }\r\n        ,\"microsoft.scheduler/jobcollections/jobs\": { \"SingularDisplayName\": \"Scheduler job\" }\r\n        ,\"microsoft.scom/managedinstances\": { \"SingularDisplayName\": \"SCOM managed instance\" }\r\n        ,\"microsoft.scvmm/availabilitysets\": { \"SingularDisplayName\": \"Microsoft.ScVmm availability set\" }\r\n        ,\"microsoft.scvmm/clouds\": { \"SingularDisplayName\": \"Microsoft.ScVmm cloud\" }\r\n        ,\"microsoft.scvmm/virtualmachineinstances\": { \"SingularDisplayName\": \"Microsoft.ScVmm virtual machine instance\" }\r\n        ,\"microsoft.scvmm/virtualmachineinstances/guestagents\": { \"SingularDisplayName\": \"Microsoft.ScVmm virtual machine instances guest agent\" }\r\n        ,\"microsoft.scvmm/virtualmachineinstances/hybrididentitymetadata\": { \"SingularDisplayName\": \"Microsoft.ScVmm virtual machine instances hybrid identity metadata\" }\r\n        ,\"microsoft.scvmm/virtualmachines\": { \"SingularDisplayName\": \"SCVMM virtual machine - Azure Arc\" }\r\n        ,\"microsoft.scvmm/virtualmachinetemplates\": { \"SingularDisplayName\": \"Microsoft.ScVmm virtual machine template\" }\r\n        ,\"microsoft.scvmm/virtualnetworks\": { \"SingularDisplayName\": \"Microsoft.ScVmm virtual network\" }\r\n        ,\"microsoft.scvmm/vmmservers\": { \"SingularDisplayName\": \"SCVMM management server\" }\r\n        ,\"microsoft.search/searchservices\": { \"SingularDisplayName\": \"Search service\" }\r\n        ,\"microsoft.secretmanagementsampleprovider/forecasts\": { \"SingularDisplayName\": \"Microsoft.SecretManagementSampleProvider forecast\" }\r\n        ,\"microsoft.secretsynccontroller/azurekeyvaultsecretproviderclasses\": { \"SingularDisplayName\": \"Microsoft.SecretSyncController Azure key vault secret provider class\" }\r\n        ,\"microsoft.secretsynccontroller/secretsyncs\": { \"SingularDisplayName\": \"Microsoft.SecretSyncController secret sync\" }\r\n        ,\"microsoft.security/adaptivenetworkhardenings\": { \"SingularDisplayName\": \"Microsoft.Security adaptive network hardening\" }\r\n        ,\"microsoft.security/advancedthreatprotectionsettings\": { \"SingularDisplayName\": \"Microsoft.Security advanced threat protection setting\" }\r\n        ,\"microsoft.security/alertssuppressionrules\": { \"SingularDisplayName\": \"Microsoft.Security alerts suppression rule\" }\r\n        ,\"microsoft.security/apicollections\": { \"SingularDisplayName\": \"Microsoft.Security API collection\" }\r\n        ,\"microsoft.security/applications\": { \"SingularDisplayName\": \"Microsoft.Security application\" }\r\n        ,\"microsoft.security/assessmentmetadata\": { \"SingularDisplayName\": \"Microsoft.Security assessment metadata\" }\r\n        ,\"microsoft.security/assessments\": { \"SingularDisplayName\": \"Microsoft.Security assessment\" }\r\n        ,\"microsoft.security/assessments/governanceassignments\": { \"SingularDisplayName\": \"Microsoft.Security assessments governance assignment\" }\r\n        ,\"microsoft.security/assessments/subassessments\": { \"SingularDisplayName\": \"Microsoft.Security assessments sub assessment\" }\r\n        ,\"microsoft.security/assignments\": { \"SingularDisplayName\": \"Microsoft.Security assignment\" }\r\n        ,\"microsoft.security/automations\": { \"SingularDisplayName\": \"Microsoft.Security automation\" }\r\n        ,\"microsoft.security/autoprovisioningsettings\": { \"SingularDisplayName\": \"Microsoft.Security auto provisioning setting\" }\r\n        ,\"microsoft.security/complianceresults\": { \"SingularDisplayName\": \"Microsoft.Security compliance result\" }\r\n        ,\"microsoft.security/compliances\": { \"SingularDisplayName\": \"Microsoft.Security compliance\" }\r\n        ,\"microsoft.security/connectors\": { \"SingularDisplayName\": \"Microsoft.Security connector\" }\r\n        ,\"microsoft.security/customassessmentautomations\": { \"SingularDisplayName\": \"Microsoft.Security custom assessment automation\" }\r\n        ,\"microsoft.security/defenderforstoragesettings\": { \"SingularDisplayName\": \"Microsoft.Security defender for storage setting\" }\r\n        ,\"microsoft.security/defenderforstoragesettings/malwarescans\": { \"SingularDisplayName\": \"Microsoft.Security defender for storage settings malware scan\" }\r\n        ,\"microsoft.security/devicesecuritygroups\": { \"SingularDisplayName\": \"Microsoft.Security device security group\" }\r\n        ,\"microsoft.security/governancerules\": { \"SingularDisplayName\": \"Microsoft.Security governance rule\" }\r\n        ,\"microsoft.security/governancerules/operationresults\": { \"SingularDisplayName\": \"Microsoft.Security governance rules operation result\" }\r\n        ,\"microsoft.security/healthreports\": { \"SingularDisplayName\": \"Microsoft.Security health report\" }\r\n        ,\"microsoft.security/informationprotectionpolicies\": { \"SingularDisplayName\": \"Microsoft.Security information protection policy\" }\r\n        ,\"microsoft.security/iotsecuritysolutions\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solution\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/analyticsmodels\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions analytics model\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/analyticsmodels/aggregatedalerts\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions analytics models aggregated alert\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/analyticsmodels/aggregatedrecommendations\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions analytics models aggregated recommendation\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/iotalerts\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions IoT alert\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/iotalerttypes\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions IoT alert type\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/iotrecommendations\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions IoT recommendation\" }\r\n        ,\"microsoft.security/iotsecuritysolutions/iotrecommendationtypes\": { \"SingularDisplayName\": \"Microsoft.Security IoT security solutions IoT recommendation type\" }\r\n        ,\"microsoft.security/locations/alerts\": { \"SingularDisplayName\": \"Security Alert\" }\r\n        ,\"microsoft.security/mdeonboardings\": { \"SingularDisplayName\": \"Microsoft.Security mde onboarding\" }\r\n        ,\"microsoft.security/pricings\": { \"SingularDisplayName\": \"Defender for Cloud\" }\r\n        ,\"microsoft.security/pricings/securityoperators\": { \"SingularDisplayName\": \"Microsoft.Security pricings security operator\" }\r\n        ,\"microsoft.security/regulatorycompliancestandards\": { \"SingularDisplayName\": \"Microsoft.Security regulatory compliance standard\" }\r\n        ,\"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols\": { \"SingularDisplayName\": \"Microsoft.Security regulatory compliance standards regulatory compliance control\" }\r\n        ,\"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\": { \"SingularDisplayName\": \"Microsoft.Security regulatory compliance standards regulatory compliance controls regulatory compliance assessment\" }\r\n        ,\"microsoft.security/securescores\": { \"SingularDisplayName\": \"Microsoft.Security secure score\" }\r\n        ,\"microsoft.security/securityconnectors\": { \"SingularDisplayName\": \"Microsoft.Security security connector\" }\r\n        ,\"microsoft.security/securityconnectors/devops\": { \"SingularDisplayName\": \"Microsoft.Security security connectors devop\" }\r\n        ,\"microsoft.security/securitycontacts\": { \"SingularDisplayName\": \"Microsoft.Security security contact\" }\r\n        ,\"microsoft.security/sensitivitysettings\": { \"SingularDisplayName\": \"Microsoft.Security sensitivity setting\" }\r\n        ,\"microsoft.security/servervulnerabilityassessments\": { \"SingularDisplayName\": \"Microsoft.Security server vulnerability assessment\" }\r\n        ,\"microsoft.security/servervulnerabilityassessmentssettings\": { \"SingularDisplayName\": \"Microsoft.Security server vulnerability assessments setting\" }\r\n        ,\"microsoft.security/settings\": { \"SingularDisplayName\": \"Microsoft.Security setting\" }\r\n        ,\"microsoft.security/standards\": { \"SingularDisplayName\": \"Microsoft.Security standard\" }\r\n        ,\"microsoft.security/workspacesettings\": { \"SingularDisplayName\": \"Microsoft.Security workspace setting\" }\r\n        ,\"microsoft.securitycopilot/capacities\": { \"SingularDisplayName\": \"Microsoft Security Copilot compute capacity\" }\r\n        ,\"microsoft.securitydetonation/chambers\": { \"SingularDisplayName\": \"Security Detonation Chamber\" }\r\n        ,\"microsoft.securityinsightsarg/sentinel\": { \"SingularDisplayName\": \"Microsoft Sentinel\" }\r\n        ,\"microsoft.serialconsole/consoleservices\": { \"SingularDisplayName\": \"Microsoft.SerialConsole console service\" }\r\n        ,\"microsoft.serialconsole/serialports\": { \"SingularDisplayName\": \"Microsoft.SerialConsole serial port\" }\r\n        ,\"microsoft.servicebus/namespaces\": { \"SingularDisplayName\": \"Service Bus namespace\" }\r\n        ,\"microsoft.servicebus/namespaces/disasterrecoveryconfigs\": { \"SingularDisplayName\": \"Service Bus Geo-DR Alias\" }\r\n        ,\"microsoft.servicebus/namespaces/queues\": { \"SingularDisplayName\": \"Service Bus queue\" }\r\n        ,\"microsoft.servicebus/namespaces/topics\": { \"SingularDisplayName\": \"Service Bus topic\" }\r\n        ,\"microsoft.servicebus/namespaces/topics/subscriptions\": { \"SingularDisplayName\": \"Service Bus Subscription\" }\r\n        ,\"microsoft.servicefabric/clusters\": { \"SingularDisplayName\": \"Service Fabric cluster\" }\r\n        ,\"microsoft.servicefabric/managedclusters\": { \"SingularDisplayName\": \"Service Fabric managed cluster\" }\r\n        ,\"microsoft.servicefabricmesh/applications\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh application\" }\r\n        ,\"microsoft.servicefabricmesh/applications/services\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh applications service\" }\r\n        ,\"microsoft.servicefabricmesh/applications/services/replicas\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh applications services replica\" }\r\n        ,\"microsoft.servicefabricmesh/gateways\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh gateway\" }\r\n        ,\"microsoft.servicefabricmesh/networks\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh network\" }\r\n        ,\"microsoft.servicefabricmesh/secrets\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh secret\" }\r\n        ,\"microsoft.servicefabricmesh/secrets/values\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh secrets value\" }\r\n        ,\"microsoft.servicefabricmesh/volumes\": { \"SingularDisplayName\": \"Microsoft.ServiceFabricMesh volume\" }\r\n        ,\"microsoft.servicelinker/dryruns\": { \"SingularDisplayName\": \"Microsoft.ServiceLinker dryrun\" }\r\n        ,\"microsoft.servicelinker/linkers\": { \"SingularDisplayName\": \"Microsoft.ServiceLinker linker\" }\r\n        ,\"microsoft.servicenetworking/trafficcontrollers\": { \"SingularDisplayName\": \"Application Gateway for Containers\" }\r\n        ,\"microsoft.serviceshub/connectors\": { \"SingularDisplayName\": \"Services Hub Connector\" }\r\n        ,\"microsoft.signalrservice/signalr\": { \"SingularDisplayName\": \"SignalR\" }\r\n        ,\"microsoft.signalrservice/signalr/replicas\": { \"SingularDisplayName\": \"SignalR Replica\" }\r\n        ,\"microsoft.signalrservice/webpubsub\": { \"SingularDisplayName\": \"Web PubSub Service\" }\r\n        ,\"microsoft.signalrservice/webpubsub/replicas\": { \"SingularDisplayName\": \"Web PubSub Service Replica\" }\r\n        ,\"microsoft.skytap/billingnodes\": { \"SingularDisplayName\": \"Microsoft.Skytap billing node\" }\r\n        ,\"microsoft.skytap/interfaces\": { \"SingularDisplayName\": \"Microsoft.Skytap interface\" }\r\n        ,\"microsoft.skytap/nodes\": { \"SingularDisplayName\": \"Microsoft.Skytap node\" }\r\n        ,\"microsoft.softwareplan/hybridusebenefits\": { \"SingularDisplayName\": \"Microsoft.SoftwarePlan hybrid use benefit\" }\r\n        ,\"microsoft.solutions/applicationdefinitions\": { \"SingularDisplayName\": \"Service catalog managed application definition\" }\r\n        ,\"microsoft.solutions/applications\": { \"SingularDisplayName\": \"Managed application\" }\r\n        ,\"microsoft.solutions/jitrequests\": { \"SingularDisplayName\": \"Microsoft.Solutions JIT request\" }\r\n        ,\"microsoft.sovereign/landingzoneaccounts\": { \"SingularDisplayName\": \"Landing zone accounts\" }\r\n        ,\"microsoft.sovereign/landingzoneaccounts/landingzoneconfigurations\": { \"SingularDisplayName\": \"Landing Zone Configuration\" }\r\n        ,\"microsoft.sovereign/landingzoneaccounts/landingzoneregistrations\": { \"SingularDisplayName\": \"Landing Zone Registration\" }\r\n        ,\"microsoft.sovereign/landingzoneconfigurations\": { \"SingularDisplayName\": \"Landing Zone Configuration\" }\r\n        ,\"microsoft.sovereign/landingzoneregistrations\": { \"SingularDisplayName\": \"Landing Zone Registration\" }\r\n        ,\"microsoft.sovereign/transparencylogs\": { \"SingularDisplayName\": \"Transparency log\" }\r\n        ,\"microsoft.sql/azuresql\": { \"SingularDisplayName\": \"Azure SQL resource\" }\r\n        ,\"microsoft.sql/instancepools\": { \"SingularDisplayName\": \"Instance pool\" }\r\n        ,\"microsoft.sql/managedinstances\": { \"SingularDisplayName\": \"SQL managed instance\" }\r\n        ,\"microsoft.sql/managedinstances/databases\": { \"SingularDisplayName\": \"Managed database\" }\r\n        ,\"microsoft.sql/servers\": { \"SingularDisplayName\": \"SQL server\" }\r\n        ,\"microsoft.sql/servers/databases\": { \"SingularDisplayName\": \"SQL database\" }\r\n        ,\"microsoft.sql/servers/elasticpools\": { \"SingularDisplayName\": \"SQL elastic pool\" }\r\n        ,\"microsoft.sql/servers/jobagents\": { \"SingularDisplayName\": \"Elastic Job agent\" }\r\n        ,\"microsoft.sql/virtualclusters\": { \"SingularDisplayName\": \"Virtual cluster\" }\r\n        ,\"microsoft.sqlvirtualmachine/sqlvirtualmachinegroups\": { \"SingularDisplayName\": \"Microsoft.SqlVirtualMachine sql virtual machine group\" }\r\n        ,\"microsoft.sqlvirtualmachine/sqlvirtualmachinegroups/availabilitygrouplisteners\": { \"SingularDisplayName\": \"Microsoft.SqlVirtualMachine sql virtual machine groups availability group listener\" }\r\n        ,\"microsoft.sqlvirtualmachine/sqlvirtualmachines\": { \"SingularDisplayName\": \"SQL virtual machine\" }\r\n        ,\"microsoft.standbypool/standbycontainergrouppools\": { \"SingularDisplayName\": \"Microsoft.StandbyPool standby container group pool\" }\r\n        ,\"microsoft.standbypool/standbycontainergrouppools/runtimeviews\": { \"SingularDisplayName\": \"Microsoft.StandbyPool standby container group pools runtime view\" }\r\n        ,\"microsoft.standbypool/standbyvirtualmachinepools\": { \"SingularDisplayName\": \"Microsoft.StandbyPool standby virtual machine pool\" }\r\n        ,\"microsoft.standbypool/standbyvirtualmachinepools/runtimeviews\": { \"SingularDisplayName\": \"Microsoft.StandbyPool standby virtual machine pools runtime view\" }\r\n        ,\"microsoft.standbypool/standbyvirtualmachinepools/standbyvirtualmachines\": { \"SingularDisplayName\": \"Microsoft.StandbyPool standby virtual machine pools standby virtual machine\" }\r\n        ,\"microsoft.storage/storageaccounts\": { \"SingularDisplayName\": \"Storage account\" }\r\n        ,\"microsoft.storageactions/storagetasks\": { \"SingularDisplayName\": \"Storage task - Azure Storage Actions\" }\r\n        ,\"microsoft.storagecache/amlfilesystems\": { \"SingularDisplayName\": \"Azure Managed Lustre\" }\r\n        ,\"microsoft.storagecache/caches\": { \"SingularDisplayName\": \"HPC cache\" }\r\n        ,\"microsoft.storagediscovery/storagediscoveryworkspaces\": { \"SingularDisplayName\": \"Storage Discovery workspace\" }\r\n        ,\"microsoft.storageinsights/storagecollectionrules\": { \"SingularDisplayName\": \"Microsoft.StorageInsights storage collection rule\" }\r\n        ,\"microsoft.storagemover/storagemovers\": { \"SingularDisplayName\": \"Storage mover\" }\r\n        ,\"microsoft.storagepool/diskpools\": { \"SingularDisplayName\": \"Microsoft.StoragePool disk pool\" }\r\n        ,\"microsoft.storagepool/diskpools/iscsitargets\": { \"SingularDisplayName\": \"Microsoft.StoragePool disk pools iscsi target\" }\r\n        ,\"microsoft.storagesync/storagesyncservices\": { \"SingularDisplayName\": \"Storage Sync Service\" }\r\n        ,\"microsoft.storagetasks/storagetasks\": { \"SingularDisplayName\": \"Microsoft.StorageTasks storage task\" }\r\n        ,\"microsoft.storsimple/managers\": { \"SingularDisplayName\": \"StorSimple device manager\" }\r\n        ,\"microsoft.storsimple/managers/accesscontrolrecords\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers access control record\" }\r\n        ,\"microsoft.storsimple/managers/bandwidthsettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers bandwidth setting\" }\r\n        ,\"microsoft.storsimple/managers/certificates\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers certificate\" }\r\n        ,\"microsoft.storsimple/managers/devices\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers device\" }\r\n        ,\"microsoft.storsimple/managers/devices/alertsettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices alert setting\" }\r\n        ,\"microsoft.storsimple/managers/devices/backuppolicies\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices backup policy\" }\r\n        ,\"microsoft.storsimple/managers/devices/backuppolicies/schedules\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices backup policies schedule\" }\r\n        ,\"microsoft.storsimple/managers/devices/backupschedulegroups\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices backup schedule group\" }\r\n        ,\"microsoft.storsimple/managers/devices/chapsettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices chap setting\" }\r\n        ,\"microsoft.storsimple/managers/devices/fileservers\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices fileserver\" }\r\n        ,\"microsoft.storsimple/managers/devices/fileservers/shares\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices fileservers share\" }\r\n        ,\"microsoft.storsimple/managers/devices/iscsiservers\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices iscsiserver\" }\r\n        ,\"microsoft.storsimple/managers/devices/iscsiservers/disks\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices iscsiservers disk\" }\r\n        ,\"microsoft.storsimple/managers/devices/jobs\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices job\" }\r\n        ,\"microsoft.storsimple/managers/devices/networksettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices network setting\" }\r\n        ,\"microsoft.storsimple/managers/devices/securitysettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices security setting\" }\r\n        ,\"microsoft.storsimple/managers/devices/timesettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices time setting\" }\r\n        ,\"microsoft.storsimple/managers/devices/updatesummary\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices update summary\" }\r\n        ,\"microsoft.storsimple/managers/devices/volumecontainers\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices volume container\" }\r\n        ,\"microsoft.storsimple/managers/devices/volumecontainers/volumes\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers devices volume containers volume\" }\r\n        ,\"microsoft.storsimple/managers/encryptionsettings\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers encryption setting\" }\r\n        ,\"microsoft.storsimple/managers/extendedinformation\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers extended information\" }\r\n        ,\"microsoft.storsimple/managers/storageaccountcredentials\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers storage account credential\" }\r\n        ,\"microsoft.storsimple/managers/storagedomains\": { \"SingularDisplayName\": \"Microsoft.StorSimple managers storage domain\" }\r\n        ,\"microsoft.streamanalytics/clusters\": { \"SingularDisplayName\": \"Stream Analytics cluster\" }\r\n        ,\"microsoft.streamanalytics/streamingjobs\": { \"SingularDisplayName\": \"Stream Analytics job\" }\r\n        ,\"microsoft.subscription/aliases\": { \"SingularDisplayName\": \"Microsoft.Subscription aliase\" }\r\n        ,\"microsoft.subscription/changetenantrequest\": { \"SingularDisplayName\": \"Microsoft.Subscription change tenant request\" }\r\n        ,\"microsoft.subscription/policies\": { \"SingularDisplayName\": \"Microsoft.Subscription policy\" }\r\n        ,\"microsoft.subscription/subscriptiondefinitions\": { \"SingularDisplayName\": \"Microsoft.Subscription subscription definition\" }\r\n        ,\"microsoft.subscription/subscriptionoperations\": { \"SingularDisplayName\": \"Microsoft.Subscription subscription operation\" }\r\n        ,\"microsoft.support/fileworkspaces\": { \"SingularDisplayName\": \"Microsoft.Support file workspace\" }\r\n        ,\"microsoft.support/fileworkspaces/files\": { \"SingularDisplayName\": \"Microsoft.Support file workspaces file\" }\r\n        ,\"microsoft.support/services\": { \"SingularDisplayName\": \"Microsoft.Support service\" }\r\n        ,\"microsoft.support/services/problemclassifications\": { \"SingularDisplayName\": \"Microsoft.Support services problem classification\" }\r\n        ,\"microsoft.support/supporttickets\": { \"SingularDisplayName\": \"Support Request\" }\r\n        ,\"microsoft.sustainabilityservices/calculations\": { \"SingularDisplayName\": \"Project Sustainability Calculator\" }\r\n        ,\"microsoft.symphony/instances\": { \"SingularDisplayName\": \"Microsoft.Symphony instance\" }\r\n        ,\"microsoft.symphony/solutions\": { \"SingularDisplayName\": \"Microsoft.Symphony solution\" }\r\n        ,\"microsoft.symphony/targets\": { \"SingularDisplayName\": \"Microsoft.Symphony target\" }\r\n        ,\"microsoft.synapse/privatelinkhubs\": { \"SingularDisplayName\": \"Synapse private link hub\" }\r\n        ,\"microsoft.synapse/workspaces\": { \"SingularDisplayName\": \"Synapse workspace\" }\r\n        ,\"microsoft.synapse/workspaces/bigdatapools\": { \"SingularDisplayName\": \"Apache Spark pool\" }\r\n        ,\"microsoft.synapse/workspaces/kustopools\": { \"SingularDisplayName\": \"Data Explorer pool\" }\r\n        ,\"microsoft.synapse/workspaces/kustopools/databases\": { \"SingularDisplayName\": \"Data Explorer Database\" }\r\n        ,\"microsoft.synapse/workspaces/scopepools\": { \"SingularDisplayName\": \"SCOPE pool\" }\r\n        ,\"microsoft.synapse/workspaces/sqlpools\": { \"SingularDisplayName\": \"Dedicated SQL pool\" }\r\n        ,\"microsoft.syntex/accounts\": { \"SingularDisplayName\": \"Microsoft.Syntex account\" }\r\n        ,\"microsoft.syntex/documentprocessors\": { \"SingularDisplayName\": \"Microsoft.Syntex document processor\" }\r\n        ,\"microsoft.test/healthdataaiservices\": { \"SingularDisplayName\": \"Azure Health Data and AI Services\" }\r\n        ,\"microsoft.timeseriesinsights/environments\": { \"SingularDisplayName\": \"Microsoft.TimeSeriesInsights environment\" }\r\n        ,\"microsoft.timeseriesinsights/environments/accesspolicies\": { \"SingularDisplayName\": \"Microsoft.TimeSeriesInsights environments access policy\" }\r\n        ,\"microsoft.timeseriesinsights/environments/eventsources\": { \"SingularDisplayName\": \"Microsoft.TimeSeriesInsights environments event source\" }\r\n        ,\"microsoft.timeseriesinsights/environments/referencedatasets\": { \"SingularDisplayName\": \"Microsoft.TimeSeriesInsights environments reference data set\" }\r\n        ,\"microsoft.toolchainorchestrator/activations\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator activation\" }\r\n        ,\"microsoft.toolchainorchestrator/campaigns\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator campaign\" }\r\n        ,\"microsoft.toolchainorchestrator/campaigns/versions\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator campaigns version\" }\r\n        ,\"microsoft.toolchainorchestrator/catalogs\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator catalog\" }\r\n        ,\"microsoft.toolchainorchestrator/catalogs/versions\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator catalogs version\" }\r\n        ,\"microsoft.toolchainorchestrator/diagnostics\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator diagnostic\" }\r\n        ,\"microsoft.toolchainorchestrator/instances\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator instance\" }\r\n        ,\"microsoft.toolchainorchestrator/instances/versions\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator instances version\" }\r\n        ,\"microsoft.toolchainorchestrator/solutions\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator solution\" }\r\n        ,\"microsoft.toolchainorchestrator/solutions/versions\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator solutions version\" }\r\n        ,\"microsoft.toolchainorchestrator/targets\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator target\" }\r\n        ,\"microsoft.toolchainorchestrator/targets/versions\": { \"SingularDisplayName\": \"Microsoft.ToolchainOrchestrator targets version\" }\r\n        ,\"microsoft.usagebilling/accounts\": { \"SingularDisplayName\": \"Microsoft.UsageBilling account\" }\r\n        ,\"microsoft.usagebilling/accounts/dataexports\": { \"SingularDisplayName\": \"Microsoft.UsageBilling accounts data export\" }\r\n        ,\"microsoft.usagebilling/accounts/inputs\": { \"SingularDisplayName\": \"Microsoft.UsageBilling accounts input\" }\r\n        ,\"microsoft.usagebilling/accounts/metricexports\": { \"SingularDisplayName\": \"Microsoft.UsageBilling accounts metric export\" }\r\n        ,\"microsoft.usagebilling/accounts/pav2outputs\": { \"SingularDisplayName\": \"Microsoft.UsageBilling accounts pav2output\" }\r\n        ,\"microsoft.usagebilling/accounts/pipelines\": { \"SingularDisplayName\": \"Microsoft.UsageBilling accounts pipeline\" }\r\n        ,\"microsoft.usagebilling/accounts/pipelines/outputselectors\": { \"SingularDisplayName\": \"Microsoft.UsageBilling accounts pipelines output selector\" }\r\n        ,\"microsoft.verifiedid/authorities\": { \"SingularDisplayName\": \"Microsoft.VerifiedId authority\" }\r\n        ,\"microsoft.videoindexer/accounts\": { \"SingularDisplayName\": \"Azure AI Video Indexer\" }\r\n        ,\"microsoft.virtualmachineimages/imagetemplates\": { \"SingularDisplayName\": \"Image template\" }\r\n        ,\"microsoft.visualstudio/account\": { \"SingularDisplayName\": \"Azure DevOps organization\" }\r\n        ,\"microsoft.vmware/resourcepools\": { \"SingularDisplayName\": \"Microsoft.VMware resource pool\" }\r\n        ,\"microsoft.vmware/vcenters\": { \"SingularDisplayName\": \"Microsoft.VMware vcenter\" }\r\n        ,\"microsoft.vmware/vcenters/inventoryitems\": { \"SingularDisplayName\": \"Microsoft.VMware vcenters inventory item\" }\r\n        ,\"microsoft.vmware/virtualmachines\": { \"SingularDisplayName\": \"Microsoft.VMware virtual machine\" }\r\n        ,\"microsoft.vmware/virtualmachinetemplates\": { \"SingularDisplayName\": \"Microsoft.VMware virtual machine template\" }\r\n        ,\"microsoft.vmware/virtualnetworks\": { \"SingularDisplayName\": \"Microsoft.VMware virtual network\" }\r\n        ,\"microsoft.vmwarecloudsimple/dedicatedcloudnodes\": { \"SingularDisplayName\": \"Microsoft.VMwareCloudSimple dedicated cloud node\" }\r\n        ,\"microsoft.vmwarecloudsimple/dedicatedcloudservices\": { \"SingularDisplayName\": \"Microsoft.VMwareCloudSimple dedicated cloud service\" }\r\n        ,\"microsoft.vmwarecloudsimple/virtualmachines\": { \"SingularDisplayName\": \"Microsoft.VMwareCloudSimple virtual machine\" }\r\n        ,\"microsoft.vnfmanager/devices\": { \"SingularDisplayName\": \"Microsoft.VnfManager device\" }\r\n        ,\"microsoft.vnfmanager/vendors\": { \"SingularDisplayName\": \"Microsoft.VnfManager vendor\" }\r\n        ,\"microsoft.vnfmanager/vendors/skus\": { \"SingularDisplayName\": \"Microsoft.VnfManager vendors SKU\" }\r\n        ,\"microsoft.vnfmanager/vnfs\": { \"SingularDisplayName\": \"Microsoft.VnfManager vnf\" }\r\n        ,\"microsoft.voiceservices/communicationsgateways\": { \"SingularDisplayName\": \"Communications Gateway\" }\r\n        ,\"microsoft.voiceservices/communicationsgateways/testlines\": { \"SingularDisplayName\": \"Communications Gateway Test Line\" }\r\n        ,\"microsoft.vsonline/accounts\": { \"SingularDisplayName\": \"Microsoft.VSOnline account\" }\r\n        ,\"microsoft.vsonline/plans\": { \"SingularDisplayName\": \"Visual Studio Online Plan\" }\r\n        ,\"microsoft.web/certificates\": { \"SingularDisplayName\": \"Microsoft.Web certificate\" }\r\n        ,\"microsoft.web/connectiongateways\": { \"SingularDisplayName\": \"App Service on-premises data gateway\" }\r\n        ,\"microsoft.web/connections\": { \"SingularDisplayName\": \"App Service API connection\" }\r\n        ,\"microsoft.web/containerapps\": { \"SingularDisplayName\": \"Microsoft.Web container app\" }\r\n        ,\"microsoft.web/containerapps/revisions\": { \"SingularDisplayName\": \"Microsoft.Web container apps revision\" }\r\n        ,\"microsoft.web/customapis\": { \"SingularDisplayName\": \"Logic apps custom connector\" }\r\n        ,\"microsoft.web/deletedsites\": { \"SingularDisplayName\": \"Microsoft.Web deleted site\" }\r\n        ,\"microsoft.web/hostingenvironments\": { \"SingularDisplayName\": \"App Service Environment\" }\r\n        ,\"microsoft.web/ishostingenvironmentnameavailable\": { \"SingularDisplayName\": \"Microsoft.Web ishostingenvironmentnameavailable\" }\r\n        ,\"microsoft.web/kubeenvironments\": { \"SingularDisplayName\": \"App Service Kubernetes Environment\" }\r\n        ,\"microsoft.web/publishingusers\": { \"SingularDisplayName\": \"Microsoft.Web publishing user\" }\r\n        ,\"microsoft.web/serverfarms\": { \"SingularDisplayName\": \"App Service plan\" }\r\n        ,\"microsoft.web/sites\": { \"SingularDisplayName\": \"App Service web app\" }\r\n        ,\"microsoft.web/sites/slots\": { \"SingularDisplayName\": \"App Service deployment slot\" }\r\n        ,\"microsoft.web/sourcecontrols\": { \"SingularDisplayName\": \"Microsoft.Web sourcecontrol\" }\r\n        ,\"microsoft.web/staticsites\": { \"SingularDisplayName\": \"Static Web App\" }\r\n        ,\"microsoft.weightsandbiases/instances\": { \"SingularDisplayName\": \"Azure Native WeightsAndBiases Cloud Service\" }\r\n        ,\"microsoft.whiteboxcadlprovider/whiteboxresources\": { \"SingularDisplayName\": \"Microsoft.WhiteBoxCadlProvider white box resource\" }\r\n        ,\"microsoft.windows365/cloudpcdelegatedmsis\": { \"SingularDisplayName\": \"Microsoft.Windows365 cloud pc delegated msi\" }\r\n        ,\"microsoft.windowsesu/multipleactivationkeys\": { \"SingularDisplayName\": \"Microsoft.WindowsESU multiple activation key\" }\r\n        ,\"microsoft.windowsiot/deviceservices\": { \"SingularDisplayName\": \"Microsoft.WindowsIoT device service\" }\r\n        ,\"microsoft.windowspushnotificationservices/registrations\": { \"SingularDisplayName\": \"Windows Push Notification Service\" }\r\n        ,\"microsoft.workloadmonitor/monitors\": { \"SingularDisplayName\": \"Microsoft.WorkloadMonitor monitor\" }\r\n        ,\"microsoft.workloadmonitor/monitors/history\": { \"SingularDisplayName\": \"Microsoft.WorkloadMonitor monitors history\" }\r\n        ,\"microsoft.workloads/configurationvalidationresults\": { \"SingularDisplayName\": \"Microsoft.Workloads configuration validation result\" }\r\n        ,\"microsoft.workloads/connectors\": { \"SingularDisplayName\": \"Microsoft.Workloads connector\" }\r\n        ,\"microsoft.workloads/connectors/acssbackups\": { \"SingularDisplayName\": \"Microsoft.Workloads connectors acss backup\" }\r\n        ,\"microsoft.workloads/connectors/amsinsights\": { \"SingularDisplayName\": \"Microsoft.Workloads connectors ams insight\" }\r\n        ,\"microsoft.workloads/connectors/sapvirtualinstancemonitors\": { \"SingularDisplayName\": \"Microsoft.Workloads connectors sap virtual instance monitor\" }\r\n        ,\"microsoft.workloads/epicvirtualinstances\": { \"SingularDisplayName\": \"Virtual Instance for Epic solution\" }\r\n        ,\"microsoft.workloads/insights\": { \"SingularDisplayName\": \"Microsoft.Workloads insight\" }\r\n        ,\"microsoft.workloads/instancegroupmonitors\": { \"SingularDisplayName\": \"Microsoft.Workloads instance group monitor\" }\r\n        ,\"microsoft.workloads/instancehealthdefinitions\": { \"SingularDisplayName\": \"Microsoft.Workloads instance health definition\" }\r\n        ,\"microsoft.workloads/instancehealthdefinitions/signaldefinitions\": { \"SingularDisplayName\": \"Microsoft.Workloads instance health definitions signal definition\" }\r\n        ,\"microsoft.workloads/instancemonitors\": { \"SingularDisplayName\": \"Microsoft.Workloads instance monitor\" }\r\n        ,\"microsoft.workloads/monitors\": { \"SingularDisplayName\": \"Azure Monitor for SAP solutions\" }\r\n        ,\"microsoft.workloads/oraclevirtualinstances\": { \"SingularDisplayName\": \"Microsoft.Workloads oracle virtual instance\" }\r\n        ,\"microsoft.workloads/oraclevirtualinstances/databaseinstances\": { \"SingularDisplayName\": \"Microsoft.Workloads oracle virtual instances database instance\" }\r\n        ,\"microsoft.workloads/phpworkloads\": { \"SingularDisplayName\": \"Microsoft.Workloads php workload\" }\r\n        ,\"microsoft.workloads/phpworkloads/wordpressinstances\": { \"SingularDisplayName\": \"Microsoft.Workloads php workloads wordpress instance\" }\r\n        ,\"microsoft.workloads/sapdiscoverysites\": { \"SingularDisplayName\": \"Microsoft.Workloads sap discovery site\" }\r\n        ,\"microsoft.workloads/sapdiscoverysites/sapinstances\": { \"SingularDisplayName\": \"Microsoft.Workloads sap discovery sites sap instance\" }\r\n        ,\"microsoft.workloads/sapdiscoverysites/sapinstances/serverinstances\": { \"SingularDisplayName\": \"Microsoft.Workloads sap discovery sites sap instances server instance\" }\r\n        ,\"microsoft.workloads/sapvirtualinstances\": { \"SingularDisplayName\": \"Virtual Instance for SAP solutions\" }\r\n        ,\"microsoft.workloads/sapvirtualinstances/applicationinstances\": { \"SingularDisplayName\": \"App server instance for SAP solutions\" }\r\n        ,\"microsoft.workloads/sapvirtualinstances/centralinstances\": { \"SingularDisplayName\": \"Central service instance for SAP solutions\" }\r\n        ,\"microsoft.workloads/sapvirtualinstances/databaseinstances\": { \"SingularDisplayName\": \"Database for SAP solutions\" }\r\n        ,\"microsoft.workloads/virtualinstances\": { \"SingularDisplayName\": \"Microsoft.Workloads virtual instance\" }\r\n        ,\"microsoft.workloads/virtualinstances/components\": { \"SingularDisplayName\": \"Microsoft.Workloads virtual instances component\" }\r\n        ,\"microsoft.zerotrustsegmentation/segmentationmanagers\": { \"SingularDisplayName\": \"Segmentation Manager\" }\r\n        ,\"mongodb.atlas/organizations\": { \"SingularDisplayName\": \"MongoDB Atlas Organization\" }\r\n        ,\"neon.postgres/organizations\": { \"SingularDisplayName\": \"Neon Serverless Postgres Organization\" }\r\n        ,\"newrelic.observability/monitors\": { \"SingularDisplayName\": \"New Relic\" }\r\n        ,\"nginx.nginxplus/nginxdeployments\": { \"SingularDisplayName\": \"NGINXaaS\" }\r\n        ,\"oracle.database/autonomousdatabases\": { \"SingularDisplayName\": \"Autonomous Database\" }\r\n        ,\"oracle.database/cloudexadatainfrastructures\": { \"SingularDisplayName\": \"Oracle Exadata Infrastructure\" }\r\n        ,\"oracle.database/cloudvmclusters\": { \"SingularDisplayName\": \"Oracle Exadata VM Cluster\" }\r\n        ,\"oracle.database/exadbvmclusters\": { \"SingularDisplayName\": \"Oracle Exascale VM Cluster\" }\r\n        ,\"oracle.database/exascaledbstoragevaults\": { \"SingularDisplayName\": \"Oracle Exascale DB Storage Vault\" }\r\n        ,\"oracle.database/oraclesubscriptions\": { \"SingularDisplayName\": \"OracleSubscription\" }\r\n        ,\"paloaltonetworks.cloudngfw/firewalls\": { \"SingularDisplayName\": \"Cloud NGFW by Palo Alto Networks\" }\r\n        ,\"paloaltonetworks.cloudngfw/globalrulestacks\": { \"SingularDisplayName\": \"Global Rulestack\" }\r\n        ,\"paloaltonetworks.cloudngfw/localrulestacks\": { \"SingularDisplayName\": \"Local Rulestack for Cloud NGFW by Palo Alto Networks\" }\r\n        ,\"pinecone.vectordb/organizations\": { \"SingularDisplayName\": \"Azure Native Pinecone Cloud Service\" }\r\n        ,\"purestorage.block/reservations\": { \"SingularDisplayName\": \"Azure Native Pure Storage Cloud Service\" }\r\n        ,\"purestorage.block/storagepools\": { \"SingularDisplayName\": \"Storage pool\" }\r\n        ,\"purestorage.block/storagepools/avsstoragecontainers\": { \"SingularDisplayName\": \"PureStorage.Block storage pools avs storage container\" }\r\n        ,\"qumulo.qaas/storages\": { \"SingularDisplayName\": \"Qumulo.QaaS storage\" }\r\n        ,\"qumulo.storage/filesystems\": { \"SingularDisplayName\": \"Azure Native Qumulo Scalable File Service\" }\r\n        ,\"solarwinds.observability/organizations\": { \"SingularDisplayName\": \"SolarWinds Observability\" }\r\n        ,\"splitio.experimentation/experimentationworkspaces\": { \"SingularDisplayName\": \"Split Experimentation Workspace\" }\r\n        ,\"wandisco.fusion/migrators\": { \"SingularDisplayName\": \"LiveData Migrator\" }\r\n        ,\"wandisco.fusion/migrators/datatransferagents\": { \"SingularDisplayName\": \"Data Transfer Agent\" }\r\n        ,\"wandisco.fusion/migrators/exclusiontemplates\": { \"SingularDisplayName\": \"Exclusion\" }\r\n        ,\"wandisco.fusion/migrators/livedatamigrations\": { \"SingularDisplayName\": \"Migration\" }\r\n        ,\"wandisco.fusion/migrators/metadatamigrations\": { \"SingularDisplayName\": \"Metadata Migration\" }\r\n        ,\"wandisco.fusion/migrators/metadatatargets\": { \"SingularDisplayName\": \"Metadata Target\" }\r\n        ,\"wandisco.fusion/migrators/pathmappings\": { \"SingularDisplayName\": \"Path Mapping\" }\r\n        ,\"wandisco.fusion/migrators/targets\": { \"SingularDisplayName\": \"Target\" }\r\n        ,\"wandisco.fusion/migrators/verifications\": { \"SingularDisplayName\": \"Verification\" }\r\n    })[tolower(id)]\r\n}\r\n",
                    "$fxv#5": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n// resource_type\r\n.create-or-alter function \r\nwith (docstring = 'Return details about the specified ID.', folder = 'OpenData')\r\nresource_type(id: string) {\r\n    coalesce(_resource_type_1(id), _resource_type_2(id), _resource_type_3(id), _resource_type_4(id))\r\n}\r\n",
                    "$fxv#6": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n//======================================================================================================================\r\n// Common utility functions\r\n//\r\n// TIP: Use Ctrl+K,Ctrl+0 to collapse all regions in VS Code\r\n//======================================================================================================================\r\n\r\n\r\n//===| Date functions |=================================================================================================\r\n\r\n// monthstring\r\n.create-or-alter function \r\nwith (docstring = @'Returns the name of the month for the specified date (e.g. Jan or January)', folder =@'Common') \r\nmonthstring(['date']: datetime, length: int = 9)\r\n{\r\n    substring(dynamic(['January','February','March','April','May','June','July','August','September','October','November','December'])[getmonth(['date']) - 1], 0, length)\r\n}\r\n\r\n// datestring\r\n.create-or-alter function \r\nwith (docstring = @'Converts 2 dates into a simple, user-friendly date range (e.g. Jan 1-Jan 3)', folder =@'Common') \r\ndatestring(start: datetime, end: datetime = datetime('0001-01-01'))\r\n{\r\n    let month = (d: datetime) { monthstring(d, 3) };\r\n    let endDate = iff(end == datetime('0001-01-01'), start, end);\r\n    let sameDate = startofday(start) == startofday(endDate);\r\n    let sameMonth = startofmonth(start) == startofmonth(endDate);\r\n    let sameYear = startofyear(start) == startofyear(endDate);\r\n    let fullMonth = startofday(start) == startofmonth(start) and startofday(endDate) == startofday(endofmonth(endDate));\r\n    let fullYear = startofday(start) == startofyear(start) and startofday(endDate) == startofday(endofyear(endDate));\r\n    let currentYear = sameYear and startofyear(start) == startofyear(now());\r\n    case(\r\n        // Full year             | yyyy (same year) / yyyy-yyyy (diff years)\r\n        fullYear,\r\n            strcat(getyear(start), iff(sameYear, '', strcat('-', getyear(endDate)))),\r\n        // 1 full mo, same year  | Mmm yyyy\r\n        fullMonth and sameMonth and sameYear,\r\n            strcat(month(start), ' ', getyear(start)),\r\n        // 2+ full mo, same year | Mmm-Mmm (current year) / Mmm-Mmm yyyy (other year)\r\n        fullMonth and sameYear,\r\n            strcat(month(start), '-', month(endDate), iff(currentYear, '', strcat(' ', getyear(endDate)))),\r\n        // Full mo, diff year    | Mmm yyyy-Mmm yyyy\r\n        fullMonth and not(sameYear),\r\n            strcat(month(start), ' ', getyear(start), '-', month(endDate), ' ', getyear(endDate)),\r\n        // Same date             | Mmm d (current year) / Mmm d, yyyy (other year)\r\n        sameDate,\r\n            strcat(month(start), ' ', dayofmonth(start), iff(currentYear, '', strcat(', ', getyear(endDate)))),\r\n        // 1 partial M, same Y   | Mmm d-d (current year) / Mmm d-d, yyyy (other year)\r\n        not(fullMonth) and sameMonth and sameYear,\r\n            strcat(month(start), ' ', dayofmonth(start), '-', dayofmonth(endDate), iff(currentYear, '', strcat(' ', getyear(endDate)))),\r\n        // 2+ partial M, same Y  | Mmm d-Mmm d (current year) / Mmm d-Mmm d, yyyy (other year)\r\n        not(fullMonth) and not(sameMonth) and sameYear,\r\n            strcat(month(start), ' ', dayofmonth(start), '-', month(endDate), ' ', dayofmonth(endDate), iff(currentYear, '', strcat(', ', getyear(endDate)))),\r\n        // All other cases       | Mmm d, yyyy-Mmm d, yyyy\r\n        strcat(month(start), ' ', dayofmonth(start), ', ', getyear(start), '-', month(endDate), ' ', dayofmonth(endDate), ', ', getyear(endDate))\r\n    )\r\n}\r\n\r\n// daterange\r\n.create-or-alter function \r\nwith (docstring = @'DEPRECATED: Please use datestring(); function will be removed on or after the Jan 2026 release', folder =@'Common') \r\ndaterange(start: datetime, end: datetime = datetime('0001-01-01'))\r\n{\r\n    datestring(start, end)\r\n}\r\n\r\n// monthsago\r\n.create-or-alter function \r\nwith (docstring = 'DEPRECATED: Please use startofmonth(now(), -<# of months>); function will be removed on or after the Jan 2026 release', folder = 'Common')\r\nmonthsago(months: int)\r\n{\r\n    datetime_add('month', -months, startofmonth(now()))\r\n}\r\n\r\n\r\n//===| Number functions |===============================================================================================\r\n// NOTE: Must be defined before string converters\r\n\r\n// delta\r\n.create-or-alter function \r\nwith (docstring = @'Compares 2 values and returns the percentage change from oldval to newval', folder =@'Common') \r\ndelta(oldval: double, newval: double)\r\n{\r\n    (newval - todouble(oldval))/oldval\r\n}\r\n\r\n// percentOfTotal\r\n// NOTE: Must be before percent() function\r\n.create-or-alter function \r\nwith (docstring = @'Calculates the percentage of each record based on a required Count column', folder =@'Common') \r\npercentOfTotal(t: (Count: long), tot: long)\r\n{\r\n    let total = todouble(tot);\r\n    t \r\n    | extend Percent = round(Count / total * 100, 3) \r\n    | order by Count desc\r\n}\r\n\r\n// percent\r\n.create-or-alter function \r\nwith (docstring = @'Calculates the percentage of each record based on a required Count column', folder =@'Common') \r\npercent(t: (Count: long))\r\n{\r\n    let total = todouble(toscalar(t | summarize sum(Count)));\r\n    percentOfTotal(t, total)\r\n}\r\n\r\n// plusminus\r\n.create-or-alter function \r\nwith (docstring = 'Shows a +/- sign based on the direction of the number', folder = 'Common')\r\nplusminus(val: string)\r\n{\r\n    let neg = substring(val, 0, 1) == '-';\r\n    iff(neg, val, strcat('+', val))\r\n}\r\n\r\n// updown\r\n.create-or-alter function \r\nwith (docstring = 'Shows an up/down arrow based on the direction of the number', folder = 'Common')\r\nupdown(val: string)\r\n{\r\n    // TODO: Handle 0\r\n    let neg = substring(val, 0, 1) == '-';\r\n    iff(neg, strcat('↓', substring(val, 1)), strcat('↑', val))\r\n}\r\n\r\n\r\n//===| String functions |===============================================================================================\r\n\r\n// percentstring\r\n// NOTE: Must be defined before deltastring\r\n.create-or-alter function \r\nwith (docstring = 'Calculate a percentage and render as a string', folder = 'Common')\r\npercentstring(num: double, total: double = 1.0, places: int = 9)\r\n{\r\n    let value = 1.0 * num / total * 100;\r\n    strcat(case(\r\n        places != 9, round(value, places),\r\n        value < 10,  round(value, 2),\r\n        round(value, 1)\r\n    ), '%')\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// arraystring\r\n.create-or-alter function \r\nwith (docstring = 'Convert an array to a comma-delimited string', folder = 'Common')\r\narraystring(arr: dynamic)\r\n{\r\n    replace_string(replace_regex(replace_regex(replace_regex(replace_regex(replace_regex(\r\n        tostring(arr)\r\n        , @'^\\[\"', '')\r\n        , @'\"\\]$', '')\r\n        , @'^, ', '')\r\n        , @', $', '')\r\n        , @'^\\[]$', '')\r\n        , '\",\"', ', ')\r\n}\r\n\r\n// deltastring\r\n.create-or-alter function \r\nwith (docstring = 'Calculate a delta percentage and render as a string', folder = 'Common')\r\ndeltastring(oldval: double, newval: double, places: int = 1, useArrows: bool = false)\r\n{\r\n    let d = delta(oldval, newval);\r\n    strcat(case(useArrows and d > 0, '↑', useArrows and d < 0, '↓', d < 0, '-', ''), percentstring(abs(d), 1, places))\r\n}\r\n\r\n// diffstring\r\n.create-or-alter function \r\nwith (docstring = 'Calculate the difference and render as a string', folder = 'Common')\r\ndiffstring(oldval: double, newval: double, places: int = 1)\r\n{\r\n    plusminus(round(newval - oldval, places))\r\n}\r\n\r\n// numberstring\r\n.create-or-alter function \r\nwith (docstring = 'Convert a number to a string', folder = 'Common')\r\nnumberstring(num: double, abbrev: bool = true)\r\n{\r\n    replace_regex(case(\r\n        num >= 10000000000000, strcat(round(1.0 * num / 1000000000000, 1), 'T'),\r\n        num >= 1000000000000,  strcat(round(1.0 * num / 1000000000000, 2), 'T'),\r\n        num >= 10000000000,    strcat(round(1.0 * num / 1000000000, 1), 'B'),\r\n        num >= 1000000000,     strcat(round(1.0 * num / 1000000000, 2), 'B'),\r\n        num >= 10000000,       strcat(round(1.0 * num / 1000000, 1), 'M'),\r\n        num >= 1000000,        strcat(round(1.0 * num / 1000000, 2), 'M'),\r\n        num >= 10000,          strcat(round(1.0 * num / 1000, 1), 'K'),\r\n        // Kusto doesn't support back-refs yet -- num > 1000, replace_regex(tostring(num), @'(\\d)(?=(\\d{3})+\\.)', @'\\1,'), // See https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/re2-library\r\n        num > 1000, replace_regex(tostring(num), @'([0-9]{3})$', @',\\1'), //num / 1000, ',', substring(tostring(num), 0) - (num / 1000 * 1000)),\r\n        tostring(num)\r\n    ), @'\\.0$', '')\r\n}\r\n\r\n\r\n//===| Other |==========================================================================================================\r\n\r\n// ifempty\r\n.create-or-alter function \r\nwith (docstring = 'Replaces an empty value with the specified default value', folder = 'Common')\r\nifempty(val: dynamic, defaultVal: dynamic)\r\n{\r\n    iff(isempty(val), defaultVal, val)\r\n}\r\n",
                    "$fxv#7": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n//======================================================================================================================\r\n// Ingestion database\r\n// Used for data ingestion, normalization, and cleansing.\r\n//\r\n// Data ingestion workflow:\r\n// - All data is ingested into tables named \"*_raw\". These tables have a union schema to support multiple sources and versions.\r\n// - All data is transformed to the latest FOCUS schema using an update policy into a table named after the version (for example, \"1.0\" = \"_v1_0\").\r\n// - Data ingestion from previous version of hubs will remain in the versioned tables.\r\n// - Data is read from versioned functions in the Hub database. See HubSetup.kql for details.\r\n//\r\n// To add a new FOCUS versions:\r\n// 1. Add new columns to the *_raw tables per dataset\r\n// 2. Add new *_final_vX_Y tables per dataset\r\n// 3. Add new *_transform_vX_Y functions per dataset\r\n// 4. Change the update policy for the *_raw tables to use the new transform functions\r\n// 5. Update HubSetup.kql to read from the new *_final_vX_Y tables\r\n//======================================================================================================================\r\n\r\n// For allowed commands, see https://learn.microsoft.com/azure/data-explorer/database-script\r\n\r\n//===| Settings |=======================================================================================================\r\n\r\n.create-merge table HubSettingsLog (\r\n    version:   string,\r\n    scopes:    dynamic,\r\n    retention: dynamic\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// HubSettings function\r\n.create-or-alter function\r\nwith (docstring='Gets the latest version of hub settings.', folder='Settings')\r\nHubSettings()\r\n{\r\n    HubSettingsLog\r\n    | extend timestamp = ingestion_time()\r\n    | summarize arg_max(timestamp, *)\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// HubScopes function\r\n.create-or-alter function\r\nwith (docstring='Gets the currently configured scopes.', folder='Settings')\r\nHubScopes()\r\n{\r\n    HubSettings\r\n    | project scopes\r\n    | mv-expand scopes\r\n}\r\n\r\n\r\n//===| Open data |======================================================================================================\r\n\r\n// PricingUnits\r\n.create-merge table PricingUnits (    \r\n    x_PricingUnitDescription: string,\r\n    x_PricingBlockSize:       decimal,\r\n    PricingUnit:              string\r\n)\r\n\r\n// Regions\r\n.create-merge table Regions(\r\n    ResourceLocation: string,\r\n    RegionId:         string,\r\n    RegionName:       string\r\n)\r\n\r\n// ResourceTypes\r\n.create-merge table ResourceTypes(\r\n    x_ResourceType:           string,\r\n    SingularDisplayName:      string,\r\n    PluralDisplayName:        string,\r\n    LowerSingularDisplayName: string,\r\n    LowerPluralDisplayName:   string,\r\n    IsPreview:                bool,\r\n    Description:              string,\r\n    IconUri:                  string\r\n)\r\n\r\n// Services\r\n.create-merge table Services(\r\n    x_ConsumedService:        string,\r\n    x_ResourceType:           string,\r\n    ServiceName:              string,\r\n    ServiceCategory:          string,\r\n    ServiceSubcategory:       string,\r\n    PublisherName:            string,\r\n    x_PublisherCategory:      string,\r\n    x_Environment:            string,\r\n    x_ServiceModel:           string\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// parse_resourceid\r\n.create-or-alter function \r\nwith (docstring = 'Parses an Azure resource ID to extract resource attributes like the name, type, resource group, and subaccount ID.', folder = 'Common')\r\nparse_resourceid(resourceId: string) {\r\n    let ResourceId = tolower(resourceId);\r\n    // let ResourceId = tolower('/providers/Microsoft.BillingBenefits/savingsPlanOrders/2d2e284b-0638-427e-b8c6-1b874d4f17c8/sp/xxx');\r\n    let SubAccountId = tostring(extract('/subscriptions/[^/]+', 1, ResourceId));\r\n    let x_ResourceGroupName = tostring(extract('/resourcegroups/[^/]+', 1, ResourceId));\r\n    let providerPath = iff(ResourceId !contains '/providers/', '', split(iff(ResourceId startswith '/subscriptions/', strcat('/providers/microsoft.resources/', ResourceId), ResourceId), '/providers/')[-1]);\r\n    let x_ResourceProvider = iff(isempty(providerPath), '', split(providerPath, '/')[0]);\r\n    let tmp_ResourceProviderPath = iff(isempty(providerPath), '', substring(providerPath, strlen(x_ResourceProvider) + 1));\r\n    let segments = split(tmp_ResourceProviderPath, '/');\r\n    let ResourceName = trim(@'/+', replace_string(strcat_array(array_iff(\r\n        dynamic([false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true]),\r\n        segments, dynamic([])), '/'), '//', '/'));\r\n    let x_ResourceTypePath = trim(@'/+', replace_string(strcat_array(array_iff(\r\n        dynamic([true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false]),\r\n        segments, dynamic([])), '/'), '//', '/'));\r\n    let xRT = iff(isempty(x_ResourceProvider) or isempty(x_ResourceTypePath), '', strcat(x_ResourceProvider, '/', x_ResourceTypePath));\r\n    // TODO: Remove ResourceType in 0.9\r\n    bag_pack('ResourceId', ResourceId, 'ResourceName', ResourceName, 'ResourceType', xRT, 'SubAccountId', SubAccountId, 'x_ResourceGroupName', x_ResourceGroupName, 'x_ResourceProvider', x_ResourceProvider, 'x_ResourceType', xRT)\r\n}\r\n\r\n\r\n//===| Prices |=========================================================================================================\r\n// NOTE: Must be before cost details.\r\n//\r\n// Supported versions:\r\n// - MS EA 2023-05-01  -- See https://learn.microsoft.com/azure/cost-management-billing/dataset-schema/price-sheet-ea\r\n// - MS MCA 2023-05-01 -- See https://learn.microsoft.com/azure/cost-management-billing/dataset-schema/price-sheet-mca\r\n//======================================================================================================================\r\n\r\n// Prices_raw table\r\n.create-merge table Prices_raw (\r\n    BasePrice:          decimal,  // Azure EA + MCA\r\n    BillingAccountId:   string,   // Azure MCA\r\n    BillingAccountName: string,   // Azure MCA\r\n    BillingCurrency:    string,   // Azure MCA\r\n    BillingProfileId:   string,   // Azure MCA\r\n    BillingProfileName: string,   // Azure MCA\r\n    Currency:           string,   // Azure MCA\r\n    CurrencyCode:       string,   // Azure EA \r\n    EffectiveEndDate:   datetime, // Azure MCA\r\n    EffectiveStartDate: datetime, // Azure EA + MCA\r\n    EnrollmentNumber:   string,   // Azure EA \r\n    IncludedQuantity:   decimal,  // Azure EA \r\n    MarketPrice:        decimal,  // Azure EA + MCA\r\n    MeterCategory:      string,   // Azure EA + MCA\r\n    MeterId:            string,   // Azure MCA\r\n    MeterID:            string,   // Azure EA \r\n    MeterName:          string,   // Azure EA + MCA\r\n    MeterRegion:        string,   // Azure EA + MCA\r\n    MeterSubCategory:   string,   // Azure EA + MCA\r\n    MeterType:          string,   // Azure EA + MCA\r\n    OfferID:            string,   // Azure EA \r\n    PartNumber:         string,   // Azure EA\r\n    PriceType:          string,   // Azure EA + MCA\r\n    Product:            string,   // Azure EA + MCA\r\n    ProductId:          string,   // Azure MCA\r\n    ProductID:          string,   // Azure EA \r\n    ServiceFamily:      string,   // Azure EA + MCA\r\n    SkuId:              string,   // Azure MCA\r\n    SkuID:              string,   // Azure EA\r\n    Term:               string,   // Azure EA + MCA\r\n    TierMinimumUnits:   decimal,  // Azure MCA\r\n    UnitOfMeasure:      string,   // Azure EA + MCA\r\n    UnitPrice:          decimal,  // Azure EA + MCA\r\n    x_SourceName:       string,   // Hubs add-on\r\n    x_SourceProvider:   string,   // Hubs add-on\r\n    x_SourceType:       string,   // Hubs add-on\r\n    x_SourceVersion:    string    // Hubs add-on\r\n)\r\n\r\n// Prices_raw ingestion mapping\r\n.create-or-alter table Prices_raw ingestion parquet mapping \"Prices_raw_mapping\"\r\n```\r\n[\r\n    { \"Column\": \"BasePrice\",          \"Properties\": { \"Field\": \"BasePrice\" } },\r\n    { \"Column\": \"BillingAccountId\",   \"Properties\": { \"Field\": \"BillingAccountId\" } },\r\n    { \"Column\": \"BillingAccountName\", \"Properties\": { \"Field\": \"BillingAccountName\" } },\r\n    { \"Column\": \"BillingCurrency\",    \"Properties\": { \"Field\": \"BillingCurrency\" } },\r\n    { \"Column\": \"BillingProfileId\",   \"Properties\": { \"Field\": \"BillingProfileId\" } },\r\n    { \"Column\": \"BillingProfileName\", \"Properties\": { \"Field\": \"BillingProfileName\" } },\r\n    { \"Column\": \"Currency\",           \"Properties\": { \"Field\": \"Currency\" } },\r\n    { \"Column\": \"CurrencyCode\",       \"Properties\": { \"Field\": \"CurrencyCode\" } },\r\n    { \"Column\": \"EffectiveEndDate\",   \"Properties\": { \"Field\": \"EffectiveEndDate\" } },\r\n    { \"Column\": \"EffectiveStartDate\", \"Properties\": { \"Field\": \"EffectiveStartDate\" } },\r\n    { \"Column\": \"EnrollmentNumber\",   \"Properties\": { \"Field\": \"EnrollmentNumber\" } },\r\n    { \"Column\": \"IncludedQuantity\",   \"Properties\": { \"Field\": \"IncludedQuantity\" } },\r\n    { \"Column\": \"MarketPrice\",        \"Properties\": { \"Field\": \"MarketPrice\" } },\r\n    { \"Column\": \"MeterCategory\",      \"Properties\": { \"Field\": \"MeterCategory\" } },\r\n    { \"Column\": \"MeterId\",            \"Properties\": { \"Field\": \"MeterId\" } },\r\n    { \"Column\": \"MeterID\",            \"Properties\": { \"Field\": \"MeterID\" } },\r\n    { \"Column\": \"MeterName\",          \"Properties\": { \"Field\": \"MeterName\" } },\r\n    { \"Column\": \"MeterRegion\",        \"Properties\": { \"Field\": \"MeterRegion\" } },\r\n    { \"Column\": \"MeterSubCategory\",   \"Properties\": { \"Field\": \"MeterSubCategory\" } },\r\n    { \"Column\": \"MeterType\",          \"Properties\": { \"Field\": \"MeterType\" } },\r\n    { \"Column\": \"OfferID\",            \"Properties\": { \"Field\": \"OfferID\" } },\r\n    { \"Column\": \"PartNumber\",         \"Properties\": { \"Field\": \"PartNumber\" } },\r\n    { \"Column\": \"PriceType\",          \"Properties\": { \"Field\": \"PriceType\" } },\r\n    { \"Column\": \"Product\",            \"Properties\": { \"Field\": \"Product\" } },\r\n    { \"Column\": \"ProductId\",          \"Properties\": { \"Field\": \"ProductId\" } },\r\n    { \"Column\": \"ProductID\",          \"Properties\": { \"Field\": \"ProductID\" } },\r\n    { \"Column\": \"ServiceFamily\",      \"Properties\": { \"Field\": \"ServiceFamily\" } },\r\n    { \"Column\": \"SkuId\",              \"Properties\": { \"Field\": \"SkuId\" } },\r\n    { \"Column\": \"SkuID\",              \"Properties\": { \"Field\": \"SkuID\" } },\r\n    { \"Column\": \"Term\",               \"Properties\": { \"Field\": \"Term\" } },\r\n    { \"Column\": \"TierMinimumUnits\",   \"Properties\": { \"Field\": \"TierMinimumUnits\" } },\r\n    { \"Column\": \"UnitOfMeasure\",      \"Properties\": { \"Field\": \"UnitOfMeasure\" } },\r\n    { \"Column\": \"UnitPrice\",          \"Properties\": { \"Field\": \"UnitPrice\" } },\r\n    { \"Column\": \"x_SourceName\",       \"Properties\": { \"Field\": \"x_SourceName\" } },\r\n    { \"Column\": \"x_SourceProvider\",   \"Properties\": { \"Field\": \"x_SourceProvider\" } },\r\n    { \"Column\": \"x_SourceType\",       \"Properties\": { \"Field\": \"x_SourceType\" } },\r\n    { \"Column\": \"x_SourceVersion\",    \"Properties\": { \"Field\": \"x_SourceVersion\" } }\r\n]\r\n```\r\n\r\n// Prices_raw retention policy\r\n.alter-merge table Prices_raw policy retention softdelete = $$rawRetentionInDays$$d recoverability = disabled\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Prices_transform_v1_0 function\r\n.create-or-alter function\r\nwith (docstring='Transforms Prices_raw into FOCUS 1.0.', folder='Prices')\r\nPrices_transform_v1_0()\r\n{\r\n    // NOTE: All open issues and questions are tracked @ https://github.com/microsoft/finops-toolkit/issues/1111\r\n    let isoMonths = (duration: string) {\r\n        let number = toint(replace_regex(duration, @'[PMY]', ''));\r\n        toint(case(\r\n            duration == '', toint(''),\r\n            duration endswith \"Y\", number * 12,\r\n            duration endswith \"M\", number,\r\n            -1\r\n        ))\r\n    };\r\n    let prices = materialize(\r\n        Prices_raw\r\n        | extend x_SkuId = coalesce(SkuId, SkuID)\r\n        | extend x_SkuMeterId = coalesce(MeterId, MeterID)\r\n        | extend x_SkuProductId = coalesce(ProductId, ProductID)\r\n        | extend x_SkuTerm = isoMonths(Term)\r\n        | project-rename\r\n            x_BaseUnitPrice = BasePrice,\r\n            x_EffectivePeriodEnd = EffectiveEndDate,\r\n            x_EffectivePeriodStart = EffectiveStartDate,\r\n            x_PricingUnitDescription = UnitOfMeasure,\r\n            x_SkuIncludedQuantity = IncludedQuantity,\r\n            x_SkuMeterCategory = MeterCategory,\r\n            x_SkuMeterName = MeterName,\r\n            x_SkuMeterSubcategory = MeterSubCategory,\r\n            x_SkuMeterType = MeterType,\r\n            x_SkuOfferId = OfferID,\r\n            x_SkuPartNumber = PartNumber,\r\n            x_SkuPriceType = PriceType,\r\n            x_SkuRegion = MeterRegion,\r\n            x_SkuServiceFamily = ServiceFamily,\r\n            x_SkuTier = TierMinimumUnits\r\n        | extend ContractedUnitPrice = iff(x_SkuPriceType != 'SavingsPlan', UnitPrice, todecimal(''))  // UnitPrice for savings plan is not the on-demand unit price\r\n        | extend ListUnitPrice = iff(x_SkuPriceType != 'SavingsPlan', MarketPrice, todecimal(''))  // MarketPrice for savings plan is not the list price\r\n        | extend ChargeCategory = case(\r\n            x_SkuPriceType == 'Consumption', 'Usage',\r\n            x_SkuPriceType == 'ReservedInstance', 'Purchase',\r\n            x_SkuPriceType == 'SavingsPlan', 'Usage',  // Savings plan prices are for committed usage, not the purchase\r\n            ''\r\n        )\r\n        | extend SkuPriceIdv2 = strcat(case(x_SkuPriceType == 'Consumption', 'OD', x_SkuPriceType == 'ReservedInstance', 'RI', x_SkuPriceType == 'SavingsPlan', 'SP', 'XX'), substring(ChargeCategory, 0, 1), x_SkuTerm, '_', x_SkuProductId, '_', x_SkuId, '_', x_SkuMeterType, '_', x_SkuTier, x_SkuOfferId)\r\n        | extend x_BillingAccountId = iff(BillingAccountId startswith '/', split(BillingAccountId, '/')[-1], coalesce(BillingAccountId, EnrollmentNumber))\r\n        | extend x_BillingProfileId = iff(BillingProfileId startswith '/', split(BillingProfileId, '/')[-1], coalesce(BillingProfileId, EnrollmentNumber))\r\n        | extend tmp_SavingsPlanKey = strcat(x_SkuMeterId, x_SkuProductId, x_SkuId, x_SkuTier, x_SkuOfferId)\r\n        //\r\n        // Get latest ingested row based on the unique ID\r\n        | extend x_IngestionTime = ingestion_time()\r\n    );\r\n    //\r\n    // Meters for reservations and savings plans to identify commitment eligibility\r\n    let riMeters = prices | where x_SkuPriceType == 'ReservedInstance' | distinct x_SkuMeterId;\r\n    let spMeters = prices | where x_SkuPriceType == 'SavingsPlan' | distinct x_SkuMeterId;\r\n    // \r\n    // Copy list/base/contracted prices from on-demand SKUs\r\n    prices\r\n    | where x_SkuPriceType == 'SavingsPlan'\r\n    // If we use join, specify the shuffle key\r\n    // TODO: Compare join vs. lookup perf -- | join kind=leftouter hint.strategy=shuffle (prices | where x_SkuPriceType == 'Consumption' | where x_SkuMeterId in (spMeters) | distinct tmp_SavingsPlanKey, ListUnitPrice, ContractedUnitPrice, x_BaseUnitPrice) on tmp_SavingsPlanKey\r\n    | lookup kind=leftouter (prices | where x_SkuPriceType == 'Consumption' | where x_SkuMeterId in (spMeters) | distinct tmp_SavingsPlanKey, ListUnitPrice, ContractedUnitPrice, x_BaseUnitPrice) on tmp_SavingsPlanKey\r\n    | extend ListUnitPrice = coalesce(ListUnitPrice, ListUnitPrice1)\r\n    | extend ContractedUnitPrice = coalesce(ContractedUnitPrice, ContractedUnitPrice1)\r\n    | extend x_BaseUnitPrice = coalesce(x_BaseUnitPrice, x_BaseUnitPrice1)\r\n    | project-away ListUnitPrice1, ContractedUnitPrice1, x_BaseUnitPrice1, tmp_SavingsPlanKey\r\n    | union ((prices | where x_SkuPriceType != 'SavingsPlan'))\r\n    //\r\n    // Calculate commitment discount elgibility\r\n    // TODO: Would a join be faster?\r\n    | extend x_CommitmentDiscountSpendEligibility = iff(x_SkuMeterId in (riMeters) and x_SkuPriceType != 'ReservedInstance', 'Eligible', 'Not Eligible')\r\n    | extend x_CommitmentDiscountUsageEligibility = iff(x_SkuMeterId in (spMeters), 'Eligible', 'Not Eligible')\r\n    //\r\n    // Add PricingUnit and x_PricingBlockSize\r\n    // TODO: Compare join vs. lookup perf -- | join kind=leftouter (PricingUnits) on x_PricingUnitDescription | project-away x_PricingUnitDescription1\r\n    | lookup kind=leftouter (PricingUnits) on x_PricingUnitDescription\r\n    //\r\n    | extend x_EffectiveUnitPrice = iff(x_SkuPriceType == 'SavingsPlan', UnitPrice, todecimal(''))  // Savings plan prices are for the effective price, not the contracted price\r\n    | extend x_EffectiveUnitPriceDiscount = ContractedUnitPrice - x_EffectiveUnitPrice\r\n    | extend x_ContractedUnitPriceDiscount = ListUnitPrice - ContractedUnitPrice\r\n    | extend x_TotalUnitPriceDiscount = ListUnitPrice - x_EffectiveUnitPrice\r\n    | project\r\n        BillingAccountId = tolower(case(\r\n            BillingProfileId startswith '/', BillingProfileId,\r\n            BillingAccountId startswith '/', BillingAccountId,\r\n            strcat('/providers/microsoft.billing/billingaccounts/', x_BillingAccountId, iff(x_BillingProfileId == x_BillingAccountId, '', strcat('/billingprofiles/', x_BillingProfileId)))\r\n        )),\r\n        BillingAccountName = coalesce(BillingProfileName, BillingAccountName, x_BillingProfileId),\r\n        BillingCurrency = coalesce(BillingCurrency, CurrencyCode, Currency),  // Currency last as a fallback only\r\n        ChargeCategory,\r\n        CommitmentDiscountCategory = case(\r\n            x_SkuPriceType == 'ReservedInstance', 'Usage',\r\n            x_SkuPriceType == 'SavingsPlan', 'Spend',\r\n            ''\r\n        ),\r\n        CommitmentDiscountType = case(\r\n            x_SkuPriceType == 'ReservedInstance', 'Reservation',\r\n            x_SkuPriceType == 'SavingsPlan', 'Savings plan',\r\n            ''\r\n        ),\r\n        ContractedUnitPrice,\r\n        ListUnitPrice,\r\n        PricingCategory = case(\r\n            x_SkuPriceType == 'Consumption', 'Standard',\r\n            x_SkuPriceType == 'ReservedInstance', 'Standard',  // Reservation purchases are tracked as \"Standard\"\r\n            x_SkuPriceType == 'SavingsPlan', 'Committed',\r\n            ''\r\n        ),\r\n        PricingUnit,\r\n        SkuId = coalesce(ProductId, ProductID),\r\n        SkuPriceId = strcat(x_SkuProductId, '_', x_SkuId, '_', x_SkuMeterType),\r\n        SkuPriceIdv2,\r\n        x_BaseUnitPrice,\r\n        x_BillingAccountAgreement = case(\r\n            strlen(x_BillingAccountId) > 32, 'MCA',\r\n            strlen(x_BillingAccountId) < 32, 'EA',\r\n            'Unknown'\r\n        ),\r\n        x_BillingAccountId,\r\n        x_BillingProfileId,\r\n        x_CommitmentDiscountSpendEligibility,\r\n        x_CommitmentDiscountUsageEligibility,\r\n        x_ContractedUnitPriceDiscount,\r\n        x_ContractedUnitPriceDiscountPercent = 1.0 * x_ContractedUnitPriceDiscount / ListUnitPrice * 100,\r\n        x_EffectivePeriodEnd = startofmonth(x_EffectivePeriodEnd + 1h),\r\n        x_EffectivePeriodStart,\r\n        x_EffectiveUnitPrice,\r\n        x_EffectiveUnitPriceDiscount,\r\n        x_EffectiveUnitPriceDiscountPercent = 1.0 * x_EffectiveUnitPriceDiscount / ContractedUnitPrice * 100,\r\n        x_IngestionTime,\r\n        x_PricingBlockSize,\r\n        x_PricingCurrency = coalesce(Currency, CurrencyCode),  // CurrencyCode last as a fallback only\r\n        x_PricingSubcategory = case(\r\n            x_SkuPriceType == 'Consumption' and (x_SkuIncludedQuantity > 0 or x_SkuTier > 0), 'Tiered',\r\n            x_SkuPriceType == 'Consumption', 'Standard',\r\n            x_SkuPriceType == 'ReservedInstance', 'Standard', // Reservation purchases are tracked as \"Standard\"\r\n            x_SkuPriceType == 'SavingsPlan', 'Committed Spend',\r\n            ''\r\n        ),\r\n        x_PricingUnitDescription,\r\n        x_SkuDescription = Product,\r\n        x_SkuId,\r\n        x_SkuIncludedQuantity,\r\n        x_SkuMeterCategory,\r\n        x_SkuMeterId,\r\n        x_SkuMeterName,\r\n        x_SkuMeterSubcategory,\r\n        x_SkuMeterType,\r\n        x_SkuPriceType,\r\n        x_SkuProductId,\r\n        x_SkuRegion,\r\n        x_SkuServiceFamily,\r\n        x_SkuOfferId,\r\n        x_SkuPartNumber,\r\n        x_SkuTerm,\r\n        x_SkuTier,\r\n        x_SourceName = coalesce(x_SourceName, 'Cost Management'),\r\n        x_SourceProvider = coalesce(x_SourceProvider, 'Microsoft'),\r\n        x_SourceType = coalesce(x_SourceType, 'PriceSheet'),\r\n        x_SourceVersion = coalesce(x_SourceVersion, '2023-05-01'),\r\n        x_TotalUnitPriceDiscount,\r\n        x_TotalUnitPriceDiscountPercent = 1.0 * x_TotalUnitPriceDiscount / ListUnitPrice * 100\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Prices_final_v1_0 table\r\n// FOCUS 1.0 version of the price sheet that covers everything defined in Prices_raw.\r\n.create-merge table Prices_final_v1_0 (\r\n    BillingAccountId:                     string,\r\n    BillingAccountName:                   string,\r\n    BillingCurrency:                      string,\r\n    ChargeCategory:                       string,\r\n    CommitmentDiscountCategory:           string,\r\n    CommitmentDiscountType:               string,\r\n    ContractedUnitPrice:                  decimal,\r\n    ListUnitPrice:                        decimal,\r\n    PricingCategory:                      string,\r\n    PricingUnit:                          string,\r\n    SkuId:                                string,\r\n    SkuPriceId:                           string,\r\n    SkuPriceIdv2:                         string,    // Hubs add-on\r\n    x_BaseUnitPrice:                      decimal,   // Azure\r\n    x_BillingAccountAgreement:            string,    // Hubs add-on\r\n    x_BillingAccountId:                   string,    // Azure MCA\r\n    x_BillingProfileId:                   string,    // Azure MCA\r\n    x_CommitmentDiscountSpendEligibility: string,    // Hubs add-on\r\n    x_CommitmentDiscountUsageEligibility: string,    // Hubs add-on\r\n    x_ContractedUnitPriceDiscount:        decimal,   // Hubs add-on\r\n    x_ContractedUnitPriceDiscountPercent: decimal,   // Hubs add-on\r\n    x_EffectivePeriodEnd:                 datetime,  // Azure\r\n    x_EffectivePeriodStart:               datetime,  // Azure\r\n    x_EffectiveUnitPrice:                 decimal,   // Azure\r\n    x_EffectiveUnitPriceDiscount:         decimal,   // Hubs add-on\r\n    x_EffectiveUnitPriceDiscountPercent:  decimal,   // Hubs add-on\r\n    x_IngestionTime:                      datetime,  // Hubs add-on\r\n    x_PricingBlockSize:                   decimal,   // Hubs add-on\r\n    x_PricingCurrency:                    string,    // Azure\r\n    x_PricingSubcategory:                 string,    // Hubs add-on\r\n    x_PricingUnitDescription:             string,    // Azure\r\n    x_SkuDescription:                     string,    // Azure\r\n    x_SkuId:                              string,    // Azure\r\n    x_SkuIncludedQuantity:                decimal,   // Azure EA\r\n    x_SkuMeterCategory:                   string,    // Azure\r\n    x_SkuMeterId:                         string,    // Azure\r\n    x_SkuMeterName:                       string,    // Azure\r\n    x_SkuMeterSubcategory:                string,    // Azure\r\n    x_SkuMeterType:                       string,    // Azure\r\n    x_SkuPriceType:                       string,    // Azure\r\n    x_SkuProductId:                       string,    // Azure\r\n    x_SkuRegion:                          string,    // Azure\r\n    x_SkuServiceFamily:                   string,    // Azure\r\n    x_SkuOfferId:                         string,    // Azure EA\r\n    x_SkuPartNumber:                      string,    // Azure EA\r\n    x_SkuTerm:                            int,       // Azure\r\n    x_SkuTier:                            decimal,   // Azure MCA\r\n    x_SourceName:                         string,    // Hubs add-on\r\n    x_SourceProvider:                     string,    // Hubs add-on\r\n    x_SourceType:                         string,    // Hubs add-on\r\n    x_SourceVersion:                      string,    // Hubs add-on\r\n    x_TotalUnitPriceDiscount:             decimal,   // Hubs add-on\r\n    x_TotalUnitPriceDiscountPercent:      decimal    // Hubs add-on\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Update policy for Prices_raw -> Prices_final_v1_0\r\n// NOTE: Must be after transform function is defined\r\n.alter table Prices_final_v1_0 policy update\r\n```\r\n[{\r\n    \"IsEnabled\": true,\r\n    \"Source\": \"Prices_raw\",\r\n    \"Query\": \"Prices_transform_v1_0()\",\r\n    \"IsTransactional\": true,\r\n    \"PropagateIngestionProperties\": true\r\n}]\r\n```\r\n\r\n\r\n//===| Cost and usage |=================================================================================================\r\n// Supported versions:\r\n// - MS: 1.0, 1.0-preview(v1) -- See https://aka.ms/costmgmt/exports/focus\r\n// - AWS: 1.0                 -- See https://docs.aws.amazon.com/cur/latest/userguide/table-dictionary-focus-1-0-aws-columns.html\r\n// - GCP: Jan-Jun 2024        -- See https://cloud.google.com/resources/google-cloud-focus?e=48754805&hl=en\r\n//                                   Links to (Aug 2024): https://services.google.com/fh/files/misc/focus_guide_v1.pdf\r\n//                               See also:\r\n//                               - https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables/standard-usage\r\n//                               - https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables/detailed-usage\r\n// - OCI: 1.0                 -- See https://docs.oracle.com/iaas/Content/Billing/Concepts/costusagereportsoverview.htm#costreports__focus-cost-report-schema\r\n//\r\n// Support for non-Azure data is limited to ingestion only. Data is not transformed across versions.\r\n//======================================================================================================================\r\n\r\n// Costs_raw table\r\n.create-merge table Costs_raw (\r\n    AvailabilityZone:           string,    // FOCUS 0.5+\r\n    BilledCost:                 decimal,   // FOCUS 0.5+\r\n    BillingAccountId:           string,    // FOCUS 0.5+\r\n    BillingAccountName:         string,    // FOCUS 0.5+\r\n    BillingAccountType:         string,    // Azure 1.0-preview(v1)+\r\n    BillingCurrency:            string,    // FOCUS 0.5+\r\n    BillingPeriodEnd:           datetime,  // FOCUS 0.5+\r\n    BillingPeriodStart:         datetime,  // FOCUS 0.5+\r\n    ChargeCategory:             string,    // FOCUS 1.0-preview+\r\n    ChargeClass:                string,    // FOCUS 1.0+\r\n    ChargeDescription:          string,    // FOCUS 1.0+\r\n    ChargeFrequency:            string,    // FOCUS 1.0+\r\n    ChargePeriodEnd:            datetime,  // FOCUS 0.5+\r\n    ChargePeriodStart:          datetime,  // FOCUS 0.5+\r\n    ChargeSubcategory:          string,    // FOCUS 1.0-preview only\r\n    CommitmentDiscountCategory: string,    // FOCUS 1.0-preview+\r\n    CommitmentDiscountId:       string,    // FOCUS 1.0-preview+\r\n    CommitmentDiscountName:     string,    // FOCUS 1.0-preview+\r\n    CommitmentDiscountStatus:   string,    // FOCUS 1.0+\r\n    CommitmentDiscountType:     string,    // FOCUS 1.0-preview+\r\n    ConsumedQuantity:           decimal,   // FOCUS 1.0+\r\n    ConsumedUnit:               string,    // FOCUS 1.0+\r\n    ContractedCost:             decimal,   // FOCUS 1.0+\r\n    ContractedUnitPrice:        decimal,   // FOCUS 1.0+\r\n    EffectiveCost:              decimal,   // FOCUS 1.0-preview+\r\n    InvoiceIssuerName:          string,    // FOCUS 0.5+\r\n    ListCost:                   decimal,   // FOCUS 1.0-preview+\r\n    ListUnitPrice:              decimal,   // FOCUS 1.0-preview+\r\n    PricingCategory:            string,    // FOCUS 1.0-preview+\r\n    PricingQuantity:            decimal,   // FOCUS 1.0-preview+\r\n    PricingUnit:                string,    // FOCUS 1.0-preview+\r\n    ProviderName:               string,    // FOCUS 0.5+\r\n    PublisherName:              string,    // FOCUS 0.5+\r\n    Region:                     string,    // FOCUS 0.5-1.0-preview (deprecated)\r\n    RegionId:                   string,    // FOCUS 1.0+\r\n    RegionName:                 string,    // FOCUS 1.0+\r\n    ResourceId:                 string,    // FOCUS 0.5+\r\n    ResourceName:               string,    // FOCUS 0.5+\r\n    ResourceType:               string,    // FOCUS 1.0-preview+\r\n    ServiceCategory:            string,    // FOCUS 0.5+\r\n    ServiceName:                string,    // FOCUS 0.5+\r\n    SkuId:                      string,    // FOCUS 1.0-preview+\r\n    SkuPriceId:                 string,    // FOCUS 1.0-preview+\r\n    SubAccountId:               string,    // FOCUS 0.5+\r\n    SubAccountName:             string,    // FOCUS 0.5+\r\n    SubAccountType:             string,    // Azure 1.0-preview(v1)+\r\n    Tags:                       string,    // FOCUS 1.0-preview+\r\n    UsageAmount:                decimal,   // GCP Jan 2024 -- Removed Mar 2024 (UsageQuantity)\r\n    UsageQuantity:              decimal,   // FOCUS 1.0-preview only\r\n    UsageUnit:                  string,    // FOCUS 1.0-preview only\r\n    x_AccountId:                string,    // Azure 1.0-preview(v1)+\r\n    x_AccountName:              string,    // Azure 1.0-preview(v1)+\r\n    x_AccountOwnerId:           string,    // Azure 1.0-preview(v1)+\r\n    x_BilledCostInUsd:          decimal,   // Azure 1.0-preview(v1)+\r\n    x_BilledUnitPrice:          decimal,   // Azure 1.0-preview(v1)+\r\n    x_BillingAccountId:         string,    // Azure 1.0-preview(v1)+\r\n    x_BillingAccountName:       string,    // Azure 1.0-preview(v1)+\r\n    x_BillingExchangeRate:      decimal,   // Azure 1.0-preview(v1)+\r\n    x_BillingExchangeRateDate:  datetime,  // Azure 1.0-preview(v1)+\r\n    x_BillingProfileId:         string,    // Azure 1.0-preview(v1)+\r\n    x_BillingProfileName:       string,    // Azure 1.0-preview(v1)+\r\n    x_ChargeId:                 string,    // Azure 1.0-preview(v1) only\r\n    x_ContractedCostInUsd:      decimal,   // Azure 1.0+\r\n    x_Cost:                     decimal,   // GCP Jan 2024 -- Removed Jun 2024 (ContractedCost)\r\n    x_CostAllocationRuleName:   string,    // Azure 1.0-preview(v1)+\r\n    x_CostCategories:           string,    // AWS 1.0 (JSON)\r\n    x_CostCenter:               string,    // Azure 1.0-preview(v1)+\r\n    x_Credits:                  string,    // GCP Jan 2024\r\n    x_CostType:                 string,    // GCP Jan 2024\r\n    x_CurrencyConversionRate:   decimal,   // GCP Jun 2024\r\n    x_CustomerId:               string,    // Azure 1.0-preview(v1)+\r\n    x_CustomerName:             string,    // Azure 1.0-preview(v1)+\r\n    x_Discount:                 string,    // AWS 1.0 (JSON)\r\n    x_EffectiveCostInUsd:       decimal,   // Azure 1.0-preview(v1)+\r\n    x_EffectiveUnitPrice:       decimal,   // Azure 1.0-preview(v1)+\r\n    x_ExportTime:               datetime,  // GCP Jan 2024\r\n    x_InvoiceId:                string,    // Azure 1.0-preview(v1)+\r\n    x_InvoiceIssuerId:          string,    // Azure 1.0-preview(v1)+\r\n    x_InvoiceSectionId:         string,    // Azure 1.0-preview(v1)+\r\n    x_InvoiceSectionName:       string,    // Azure 1.0-preview(v1)+\r\n    x_ListCostInUsd:            decimal,   // Azure 1.0-preview(v1)+\r\n    x_Location:                 string,    // GCP Jan 2024\r\n    x_OnDemandCost:             decimal,   // Azure 1.0-preview(v1) only\r\n    x_OnDemandCostInUsd:        decimal,   // Azure 1.0-preview(v1) only\r\n    x_OnDemandUnitPrice:        decimal,   // Azure 1.0-preview(v1) only\r\n    x_Operation:                string,    // AWS 1.0\r\n    x_PartnerCreditApplied:     string,    // Azure 1.0-preview(v1)+\r\n    x_PartnerCreditRate:        string,    // Azure 1.0-preview(v1)+\r\n    x_PricingBlockSize:         decimal,   // Azure 1.0-preview(v1)+\r\n    x_PricingCurrency:          string,    // Azure 1.0-preview(v1)+\r\n    x_PricingSubcategory:       string,    // Azure 1.0-preview(v1)+\r\n    x_PricingUnitDescription:   string,    // Azure 1.0-preview(v1)+\r\n    x_Project:                  string,    // GCP Jan 2024\r\n    x_PublisherCategory:        string,    // Azure 1.0-preview(v1)+\r\n    x_PublisherId:              string,    // Azure 1.0-preview(v1)+\r\n    x_ResellerId:               string,    // Azure 1.0-preview(v1)+\r\n    x_ResellerName:             string,    // Azure 1.0-preview(v1)+\r\n    x_ResourceGroupName:        string,    // Azure 1.0-preview(v1)+\r\n    x_ResourceType:             string,    // Azure 1.0-preview(v1)+\r\n    x_ServiceCode:              string,    // AWS 1.0\r\n    x_ServiceId:                string,    // GCP Jan 2024\r\n    x_ServicePeriodEnd:         datetime,  // Azure 1.0-preview(v1)+\r\n    x_ServicePeriodStart:       datetime,  // Azure 1.0-preview(v1)+\r\n    x_SkuDescription:           string,    // Azure 1.0-preview(v1)+\r\n    x_SkuDetails:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuIsCreditEligible:      bool,      // Azure 1.0-preview(v1)+ \r\n    x_SkuMeterCategory:         string,    // Azure 1.0-preview(v1)+\r\n    x_SkuMeterId:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuMeterName:             string,    // Azure 1.0-preview(v1)+\r\n    x_SkuMeterSubcategory:      string,    // Azure 1.0-preview(v1)+\r\n    x_SkuOfferId:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuOrderId:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuOrderName:             string,    // Azure 1.0-preview(v1)+\r\n    x_SkuPartNumber:            string,    // Azure 1.0-preview(v1)+\r\n    x_SkuRegion:                string,    // Azure 1.0-preview(v1)+\r\n    x_SkuServiceFamily:         string,    // Azure 1.0-preview(v1)+\r\n    x_SkuTerm:                  int,       // Azure 1.0-preview(v1)+\r\n    x_SkuTier:                  string,    // Azure 1.0-preview(v1)+ \r\n    x_SourceName:               string,    // Hubs add-on\r\n    x_SourceProvider:           string,    // Hubs add-on\r\n    x_SourceType:               string,    // Hubs add-on\r\n    x_SourceVersion:            string,    // Hubs add-on\r\n    x_UsageType:                string     // AWS 1.0\r\n)\r\n\r\n// Costs_raw ingestion mapping\r\n.create-or-alter table Costs_raw ingestion parquet mapping \"Costs_raw_mapping\"\r\n```\r\n[\r\n    { \"Column\": \"AvailabilityZone\",           \"Properties\": { \"Field\": \"AvailabilityZone\" } },\r\n    { \"Column\": \"BilledCost\",                 \"Properties\": { \"Field\": \"BilledCost\" } },\r\n    { \"Column\": \"BillingAccountId\",           \"Properties\": { \"Field\": \"BillingAccountId\" } },\r\n    { \"Column\": \"BillingAccountName\",         \"Properties\": { \"Field\": \"BillingAccountName\" } },\r\n    { \"Column\": \"BillingAccountType\",         \"Properties\": { \"Field\": \"BillingAccountType\" } },\r\n    { \"Column\": \"BillingCurrency\",            \"Properties\": { \"Field\": \"BillingCurrency\" } },\r\n    { \"Column\": \"BillingPeriodEnd\",           \"Properties\": { \"Field\": \"BillingPeriodEnd\" } },\r\n    { \"Column\": \"BillingPeriodStart\",         \"Properties\": { \"Field\": \"BillingPeriodStart\" } },\r\n    { \"Column\": \"ChargeCategory\",             \"Properties\": { \"Field\": \"ChargeCategory\" } },\r\n    { \"Column\": \"ChargeClass\",                \"Properties\": { \"Field\": \"ChargeClass\" } },\r\n    { \"Column\": \"ChargeDescription\",          \"Properties\": { \"Field\": \"ChargeDescription\" } },\r\n    { \"Column\": \"ChargeFrequency\",            \"Properties\": { \"Field\": \"ChargeFrequency\" } },\r\n    { \"Column\": \"ChargePeriodEnd\",            \"Properties\": { \"Field\": \"ChargePeriodEnd\" } },\r\n    { \"Column\": \"ChargePeriodStart\",          \"Properties\": { \"Field\": \"ChargePeriodStart\" } },\r\n    { \"Column\": \"ChargeSubcategory\",          \"Properties\": { \"Field\": \"ChargeSubcategory\" } },\r\n    { \"Column\": \"CommitmentDiscountCategory\", \"Properties\": { \"Field\": \"CommitmentDiscountCategory\" } },\r\n    { \"Column\": \"CommitmentDiscountId\",       \"Properties\": { \"Field\": \"CommitmentDiscountId\" } },\r\n    { \"Column\": \"CommitmentDiscountName\",     \"Properties\": { \"Field\": \"CommitmentDiscountName\" } },\r\n    { \"Column\": \"CommitmentDiscountStatus\",   \"Properties\": { \"Field\": \"CommitmentDiscountStatus\" } },\r\n    { \"Column\": \"CommitmentDiscountType\",     \"Properties\": { \"Field\": \"CommitmentDiscountType\" } },\r\n    { \"Column\": \"ConsumedQuantity\",           \"Properties\": { \"Field\": \"ConsumedQuantity\" } },\r\n    { \"Column\": \"ConsumedUnit\",               \"Properties\": { \"Field\": \"ConsumedUnit\" } },\r\n    { \"Column\": \"ContractedCost\",             \"Properties\": { \"Field\": \"ContractedCost\" } },\r\n    { \"Column\": \"ContractedUnitPrice\",        \"Properties\": { \"Field\": \"ContractedUnitPrice\" } },\r\n    { \"Column\": \"EffectiveCost\",              \"Properties\": { \"Field\": \"EffectiveCost\" } },\r\n    { \"Column\": \"InvoiceIssuerName\",          \"Properties\": { \"Field\": \"InvoiceIssuerName\" } },\r\n    { \"Column\": \"ListCost\",                   \"Properties\": { \"Field\": \"ListCost\" } },\r\n    { \"Column\": \"ListUnitPrice\",              \"Properties\": { \"Field\": \"ListUnitPrice\" } },\r\n    { \"Column\": \"PricingCategory\",            \"Properties\": { \"Field\": \"PricingCategory\" } },\r\n    { \"Column\": \"PricingQuantity\",            \"Properties\": { \"Field\": \"PricingQuantity\" } },\r\n    { \"Column\": \"PricingUnit\",                \"Properties\": { \"Field\": \"PricingUnit\" } },\r\n    { \"Column\": \"ProviderName\",               \"Properties\": { \"Field\": \"ProviderName\" } },\r\n    { \"Column\": \"PublisherName\",              \"Properties\": { \"Field\": \"PublisherName\" } },\r\n    { \"Column\": \"Region\",                     \"Properties\": { \"Field\": \"Region\" } },\r\n    { \"Column\": \"RegionId\",                   \"Properties\": { \"Field\": \"RegionId\" } },\r\n    { \"Column\": \"RegionName\",                 \"Properties\": { \"Field\": \"RegionName\" } },\r\n    { \"Column\": \"ResourceId\",                 \"Properties\": { \"Field\": \"ResourceId\" } },\r\n    { \"Column\": \"ResourceName\",               \"Properties\": { \"Field\": \"ResourceName\" } },\r\n    { \"Column\": \"ResourceType\",               \"Properties\": { \"Field\": \"ResourceType\" } },\r\n    { \"Column\": \"ServiceCategory\",            \"Properties\": { \"Field\": \"ServiceCategory\" } },\r\n    { \"Column\": \"ServiceName\",                \"Properties\": { \"Field\": \"ServiceName\" } },\r\n    { \"Column\": \"SkuId\",                      \"Properties\": { \"Field\": \"SkuId\" } },\r\n    { \"Column\": \"SkuPriceId\",                 \"Properties\": { \"Field\": \"SkuPriceId\" } },\r\n    { \"Column\": \"SubAccountId\",               \"Properties\": { \"Field\": \"SubAccountId\" } },\r\n    { \"Column\": \"SubAccountName\",             \"Properties\": { \"Field\": \"SubAccountName\" } },\r\n    { \"Column\": \"SubAccountType\",             \"Properties\": { \"Field\": \"SubAccountType\" } },\r\n    { \"Column\": \"Tags\",                       \"Properties\": { \"Field\": \"Tags\" } },\r\n    { \"Column\": \"UsageAmount\",                \"Properties\": { \"Field\": \"UsageAmount\" } },\r\n    { \"Column\": \"UsageQuantity\",              \"Properties\": { \"Field\": \"UsageQuantity\" } },\r\n    { \"Column\": \"UsageUnit\",                  \"Properties\": { \"Field\": \"UsageUnit\" } },\r\n    { \"Column\": \"x_AccountId\",                \"Properties\": { \"Field\": \"x_AccountId\" } },\r\n    { \"Column\": \"x_AccountName\",              \"Properties\": { \"Field\": \"x_AccountName\" } },\r\n    { \"Column\": \"x_AccountOwnerId\",           \"Properties\": { \"Field\": \"x_AccountOwnerId\" } },\r\n    { \"Column\": \"x_BilledCostInUsd\",          \"Properties\": { \"Field\": \"x_BilledCostInUsd\" } },\r\n    { \"Column\": \"x_BilledUnitPrice\",          \"Properties\": { \"Field\": \"x_BilledUnitPrice\" } },\r\n    { \"Column\": \"x_BillingAccountId\",         \"Properties\": { \"Field\": \"x_BillingAccountId\" } },\r\n    { \"Column\": \"x_BillingAccountName\",       \"Properties\": { \"Field\": \"x_BillingAccountName\" } },\r\n    { \"Column\": \"x_BillingExchangeRate\",      \"Properties\": { \"Field\": \"x_BillingExchangeRate\" } },\r\n    { \"Column\": \"x_BillingExchangeRateDate\",  \"Properties\": { \"Field\": \"x_BillingExchangeRateDate\" } },\r\n    { \"Column\": \"x_BillingProfileId\",         \"Properties\": { \"Field\": \"x_BillingProfileId\" } },\r\n    { \"Column\": \"x_BillingProfileName\",       \"Properties\": { \"Field\": \"x_BillingProfileName\" } },\r\n    { \"Column\": \"x_ChargeId\",                 \"Properties\": { \"Field\": \"x_ChargeId\" } },\r\n    { \"Column\": \"x_ContractedCostInUsd\",      \"Properties\": { \"Field\": \"x_ContractedCostInUsd\" } },\r\n    { \"Column\": \"x_Cost\",                     \"Properties\": { \"Field\": \"x_Cost\" } },\r\n    { \"Column\": \"x_CostAllocationRuleName\",   \"Properties\": { \"Field\": \"x_CostAllocationRuleName\" } },\r\n    { \"Column\": \"x_CostCategories\",           \"Properties\": { \"Field\": \"x_CostCategories\" } },\r\n    { \"Column\": \"x_CostCenter\",               \"Properties\": { \"Field\": \"x_CostCenter\" } },\r\n    { \"Column\": \"x_Credits\",                  \"Properties\": { \"Field\": \"x_Credits\" } },\r\n    { \"Column\": \"x_CostType\",                 \"Properties\": { \"Field\": \"x_CostType\" } },\r\n    { \"Column\": \"x_CurrencyConversionRate\",   \"Properties\": { \"Field\": \"x_CurrencyConversionRate\" } },\r\n    { \"Column\": \"x_CustomerId\",               \"Properties\": { \"Field\": \"x_CustomerId\" } },\r\n    { \"Column\": \"x_CustomerName\",             \"Properties\": { \"Field\": \"x_CustomerName\" } },\r\n    { \"Column\": \"x_Discount\",                 \"Properties\": { \"Field\": \"x_Discount\" } },\r\n    { \"Column\": \"x_EffectiveCostInUsd\",       \"Properties\": { \"Field\": \"x_EffectiveCostInUsd\" } },\r\n    { \"Column\": \"x_EffectiveUnitPrice\",       \"Properties\": { \"Field\": \"x_EffectiveUnitPrice\" } },\r\n    { \"Column\": \"x_ExportTime\",               \"Properties\": { \"Field\": \"x_ExportTime\" } },\r\n    { \"Column\": \"x_InvoiceId\",                \"Properties\": { \"Field\": \"x_InvoiceId\" } },\r\n    { \"Column\": \"x_InvoiceIssuerId\",          \"Properties\": { \"Field\": \"x_InvoiceIssuerId\" } },\r\n    { \"Column\": \"x_InvoiceSectionId\",         \"Properties\": { \"Field\": \"x_InvoiceSectionId\" } },\r\n    { \"Column\": \"x_InvoiceSectionName\",       \"Properties\": { \"Field\": \"x_InvoiceSectionName\" } },\r\n    { \"Column\": \"x_ListCostInUsd\",            \"Properties\": { \"Field\": \"x_ListCostInUsd\" } },\r\n    { \"Column\": \"x_Location\",                 \"Properties\": { \"Field\": \"x_Location\" } },\r\n    { \"Column\": \"x_OnDemandCost\",             \"Properties\": { \"Field\": \"x_OnDemandCost\" } },\r\n    { \"Column\": \"x_OnDemandCostInUsd\",        \"Properties\": { \"Field\": \"x_OnDemandCostInUsd\" } },\r\n    { \"Column\": \"x_OnDemandUnitPrice\",        \"Properties\": { \"Field\": \"x_OnDemandUnitPrice\" } },\r\n    { \"Column\": \"x_Operation\",                \"Properties\": { \"Field\": \"x_Operation\" } },\r\n    { \"Column\": \"x_PartnerCreditApplied\",     \"Properties\": { \"Field\": \"x_PartnerCreditApplied\" } },\r\n    { \"Column\": \"x_PartnerCreditRate\",        \"Properties\": { \"Field\": \"x_PartnerCreditRate\" } },\r\n    { \"Column\": \"x_PricingBlockSize\",         \"Properties\": { \"Field\": \"x_PricingBlockSize\" } },\r\n    { \"Column\": \"x_PricingCurrency\",          \"Properties\": { \"Field\": \"x_PricingCurrency\" } },\r\n    { \"Column\": \"x_PricingSubcategory\",       \"Properties\": { \"Field\": \"x_PricingSubcategory\" } },\r\n    { \"Column\": \"x_PricingUnitDescription\",   \"Properties\": { \"Field\": \"x_PricingUnitDescription\" } },\r\n    { \"Column\": \"x_Project\",                  \"Properties\": { \"Field\": \"x_Project\" } },\r\n    { \"Column\": \"x_PublisherCategory\",        \"Properties\": { \"Field\": \"x_PublisherCategory\" } },\r\n    { \"Column\": \"x_PublisherId\",              \"Properties\": { \"Field\": \"x_PublisherId\" } },\r\n    { \"Column\": \"x_ResellerId\",               \"Properties\": { \"Field\": \"x_ResellerId\" } },\r\n    { \"Column\": \"x_ResellerName\",             \"Properties\": { \"Field\": \"x_ResellerName\" } },\r\n    { \"Column\": \"x_ResourceGroupName\",        \"Properties\": { \"Field\": \"x_ResourceGroupName\" } },\r\n    { \"Column\": \"x_ResourceType\",             \"Properties\": { \"Field\": \"x_ResourceType\" } },\r\n    { \"Column\": \"x_ServiceCode\",              \"Properties\": { \"Field\": \"x_ServiceCode\" } },\r\n    { \"Column\": \"x_ServiceId\",                \"Properties\": { \"Field\": \"x_ServiceId\" } },\r\n    { \"Column\": \"x_ServicePeriodEnd\",         \"Properties\": { \"Field\": \"x_ServicePeriodEnd\" } },\r\n    { \"Column\": \"x_ServicePeriodStart\",       \"Properties\": { \"Field\": \"x_ServicePeriodStart\" } },\r\n    { \"Column\": \"x_SkuDescription\",           \"Properties\": { \"Field\": \"x_SkuDescription\" } },\r\n    { \"Column\": \"x_SkuDetails\",               \"Properties\": { \"Field\": \"x_SkuDetails\" } },\r\n    { \"Column\": \"x_SkuIsCreditEligible\",      \"Properties\": { \"Field\": \"x_SkuIsCreditEligible\" } },\r\n    { \"Column\": \"x_SkuMeterCategory\",         \"Properties\": { \"Field\": \"x_SkuMeterCategory\" } },\r\n    { \"Column\": \"x_SkuMeterId\",               \"Properties\": { \"Field\": \"x_SkuMeterId\" } },\r\n    { \"Column\": \"x_SkuMeterName\",             \"Properties\": { \"Field\": \"x_SkuMeterName\" } },\r\n    { \"Column\": \"x_SkuMeterSubcategory\",      \"Properties\": { \"Field\": \"x_SkuMeterSubcategory\" } },\r\n    { \"Column\": \"x_SkuOfferId\",               \"Properties\": { \"Field\": \"x_SkuOfferId\" } },\r\n    { \"Column\": \"x_SkuOrderId\",               \"Properties\": { \"Field\": \"x_SkuOrderId\" } },\r\n    { \"Column\": \"x_SkuOrderName\",             \"Properties\": { \"Field\": \"x_SkuOrderName\" } },\r\n    { \"Column\": \"x_SkuPartNumber\",            \"Properties\": { \"Field\": \"x_SkuPartNumber\" } },\r\n    { \"Column\": \"x_SkuRegion\",                \"Properties\": { \"Field\": \"x_SkuRegion\" } },\r\n    { \"Column\": \"x_SkuServiceFamily\",         \"Properties\": { \"Field\": \"x_SkuServiceFamily\" } },\r\n    { \"Column\": \"x_SkuTerm\",                  \"Properties\": { \"Field\": \"x_SkuTerm\" } },\r\n    { \"Column\": \"x_SkuTier\",                  \"Properties\": { \"Field\": \"x_SkuTier\" } },\r\n    { \"Column\": \"x_SourceName\",               \"Properties\": { \"Field\": \"x_SourceName\" } },\r\n    { \"Column\": \"x_SourceProvider\",           \"Properties\": { \"Field\": \"x_SourceProvider\" } },\r\n    { \"Column\": \"x_SourceType\",               \"Properties\": { \"Field\": \"x_SourceType\" } },\r\n    { \"Column\": \"x_SourceVersion\",            \"Properties\": { \"Field\": \"x_SourceVersion\" } },\r\n    { \"Column\": \"x_UsageType\",                \"Properties\": { \"Field\": \"x_UsageType\" } }\r\n]\r\n```\r\n\r\n// Costs_raw retention policy\r\n.alter-merge table Costs_raw policy retention softdelete = $$rawRetentionInDays$$d recoverability = disabled\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Costs_transform_v1_0 function\r\n.create-or-alter function\r\nwith (docstring='All costs transformed to FOCUS 1.0.', folder='Costs')\r\nCosts_transform_v1_0()\r\n{\r\n    // NOTE: All open issues and questions are tracked @ https://github.com/microsoft/finops-toolkit/issues/1111\r\n    Costs_raw\r\n    //\r\n    // Dedupe rows\r\n    | extend x_IngestionTime = ingestion_time()\r\n    | extend x_ChargeId = ''\r\n    // TODO: Consider adding a unique charge ID per row\r\n    // hash_sha256(strcat(\r\n    //     // DO NOT CHANGE COLUMNS OR COLUMN ORDER\r\n    //     // 1. Resource hierarchy (including resource name), highest to lowest\r\n    //     BillingAccountId,\r\n    //     x_InvoiceSectionId,\r\n    //     x_AccountOwnerId,\r\n    //     SubAccountId,\r\n    //     x_ResourceGroupName,\r\n    //     ResourceName,\r\n    //     // 2. Resource details\r\n    //     ResourceId,\r\n    //     RegionId,\r\n    //     Tags,\r\n    //     CommitmentDiscountId,\r\n    //     x_CostCenter,\r\n    //     // 4. Meter details\r\n    //     SkuPriceId,\r\n    //     x_SkuMeterId,\r\n    //     x_SkuPartNumber,\r\n    //     x_SkuOfferId,\r\n    //     x_SkuDetails,\r\n    //     // 5. Date\r\n    //     ChargePeriodStart\r\n    // ))\r\n    //\r\n    // Identify data quality issues\r\n    | extend x_SourceChanges = trim_end(',', strcat(\r\n        iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and ChargeFrequency == 'Usage-Based',                 'InvalidChargeFrequency,',           ''),\r\n        iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and EffectiveCost > 0,                                'InvalidEffectiveCost,',             ''),\r\n        iff((isempty(ContractedCost)      or ContractedCost == 0)      and EffectiveCost != 0,                                      'MissingContractedCost,',            ''),\r\n        iff((isempty(ContractedUnitPrice) or ContractedUnitPrice == 0) and x_EffectiveUnitPrice != 0,                               'MissingContractedUnitPrice,',       ''),\r\n        iff(ListCost < ContractedCost,                                                                                              'ListCostLessThanContractedCost,',      ''),\r\n        iff(ContractedCost < EffectiveCost,                                                                                         'ContractedCostLessThanEffectiveCost,', ''),\r\n        iff((isempty(ListCost)            or ListCost == 0)            and (ContractedCost != 0      or EffectiveCost != 0),        'MissingListCost,',                  ''),\r\n        iff((isempty(ListUnitPrice)       or ListUnitPrice == 0)       and (ContractedUnitPrice != 0 or x_EffectiveUnitPrice != 0), 'MissingListUnitPrice,',             ''),\r\n        iff(isempty(ProviderName),                                                                                                  'MissingProviderName,',              ''),\r\n        iff(isempty(PublisherName),                                                                                                 'MissingPublisherName,',             ''),\r\n        iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and isempty(ResourceId),                              'MissingResourceId,',                ''),\r\n        iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and isempty(ResourceName),                            'MissingResourceName,',              ''),\r\n        iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and isempty(ResourceType),                            'MissingResourceType,',              ''),\r\n        iff(BilledCost > 0 and x_BilledUnitPrice == 0,                                                                              'MissingXBilledUnitPrice,',          ''),\r\n        iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and isempty(x_ResourceType),                          'MissingXResourceType,',             ''),\r\n        iff(PricingCategory == 'Standard' and isnotempty(CommitmentDiscountId) and ChargeCategory == 'Usage',                       'PricingCategoryShouldBeCommitted,', ''),\r\n        iff(x_SkuTerm == '1Year' or x_SkuTerm == '3Years' or x_SkuTerm == '5Years',                                                 'SkuTermShouldBeAnInteger,',         '')\r\n    ))\r\n    //\r\n    // Fix columns needed in other changes\r\n    | extend ProviderName = case(\r\n        isnotempty(ProviderName), ProviderName,\r\n        isnotempty(coalesce(x_CostCategories, x_Discount, x_Operation, x_ServiceCode, x_UsageType)), 'AWS',\r\n        isnotempty(coalesce(tostring(UsageAmount), tostring(x_Cost), x_Credits, x_CostType, tostring(x_CurrencyConversionRate), tostring(x_ExportTime), x_Project, x_ServiceId)), 'GCP',\r\n        isnotempty(coalesce(x_BillingProfileId, x_InvoiceSectionId)), 'Microsoft',\r\n        ''\r\n    )\r\n    //\r\n    // Identify source\r\n    | extend x_SourceName     = coalesce(x_SourceName, iff(isnotempty(x_BillingProfileId), 'Cost Management', ProviderName))\r\n    | extend x_SourceProvider = coalesce(x_SourceProvider, ProviderName)\r\n    | extend x_SourceType     = coalesce(x_SourceType, iff(isnotempty(x_BillingProfileId), 'FocusCost', ''))\r\n    | extend x_SourceVersion  = coalesce(x_SourceVersion, case(\r\n        isnotempty(coalesce(ChargeClass, CommitmentDiscountStatus, tostring(ConsumedQuantity), ConsumedUnit, tostring(ContractedCost), tostring(ContractedUnitPrice), RegionId, RegionName)), '1.0',\r\n        isnotempty(coalesce(ChargeSubcategory, Region, tostring(UsageQuantity), UsageUnit)), iff(ProviderName == 'Microsoft', '1.0-preview(v1)', '1.0-preview'),\r\n        ''\r\n    ))\r\n    // Append version check error code\r\n    | extend x_SourceChanges = iff(x_SourceVersion == '1.0', x_SourceChanges,\r\n        strcat(x_SourceChanges, iff(isempty(x_SourceChanges), '', ','), iff(x_SourceVersion == '', 'UnknownFocusVersion', 'LegacyFocusVersion'))\r\n    )\r\n    //\r\n    // Populate missing prices -- mapping to on-demand prices requires meter ID and offer ID\r\n    | extend tmp_MissingPrices = ProviderName == 'Microsoft'\r\n        and (ListUnitPrice == 0 or ContractedUnitPrice == 0)\r\n        and x_EffectiveUnitPrice != 0\r\n        and not(CommitmentDiscountCategory == 'Spend' and CommitmentDiscountStatus == 'Unused')\r\n        and isnotempty(strcat(x_SkuMeterId, x_SkuOfferId))\r\n    | as allCosts\r\n    | where tmp_MissingPrices\r\n    | extend tmp_ReservationPriceLookupKey = tolower(strcat(x_BillingProfileId, substring(ChargePeriodStart, 0, 7), x_SkuMeterId, x_SkuOfferId))\r\n    | as costsWithMissingPrices\r\n    | join kind=leftouter (\r\n        Prices_final_v1_0\r\n        | extend tmp_ReservationPriceLookupKey = tolower(strcat(x_BillingProfileId, substring(x_EffectivePeriodStart, 0, 7), x_SkuMeterId, x_SkuOfferId))\r\n        | where x_SkuPriceType == 'Consumption' and tmp_ReservationPriceLookupKey in ((costsWithMissingPrices | summarize by tmp_ReservationPriceLookupKey))\r\n        | summarize ListUnitPrice = min(ListUnitPrice), ContractedUnitPrice = min(ContractedUnitPrice) by tmp_ReservationPriceLookupKey, x_PricingBlockSize, PricingUnit\r\n    ) on tmp_ReservationPriceLookupKey\r\n    // Select the best price to use for each row\r\n    // TODO: Save values before changing -- | extend x_ms_ContractedUnitPrice = ContractedUnitPrice, x_ms_ListUnitPrice = ListUnitPrice, x_ms_ListCost = ListCost, x_ms_ContractedCost = ContractedCost\r\n    | extend ContractedUnitPrice = case(\r\n        // If price is already correct, keep that\r\n        ContractedUnitPrice != 0 or x_EffectiveUnitPrice == 0, ContractedUnitPrice,\r\n        // If both prices use the same scale, use the new one\r\n        PricingUnit == PricingUnit1 and x_PricingBlockSize == x_PricingBlockSize1, ContractedUnitPrice1 * x_BillingExchangeRate,\r\n        // If prices are the same unit but not the same scale, use the new one but correct the scale\r\n        PricingUnit == PricingUnit1 and x_PricingBlockSize != x_PricingBlockSize1 and isnotempty(x_PricingBlockSize) and isnotempty(x_PricingBlockSize1), ContractedUnitPrice1 * x_BillingExchangeRate / x_PricingBlockSize1 * x_PricingBlockSize,\r\n        // If billed price is available, assume the billed price is the same as contracted price to support aggregations\r\n        isnotempty(x_BilledUnitPrice) and x_BilledUnitPrice != 0, x_EffectiveUnitPrice,\r\n        // Otherwise, assume the effective price is the same as contracted price to support aggregations\r\n        x_EffectiveUnitPrice\r\n    )\r\n    | extend ListUnitPrice = case(\r\n        // If price is already correct, keep that\r\n        ListUnitPrice != 0 or x_EffectiveUnitPrice == 0, ListUnitPrice,\r\n        // If both prices use the same scale, use the new one\r\n        PricingUnit == PricingUnit1 and x_PricingBlockSize == x_PricingBlockSize1, ListUnitPrice1 * x_BillingExchangeRate,\r\n        // If prices are the same unit but not the same scale, use the new one but correct the scale\r\n        PricingUnit == PricingUnit1 and x_PricingBlockSize != x_PricingBlockSize1 and isnotempty(x_PricingBlockSize) and isnotempty(x_PricingBlockSize1), ListUnitPrice1 * x_BillingExchangeRate / x_PricingBlockSize1 * x_PricingBlockSize,\r\n        // Otherwise, assume the contracted price is the same as list price to support aggregations\r\n        ContractedUnitPrice\r\n    )\r\n    // Calculate missing costs based on new prices -- If cost is already correct, keep that; if not and price is available, recalculate the cost; otherwise, keep the existing cost\r\n    | extend ContractedCost = case(\r\n        ContractedCost != 0 or EffectiveCost == 0, ContractedCost,\r\n        ContractedUnitPrice == x_EffectiveUnitPrice, EffectiveCost,  // Use EffectiveCost if both prices are the same to avoid rounding errors\r\n        ContractedUnitPrice != 0, ContractedUnitPrice * PricingQuantity,\r\n        ContractedCost == 0 and ContractedUnitPrice == 0, EffectiveCost,  // Fall back to EffectiveCost when ContractedCost and ContractedUnitPrice are 0\r\n        ContractedCost\r\n    )\r\n    | extend ListCost = case(\r\n        ListCost != 0 or EffectiveCost == 0, ListCost,\r\n        ListUnitPrice == ContractedUnitPrice, ContractedCost,  // Use ContractedCost if both prices are the same to avoid rounding errors\r\n        ListUnitPrice != 0, ListUnitPrice * PricingQuantity,\r\n        ListCost == 0 and ListUnitPrice == 0, ContractedCost,  // Fall back to ContractedCost when ListCost and ListUnitPrice are 0\r\n        ListCost\r\n    )\r\n    // Merge the rest of the unmodified cost records and remove excess columns\r\n    | union (allCosts | where not(tmp_MissingPrices))\r\n    | project-away x_PricingBlockSize1, PricingUnit1, ListUnitPrice1, ContractedUnitPrice1, tmp_MissingPrices, tmp_ReservationPriceLookupKey, tmp_ReservationPriceLookupKey1\r\n    //\r\n    // BUG: Fix ContractedCost that has bad values\r\n    | extend ContractedCost = iff(ProviderName == 'Microsoft' and isnotempty(PricingQuantity) and isnotempty(x_PricingBlockSize) and ContractedCost != ContractedUnitPrice * PricingQuantity, ContractedUnitPrice * PricingQuantity, ContractedCost)\r\n    //\r\n    // Handle FOCUS 1.0-preview UsageQuantity/Unit\r\n    | extend ConsumedQuantity = iff(ChargeCategory == 'Usage', coalesce(ConsumedQuantity, UsageQuantity, UsageAmount), todecimal(''))\r\n    | extend ConsumedUnit = iff(ChargeCategory == 'Usage' and isnotempty(ConsumedQuantity), coalesce(ConsumedUnit, UsageUnit, 'Units'), '')\r\n    //\r\n    // Convert IDs to lowercase for consistency\r\n    | extend CommitmentDiscountId = tolower(CommitmentDiscountId)\r\n    //\r\n    // BUG: Remove EffectiveCost for commitment discount purchases\r\n    | extend EffectiveCost = iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId), decimal(0), EffectiveCost)\r\n    | extend x_EffectiveCostInUsd = iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId), decimal(0), x_EffectiveCostInUsd)\r\n    //\r\n    // Clean up resource columns\r\n    | extend ResourceId = case(\r\n        isnotempty(ResourceId), ResourceId,\r\n        ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId), CommitmentDiscountId,\r\n        ResourceId)\r\n    | extend ResourceName = tolower(case(\r\n        isnotempty(ResourceName), ResourceName,\r\n        ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountName), CommitmentDiscountName,\r\n        isnotempty(ResourceId), parse_resourceid(ResourceId).ResourceName,\r\n        ResourceName))\r\n    | extend x_ResourceType = case(\r\n        isnotempty(x_ResourceType), x_ResourceType,\r\n        isnotempty(ResourceId), parse_resourceid(ResourceId).x_ResourceType,\r\n        x_ResourceType)\r\n    | extend ResourceType = case(\r\n        // Use existing resource type display name unless it's an internal resource type ID\r\n        isnotempty(ResourceType) and tolower(ResourceType) != tolower(x_ResourceType) and ResourceType !contains '/', ResourceType,\r\n        // Use CommitmentDiscountType for commitment discount purchases\r\n        ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountType), CommitmentDiscountType,\r\n        // Look up display name from internal type\r\n        isnotempty(x_ResourceType), coalesce(resource_type(x_ResourceType).SingularDisplayName, ResourceType, x_ResourceType),\r\n        ResourceType)\r\n    //\r\n    // Sort columns and apply final transforms\r\n    | project\r\n        AvailabilityZone,\r\n        BilledCost,\r\n        BillingAccountId = tolower(BillingAccountId),\r\n        BillingAccountName,\r\n        BillingAccountType,\r\n        BillingCurrency,\r\n        BillingPeriodEnd,\r\n        BillingPeriodStart,\r\n        ChargeCategory = case(\r\n            // Handle FOCUS 1.0-preview ChargeSubcategory\r\n            ChargeSubcategory == 'Credit', 'Credit',\r\n            ChargeSubcategory == 'Refund', 'Purchase',  // We are assuming purchase refunds since we don't have data to indicate usage refunds\r\n            ChargeCategory\r\n        ),\r\n        ChargeClass = case(ChargeSubcategory == 'Refund', 'Correction', ChargeClass),\r\n        ChargeDescription,\r\n        // BUG: ChargeFrequency shows \"Usage-Based\" for monthly recurring savings plan purchases\r\n        ChargeFrequency = iff(ChargeCategory == 'Purchase' and isnotempty(CommitmentDiscountId) and ChargeFrequency == 'Usage-Based' and ProviderName == 'Microsoft' and x_SourceVersion startswith '1.0', 'Recurring', ChargeFrequency),\r\n        ChargePeriodEnd,\r\n        ChargePeriodStart,\r\n        CommitmentDiscountCategory,\r\n        CommitmentDiscountId = tolower(CommitmentDiscountId),\r\n        CommitmentDiscountName,\r\n        CommitmentDiscountStatus = case(\r\n            // Handle FOCUS 1.0-preview ChargeSubcategory\r\n            ChargeSubcategory == 'Used Commitment', 'Used',\r\n            ChargeSubcategory == 'Unused Commitment', 'Unused',\r\n            CommitmentDiscountStatus\r\n        ),\r\n        CommitmentDiscountType,\r\n        ConsumedQuantity,\r\n        ConsumedUnit,\r\n        ContractedCost = coalesce(ContractedCost, x_OnDemandCost, x_Cost),\r\n        ContractedUnitPrice = coalesce(ContractedUnitPrice, x_OnDemandUnitPrice),\r\n        EffectiveCost,\r\n        InvoiceIssuerName,\r\n        ListCost,\r\n        ListUnitPrice,\r\n        PricingCategory = case(\r\n            // Handle FOCUS 1.0-preview PricingCategory values\r\n            PricingCategory == 'On-Demand', 'Standard',\r\n            PricingCategory == 'Commitment-Based', 'Committed',\r\n            PricingCategory\r\n        ),\r\n        PricingQuantity,\r\n        PricingUnit,\r\n        ProviderName,\r\n        // Handle missing PublisherName values\r\n        PublisherName = case(PublisherName == 'Microsoft Corporation', 'Microsoft', isnotempty(PublisherName), PublisherName, x_PublisherCategory == 'Cloud Provider', ProviderName, ''),\r\n        // Handle FOCUS 1.0-preview Region column\r\n        RegionId = coalesce(RegionId, iff(ProviderName == 'Microsoft', replace_string(tolower(Region), ' ', ''), Region)),\r\n        RegionName = coalesce(RegionName, Region),\r\n        ResourceId,\r\n        ResourceName,\r\n        ResourceType,\r\n        ServiceCategory,\r\n        ServiceName,\r\n        SkuId,\r\n        SkuPriceId,\r\n        SubAccountId,\r\n        SubAccountName,\r\n        SubAccountType,              // Azure 1.0-preview(v1)+\r\n        Tags = parse_json(Tags),\r\n        x_AccountId,                 // Azure 1.0-preview(v1)+\r\n        x_AccountName,               // Azure 1.0-preview(v1)+\r\n        x_AccountOwnerId,            // Azure 1.0-preview(v1)+\r\n        x_BilledCostInUsd,           // Azure 1.0-preview(v1)+\r\n        x_BilledUnitPrice,           // Azure 1.0-preview(v1)+\r\n        x_BillingAccountAgreement = case(\r\n            ProviderName == 'Microsoft' and x_BillingAccountId == x_BillingProfileId, 'EA',\r\n            ProviderName == 'Microsoft' and x_BillingAccountId != x_BillingProfileId, 'MCA',\r\n            ProviderName\r\n        ),                           // Hubs add-on\r\n        x_BillingAccountId,          // Azure 1.0-preview(v1)+\r\n        x_BillingAccountName,        // Azure 1.0-preview(v1)+\r\n        x_BillingExchangeRate,       // Azure 1.0-preview(v1)+\r\n        x_BillingExchangeRateDate,   // Azure 1.0-preview(v1)+\r\n        x_BillingProfileId,          // Azure 1.0-preview(v1)+\r\n        x_BillingProfileName,        // Azure 1.0-preview(v1)+\r\n        x_ChargeId,                  // Azure 1.0-preview(v1) only\r\n        x_ContractedCostInUsd = coalesce(x_ContractedCostInUsd, x_OnDemandCostInUsd), // Azure 1.0+\r\n        x_CostAllocationRuleName,    // Azure 1.0-preview(v1)+\r\n        x_CostCategories = parse_json(x_CostCategories),  // AWS 1.0 (JSON)\r\n        x_CostCenter,                // Azure 1.0-preview(v1)+\r\n        x_Credits = parse_json(x_Credits),  // GCP Jan 2024\r\n        x_CostType,                  // GCP Jan 2024\r\n        x_CurrencyConversionRate,    // GCP Jun 2024\r\n        x_CustomerId,                // Azure 1.0-preview(v1)+\r\n        x_CustomerName,              // Azure 1.0-preview(v1)+\r\n        x_Discount = parse_json(x_Discount),  // AWS 1.0 (JSON)\r\n        x_EffectiveCostInUsd,        // Azure 1.0-preview(v1)+\r\n        x_EffectiveUnitPrice,        // Azure 1.0-preview(v1)+\r\n        x_ExportTime,                // GCP Jan 2024\r\n        x_IngestionTime,             // Hubs add-on\r\n        x_InvoiceId,                 // Azure 1.0-preview(v1)+\r\n        x_InvoiceIssuerId,           // Azure 1.0-preview(v1)+\r\n        x_InvoiceSectionId,          // Azure 1.0-preview(v1)+\r\n        x_InvoiceSectionName,        // Azure 1.0-preview(v1)+\r\n        x_ListCostInUsd,             // Azure 1.0-preview(v1)+\r\n        x_Location,                  // GCP Jan 2024\r\n        x_Operation,                 // AWS 1.0\r\n        x_PartnerCreditApplied,      // Azure 1.0-preview(v1)+\r\n        x_PartnerCreditRate,         // Azure 1.0-preview(v1)+\r\n        x_PricingBlockSize,          // Azure 1.0-preview(v1)+\r\n        x_PricingCurrency,           // Azure 1.0-preview(v1)+\r\n        x_PricingSubcategory,        // Azure 1.0-preview(v1)+\r\n        x_PricingUnitDescription,    // Azure 1.0-preview(v1)+\r\n        x_Project,                   // GCP Jan 2024\r\n        x_PublisherCategory,         // Azure 1.0-preview(v1)+\r\n        x_PublisherId,               // Azure 1.0-preview(v1)+\r\n        x_ResellerId,                // Azure 1.0-preview(v1)+\r\n        x_ResellerName,              // Azure 1.0-preview(v1)+\r\n        x_ResourceGroupName = tolower(x_ResourceGroupName),  // Azure 1.0-preview(v1)+\r\n        x_ResourceType,              // Azure 1.0-preview(v1)+\r\n        x_ServiceCode,               // AWS 1.0\r\n        x_ServiceId,                 // GCP Jan 2024\r\n        x_ServicePeriodEnd,          // Azure 1.0-preview(v1)+\r\n        x_ServicePeriodStart,        // Azure 1.0-preview(v1)+\r\n        x_SkuDescription,            // Azure 1.0-preview(v1)+\r\n        x_SkuDetails = parse_json(x_SkuDetails),  // Azure 1.0-preview(v1)+\r\n        x_SkuIsCreditEligible,       // Azure 1.0-preview(v1)+ \r\n        x_SkuMeterCategory,          // Azure 1.0-preview(v1)+\r\n        x_SkuMeterId,                // Azure 1.0-preview(v1)+\r\n        x_SkuMeterName,              // Azure 1.0-preview(v1)+\r\n        x_SkuMeterSubcategory,       // Azure 1.0-preview(v1)+\r\n        x_SkuOfferId,                // Azure 1.0-preview(v1)+\r\n        x_SkuOrderId,                // Azure 1.0-preview(v1)+\r\n        x_SkuOrderName,              // Azure 1.0-preview(v1)+\r\n        x_SkuPartNumber,             // Azure 1.0-preview(v1)+\r\n        x_SkuRegion,                 // Azure 1.0-preview(v1)+\r\n        x_SkuServiceFamily,          // Azure 1.0-preview(v1)+\r\n        x_SkuTerm,                   // Azure 1.0-preview(v1)+\r\n        x_SkuTier,                   // Azure 1.0-preview(v1)+ \r\n        x_SourceChanges,             // Hubs add-on\r\n        x_SourceName,                // Hubs add-on\r\n        x_SourceProvider,            // Hubs add-on\r\n        x_SourceType,                // Hubs add-on\r\n        x_SourceVersion,             // Hubs add-on\r\n        x_UsageType                  // AWS 1.0\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Costs_final_v1_0 table\r\n.create-merge table Costs_final_v1_0 (\r\n    AvailabilityZone:           string,\r\n    BilledCost:                 decimal,\r\n    BillingAccountId:           string,\r\n    BillingAccountName:         string,\r\n    BillingAccountType:         string,    // Azure 1.0-preview(v1)+\r\n    BillingCurrency:            string,\r\n    BillingPeriodEnd:           datetime,\r\n    BillingPeriodStart:         datetime,\r\n    ChargeCategory:             string,\r\n    ChargeClass:                string,\r\n    ChargeDescription:          string,\r\n    ChargeFrequency:            string,\r\n    ChargePeriodEnd:            datetime,\r\n    ChargePeriodStart:          datetime,\r\n    CommitmentDiscountCategory: string,    // FOCUS 1.0-preview only\r\n    CommitmentDiscountId:       string,\r\n    CommitmentDiscountName:     string,\r\n    CommitmentDiscountStatus:   string,\r\n    CommitmentDiscountType:     string,\r\n    ConsumedQuantity:           decimal,\r\n    ConsumedUnit:               string,\r\n    ContractedCost:             decimal,\r\n    ContractedUnitPrice:        decimal,\r\n    EffectiveCost:              decimal,\r\n    InvoiceIssuerName:          string,\r\n    ListCost:                   decimal,\r\n    ListUnitPrice:              decimal,\r\n    PricingCategory:            string,\r\n    PricingQuantity:            decimal,\r\n    PricingUnit:                string,\r\n    ProviderName:               string,\r\n    PublisherName:              string,\r\n    RegionId:                   string,\r\n    RegionName:                 string,\r\n    ResourceId:                 string,\r\n    ResourceName:               string,\r\n    ResourceType:               string,\r\n    ServiceCategory:            string,\r\n    ServiceName:                string,\r\n    SkuId:                      string,\r\n    SkuPriceId:                 string,\r\n    SubAccountId:               string,\r\n    SubAccountName:             string,\r\n    SubAccountType:             string,\r\n    Tags:                       dynamic,\r\n    x_AccountId:                string,    // Azure 1.0-preview(v1)+\r\n    x_AccountName:              string,    // Azure 1.0-preview(v1)+\r\n    x_AccountOwnerId:           string,    // Azure 1.0-preview(v1)+\r\n    x_BilledCostInUsd:          decimal,   // Azure 1.0-preview(v1)+\r\n    x_BilledUnitPrice:          decimal,   // Azure 1.0-preview(v1)+\r\n    x_BillingAccountAgreement:  string,    // Hubs add-on\r\n    x_BillingAccountId:         string,    // Azure 1.0-preview(v1)+\r\n    x_BillingAccountName:       string,    // Azure 1.0-preview(v1)+\r\n    x_BillingExchangeRate:      decimal,   // Azure 1.0-preview(v1)+\r\n    x_BillingExchangeRateDate:  datetime,  // Azure 1.0-preview(v1)+\r\n    x_BillingProfileId:         string,    // Azure 1.0-preview(v1)+\r\n    x_BillingProfileName:       string,    // Azure 1.0-preview(v1)+\r\n    x_ChargeId:                 string,    // Azure 1.0-preview(v1) only\r\n    x_ContractedCostInUsd:      decimal,   // Azure 1.0+\r\n    x_CostAllocationRuleName:   string,    // Azure 1.0-preview(v1)+\r\n    x_CostCategories:           dynamic,   // AWS 1.0 (JSON)\r\n    x_CostCenter:               string,    // Azure 1.0-preview(v1)+\r\n    x_Credits:                  dynamic,   // GCP Jan 2024\r\n    x_CostType:                 string,    // GCP Jan 2024\r\n    x_CurrencyConversionRate:   decimal,   // GCP Jun 2024\r\n    x_CustomerId:               string,    // Azure 1.0-preview(v1)+\r\n    x_CustomerName:             string,    // Azure 1.0-preview(v1)+\r\n    x_Discount:                 dynamic,   // AWS 1.0 (JSON)\r\n    x_EffectiveCostInUsd:       decimal,   // Azure 1.0-preview(v1)+\r\n    x_EffectiveUnitPrice:       decimal,   // Azure 1.0-preview(v1)+\r\n    x_ExportTime:               datetime,  // GCP Jan 2024\r\n    x_IngestionTime:            datetime,  // Hubs add-on\r\n    x_InvoiceId:                string,    // Azure 1.0-preview(v1)+\r\n    x_InvoiceIssuerId:          string,    // Azure 1.0-preview(v1)+\r\n    x_InvoiceSectionId:         string,    // Azure 1.0-preview(v1)+\r\n    x_InvoiceSectionName:       string,    // Azure 1.0-preview(v1)+\r\n    x_ListCostInUsd:            decimal,   // Azure 1.0-preview(v1)+\r\n    x_Location:                 string,    // GCP Jan 2024\r\n    x_Operation:                string,    // AWS 1.0\r\n    x_PartnerCreditApplied:     string,    // Azure 1.0-preview(v1)+\r\n    x_PartnerCreditRate:        string,    // Azure 1.0-preview(v1)+\r\n    x_PricingBlockSize:         decimal,   // Azure 1.0-preview(v1)+\r\n    x_PricingCurrency:          string,    // Azure 1.0-preview(v1)+\r\n    x_PricingSubcategory:       string,    // Azure 1.0-preview(v1)+\r\n    x_PricingUnitDescription:   string,    // Azure 1.0-preview(v1)+\r\n    x_Project:                  string,    // GCP Jan 2024\r\n    x_PublisherCategory:        string,    // Azure 1.0-preview(v1)+\r\n    x_PublisherId:              string,    // Azure 1.0-preview(v1)+\r\n    x_ResellerId:               string,    // Azure 1.0-preview(v1)+\r\n    x_ResellerName:             string,    // Azure 1.0-preview(v1)+\r\n    x_ResourceGroupName:        string,    // Azure 1.0-preview(v1)+\r\n    x_ResourceType:             string,    // Azure 1.0-preview(v1)+\r\n    x_ServiceCode:              string,    // AWS 1.0\r\n    x_ServiceId:                string,    // GCP Jan 2024\r\n    x_ServicePeriodEnd:         datetime,  // Azure 1.0-preview(v1)+\r\n    x_ServicePeriodStart:       datetime,  // Azure 1.0-preview(v1)+\r\n    x_SkuDescription:           string,    // Azure 1.0-preview(v1)+\r\n    x_SkuDetails:               dynamic,   // Azure 1.0-preview(v1)+\r\n    x_SkuIsCreditEligible:      bool,      // Azure 1.0-preview(v1)+ \r\n    x_SkuMeterCategory:         string,    // Azure 1.0-preview(v1)+\r\n    x_SkuMeterId:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuMeterName:             string,    // Azure 1.0-preview(v1)+\r\n    x_SkuMeterSubcategory:      string,    // Azure 1.0-preview(v1)+\r\n    x_SkuOfferId:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuOrderId:               string,    // Azure 1.0-preview(v1)+\r\n    x_SkuOrderName:             string,    // Azure 1.0-preview(v1)+\r\n    x_SkuPartNumber:            string,    // Azure 1.0-preview(v1)+\r\n    x_SkuRegion:                string,    // Azure 1.0-preview(v1)+\r\n    x_SkuServiceFamily:         string,    // Azure 1.0-preview(v1)+\r\n    x_SkuTerm:                  int,       // Azure 1.0-preview(v1)+\r\n    x_SkuTier:                  string,    // Azure 1.0-preview(v1)+ \r\n    x_SourceChanges:            string,    // Hubs add-on\r\n    x_SourceName:               string,    // Hubs add-on\r\n    x_SourceProvider:           string,    // Hubs add-on\r\n    x_SourceType:               string,    // Hubs add-on\r\n    x_SourceVersion:            string,    // Hubs add-on\r\n    x_UsageType:                string     // AWS 1.0\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Update policy for Costs_raw -> Costs_final_v1_0 table\r\n// NOTE: Must be after transform function is defined\r\n.alter table Costs_final_v1_0 policy update\r\n```\r\n[{\r\n    \"IsEnabled\": true,\r\n    \"Source\": \"Costs_raw\",\r\n    \"Query\": \"Costs_transform_v1_0()\",\r\n    \"IsTransactional\": true,\r\n    \"PropagateIngestionProperties\": true\r\n}]\r\n```\r\n\r\n\r\n//===| CommitmentDiscountUsage |========================================================================================\r\n// Supported versions:\r\n// - MS EA reservation details: 2023-03-01  -- See https://learn.microsoft.com/azure/cost-management-billing/dataset-schema/reservation-details-ea\r\n// - MS MCA reservation details: 2023-03-01 -- See https://learn.microsoft.com/azure/cost-management-billing/dataset-schema/reservation-details-mca\r\n//======================================================================================================================\r\n\r\n// CommitmentDiscountUsage_raw table\r\n.create-merge table CommitmentDiscountUsage_raw (\r\n    InstanceFlexibilityGroup: string,\r\n    InstanceFlexibilityRatio: decimal,\r\n    InstanceId:               string,\r\n    Kind:                     string,\r\n    ReservationId:            string,\r\n    ReservationOrderId:       string,\r\n    ReservedHours:            decimal,\r\n    SkuName:                  string,\r\n    TotalReservedQuantity:    decimal,\r\n    UsageDate:                datetime,\r\n    UsedHours:                decimal,\r\n    x_SourceName:             string,    // Hubs add-on\r\n    x_SourceProvider:         string,    // Hubs add-on\r\n    x_SourceType:             string,    // Hubs add-on\r\n    x_SourceVersion:          string     // Hubs add-on\r\n)\r\n\r\n// CommitmentDiscountUsage_raw ingestion mapping\r\n.create-or-alter table CommitmentDiscountUsage_raw ingestion parquet mapping \"CommitmentDiscountUsage_raw_mapping\"\r\n```\r\n[\r\n    { \"Column\": \"InstanceFlexibilityGroup\", \"Properties\": { \"Field\": \"InstanceFlexibilityGroup\" } },\r\n    { \"Column\": \"InstanceFlexibilityRatio\", \"Properties\": { \"Field\": \"InstanceFlexibilityRatio\" } },\r\n    { \"Column\": \"InstanceId\",               \"Properties\": { \"Field\": \"InstanceId\" } },\r\n    { \"Column\": \"Kind\",                     \"Properties\": { \"Field\": \"Kind\" } },\r\n    { \"Column\": \"ReservationId\",            \"Properties\": { \"Field\": \"ReservationId\" } },\r\n    { \"Column\": \"ReservationOrderId\",       \"Properties\": { \"Field\": \"ReservationOrderId\" } },\r\n    { \"Column\": \"ReservedHours\",            \"Properties\": { \"Field\": \"ReservedHours\" } },\r\n    { \"Column\": \"SkuName\",                  \"Properties\": { \"Field\": \"SkuName\" } },\r\n    { \"Column\": \"TotalReservedQuantity\",    \"Properties\": { \"Field\": \"TotalReservedQuantity\" } },\r\n    { \"Column\": \"UsageDate\",                \"Properties\": { \"Field\": \"UsageDate\" } },\r\n    { \"Column\": \"UsedHours\",                \"Properties\": { \"Field\": \"UsedHours\" } },\r\n    { \"Column\": \"x_SourceName\",             \"Properties\": { \"Field\": \"x_SourceName\" } },\r\n    { \"Column\": \"x_SourceProvider\",         \"Properties\": { \"Field\": \"x_SourceProvider\" } },\r\n    { \"Column\": \"x_SourceType\",             \"Properties\": { \"Field\": \"x_SourceType\" } },\r\n    { \"Column\": \"x_SourceVersion\",          \"Properties\": { \"Field\": \"x_SourceVersion\" } }\r\n]\r\n```\r\n\r\n// CommitmentDiscountUsage_raw retention policy\r\n.alter-merge table CommitmentDiscountUsage_raw policy retention softdelete = $$rawRetentionInDays$$d recoverability = disabled\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// CommitmentDiscountUsage_transform_v1_0 function\r\n.create-or-alter function\r\nwith (docstring='All commitment discount usage transformed to FOCUS 1.0. This includes reservationdeatils_raw.', folder='Commitment discounts')\r\nCommitmentDiscountUsage_transform_v1_0()\r\n{\r\n    // NOTE: All open issues and questions are tracked @ https://github.com/microsoft/finops-toolkit/issues/1111\r\n    CommitmentDiscountUsage_raw\r\n    //\r\n    // Set ProviderName\r\n    | extend ProviderName = 'Microsoft'\r\n    //\r\n    // Handle resource columns\r\n    | extend ResourceId = tolower(InstanceId)\r\n    | extend tmp_ResourceDetails = parse_resourceid(ResourceId)\r\n    | extend ResourceName        = tostring(tmp_ResourceDetails.ResourceName)\r\n    | extend SubAccountId        = tostring(tmp_ResourceDetails.SubAccountId)\r\n    | extend x_ResourceGroupName = tostring(tmp_ResourceDetails.x_ResourceGroupName)\r\n    | extend x_ResourceType      = tostring(tmp_ResourceDetails.x_ResourceType)\r\n    | lookup kind=leftouter (ResourceTypes | distinct x_ResourceType, ResourceType = SingularDisplayName) on x_ResourceType\r\n    | lookup kind=leftouter (Services | distinct x_ResourceType, ServiceName, ServiceCategory, x_ServiceModel) on x_ResourceType\r\n    //\r\n    // Sort columns and apply final transforms\r\n    | project\r\n        ChargePeriodEnd                     = UsageDate + 1d,\r\n        ChargePeriodStart                   = UsageDate,\r\n        CommitmentDiscountCategory          = 'Usage',\r\n        CommitmentDiscountId                = tolower(strcat('/providers/microsoft.capacity/reservationorders/', ReservationOrderId, '/reservations/', ReservationId)),\r\n        CommitmentDiscountType              = 'Reservation',\r\n        ConsumedQuantity                    = UsedHours,\r\n        ProviderName,\r\n        ResourceId,\r\n        ResourceName,\r\n        ResourceType,\r\n        ServiceCategory,\r\n        ServiceName,\r\n        SubAccountId,\r\n        x_CommitmentDiscountCommittedCount  = TotalReservedQuantity,\r\n        x_CommitmentDiscountCommittedAmount = ReservedHours,\r\n        // TODO: Is this needed? -- x_CommitmentDiscountKind            = Kind,\r\n        x_CommitmentDiscountNormalizedGroup = iff(InstanceFlexibilityGroup == 'NA', '', InstanceFlexibilityGroup),\r\n        x_CommitmentDiscountNormalizedRatio = InstanceFlexibilityRatio,\r\n        x_CommitmentDiscountQuantity        = UsedHours * InstanceFlexibilityRatio,\r\n        x_IngestionTime                     = ingestion_time(),\r\n        x_ResourceGroupName,\r\n        x_ResourceType,\r\n        // x_RowId = hash_sha256(strcat(\r\n        //     // DO NOT CHANGE COLUMNS OR COLUMN ORDER\r\n        //     CommitmentDiscountId,\r\n        //     ResourceId,\r\n        //     ChargePeriodStart\r\n        // )),\r\n        x_ServiceModel,\r\n        x_SkuOrderId                        = ReservationOrderId,\r\n        x_SkuSize                           = iff(SkuName == 'NA', '', SkuName),\r\n        x_SourceName                        = coalesce(x_SourceName, iff(ProviderName == 'Microsoft', 'Cost Management', ProviderName)),\r\n        x_SourceProvider                    = coalesce(x_SourceProvider, ProviderName),\r\n        x_SourceType                        = coalesce(x_SourceType, iff(ProviderName == 'Microsoft', 'ReservationDetails', '')),\r\n        x_SourceVersion                     = coalesce(x_SourceVersion, iff(ProviderName == 'Microsoft', '2024-03-01', ''))\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// CommitmentDiscountUsage_final_v1_0 table\r\n.create-merge table CommitmentDiscountUsage_final_v1_0 (\r\n    ChargePeriodEnd:                     datetime,  // Hubs add-on\r\n    ChargePeriodStart:                   datetime,  // MS 2023-03-01\r\n    CommitmentDiscountCategory:          string,    // Hubs add-on\r\n    CommitmentDiscountId:                string,    // MS 2023-03-01\r\n    CommitmentDiscountType:              string,    // Hubs add-on\r\n    ConsumedQuantity:                    decimal,   // MS 2023-03-01\r\n    ProviderName:                        string,    // Hubs add-on\r\n    ResourceId:                          string,    // MS 2023-03-01\r\n    ResourceName:                        string,    // Hubs add-on\r\n    ResourceType:                        string,    // Hubs add-on\r\n    ServiceCategory:                     string,    // Hubs add-on\r\n    ServiceName:                         string,    // Hubs add-on\r\n    SubAccountId:                        string,    // Hubs add-on\r\n    x_CommitmentDiscountCommittedCount:  decimal,   // MS 2023-03-01\r\n    x_CommitmentDiscountCommittedAmount: decimal,   // MS 2023-03-01\r\n    x_CommitmentDiscountNormalizedGroup: string,    // MS 2023-03-01\r\n    x_CommitmentDiscountNormalizedRatio: decimal,   // MS 2023-03-01\r\n    x_CommitmentDiscountQuantity:        decimal,   // MS 2023-03-01\r\n    x_IngestionTime:                     datetime,  // Hubs add-on\r\n    x_ResourceGroupName:                 string,    // Hubs add-on\r\n    x_ResourceType:                      string,    // Hubs add-on\r\n    x_ServiceModel:                      string,    // Hubs add-on\r\n    x_SkuOrderId:                        string,    // MS 2023-03-01\r\n    x_SkuSize:                           string,    // MS 2023-03-01\r\n    x_SourceName:                        string,    // Hubs add-on\r\n    x_SourceProvider:                    string,    // Hubs add-on\r\n    x_SourceType:                        string,    // Hubs add-on\r\n    x_SourceVersion:                     string     // Hubs add-on\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Update policy for CommitmentDiscountUsage_raw -> CommitmentDiscountUsage_final_v1_0 table\r\n// NOTE: Must be after transform function is defined\r\n.alter table CommitmentDiscountUsage_final_v1_0 policy update\r\n```\r\n[{\r\n    \"IsEnabled\": true,\r\n    \"Source\": \"CommitmentDiscountUsage_raw\",\r\n    \"Query\": \"CommitmentDiscountUsage_transform_v1_0()\",\r\n    \"IsTransactional\": true,\r\n    \"PropagateIngestionProperties\": true\r\n}]\r\n```\r\n\r\n\r\n//===| Recommendations |================================================================================================\r\n// Supported datasets/versions:\r\n// - MS CM EA reservation recommendations: 2023-05-01  -- See https://learn.microsoft.com/en-us/azure/cost-management-billing/dataset-schema/reservation-recommendations-ea\r\n// - MS CM MCA reservation recommendations: 2023-05-01 -- See https://learn.microsoft.com/en-us/azure/cost-management-billing/dataset-schema/reservation-recommendations-mca\r\n//======================================================================================================================\r\n\r\n// Recommendations_raw table\r\n.create-merge table Recommendations_raw (\r\n    CostWithNoReservedInstances:     decimal,   // MS CM EA resv reco 2024-05-01\r\n    CostWithNoReservedInstancesJson:    string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces and flag as JSON\r\n    FirstUsageDate:                     datetime,  // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    InstanceFlexibilityGroup:           string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    InstanceFlexibilityRatio:           decimal,   // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    Location:                        string,    // MS CM EA+MCA resv reco 2024-05-01\r\n    LookBackPeriod:                  string,    // MS CM EA+MCA resv reco 2024-05-01\r\n    MeterId:                            string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    NetSavings:                      decimal,   // MS CM EA resv reco 2024-05-01\r\n    NetSavingsJson:                     string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces and flag as JSON\r\n    NormalizedSize:                     string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    RecommendedQuantity:                decimal,   // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    RecommendedQuantityNormalized:      decimal,   // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    ResourceType:                    string,    // MS CM EA+MCA resv reco 2024-05-01\r\n    Scope:                              string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    SKU:                             string,    // MS CM EA resv reco 2024-05-01\r\n    SkuName:                            string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces\r\n    SkuProperties:                      string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA\r\n    SubscriptionId:                  string,    // MS CM EA+MCA resv reco 2024-05-01\r\n    Term:                            string,    // MS CM EA+MCA resv reco 2024-05-01\r\n    TotalCostWithReservedInstances:  decimal,   // MS CM EA resv reco 2024-05-01\r\n    TotalCostWithReservedInstancesJson: string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces and flag as JSON\r\n    x_SourceName:                    string,    // Hubs add-on\r\n    x_SourceProvider:                string,    // Hubs add-on\r\n    x_SourceType:                    string,    // Hubs add-on\r\n    x_SourceVersion:                 string     // Hubs add-on\r\n)\r\n\r\n// Recommendations_raw ingestion mapping\r\n.create-or-alter table Recommendations_raw ingestion parquet mapping \"Recommendations_raw_mapping\"\r\n```\r\n[\r\n    { \"Column\": \"CostWithNoReservedInstances\",     \"Properties\": { \"Field\": \"CostWithNoReservedInstances\" } },\r\n    { \"Column\": \"CostWithNoReservedInstancesJson\",    \"Properties\": { \"Field\": \"CostWithNoReservedInstancesJson\" } },\r\n    { \"Column\": \"FirstUsageDate\",                  \"Properties\": { \"Field\": \"FirstUsageDate\" } },\r\n    { \"Column\": \"InstanceFlexibilityGroup\",        \"Properties\": { \"Field\": \"InstanceFlexibilityGroup\" } },\r\n    { \"Column\": \"InstanceFlexibilityRatio\",        \"Properties\": { \"Field\": \"InstanceFlexibilityRatio\" } },\r\n    { \"Column\": \"Location\",                        \"Properties\": { \"Field\": \"Location\" } },\r\n    { \"Column\": \"LookBackPeriod\",                  \"Properties\": { \"Field\": \"LookBackPeriod\" } },\r\n    { \"Column\": \"MeterId\",                         \"Properties\": { \"Field\": \"MeterId\" } },\r\n    { \"Column\": \"NetSavings\",                      \"Properties\": { \"Field\": \"NetSavings\" } },\r\n    { \"Column\": \"NetSavingsJson\",                     \"Properties\": { \"Field\": \"NetSavingsJson\" } },\r\n    { \"Column\": \"NormalizedSize\",                  \"Properties\": { \"Field\": \"NormalizedSize\" } },\r\n    { \"Column\": \"RecommendedQuantity\",             \"Properties\": { \"Field\": \"RecommendedQuantity\" } },\r\n    { \"Column\": \"RecommendedQuantityNormalized\",   \"Properties\": { \"Field\": \"RecommendedQuantityNormalized\" } },\r\n    { \"Column\": \"ResourceType\",                    \"Properties\": { \"Field\": \"ResourceType\" } },\r\n    { \"Column\": \"Scope\",                           \"Properties\": { \"Field\": \"Scope\" } },\r\n    { \"Column\": \"SKU\",                             \"Properties\": { \"Field\": \"SKU\" } },\r\n    { \"Column\": \"SkuName\",                         \"Properties\": { \"Field\": \"SkuName\" } },\r\n    { \"Column\": \"SkuProperties\",                   \"Properties\": { \"Field\": \"SkuProperties\" } },\r\n    { \"Column\": \"SubscriptionId\",                  \"Properties\": { \"Field\": \"SubscriptionId\" } },\r\n    { \"Column\": \"Term\",                            \"Properties\": { \"Field\": \"Term\" } },\r\n    { \"Column\": \"TotalCostWithReservedInstances\",  \"Properties\": { \"Field\": \"TotalCostWithReservedInstances\" } },\r\n    { \"Column\": \"TotalCostWithReservedInstancesJson\", \"Properties\": { \"Field\": \"TotalCostWithReservedInstancesJson\" } },\r\n    { \"Column\": \"x_SourceName\",                    \"Properties\": { \"Field\": \"x_SourceName\" } },\r\n    { \"Column\": \"x_SourceProvider\",                \"Properties\": { \"Field\": \"x_SourceProvider\" } },\r\n    { \"Column\": \"x_SourceType\",                    \"Properties\": { \"Field\": \"x_SourceType\" } },\r\n    { \"Column\": \"x_SourceVersion\",                 \"Properties\": { \"Field\": \"x_SourceVersion\" } }\r\n]\r\n```\r\n\r\n// Recommendations_raw retention policy\r\n.alter-merge table Recommendations_raw policy retention softdelete = $$rawRetentionInDays$$d recoverability = disabled\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Recommendations_transform_v1_0 function\r\n.create-or-alter function\r\nwith (docstring = \"All recommendations transformed to FOCUS 1.0.\",folder = \"Recommendations\")\r\nRecommendations_transform_v1_0()\r\n{\r\n    // NOTE: All open issues and questions are tracked @ https://github.com/microsoft/finops-toolkit/issues/1111\r\n    let isoMonths = (duration: string) {\r\n        let number = toint(replace_regex(duration, @'[PMY]', ''));\r\n        toint(case(\r\n            duration == '', toint(''),\r\n            duration endswith \"Y\", number * 12,\r\n            duration endswith \"M\", number,\r\n            -1\r\n        ))\r\n    };\r\n    Recommendations_raw\r\n    | extend x_IngestionTime = ingestion_time()\r\n    //\r\n    // Set ProviderName\r\n    | extend ProviderName = 'Microsoft'\r\n    //\r\n    // Set source columns\r\n    | extend x_SourceName     = coalesce(x_SourceName, iff(ProviderName == 'Microsoft', 'Cost Management', ProviderName))\r\n    | extend x_SourceProvider = coalesce(x_SourceProvider, ProviderName)\r\n    | extend x_SourceType     = coalesce(x_SourceType, iff(ProviderName == 'Microsoft', 'ReservationRecommendations', ''))\r\n    | extend x_SourceVersion  = coalesce(x_SourceVersion, iff(ProviderName == 'Microsoft', '2023-05-01', ''))\r\n    //\r\n    // Convert JSON cost columns to decimal\r\n    | extend CostWithNoReservedInstances    = case(isnotempty(CostWithNoReservedInstances),    CostWithNoReservedInstances,    isnotempty(CostWithNoReservedInstancesJson),    todecimal(extract(@'\"value\":([0-9\\.]+)', 1, CostWithNoReservedInstancesJson)),    CostWithNoReservedInstances)\r\n    | extend NetSavings                     = case(isnotempty(NetSavings),                     NetSavings,                     isnotempty(NetSavingsJson),                     todecimal(extract(@'\"value\":([0-9\\.]+)', 1, NetSavingsJson)),                     NetSavings)\r\n    | extend TotalCostWithReservedInstances = case(isnotempty(TotalCostWithReservedInstances), TotalCostWithReservedInstances, isnotempty(TotalCostWithReservedInstancesJson), todecimal(extract(@'\"value\":([0-9\\.]+)', 1, TotalCostWithReservedInstancesJson)), TotalCostWithReservedInstances)\r\n    //\r\n    // Build recommendation details\r\n    | lookup kind=leftouter (database('Ingestion').Regions | summarize RegionName = make_set(RegionName)[0] by Location = RegionId) on Location\r\n    | extend x_RecommendationDetails = case(\r\n      x_SourceType == 'ReservationRecommendations', bag_pack(\r\n        'CommitmentDiscountNormalizedGroup', InstanceFlexibilityGroup,\r\n        'CommitmentDiscountNormalizedRatio', InstanceFlexibilityRatio,\r\n        'CommitmentDiscountNormalizedSize', NormalizedSize,\r\n        'CommitmentDiscountResourceType', ResourceType,\r\n        'CommitmentDiscountScope', coalesce(Scope, scope),\r\n        'LookbackPeriodDuration', case(\r\n            LookBackPeriod matches regex @'^Last([0-9]+)Days$', replace_regex(LookBackPeriod, @'^Last([0-9]+)Days$', @'P\\1D'),\r\n            LookBackPeriod matches regex @'^[0-9]+$',           strcat('P', LookBackPeriod, 'D'),\r\n            ''\r\n        ),\r\n        'LookbackPeriodStart', FirstUsageDate,\r\n        'RecommendedQuantity', RecommendedQuantity,\r\n        'RecommendedQuantityNormalized', RecommendedQuantityNormalized,\r\n        'RegionId', Location,\r\n        'RegionName', RegionName,\r\n        'SkuMeterId', coalesce(MeterId, MeterID),\r\n        'SkuPriceDetails', SkuProperties,\r\n        'SkuSize', coalesce(SKU, SkuName),\r\n        'SkuTerm', isoMonths(Term)\r\n      ),\r\n      dynamic({})\r\n    )\r\n    //\r\n    // Sort columns and apply final transforms\r\n    | extend x_RecommendationDate = FirstUsageDate + (toint(extract(@'^P([0-9]+)D$', 1, tostring(x_RecommendationDetails.LookbackPeriodDuration))) * 1d)\r\n    | extend x_RecommendationDate = iff(x_RecommendationDate > now(), startofday(now()), x_RecommendationDate)\r\n    | project\r\n        ProviderName,\r\n        SubAccountId = iff(isnotempty(SubscriptionId), strcat('/subscriptions/', SubscriptionId), ''),\r\n      x_IngestionTime,\r\n        x_EffectiveCostAfter = TotalCostWithReservedInstances,\r\n        x_EffectiveCostBefore = CostWithNoReservedInstances,\r\n        x_EffectiveCostSavings = NetSavings,\r\n        x_RecommendationDate,\r\n        x_RecommendationDetails,\r\n        x_SourceName,\r\n        x_SourceProvider,\r\n        x_SourceType,\r\n        x_SourceVersion\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Recommendations_final_v1_0 table\r\n.create-merge table Recommendations_final_v1_0 (\r\n    ProviderName:            string,\r\n    SubAccountId:            string,\r\n    x_IngestionTime:         datetime,\r\n    x_EffectiveCostAfter:    decimal,\r\n    x_EffectiveCostBefore:   decimal,\r\n    x_EffectiveCostSavings:  decimal,\r\n    x_RecommendationDate:    datetime,\r\n    x_RecommendationDetails: dynamic,\r\n    x_SourceName:            string,\r\n    x_SourceProvider:        string,\r\n    x_SourceType:            string,\r\n    x_SourceVersion:         string\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Update policy for Recommendations_raw -> Recommendations_final_v1_0 table\r\n// NOTE: Must be after transform function is defined\r\n.alter table Recommendations_final_v1_0 policy update\r\n```\r\n[{\r\n    \"IsEnabled\": true,\r\n    \"Source\": \"Recommendations_raw\",\r\n    \"Query\": \"Recommendations_transform_v1_0()\",\r\n    \"IsTransactional\": true,\r\n    \"PropagateIngestionProperties\": true\r\n}]\r\n```\r\n\r\n\r\n//===| Transactions |===================================================================================================\r\n// Supported versions:\r\n// - MS CM EA reservation transactions: 2023-05-01  -- See https://learn.microsoft.com/en-us/azure/cost-management-billing/dataset-schema/reservation-transactions-ea\r\n// - MS CM MCA reservation transactions: 2023-05-01 -- See https://learn.microsoft.com/en-us/azure/cost-management-billing/dataset-schema/reservation-transactions-mca\r\n//======================================================================================================================\r\n\r\n// Transactions_raw table\r\n.create-merge table Transactions_raw (\r\n    AccountName:                    string,    // MS CM EA resv trans 2023-05-01\r\n    AccountOwnerEmail:              string,    // MS CM EA resv trans 2023-05-01\r\n    Amount:                         decimal,   // MS CM EA+MCA resv trans 2023-05-01\r\n    ArmSkuName:                     string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    BillingFrequency:               string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    BillingMonth:                   string,    // MS CM EA resv trans 2023-05-01\r\n    BillingProfileId:               string,    // MS CM MCA resv trans 2023-05-01\r\n    BillingProfileName:             string,    // MS CM MCA resv trans 2023-05-01\r\n    CostCenter:                     string,    // MS CM EA resv trans 2023-05-01\r\n    Currency:                       string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    CurrentEnrollmentId:            string,    // MS CM EA resv trans 2023-05-01\r\n    DepartmentName:                 string,    // MS CM EA resv trans 2023-05-01\r\n    Description:                    string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    EventDate:                      datetime,  // MS CM EA+MCA resv trans 2023-05-01\r\n    EventType:                      string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    Invoice:                        string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    InvoiceId:                      string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    InvoiceSectionId:               string,    // MS CM MCA resv trans 2023-05-01\r\n    InvoiceSectionName:             string,    // MS CM MCA resv trans 2023-05-01\r\n    MonetaryCommitment:             decimal,   // MS CM EA resv trans 2023-05-01\r\n    Overage:                        decimal,   // MS CM EA resv trans 2023-05-01\r\n    PurchasingEnrollment:           string,    // MS CM EA resv trans 2023-05-01\r\n    PurchasingSubscriptionGuid:     string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    PurchasingSubscriptionName:     string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    Quantity:                       decimal,   // MS CM EA+MCA resv trans 2023-05-01\r\n    Region:                         string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    ReservationOrderId:             string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    ReservationOrderName:           string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    Term:                           string,    // MS CM EA+MCA resv trans 2023-05-01\r\n    x_SourceName:                   string,    // Hubs add-on\r\n    x_SourceProvider:               string,    // Hubs add-on\r\n    x_SourceType:                   string,    // Hubs add-on\r\n    x_SourceVersion:                string     // Hubs add-on\r\n)\r\n\r\n// Transactions_raw ingestion mapping\r\n.create-or-alter table Transactions_raw ingestion parquet mapping \"Transactions_raw_mapping\"\r\n```\r\n[\r\n    { \"Column\": \"AccountName\",                \"Properties\": { \"Field\": \"AccountName\" } },\r\n    { \"Column\": \"AccountOwnerEmail\",          \"Properties\": { \"Field\": \"AccountOwnerEmail\" } },\r\n    { \"Column\": \"Amount\",                     \"Properties\": { \"Field\": \"Amount\" } },\r\n    { \"Column\": \"ArmSkuName\",                 \"Properties\": { \"Field\": \"ArmSkuName\" } },\r\n    { \"Column\": \"BillingFrequency\",           \"Properties\": { \"Field\": \"BillingFrequency\" } },\r\n    { \"Column\": \"BillingMonth\",               \"Properties\": { \"Field\": \"BillingMonth\" } },\r\n    { \"Column\": \"BillingProfileId\",           \"Properties\": { \"Field\": \"BillingProfileId\" } },\r\n    { \"Column\": \"BillingProfileName\",         \"Properties\": { \"Field\": \"BillingProfileName\" } },\r\n    { \"Column\": \"CostCenter\",                 \"Properties\": { \"Field\": \"CostCenter\" } },\r\n    { \"Column\": \"Currency\",                   \"Properties\": { \"Field\": \"Currency\" } },\r\n    { \"Column\": \"CurrentEnrollmentId\",        \"Properties\": { \"Field\": \"CurrentEnrollmentId\" } },\r\n    { \"Column\": \"DepartmentName\",             \"Properties\": { \"Field\": \"DepartmentName\" } },\r\n    { \"Column\": \"Description\",                \"Properties\": { \"Field\": \"Description\" } },\r\n    { \"Column\": \"EventDate\",                  \"Properties\": { \"Field\": \"EventDate\" } },\r\n    { \"Column\": \"EventType\",                  \"Properties\": { \"Field\": \"EventType\" } },\r\n    { \"Column\": \"Invoice\",                    \"Properties\": { \"Field\": \"Invoice\" } },\r\n    { \"Column\": \"InvoiceId\",                  \"Properties\": { \"Field\": \"InvoiceId\" } },\r\n    { \"Column\": \"InvoiceSectionId\",           \"Properties\": { \"Field\": \"InvoiceSectionId\" } },\r\n    { \"Column\": \"InvoiceSectionName\",         \"Properties\": { \"Field\": \"InvoiceSectionName\" } },\r\n    { \"Column\": \"MonetaryCommitment\",         \"Properties\": { \"Field\": \"MonetaryCommitment\" } },\r\n    { \"Column\": \"Overage\",                    \"Properties\": { \"Field\": \"Overage\" } },\r\n    { \"Column\": \"PurchasingEnrollment\",       \"Properties\": { \"Field\": \"PurchasingEnrollment\" } },\r\n    { \"Column\": \"PurchasingSubscriptionGuid\", \"Properties\": { \"Field\": \"PurchasingSubscriptionGuid\" } },\r\n    { \"Column\": \"PurchasingSubscriptionName\", \"Properties\": { \"Field\": \"PurchasingSubscriptionName\" } },\r\n    { \"Column\": \"Quantity\",                   \"Properties\": { \"Field\": \"Quantity\" } },\r\n    { \"Column\": \"Region\",                     \"Properties\": { \"Field\": \"Region\" } },\r\n    { \"Column\": \"ReservationOrderId\",         \"Properties\": { \"Field\": \"ReservationOrderId\" } },\r\n    { \"Column\": \"ReservationOrderName\",       \"Properties\": { \"Field\": \"ReservationOrderName\" } },\r\n    { \"Column\": \"Term\",                       \"Properties\": { \"Field\": \"Term\" } },\r\n    { \"Column\": \"x_SourceName\",               \"Properties\": { \"Field\": \"x_SourceName\" } },\r\n    { \"Column\": \"x_SourceProvider\",           \"Properties\": { \"Field\": \"x_SourceProvider\" } },\r\n    { \"Column\": \"x_SourceType\",               \"Properties\": { \"Field\": \"x_SourceType\" } },\r\n    { \"Column\": \"x_SourceVersion\",            \"Properties\": { \"Field\": \"x_SourceVersion\" } }\r\n]\r\n```\r\n\r\n// Transactions_raw retention policy\r\n.alter-merge table Transactions_raw policy retention softdelete = $$rawRetentionInDays$$d recoverability = disabled\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Transactions_transform_v1_0 function\r\n.create-or-alter function\r\nwith (docstring='All transactions transformed to FOCUS 1.0.', folder='Transactions')\r\nTransactions_transform_v1_0()\r\n{\r\n    // NOTE: All open issues and questions are tracked @ https://github.com/microsoft/finops-toolkit/issues/1111\r\n    let isoMonths = (duration: string) {\r\n        let number = toint(replace_regex(duration, @'[PMY]', ''));\r\n        toint(case(\r\n            duration == '', toint(''),\r\n            duration endswith \"Y\", number * 12,\r\n            duration endswith \"M\", number,\r\n            -1\r\n        ))\r\n    };\r\n    Transactions_raw\r\n    //\r\n    // Set ProviderName\r\n    | extend ProviderName = 'Microsoft'\r\n    //\r\n    // Set source columns\r\n    | extend x_SourceName     = coalesce(x_SourceName, iff(ProviderName == 'Microsoft', 'Cost Management', ProviderName))\r\n    | extend x_SourceProvider = coalesce(x_SourceProvider, ProviderName)\r\n    | extend x_SourceType     = coalesce(x_SourceType, iff(ProviderName == 'Microsoft', 'ReservationTransactions', ''))\r\n    | extend x_SourceVersion  = coalesce(x_SourceVersion, iff(ProviderName == 'Microsoft', '2023-05-01', ''))\r\n    //\r\n    // Handle BillingPeriodStart/End\r\n    | extend BillingMonth = tostring(BillingMonth)\r\n    | extend BillingPeriodStart = iff(isempty(BillingMonth), datetime(null), todatetime(strcat(substring(BillingMonth, 0, 4), \"-\", substring(BillingMonth, 4, 2), \"-\", substring(BillingMonth, 6, 2))))\r\n    | extend BillingPeriodEnd = iff(isempty(BillingMonth), datetime(null), startofmonth(endofmonth(BillingPeriodStart) + 1d))\r\n    //\r\n    // Sort columns and apply final transforms\r\n    | project\r\n      BilledCost = Amount,\r\n      BillingAccountId = case(\r\n        BillingProfileId startswith '/', BillingProfileId,\r\n        isnotempty(CurrentEnrollmentId), strcat('/providers/Microsoft.Billing/billingAccounts/', CurrentEnrollmentId),\r\n        isnotempty(BillingProfileId), strcat('/providers/Microsoft.Billing/billingProfiles/', BillingProfileId),\r\n        ''\r\n      ),\r\n      BillingAccountName = coalesce(BillingProfileName, CurrentEnrollmentId),\r\n      BillingCurrency = Currency,\r\n      BillingPeriodEnd,\r\n      BillingPeriodStart,\r\n      ChargeCategory = case(\r\n        EventType in ('Cancel', 'Purchase', 'Refund'), 'Purchase',\r\n        'Adjustment'\r\n      ),\r\n      ChargeClass = case(\r\n        EventType == 'Cancel', 'Cancel',  // FOCUS does not handle this scenario\r\n        EventType == 'Refund', 'Correction',\r\n        ''\r\n      ),\r\n      ChargeDescription = Description,\r\n      ChargeFrequency   = case(\r\n        BillingFrequency == 'OneTime', 'One-Time',\r\n        BillingFrequency == 'Recurring', 'Recurring',\r\n        BillingFrequency\r\n      ),\r\n      ChargePeriodStart    = EventDate,\r\n      PricingQuantity      = Quantity,\r\n      PricingUnit          = 'Reservations',\r\n      ProviderName,\r\n      RegionId             = Region,\r\n      RegionName           = Region,\r\n      SubAccountId         = iff(isempty(PurchasingSubscriptionGuid), '', strcat('/subscriptions/', PurchasingSubscriptionGuid)),\r\n      SubAccountName       = iff(isempty(PurchasingSubscriptionGuid), '', PurchasingSubscriptionName),\r\n      x_AccountName        = AccountName,\r\n      x_AccountOwnerId     = AccountOwnerEmail,\r\n      x_CostCenter         = CostCenter,\r\n      x_InvoiceId          = InvoiceId,\r\n      x_InvoiceNumber      = Invoice,\r\n      x_InvoiceSectionId   = InvoiceSectionId,\r\n      x_InvoiceSectionName = coalesce(InvoiceSectionName, DepartmentName),\r\n      x_IngestionTime      = ingestion_time(),\r\n      x_MonetaryCommitment = MonetaryCommitment,\r\n      x_Overage            = Overage,\r\n      x_PurchasingBillingAccountId = PurchasingEnrollment,\r\n      x_SkuOrderId         = ReservationOrderId,\r\n      x_SkuOrderName       = ReservationOrderName,\r\n      x_SkuSize            = ArmSkuName,\r\n      x_SkuTerm            = isoMonths(Term),\r\n      x_SourceName,\r\n      x_SourceProvider,\r\n      x_SourceType,\r\n      x_SourceVersion,\r\n      x_SubscriptionId  = PurchasingSubscriptionGuid,\r\n      x_TransactionType = EventType\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Transactions_final_v1_0 table\r\n.create-merge table Transactions_final_v1_0 (\r\n    BilledCost:                   decimal,   // MS CM EA+MCA 2023-05-01\r\n    BillingAccountId:             string,    // MS CM EA+MCA 2023-05-01\r\n    BillingAccountName:           string,    // MS CM EA+MCA 2023-05-01\r\n    BillingCurrency:              string,    // MS CM EA+MCA 2023-05-01\r\n    BillingPeriodEnd:             datetime,  // MS CM EA+MCA 2023-05-01\r\n    BillingPeriodStart:           datetime,  // MS CM EA+MCA 2023-05-01\r\n    ChargeCategory:               string,    // Hubs add-on\r\n    ChargeClass:                  string,    // Hubs add-on\r\n    ChargeDescription:            string,    // MS CM EA+MCA 2023-05-01\r\n    ChargeFrequency:              string,    // MS CM EA+MCA 2023-05-01\r\n    ChargePeriodStart:            datetime,  // MS CM EA+MCA 2023-05-01\r\n    PricingQuantity:              decimal,   // MS CM EA+MCA 2023-05-01\r\n    PricingUnit:                  string,    // Hubs add-on\r\n    ProviderName:                 string,    // Hubs add-on\r\n    RegionId:                     string,    // MS CM EA+MCA 2023-05-01\r\n    RegionName:                   string,    // MS CM EA+MCA 2023-05-01\r\n    SubAccountId:                 string,    // MS CM EA+MCA 2023-05-01\r\n    SubAccountName:               string,    // MS CM EA+MCA 2023-05-01\r\n    x_AccountName:                string,    // MS CM EA 2023-05-01\r\n    x_AccountOwnerId:             string,    // MS CM EA 2023-05-01\r\n    x_CostCenter:                 string,    // MS CM EA 2023-05-01\r\n    x_InvoiceId:                  string,    // MS CM MCA 2023-05-01\r\n    x_InvoiceNumber:              string,    // MS CM MCA 2023-05-01\r\n    x_InvoiceSectionId:           string,    // MS CM MCA 2023-05-01\r\n    x_InvoiceSectionName:         string,    // MS CM MCA 2023-05-01\r\n    x_IngestionTime:              datetime,  // Hubs add-on\r\n    x_MonetaryCommitment:         decimal,   // MS CM EA 2023-05-01\r\n    x_Overage:                    decimal,   // MS CM EA 2023-05-01\r\n    x_PurchasingBillingAccountId: string,    // MS CM EA 2023-05-01\r\n    x_SkuOrderId:                 string,    // MS CM EA+MCA 2023-05-01\r\n    x_SkuOrderName:               string,    // MS CM EA+MCA 2023-05-01\r\n    x_SkuSize:                    string,    // MS CM EA+MCA 2023-05-01\r\n    x_SkuTerm:                    int,       // MS CM EA+MCA 2023-05-01\r\n    x_SourceName:                 string,    // Hubs add-on\r\n    x_SourceProvider:             string,    // Hubs add-on\r\n    x_SourceType:                 string,    // Hubs add-on\r\n    x_SourceVersion:              string,    // Hubs add-on\r\n    x_SubscriptionId:             string,    // MS CM EA+MCA 2023-05-01\r\n    x_TransactionType:            string     // MS CM EA+MCA 2023-05-01\r\n)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// Update policy for Transactions_raw -> Transactions_final_v1_0 table\r\n// NOTE: Must be after transform function is defined\r\n.alter table Transactions_final_v1_0 policy update\r\n```\r\n[{\r\n    \"IsEnabled\": true,\r\n    \"Source\": \"Transactions_raw\",\r\n    \"Query\": \"Transactions_transform_v1_0()\",\r\n    \"IsTransactional\": true,\r\n    \"PropagateIngestionProperties\": true\r\n}]\r\n```\r\n",
                    "$fxv#8": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n//======================================================================================================================\r\n// Common utility functions\r\n//\r\n// TIP: Use Ctrl+K,Ctrl+0 to collapse all regions in VS Code\r\n//======================================================================================================================\r\n\r\n\r\n//===| Date functions |=================================================================================================\r\n\r\n// monthstring\r\n.create-or-alter function \r\nwith (docstring = @'Returns the name of the month for the specified date (e.g. Jan or January)', folder =@'Common') \r\nmonthstring(['date']: datetime, length: int = 9)\r\n{\r\n    substring(dynamic(['January','February','March','April','May','June','July','August','September','October','November','December'])[getmonth(['date']) - 1], 0, length)\r\n}\r\n\r\n// datestring\r\n.create-or-alter function \r\nwith (docstring = @'Converts 2 dates into a simple, user-friendly date range (e.g. Jan 1-Jan 3)', folder =@'Common') \r\ndatestring(start: datetime, end: datetime = datetime('0001-01-01'))\r\n{\r\n    let month = (d: datetime) { monthstring(d, 3) };\r\n    let endDate = iff(end == datetime('0001-01-01'), start, end);\r\n    let sameDate = startofday(start) == startofday(endDate);\r\n    let sameMonth = startofmonth(start) == startofmonth(endDate);\r\n    let sameYear = startofyear(start) == startofyear(endDate);\r\n    let fullMonth = startofday(start) == startofmonth(start) and startofday(endDate) == startofday(endofmonth(endDate));\r\n    let fullYear = startofday(start) == startofyear(start) and startofday(endDate) == startofday(endofyear(endDate));\r\n    let currentYear = sameYear and startofyear(start) == startofyear(now());\r\n    case(\r\n        // Full year             | yyyy (same year) / yyyy-yyyy (diff years)\r\n        fullYear,\r\n            strcat(getyear(start), iff(sameYear, '', strcat('-', getyear(endDate)))),\r\n        // 1 full mo, same year  | Mmm yyyy\r\n        fullMonth and sameMonth and sameYear,\r\n            strcat(month(start), ' ', getyear(start)),\r\n        // 2+ full mo, same year | Mmm-Mmm (current year) / Mmm-Mmm yyyy (other year)\r\n        fullMonth and sameYear,\r\n            strcat(month(start), '-', month(endDate), iff(currentYear, '', strcat(' ', getyear(endDate)))),\r\n        // Full mo, diff year    | Mmm yyyy-Mmm yyyy\r\n        fullMonth and not(sameYear),\r\n            strcat(month(start), ' ', getyear(start), '-', month(endDate), ' ', getyear(endDate)),\r\n        // Same date             | Mmm d (current year) / Mmm d, yyyy (other year)\r\n        sameDate,\r\n            strcat(month(start), ' ', dayofmonth(start), iff(currentYear, '', strcat(', ', getyear(endDate)))),\r\n        // 1 partial M, same Y   | Mmm d-d (current year) / Mmm d-d, yyyy (other year)\r\n        not(fullMonth) and sameMonth and sameYear,\r\n            strcat(month(start), ' ', dayofmonth(start), '-', dayofmonth(endDate), iff(currentYear, '', strcat(' ', getyear(endDate)))),\r\n        // 2+ partial M, same Y  | Mmm d-Mmm d (current year) / Mmm d-Mmm d, yyyy (other year)\r\n        not(fullMonth) and not(sameMonth) and sameYear,\r\n            strcat(month(start), ' ', dayofmonth(start), '-', month(endDate), ' ', dayofmonth(endDate), iff(currentYear, '', strcat(', ', getyear(endDate)))),\r\n        // All other cases       | Mmm d, yyyy-Mmm d, yyyy\r\n        strcat(month(start), ' ', dayofmonth(start), ', ', getyear(start), '-', month(endDate), ' ', dayofmonth(endDate), ', ', getyear(endDate))\r\n    )\r\n}\r\n\r\n// daterange\r\n.create-or-alter function \r\nwith (docstring = @'DEPRECATED: Please use datestring(); function will be removed on or after the Jan 2026 release', folder =@'Common') \r\ndaterange(start: datetime, end: datetime = datetime('0001-01-01'))\r\n{\r\n    datestring(start, end)\r\n}\r\n\r\n// monthsago\r\n.create-or-alter function \r\nwith (docstring = 'DEPRECATED: Please use startofmonth(now(), -<# of months>); function will be removed on or after the Jan 2026 release', folder = 'Common')\r\nmonthsago(months: int)\r\n{\r\n    datetime_add('month', -months, startofmonth(now()))\r\n}\r\n\r\n\r\n//===| Number functions |===============================================================================================\r\n// NOTE: Must be defined before string converters\r\n\r\n// delta\r\n.create-or-alter function \r\nwith (docstring = @'Compares 2 values and returns the percentage change from oldval to newval', folder =@'Common') \r\ndelta(oldval: double, newval: double)\r\n{\r\n    (newval - todouble(oldval))/oldval\r\n}\r\n\r\n// percentOfTotal\r\n// NOTE: Must be before percent() function\r\n.create-or-alter function \r\nwith (docstring = @'Calculates the percentage of each record based on a required Count column', folder =@'Common') \r\npercentOfTotal(t: (Count: long), tot: long)\r\n{\r\n    let total = todouble(tot);\r\n    t \r\n    | extend Percent = round(Count / total * 100, 3) \r\n    | order by Count desc\r\n}\r\n\r\n// percent\r\n.create-or-alter function \r\nwith (docstring = @'Calculates the percentage of each record based on a required Count column', folder =@'Common') \r\npercent(t: (Count: long))\r\n{\r\n    let total = todouble(toscalar(t | summarize sum(Count)));\r\n    percentOfTotal(t, total)\r\n}\r\n\r\n// plusminus\r\n.create-or-alter function \r\nwith (docstring = 'Shows a +/- sign based on the direction of the number', folder = 'Common')\r\nplusminus(val: string)\r\n{\r\n    let neg = substring(val, 0, 1) == '-';\r\n    iff(neg, val, strcat('+', val))\r\n}\r\n\r\n// updown\r\n.create-or-alter function \r\nwith (docstring = 'Shows an up/down arrow based on the direction of the number', folder = 'Common')\r\nupdown(val: string)\r\n{\r\n    // TODO: Handle 0\r\n    let neg = substring(val, 0, 1) == '-';\r\n    iff(neg, strcat('↓', substring(val, 1)), strcat('↑', val))\r\n}\r\n\r\n\r\n//===| String functions |===============================================================================================\r\n\r\n// percentstring\r\n// NOTE: Must be defined before deltastring\r\n.create-or-alter function \r\nwith (docstring = 'Calculate a percentage and render as a string', folder = 'Common')\r\npercentstring(num: double, total: double = 1.0, places: int = 9)\r\n{\r\n    let value = 1.0 * num / total * 100;\r\n    strcat(case(\r\n        places != 9, round(value, places),\r\n        value < 10,  round(value, 2),\r\n        round(value, 1)\r\n    ), '%')\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n// arraystring\r\n.create-or-alter function \r\nwith (docstring = 'Convert an array to a comma-delimited string', folder = 'Common')\r\narraystring(arr: dynamic)\r\n{\r\n    replace_string(replace_regex(replace_regex(replace_regex(replace_regex(replace_regex(\r\n        tostring(arr)\r\n        , @'^\\[\"', '')\r\n        , @'\"\\]$', '')\r\n        , @'^, ', '')\r\n        , @', $', '')\r\n        , @'^\\[]$', '')\r\n        , '\",\"', ', ')\r\n}\r\n\r\n// deltastring\r\n.create-or-alter function \r\nwith (docstring = 'Calculate a delta percentage and render as a string', folder = 'Common')\r\ndeltastring(oldval: double, newval: double, places: int = 1, useArrows: bool = false)\r\n{\r\n    let d = delta(oldval, newval);\r\n    strcat(case(useArrows and d > 0, '↑', useArrows and d < 0, '↓', d < 0, '-', ''), percentstring(abs(d), 1, places))\r\n}\r\n\r\n// diffstring\r\n.create-or-alter function \r\nwith (docstring = 'Calculate the difference and render as a string', folder = 'Common')\r\ndiffstring(oldval: double, newval: double, places: int = 1)\r\n{\r\n    plusminus(round(newval - oldval, places))\r\n}\r\n\r\n// numberstring\r\n.create-or-alter function \r\nwith (docstring = 'Convert a number to a string', folder = 'Common')\r\nnumberstring(num: double, abbrev: bool = true)\r\n{\r\n    replace_regex(case(\r\n        num >= 10000000000000, strcat(round(1.0 * num / 1000000000000, 1), 'T'),\r\n        num >= 1000000000000,  strcat(round(1.0 * num / 1000000000000, 2), 'T'),\r\n        num >= 10000000000,    strcat(round(1.0 * num / 1000000000, 1), 'B'),\r\n        num >= 1000000000,     strcat(round(1.0 * num / 1000000000, 2), 'B'),\r\n        num >= 10000000,       strcat(round(1.0 * num / 1000000, 1), 'M'),\r\n        num >= 1000000,        strcat(round(1.0 * num / 1000000, 2), 'M'),\r\n        num >= 10000,          strcat(round(1.0 * num / 1000, 1), 'K'),\r\n        // Kusto doesn't support back-refs yet -- num > 1000, replace_regex(tostring(num), @'(\\d)(?=(\\d{3})+\\.)', @'\\1,'), // See https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/re2-library\r\n        num > 1000, replace_regex(tostring(num), @'([0-9]{3})$', @',\\1'), //num / 1000, ',', substring(tostring(num), 0) - (num / 1000 * 1000)),\r\n        tostring(num)\r\n    ), @'\\.0$', '')\r\n}\r\n\r\n\r\n//===| Other |==========================================================================================================\r\n\r\n// ifempty\r\n.create-or-alter function \r\nwith (docstring = 'Replaces an empty value with the specified default value', folder = 'Common')\r\nifempty(val: dynamic, defaultVal: dynamic)\r\n{\r\n    iff(isempty(val), defaultVal, val)\r\n}\r\n",
                    "$fxv#9": "// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n//======================================================================================================================\r\n// Hub database\r\n// Used for querying and reporting.\r\n//\r\n// Versioning strategy:\r\n// - Each dataset includes a function that returns the latest version of the data (for example, \"Costs()\").\r\n// - Every supported version of FOCUS should have a corresponding function (for example, \"Costs_v1_0\").\r\n// - Each versioned function unions data from versioned tables in the Ingestion database and transforms it to that FOCUS version for back compat.\r\n// - Consumers should use the unversioned function for the latest and the versioned functions for back compat.\r\n//\r\n// To add a new FOCUS versions:\r\n// 1. Add new FOCUS version section after the latest version section and before existing version sections\r\n// 2. Create new *_vX_Y functions per dataset that transforms older data to the new FOCUS version\r\n// 3. Update the unversioned functions to use the new *_vX_Y functions\r\n// 4. Update older versioned functions to also pull from the new *_vX_Y functions and transform to the old schema\r\n//======================================================================================================================\r\n\r\n// For allowed commands, see https://learn.microsoft.com/azure/data-explorer/database-script\r\n\r\n\r\n//======================================================================================================================\r\n// FOCUS 1.0\r\n//======================================================================================================================\r\n\r\n// CommitmentDiscountUsage_final_v1_0\r\n.create-or-alter function\r\nwith (docstring = 'Gets all commitment discount usage records aligned to FOCUS 1.0.', folder = 'CommitmentDiscountUsage')\r\nCommitmentDiscountUsage_v1_0()\r\n{\r\n    database('Ingestion').CommitmentDiscountUsage_final_v1_0\r\n}\r\n\r\n\r\n// Costs_final_v1_0\r\n.create-or-alter function\r\nwith (docstring = 'Gets all cost and usage records aligned to FOCUS 1.0.', folder = 'Costs')\r\nCosts_v1_0()\r\n{\r\n    database('Ingestion').Costs_final_v1_0\r\n}\r\n\r\n\r\n// Prices_final_v1_0\r\n.create-or-alter function\r\nwith (docstring = 'Gets all prices aligned to FOCUS 1.0.', folder = 'Prices')\r\nPrices_v1_0()\r\n{\r\n    database('Ingestion').Prices_final_v1_0\r\n}\r\n\r\n\r\n// Recommendations_final_v1_0\r\n.create-or-alter function\r\nwith (docstring = 'Gets all recommendations aligned to FOCUS 1.0.', folder = 'Recommendations')\r\nRecommendations_v1_0()\r\n{\r\n    database('Ingestion').Recommendations_final_v1_0\r\n}\r\n\r\n\r\n// Transactions_final_v1_0\r\n.create-or-alter function\r\nwith (docstring = 'Gets all transactions aligned to FOCUS 1.0.', folder = 'Transactions')\r\nTransactions_v1_0()\r\n{\r\n    database('Ingestion').Transactions_final_v1_0\r\n}\r\n\r\n\r\n//======================================================================================================================\r\n// Latest FOCUS version\r\n//======================================================================================================================\r\n\r\n.create-or-alter function\r\nwith (docstring = 'Gets all commitment discount usage records with the latest supported version of the FOCUS schema.', folder = 'CommitmentDiscountUsage')\r\nCommitmentDiscountUsage()\r\n{\r\n    CommitmentDiscountUsage_v1_0()\r\n}\r\n\r\n\r\n.create-or-alter function\r\nwith (docstring = 'Gets all cost and usage records with the latest supported version of the FOCUS schema.', folder = 'Costs')\r\nCosts()\r\n{\r\n    Costs_v1_0()\r\n}\r\n\r\n\r\n.create-or-alter function\r\nwith (docstring = 'Gets all prices with the latest supported version of the FOCUS schema.', folder = 'Prices')\r\nPrices()\r\n{\r\n    Prices_v1_0()\r\n}\r\n\r\n\r\n.create-or-alter function\r\nwith (docstring = 'Gets all recommendations with the latest supported version of the FOCUS schema.', folder = 'Recommendations')\r\nRecommendations()\r\n{\r\n    Recommendations_v1_0()\r\n}\r\n\r\n\r\n.create-or-alter function\r\nwith (docstring = 'Gets all transactions with the latest supported version of the FOCUS schema.', folder = 'Transactions')\r\nTransactions()\r\n{\r\n    Transactions_v1_0()\r\n}\r\n",
                    "ftkver": "[variables('$fxv#0')]",
                    "ftkVersion": "[if(contains(variables('ftkver'), '-'), split(variables('ftkver'), '-')[0], variables('ftkver'))]",
                    "ftkBranch": "[if(contains(variables('ftkver'), '-'), split(variables('ftkver'), '-')[1], '')]",
                    "dataExplorerPrivateDnsZoneName": "[replace(format('privatelink.{0}.{1}', parameters('location'), replace(environment().suffixes.storage, 'core', 'kusto')), '..', '.')]",
                    "ingestionCapacity": {
                      "Dev(No SLA)_Standard_E2a_v4": 1,
                      "Dev(No SLA)_Standard_D11_v2": 1,
                      "Standard_D11_v2": 2,
                      "Standard_D12_v2": 4,
                      "Standard_D13_v2": 8,
                      "Standard_D14_v2": 16,
                      "Standard_D16d_v5": 16,
                      "Standard_D32d_v4": 32,
                      "Standard_D32d_v5": 32,
                      "Standard_DS13_v2+1TB_PS": 8,
                      "Standard_DS13_v2+2TB_PS": 8,
                      "Standard_DS14_v2+3TB_PS": 16,
                      "Standard_DS14_v2+4TB_PS": 16,
                      "Standard_E2a_v4": 2,
                      "Standard_E2ads_v5": 2,
                      "Standard_E2d_v4": 2,
                      "Standard_E2d_v5": 2,
                      "Standard_E4a_v4": 4,
                      "Standard_E4ads_v5": 4,
                      "Standard_E4d_v4": 4,
                      "Standard_E4d_v5": 4,
                      "Standard_E8a_v4": 8,
                      "Standard_E8ads_v5": 8,
                      "Standard_E8as_v4+1TB_PS": 8,
                      "Standard_E8as_v4+2TB_PS": 8,
                      "Standard_E8as_v5+1TB_PS": 8,
                      "Standard_E8as_v5+2TB_PS": 8,
                      "Standard_E8d_v4": 8,
                      "Standard_E8d_v5": 8,
                      "Standard_E8s_v4+1TB_PS": 8,
                      "Standard_E8s_v4+2TB_PS": 8,
                      "Standard_E8s_v5+1TB_PS": 8,
                      "Standard_E8s_v5+2TB_PS": 8,
                      "Standard_E16a_v4": 16,
                      "Standard_E16ads_v5": 16,
                      "Standard_E16as_v4+3TB_PS": 16,
                      "Standard_E16as_v4+4TB_PS": 16,
                      "Standard_E16as_v5+3TB_PS": 16,
                      "Standard_E16as_v5+4TB_PS": 16,
                      "Standard_E16d_v4": 16,
                      "Standard_E16d_v5": 16,
                      "Standard_E16s_v4+3TB_PS": 16,
                      "Standard_E16s_v4+4TB_PS": 16,
                      "Standard_E16s_v5+3TB_PS": 16,
                      "Standard_E16s_v5+4TB_PS": 16,
                      "Standard_E64i_v3": 64,
                      "Standard_E80ids_v4": 80,
                      "Standard_EC8ads_v5": 8,
                      "Standard_EC8as_v5+1TB_PS": 8,
                      "Standard_EC8as_v5+2TB_PS": 8,
                      "Standard_EC16ads_v5": 16,
                      "Standard_EC16as_v5+3TB_PS": 16,
                      "Standard_EC16as_v5+4TB_PS": 16,
                      "Standard_L4s": 4,
                      "Standard_L8as_v3": 8,
                      "Standard_L8s": 8,
                      "Standard_L8s_v2": 8,
                      "Standard_L8s_v3": 8,
                      "Standard_L16as_v3": 16,
                      "Standard_L16s": 16,
                      "Standard_L16s_v2": 16,
                      "Standard_L16s_v3": 16,
                      "Standard_L32as_v3": 32,
                      "Standard_L32s_v3": 32
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_1')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#1')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_2')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#2')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_3')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#3')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_4')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#4')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#5')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_1')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_2')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_3')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions_resource_type_4')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'CommonFunctions')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#6')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'OpenDataFunctions')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Ingestion', 'SetupScript')]",
                      "properties": {
                        "scriptContent": "[replace(replace(replace(replace(variables('$fxv#7'), '$$adfPrincipalId$$', reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.principalId), '$$adfTenantId$$', reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.tenantId), '$$ftkOpenDataFolder$$', if(empty(variables('ftkBranch')), format('https://github.com/microsoft/finops-toolkit/releases/download/v{0}', variables('ftkVersion')), format('https://raw.githubusercontent.com/microsoft/finops-toolkit/{0}/src/open-data', variables('ftkBranch')))), '$$rawRetentionInDays$$', string(parameters('rawRetentionInDays')))]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'CommonFunctions')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Ingestion')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Hub', 'CommonFunctions')]",
                      "properties": {
                        "scriptContent": "[variables('$fxv#8')]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Hub')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases/scripts",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}/{2}', parameters('clusterName'), 'Hub', 'SetupScript')]",
                      "properties": {
                        "scriptContent": "[replace(replace(variables('$fxv#9'), '$$adfPrincipalId$$', reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.principalId), '$$adfTenantId$$', reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.tenantId)]",
                        "continueOnErrors": "[parameters('continueOnErrors')]",
                        "forceUpdateTag": "[parameters('forceUpdateTag')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Hub', 'CommonFunctions')]",
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('clusterName'), 'Hub')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/principalAssignments",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}', parameters('clusterName'), 'adf-mi-cluster-admin')]",
                      "properties": {
                        "principalType": "App",
                        "principalId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.principalId]",
                        "tenantId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.tenantId]",
                        "role": "AllDatabasesAdmin"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}', parameters('clusterName'), 'Ingestion')]",
                      "location": "[parameters('location')]",
                      "kind": "ReadWrite",
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters/databases",
                      "apiVersion": "2023-08-15",
                      "name": "[format('{0}/{1}', parameters('clusterName'), 'Hub')]",
                      "location": "[parameters('location')]",
                      "kind": "ReadWrite",
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]",
                        "[resourceId('Microsoft.Kusto/clusters/databases/scripts', parameters('clusterName'), 'Ingestion', 'SetupScript')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Kusto/clusters",
                      "apiVersion": "2023-08-15",
                      "name": "[parameters('clusterName')]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Kusto/clusters'), createObject()))]",
                      "sku": {
                        "name": "[parameters('clusterSku')]",
                        "tier": "[if(startsWith(parameters('clusterSku'), 'Dev(No SLA)_'), 'Basic', 'Standard')]",
                        "capacity": "[if(startsWith(parameters('clusterSku'), 'Dev(No SLA)_'), 1, if(equals(parameters('clusterCapacity'), 1), 2, parameters('clusterCapacity')))]"
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "enableStreamingIngest": true,
                        "enableAutoStop": false,
                        "publicNetworkAccess": "[if(parameters('enablePublicAccess'), 'Enabled', 'Disabled')]"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                      "name": "[guid(parameters('clusterName'), subscription().id, 'Storage Blob Data Contributor')]",
                      "properties": {
                        "description": "Give \"Storage Blob Data Contributor\" to the cluster",
                        "principalId": "[reference(resourceId('Microsoft.Kusto/clusters', parameters('clusterName')), '2023-08-15', 'full').identity.principalId]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[variables('dataExplorerPrivateDnsZoneName')]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones'), createObject()))]",
                      "properties": {}
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', variables('dataExplorerPrivateDnsZoneName'), format('{0}-link', replace(variables('dataExplorerPrivateDnsZoneName'), '.', '-')))]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones/virtualNetworkLinks'), createObject()))]",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        },
                        "registrationEnabled": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('dataExplorerPrivateDnsZoneName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}-ep', parameters('clusterName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateEndpoints'), createObject()))]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "dataExplorerLink",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]",
                              "groupIds": [
                                "cluster"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', format('{0}-ep', parameters('clusterName')), 'dataExplorer-endpoint-zone')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-westus-kusto-net",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('dataExplorerPrivateDnsZoneName'))]"
                            }
                          },
                          {
                            "name": "privatelink-blob-core-windows-net",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                            }
                          },
                          {
                            "name": "privatelink-table-core-windows-net",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.table.{0}', environment().suffixes.storage))]"
                            }
                          },
                          {
                            "name": "privatelink-queue-core-windows-net",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.queue.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-ep', parameters('clusterName')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('dataExplorerPrivateDnsZoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "clusterId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the cluster."
                      },
                      "value": "[resourceId('Microsoft.Kusto/clusters', parameters('clusterName'))]"
                    },
                    "principalId": {
                      "type": "string",
                      "metadata": {
                        "description": "The ID of the cluster system assigned managed identity."
                      },
                      "value": "[reference(resourceId('Microsoft.Kusto/clusters', parameters('clusterName')), '2023-08-15', 'full').identity.principalId]"
                    },
                    "clusterName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the cluster."
                      },
                      "value": "[parameters('clusterName')]"
                    },
                    "clusterUri": {
                      "type": "string",
                      "metadata": {
                        "description": "The URI of the cluster."
                      },
                      "value": "[reference(resourceId('Microsoft.Kusto/clusters', parameters('clusterName')), '2023-08-15').uri]"
                    },
                    "ingestionDbName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the database for data ingestion."
                      },
                      "value": "Ingestion"
                    },
                    "hubDbName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the database for queries."
                      },
                      "value": "Hub"
                    },
                    "clusterIngestionCapacity": {
                      "type": "int",
                      "metadata": {
                        "description": "Max ingestion capacity of the cluster."
                      },
                      "value": "[coalesce(tryGet(variables('ingestionCapacity'), parameters('clusterSku')), 1)]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'storage')]",
                "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dataFactoryResources",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "hubName": {
                    "value": "[parameters('hubName')]"
                  },
                  "dataFactoryName": {
                    "value": "[variables('dataFactoryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[variables('resourceTags')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.name.value]"
                  },
                  "exportContainerName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.exportContainer.value]"
                  },
                  "configContainerName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.configContainer.value]"
                  },
                  "ingestionContainerName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.ingestionContainer.value]"
                  },
                  "dataExplorerName": "[if(not(variables('deployDataExplorer')), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.clusterName.value))]",
                  "dataExplorerPrincipalId": "[if(not(variables('deployDataExplorer')), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.principalId.value))]",
                  "dataExplorerIngestionDatabase": "[if(not(variables('deployDataExplorer')), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.ingestionDbName.value))]",
                  "dataExplorerIngestionCapacity": "[if(not(variables('deployDataExplorer')), createObject('value', 1), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.clusterIngestionCapacity.value))]",
                  "dataExplorerUri": "[if(not(variables('deployDataExplorer')), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.clusterUri.value))]",
                  "dataExplorerId": "[if(not(variables('deployDataExplorer')), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.clusterId.value))]",
                  "keyVaultName": "[if(empty(parameters('remoteHubStorageKey')), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value))]",
                  "remoteHubStorageUri": {
                    "value": "[parameters('remoteHubStorageUri')]"
                  },
                  "enablePublicAccess": {
                    "value": "[parameters('enablePublicAccess')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "12998070848171971309"
                    }
                  },
                  "functions": [
                    {
                      "namespace": "__bicep",
                      "members": {
                        "getExportBody": {
                          "parameters": [
                            {
                              "type": "string",
                              "name": "exportContainerName"
                            },
                            {
                              "type": "string",
                              "name": "datasetType"
                            },
                            {
                              "type": "string",
                              "name": "schemaVersion"
                            },
                            {
                              "type": "bool",
                              "name": "isMonthly"
                            },
                            {
                              "type": "string",
                              "name": "exportFormat"
                            },
                            {
                              "type": "string",
                              "name": "compressionMode"
                            },
                            {
                              "type": "string",
                              "name": "partitionData"
                            },
                            {
                              "type": "string",
                              "name": "dataOverwriteBehavior"
                            }
                          ],
                          "output": {
                            "type": "string",
                            "value": "[format('{{ \"properties\": {{ \"definition\": {{ \"dataSet\": {{ \"configuration\": {{ \"dataVersion\": \"{0}\", \"filters\": [] }}, \"granularity\": \"Daily\" }}, \"timeframe\": \"{1}\", \"type\": \"{2}\" }}, \"deliveryInfo\": {{ \"destination\": {{ \"container\": \"{3}\", \"rootFolderPath\": \"@{{if(startswith(item().scope, ''/''), substring(item().scope, 1, sub(length(item().scope), 1)) ,item().scope)}}\", \"type\": \"AzureBlob\", \"resourceId\": \"@{{variables(''storageAccountId'')}}\" }} }}, \"schedule\": {{ \"recurrence\": \"{4}\", \"recurrencePeriod\": {{ \"from\": \"2024-01-01T00:00:00.000Z\", \"to\": \"2050-02-01T00:00:00.000Z\" }}, \"status\": \"Inactive\" }}, \"format\": \"{5}\", \"partitionData\": \"{6}\", \"dataOverwriteBehavior\": \"{7}\", \"compressionMode\": \"{8}\" }}, \"id\": \"@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{variables(''exportName'')}}\", \"name\": \"@{{variables(''exportName'')}}\", \"type\": \"Microsoft.CostManagement/reports\", \"identity\": {{ \"type\": \"systemAssigned\" }}, \"location\": \"global\" }}', parameters('schemaVersion'), if(parameters('isMonthly'), 'TheLastMonth', 'MonthToDate'), parameters('datasetType'), parameters('exportContainerName'), if(parameters('isMonthly'), 'Monthly', 'Daily'), parameters('exportFormat'), parameters('partitionData'), parameters('dataOverwriteBehavior'), parameters('compressionMode'))]"
                          }
                        },
                        "getExportBodyV2": {
                          "parameters": [
                            {
                              "type": "string",
                              "name": "exportContainerName"
                            },
                            {
                              "type": "string",
                              "name": "datasetType"
                            },
                            {
                              "type": "string",
                              "name": "schemaVersion"
                            },
                            {
                              "type": "bool",
                              "name": "isMonthly"
                            },
                            {
                              "type": "string",
                              "name": "exportFormat"
                            },
                            {
                              "type": "string",
                              "name": "compressionMode"
                            },
                            {
                              "type": "string",
                              "name": "partitionData"
                            },
                            {
                              "type": "string",
                              "name": "dataOverwriteBehavior"
                            },
                            {
                              "type": "string",
                              "name": "recommendationScope"
                            },
                            {
                              "type": "string",
                              "name": "recommendationLookbackPeriod"
                            },
                            {
                              "type": "string",
                              "name": "resourceType"
                            }
                          ],
                          "output": {
                            "type": "string",
                            "value": "[if(equals(toLower(parameters('datasetType')), 'focuscost'), format('{{ \"properties\": {{ \"definition\": {{ \"dataSet\": {{ \"configuration\": {{ \"dataVersion\": \"{0}\", \"filters\": [] }}, \"granularity\": \"Daily\" }}, \"timeframe\": \"{1}\", \"type\": \"{2}\" }}, \"deliveryInfo\": {{ \"destination\": {{ \"container\": \"{3}\", \"rootFolderPath\": \"@{{if(startswith(item().scope, ''/''), substring(item().scope, 1, sub(length(item().scope), 1)) ,item().scope)}}\", \"type\": \"AzureBlob\", \"resourceId\": \"@{{variables(''storageAccountId'')}}\" }} }}, \"schedule\": {{ \"recurrence\": \"{4}\", \"recurrencePeriod\": {{ \"from\": \"2024-01-01T00:00:00.000Z\", \"to\": \"2050-02-01T00:00:00.000Z\" }}, \"status\": \"Inactive\" }}, \"format\": \"{5}\", \"partitionData\": \"{6}\", \"dataOverwriteBehavior\": \"{7}\", \"compressionMode\": \"{8}\" }}, \"id\": \"@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-{9}-costdetails''))}}\", \"name\": \"@{{toLower(concat(variables(''finOpsHub''), ''-{10}-costdetails''))}}\", \"type\": \"Microsoft.CostManagement/reports\", \"identity\": {{ \"type\": \"systemAssigned\" }}, \"location\": \"global\" }}', parameters('schemaVersion'), if(parameters('isMonthly'), 'TheLastMonth', 'MonthToDate'), parameters('datasetType'), parameters('exportContainerName'), if(parameters('isMonthly'), 'Monthly', 'Daily'), parameters('exportFormat'), parameters('partitionData'), parameters('dataOverwriteBehavior'), parameters('compressionMode'), if(parameters('isMonthly'), 'monthly', 'daily'), if(parameters('isMonthly'), 'monthly', 'daily')), if(equals(toLower(parameters('datasetType')), 'reservationdetails'), format('{{ \"properties\": {{ \"definition\": {{ \"dataSet\": {{ \"configuration\": {{ \"dataVersion\": \"{0}\", \"filters\": [] }}, \"granularity\": \"Daily\" }}, \"timeframe\": \"{1}\", \"type\": \"{2}\" }}, \"deliveryInfo\": {{ \"destination\": {{ \"container\": \"{3}\", \"rootFolderPath\": \"@{{if(startswith(item().scope, ''/''), substring(item().scope, 1, sub(length(item().scope), 1)) ,item().scope)}}\", \"type\": \"AzureBlob\", \"resourceId\": \"@{{variables(''storageAccountId'')}}\" }} }}, \"schedule\": {{ \"recurrence\": \"{4}\", \"recurrencePeriod\": {{ \"from\": \"2024-01-01T00:00:00.000Z\", \"to\": \"2050-02-01T00:00:00.000Z\" }}, \"status\": \"Inactive\" }}, \"format\": \"{5}\", \"partitionData\": \"{6}\", \"dataOverwriteBehavior\": \"{7}\", \"compressionMode\": \"{8}\" }}, \"id\": \"@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-{9}-{10}''))}}\", \"name\": \"@{{toLower(concat(variables(''finOpsHub''), ''-{11}-{12}''))}}\", \"type\": \"Microsoft.CostManagement/reports\", \"identity\": {{ \"type\": \"systemAssigned\" }}, \"location\": \"global\" }}', parameters('schemaVersion'), if(parameters('isMonthly'), 'TheLastMonth', 'MonthToDate'), parameters('datasetType'), parameters('exportContainerName'), if(parameters('isMonthly'), 'Monthly', 'Daily'), parameters('exportFormat'), parameters('partitionData'), parameters('dataOverwriteBehavior'), parameters('compressionMode'), if(parameters('isMonthly'), 'monthly', 'daily'), toLower(parameters('datasetType')), if(parameters('isMonthly'), 'monthly', 'daily'), toLower(parameters('datasetType'))), if(or(equals(toLower(parameters('datasetType')), 'pricesheet'), equals(toLower(parameters('datasetType')), 'reservationtransactions')), format('{{ \"properties\": {{ \"definition\": {{ \"dataSet\": {{ \"configuration\": {{ \"dataVersion\": \"{0}\", \"filters\": [] }}}}, \"timeframe\": \"{1}\", \"type\": \"{2}\" }}, \"deliveryInfo\": {{ \"destination\": {{ \"container\": \"{3}\", \"rootFolderPath\": \"@{{if(startswith(item().scope, ''/''), substring(item().scope, 1, sub(length(item().scope), 1)) ,item().scope)}}\", \"type\": \"AzureBlob\", \"resourceId\": \"@{{variables(''storageAccountId'')}}\" }} }}, \"schedule\": {{ \"recurrence\": \"{4}\", \"recurrencePeriod\": {{ \"from\": \"2024-01-01T00:00:00.000Z\", \"to\": \"2050-02-01T00:00:00.000Z\" }}, \"status\": \"Inactive\" }}, \"format\": \"{5}\", \"partitionData\": \"{6}\", \"dataOverwriteBehavior\": \"{7}\", \"compressionMode\": \"{8}\" }}, \"id\": \"@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-{9}-{10}''))}}\", \"name\": \"@{{toLower(concat(variables(''finOpsHub''), ''-{11}-{12}''))}}\", \"type\": \"Microsoft.CostManagement/reports\", \"identity\": {{ \"type\": \"systemAssigned\" }}, \"location\": \"global\" }}', parameters('schemaVersion'), if(parameters('isMonthly'), 'TheCurrentMonth', 'MonthToDate'), parameters('datasetType'), parameters('exportContainerName'), if(parameters('isMonthly'), 'Monthly', 'Daily'), parameters('exportFormat'), parameters('partitionData'), parameters('dataOverwriteBehavior'), parameters('compressionMode'), if(parameters('isMonthly'), 'monthly', 'daily'), toLower(parameters('datasetType')), if(parameters('isMonthly'), 'monthly', 'daily'), toLower(parameters('datasetType'))), if(equals(toLower(parameters('datasetType')), 'reservationrecommendations'), format('{{ \"properties\": {{ \"definition\": {{ \"dataSet\": {{ \"configuration\": {{ \"dataVersion\": \"{0}\", \"filters\": [ {{ \"name\": \"reservationScope\", \"value\": \"{1}\" }}, {{ \"name\": \"resourceType\", \"value\": \"{2}\" }}, {{ \"name\": \"lookBackPeriod\", \"value\": \"{3}\" }}] }}}}, \"timeframe\": \"{4}\", \"type\": \"{5}\" }}, \"deliveryInfo\": {{ \"destination\": {{ \"container\": \"{6}\", \"rootFolderPath\": \"@{{if(startswith(item().scope, ''/''), substring(item().scope, 1, sub(length(item().scope), 1)) ,item().scope)}}\", \"type\": \"AzureBlob\", \"resourceId\": \"@{{variables(''storageAccountId'')}}\" }} }}, \"schedule\": {{ \"recurrence\": \"{7}\", \"recurrencePeriod\": {{ \"from\": \"2024-01-01T00:00:00.000Z\", \"to\": \"2050-02-01T00:00:00.000Z\" }}, \"status\": \"Inactive\" }}, \"format\": \"{8}\", \"partitionData\": \"{9}\", \"dataOverwriteBehavior\": \"{10}\", \"compressionMode\": \"{11}\" }}, \"id\": \"@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-{12}-costdetails''))}}\", \"name\": \"@{{toLower(concat(variables(''finOpsHub''), ''-{13}-costdetails''))}}\", \"type\": \"Microsoft.CostManagement/reports\", \"identity\": {{ \"type\": \"systemAssigned\" }}, \"location\": \"global\" }}', parameters('schemaVersion'), parameters('recommendationScope'), parameters('resourceType'), parameters('recommendationLookbackPeriod'), if(parameters('isMonthly'), 'TheLastMonth', 'MonthToDate'), parameters('datasetType'), parameters('exportContainerName'), if(parameters('isMonthly'), 'Monthly', 'Daily'), parameters('exportFormat'), parameters('partitionData'), parameters('dataOverwriteBehavior'), parameters('compressionMode'), if(parameters('isMonthly'), 'monthly', 'daily'), if(parameters('isMonthly'), 'monthly', 'daily')), 'undefined'))))]"
                          }
                        }
                      }
                    }
                  ],
                  "parameters": {
                    "hubName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the FinOps hub instance."
                      }
                    },
                    "dataFactoryName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Data Factory instance."
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the Azure Key Vault instance."
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the Azure storage account instance."
                      }
                    },
                    "exportContainerName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the container where Cost Management data is exported."
                      }
                    },
                    "ingestionContainerName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the container where normalized data is ingested."
                      }
                    },
                    "configContainerName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the container where normalized data is ingested."
                      }
                    },
                    "dataExplorerName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Name of the Azure Data Explorer cluster to use for advanced analytics, if applicable."
                      }
                    },
                    "dataExplorerId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Resource ID of the Azure Data Explorer cluster to use for advanced analytics, if applicable."
                      }
                    },
                    "dataExplorerPrincipalId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. ID of the Azure Data Explorer cluster system assigned managed identity, if applicable."
                      }
                    },
                    "dataExplorerUri": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. URI of the Azure Data Explorer cluster to use for advanced analytics, if applicable."
                      }
                    },
                    "dataExplorerIngestionDatabase": {
                      "type": "string",
                      "defaultValue": "Ingestion",
                      "metadata": {
                        "description": "Optional. Name of the Azure Data Explorer ingestion database. Default: \"ingestion\"."
                      }
                    },
                    "dataExplorerIngestionCapacity": {
                      "type": "int",
                      "defaultValue": 1,
                      "metadata": {
                        "description": "Optional. Azure Data Explorer ingestion capacity.  Increase for non-dev SKUs. Default: 1"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. The location to use for the managed identity and deployment script to auto-start triggers. Default = (resource group location)."
                      }
                    },
                    "remoteHubStorageUri": {
                      "type": "string",
                      "metadata": {
                        "description": "Optional. Remote storage account for ingestion dataset."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to all resources."
                      }
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
                      }
                    },
                    "enablePublicAccess": {
                      "type": "bool",
                      "metadata": {
                        "description": "Optional. Enable public access."
                      }
                    }
                  },
                  "variables": {
                    "$fxv#0": "# Copyright (c) Microsoft Corporation.\r\n# Licensed under the MIT License.\r\n\r\n# Init outputs\r\n$DeploymentScriptOutputs = @{}\r\n\r\n# \r\n$adfParams = @{\r\n    ResourceGroupName = $env:DataFactoryResourceGroup\r\n    DataFactoryName   = $env:DataFactoryName\r\n}\r\n\r\n# Delete old triggers\r\n$triggers = Get-AzDataFactoryV2Trigger @adfParams -ErrorAction SilentlyContinue `\r\n| Where-Object { $_.Name -match '^msexports(_(setup|daily|monthly|extract|FileAdded))?$' }\r\n$DeploymentScriptOutputs[\"stopTriggers\"] = $triggers | Stop-AzDataFactoryV2Trigger -Force -ErrorAction SilentlyContinue\r\n$DeploymentScriptOutputs[\"deleteTriggers\"] = $triggers | Remove-AzDataFactoryV2Trigger -Force -ErrorAction SilentlyContinue\r\n\r\n# Delete old pipelines\r\n$DeploymentScriptOutputs[\"pipelines\"] = Get-AzDataFactoryV2Pipeline @adfParams -ErrorAction SilentlyContinue `\r\n| Where-Object { $_.Name -match '^(msexports_(backfill|extract|fill|get|run|setup|transform)|config_(BackfillData|ExportData|RunBackfill|RunExports))$' } `\r\n| Remove-AzDataFactoryV2Pipeline -Force -ErrorAction SilentlyContinue\r\n",
                    "$fxv#1": "# Copyright (c) Microsoft Corporation.\r\n# Licensed under the MIT License.\r\n\r\nParam(\r\n    [switch] $Stop\r\n)\r\n\r\n# Init outputs\r\n$DeploymentScriptOutputs = @{}\r\n\r\nif (-not $Stop)\r\n{\r\n    Start-Sleep -Seconds 10\r\n}\r\n\r\n# Loop thru triggers\r\n$env:Triggers.Split('|') `\r\n| ForEach-Object {\r\n    $trigger = $_\r\n    if ($Stop)\r\n    {\r\n        Write-Output \"Stopping trigger $trigger...\"\r\n        $triggerOutput = Stop-AzDataFactoryV2Trigger `\r\n            -ResourceGroupName $env:DataFactoryResourceGroup `\r\n            -DataFactoryName $env:DataFactoryName `\r\n            -Name $trigger `\r\n            -Force `\r\n            -ErrorAction SilentlyContinue # Ignore errors, since the trigger may not exist\r\n    }\r\n    else\r\n    {\r\n        Write-Output \"Starting trigger $trigger...\"\r\n        $triggerOutput = Start-AzDataFactoryV2Trigger `\r\n            -ResourceGroupName $env:DataFactoryResourceGroup `\r\n            -DataFactoryName $env:DataFactoryName `\r\n            -Name $trigger `\r\n            -Force\r\n    }\r\n    if ($triggerOutput)\r\n    {\r\n        Write-Output \"done...\"\r\n    }\r\n    else\r\n    {\r\n        Write-Output \"failed...\"\r\n    }\r\n    $DeploymentScriptOutputs[$trigger] = $triggerOutput\r\n}\r\n\r\nif ($Stop)\r\n{\r\n    Start-Sleep -Seconds 10\r\n}\r\n\r\nif (-not [string]::IsNullOrWhiteSpace($env:Pipelines))\r\n{\r\n    $env:Pipelines.Split('|') `\r\n    | ForEach-Object {\r\n        Write-Output \"Running the init pipeline...\"\r\n        Invoke-AzDataFactoryV2Pipeline `\r\n            -ResourceGroupName $env:DataFactoryResourceGroup `\r\n            -DataFactoryName $env:DataFactoryName `\r\n            -PipelineName $_\r\n    }\r\n}\r\n",
                    "$fxv#2": "# Copyright (c) Microsoft Corporation.\r\n# Licensed under the MIT License.\r\n\r\nParam(\r\n    [switch] $Stop\r\n)\r\n\r\n# Init outputs\r\n$DeploymentScriptOutputs = @{}\r\n\r\nif (-not $Stop)\r\n{\r\n    Start-Sleep -Seconds 10\r\n}\r\n\r\n# Loop thru triggers\r\n$env:Triggers.Split('|') `\r\n| ForEach-Object {\r\n    $trigger = $_\r\n    if ($Stop)\r\n    {\r\n        Write-Output \"Stopping trigger $trigger...\"\r\n        $triggerOutput = Stop-AzDataFactoryV2Trigger `\r\n            -ResourceGroupName $env:DataFactoryResourceGroup `\r\n            -DataFactoryName $env:DataFactoryName `\r\n            -Name $trigger `\r\n            -Force `\r\n            -ErrorAction SilentlyContinue # Ignore errors, since the trigger may not exist\r\n    }\r\n    else\r\n    {\r\n        Write-Output \"Starting trigger $trigger...\"\r\n        $triggerOutput = Start-AzDataFactoryV2Trigger `\r\n            -ResourceGroupName $env:DataFactoryResourceGroup `\r\n            -DataFactoryName $env:DataFactoryName `\r\n            -Name $trigger `\r\n            -Force\r\n    }\r\n    if ($triggerOutput)\r\n    {\r\n        Write-Output \"done...\"\r\n    }\r\n    else\r\n    {\r\n        Write-Output \"failed...\"\r\n    }\r\n    $DeploymentScriptOutputs[$trigger] = $triggerOutput\r\n}\r\n\r\nif ($Stop)\r\n{\r\n    Start-Sleep -Seconds 10\r\n}\r\n\r\nif (-not [string]::IsNullOrWhiteSpace($env:Pipelines))\r\n{\r\n    $env:Pipelines.Split('|') `\r\n    | ForEach-Object {\r\n        Write-Output \"Running the init pipeline...\"\r\n        Invoke-AzDataFactoryV2Pipeline `\r\n            -ResourceGroupName $env:DataFactoryResourceGroup `\r\n            -DataFactoryName $env:DataFactoryName `\r\n            -PipelineName $_\r\n    }\r\n}\r\n",
                    "focusSchemaVersion": "1.0",
                    "exportSchemaVersion": "2023-05-01",
                    "reservationDetailsSchemaVersion": "2023-03-01",
                    "ftkVersion": "0.9",
                    "exportApiVersion": "2023-07-01-preview",
                    "hubDataExplorerName": "hubDataExplorer",
                    "deployDataExplorer": "[not(empty(parameters('dataExplorerId')))]",
                    "datasetPropsDefault": {
                      "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                          "value": "@{dataset().fileName}",
                          "type": "Expression"
                        },
                        "folderPath": {
                          "value": "@{dataset().folderPath}",
                          "type": "Expression"
                        }
                      }
                    },
                    "safeExportContainerName": "[replace(format('{0}', parameters('exportContainerName')), '-', '_')]",
                    "safeIngestionContainerName": "[replace(format('{0}', parameters('ingestionContainerName')), '-', '_')]",
                    "safeConfigContainerName": "[replace(format('{0}', parameters('configContainerName')), '-', '_')]",
                    "managedVnetName": "default",
                    "ingestionIdFileNameSeparator": "__",
                    "exportManifestAddedTriggerName": "[format('{0}_ManifestAdded', variables('safeExportContainerName'))]",
                    "ingestionManifestAddedTriggerName": "[format('{0}_ManifestAdded', variables('safeIngestionContainerName'))]",
                    "updateConfigTriggerName": "[format('{0}_SettingsUpdated', variables('safeConfigContainerName'))]",
                    "dailyTriggerName": "[format('{0}_DailySchedule', variables('safeConfigContainerName'))]",
                    "monthlyTriggerName": "[format('{0}_MonthlySchedule', variables('safeConfigContainerName'))]",
                    "allHubTriggers": [
                      "[variables('exportManifestAddedTriggerName')]",
                      "[variables('ingestionManifestAddedTriggerName')]",
                      "[variables('updateConfigTriggerName')]",
                      "[variables('dailyTriggerName')]",
                      "[variables('monthlyTriggerName')]"
                    ],
                    "autoStartRbacRoles": [
                      "673868aa-7521-48a0-acc6-0f60742d39f5"
                    ],
                    "storageRbacRoles": [
                      "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                      "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                      "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                      "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9"
                    ]
                  },
                  "resources": {
                    "dataFactory": {
                      "existing": true,
                      "type": "Microsoft.DataFactory/factories",
                      "apiVersion": "2018-06-01",
                      "name": "[parameters('dataFactoryName')]"
                    },
                    "storageAccount": {
                      "existing": true,
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('storageAccountName')]"
                    },
                    "keyVault": {
                      "condition": "[not(empty(parameters('remoteHubStorageUri')))]",
                      "existing": true,
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('keyVaultName')]"
                    },
                    "managedVirtualNetwork": {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('managedVnetName'))]",
                      "properties": {}
                    },
                    "managedIntegrationRuntime": {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.DataFactory/factories/integrationRuntimes",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), 'ManagedIntegrationRuntime')]",
                      "properties": {
                        "type": "Managed",
                        "managedVirtualNetwork": {
                          "referenceName": "[variables('managedVnetName')]",
                          "type": "ManagedVirtualNetworkReference"
                        },
                        "typeProperties": {
                          "computeProperties": {
                            "location": "[parameters('location')]",
                            "dataFlowProperties": {
                              "computeType": "General",
                              "coreCount": 8,
                              "timeToLive": 10,
                              "cleanup": false,
                              "customProperties": []
                            },
                            "copyComputeScaleProperties": {
                              "dataIntegrationUnit": 16,
                              "timeToLive": 30
                            },
                            "pipelineExternalComputeScaleProperties": {
                              "timeToLive": 30,
                              "numberOfPipelineNodes": 1,
                              "numberOfExternalNodes": 1
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "managedVirtualNetwork"
                      ]
                    },
                    "storageManagedPrivateEndpoint": {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('dataFactoryName'), variables('managedVnetName'), parameters('storageAccountName'))]",
                      "properties": {
                        "name": "[parameters('storageAccountName')]",
                        "groupId": "dfs",
                        "privateLinkResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                        "fqdns": [
                          "[reference('storageAccount').primaryEndpoints.dfs]"
                        ]
                      },
                      "dependsOn": [
                        "managedVirtualNetwork",
                        "storageAccount"
                      ]
                    },
                    "keyVaultManagedPrivateEndpoint": {
                      "condition": "[and(not(empty(parameters('remoteHubStorageUri'))), not(parameters('enablePublicAccess')))]",
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('dataFactoryName'), variables('managedVnetName'), parameters('keyVaultName'))]",
                      "properties": {
                        "name": "[parameters('keyVaultName')]",
                        "groupId": "vault",
                        "privateLinkResourceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                        "fqdns": [
                          "[reference('keyVault').vaultUri]"
                        ]
                      },
                      "dependsOn": [
                        "keyVault",
                        "managedVirtualNetwork"
                      ]
                    },
                    "dataExplorerManagedPrivateEndpoint": {
                      "condition": "[and(variables('deployDataExplorer'), not(parameters('enablePublicAccess')))]",
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('dataFactoryName'), variables('managedVnetName'), variables('hubDataExplorerName'))]",
                      "properties": {
                        "name": "[variables('hubDataExplorerName')]",
                        "groupId": "cluster",
                        "privateLinkResourceId": "[parameters('dataExplorerId')]",
                        "fqdns": [
                          "[parameters('dataExplorerUri')]"
                        ]
                      },
                      "dependsOn": [
                        "managedVirtualNetwork"
                      ]
                    },
                    "triggerManagerIdentity": {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-01-31",
                      "name": "[format('{0}_triggerManager', parameters('dataFactoryName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), createObject()))]"
                    },
                    "triggerManagerRoleAssignments": {
                      "copy": {
                        "name": "triggerManagerRoleAssignments",
                        "count": "[length(variables('autoStartRbacRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.DataFactory/factories/{0}', parameters('dataFactoryName'))]",
                      "name": "[guid(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), variables('autoStartRbacRoles')[copyIndex()], resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_triggerManager', parameters('dataFactoryName'))))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('autoStartRbacRoles')[copyIndex()])]",
                        "principalId": "[reference('triggerManagerIdentity').principalId]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "triggerManagerIdentity"
                      ]
                    },
                    "factoryIdentityStorageRoleAssignments": {
                      "copy": {
                        "name": "factoryIdentityStorageRoleAssignments",
                        "count": "[length(variables('storageRbacRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageRbacRoles')[copyIndex()], resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageRbacRoles')[copyIndex()])]",
                        "principalId": "[reference('dataFactory', '2018-06-01', 'full').identity.principalId]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "dataFactory"
                      ]
                    },
                    "deleteOldResources": {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}_deleteOldResources', parameters('dataFactoryName'))]",
                      "location": "[if(startsWith(parameters('location'), 'china'), 'chinaeast2', parameters('location'))]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_triggerManager', parameters('dataFactoryName'))))]": {}
                        }
                      },
                      "kind": "AzurePowerShell",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject()))]",
                      "properties": {
                        "azPowerShellVersion": "8.0",
                        "retentionInterval": "PT1H",
                        "cleanupPreference": "OnSuccess",
                        "scriptContent": "[variables('$fxv#0')]",
                        "environmentVariables": [
                          {
                            "name": "DataFactorySubscriptionId",
                            "value": "[subscription().id]"
                          },
                          {
                            "name": "DataFactoryResourceGroup",
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "name": "DataFactoryName",
                            "value": "[parameters('dataFactoryName')]"
                          }
                        ]
                      },
                      "dependsOn": [
                        "triggerManagerIdentity",
                        "triggerManagerRoleAssignments"
                      ]
                    },
                    "stopTriggers": {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}_stopTriggers', parameters('dataFactoryName'))]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_triggerManager', parameters('dataFactoryName'))))]": {}
                        }
                      },
                      "kind": "AzurePowerShell",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject()))]",
                      "properties": {
                        "azPowerShellVersion": "8.0",
                        "retentionInterval": "PT1H",
                        "cleanupPreference": "OnSuccess",
                        "scriptContent": "[variables('$fxv#1')]",
                        "arguments": "-Stop",
                        "environmentVariables": [
                          {
                            "name": "DataFactorySubscriptionId",
                            "value": "[subscription().id]"
                          },
                          {
                            "name": "DataFactoryResourceGroup",
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "name": "DataFactoryName",
                            "value": "[parameters('dataFactoryName')]"
                          },
                          {
                            "name": "Triggers",
                            "value": "[join(variables('allHubTriggers'), '|')]"
                          }
                        ]
                      },
                      "dependsOn": [
                        "triggerManagerIdentity",
                        "triggerManagerRoleAssignments"
                      ]
                    },
                    "linkedService_keyVault": {
                      "condition": "[not(empty(parameters('remoteHubStorageUri')))]",
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), parameters('keyVaultName'))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {},
                        "type": "AzureKeyVault",
                        "typeProperties": {
                          "baseUrl": "[reference(format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName')), '2023-02-01').vaultUri]"
                        },
                        "connectVia": "[if(parameters('enablePublicAccess'), null(), createObject('referenceName', 'ManagedIntegrationRuntime', 'type', 'IntegrationRuntimeReference'))]"
                      },
                      "dependsOn": [
                        "managedIntegrationRuntime"
                      ]
                    },
                    "linkedService_storageAccount": {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), parameters('storageAccountName'))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {},
                        "type": "AzureBlobFS",
                        "typeProperties": {
                          "url": "[reference(format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName')), '2021-08-01').primaryEndpoints.dfs]"
                        },
                        "connectVia": "[if(parameters('enablePublicAccess'), null(), createObject('referenceName', 'ManagedIntegrationRuntime', 'type', 'IntegrationRuntimeReference'))]"
                      },
                      "dependsOn": [
                        "managedIntegrationRuntime"
                      ]
                    },
                    "linkedService_dataExplorer": {
                      "condition": "[variables('deployDataExplorer')]",
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('hubDataExplorerName'))]",
                      "properties": {
                        "type": "AzureDataExplorer",
                        "parameters": {
                          "database": {
                            "type": "String",
                            "defaultValue": "[parameters('dataExplorerIngestionDatabase')]"
                          }
                        },
                        "typeProperties": {
                          "endpoint": "[parameters('dataExplorerUri')]",
                          "database": "@{linkedService().database}",
                          "tenant": "[reference('dataFactory', '2018-06-01', 'full').identity.tenantId]",
                          "servicePrincipalId": "[reference('dataFactory', '2018-06-01', 'full').identity.principalId]"
                        },
                        "connectVia": "[if(parameters('enablePublicAccess'), null(), createObject('referenceName', 'ManagedIntegrationRuntime', 'type', 'IntegrationRuntimeReference'))]"
                      },
                      "dependsOn": [
                        "dataFactory",
                        "managedIntegrationRuntime"
                      ]
                    },
                    "linkedService_remoteHubStorage": {
                      "condition": "[not(empty(parameters('remoteHubStorageUri')))]",
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), 'remoteHubStorage')]",
                      "properties": {
                        "annotations": [],
                        "parameters": {},
                        "type": "AzureBlobFS",
                        "typeProperties": {
                          "url": "[parameters('remoteHubStorageUri')]",
                          "accountKey": {
                            "type": "AzureKeyVaultSecret",
                            "store": {
                              "referenceName": "[parameters('keyVaultName')]",
                              "type": "LinkedServiceReference"
                            },
                            "secretName": "[format('{0}-storage-key', toLower(parameters('hubName')))]"
                          }
                        },
                        "connectVia": "[if(parameters('enablePublicAccess'), null(), createObject('referenceName', 'ManagedIntegrationRuntime', 'type', 'IntegrationRuntimeReference'))]"
                      },
                      "dependsOn": [
                        "linkedService_keyVault",
                        "managedIntegrationRuntime"
                      ]
                    },
                    "linkedService_ftkRepo": {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), 'ftkRepo')]",
                      "properties": {
                        "parameters": {
                          "filePath": {
                            "type": "string"
                          }
                        },
                        "annotations": [],
                        "type": "HttpServer",
                        "typeProperties": {
                          "url": "@concat('https://github.com/microsoft/finops-toolkit/', linkedService().filePath)",
                          "enableServerCertificateValidation": true,
                          "authenticationType": "Anonymous"
                        },
                        "connectVia": "[if(parameters('enablePublicAccess'), null(), createObject('referenceName', 'ManagedIntegrationRuntime', 'type', 'IntegrationRuntimeReference'))]"
                      },
                      "dependsOn": [
                        "managedIntegrationRuntime"
                      ]
                    },
                    "dataset_config": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('safeConfigContainerName'))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "fileName": {
                            "type": "String",
                            "defaultValue": "settings.json"
                          },
                          "folderPath": {
                            "type": "String",
                            "defaultValue": "[parameters('configContainerName')]"
                          }
                        },
                        "type": "Json",
                        "typeProperties": "[variables('datasetPropsDefault')]",
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[parameters('storageAccountName')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_manifest": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), 'manifest')]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "fileName": {
                            "type": "String",
                            "defaultValue": "manifest.json"
                          },
                          "folderPath": {
                            "type": "String",
                            "defaultValue": "[parameters('exportContainerName')]"
                          }
                        },
                        "type": "Json",
                        "typeProperties": "[variables('datasetPropsDefault')]",
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[parameters('storageAccountName')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_msexports": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('safeExportContainerName'))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "blobPath": {
                            "type": "String"
                          }
                        },
                        "type": "DelimitedText",
                        "typeProperties": {
                          "location": {
                            "type": "AzureBlobFSLocation",
                            "fileName": {
                              "value": "@{dataset().blobPath}",
                              "type": "Expression"
                            },
                            "fileSystem": "[variables('safeExportContainerName')]"
                          },
                          "columnDelimiter": ",",
                          "escapeChar": "\"",
                          "quoteChar": "\"",
                          "firstRowAsHeader": true
                        },
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[parameters('storageAccountName')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_msexports_gzip": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_gzip', variables('safeExportContainerName')))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "blobPath": {
                            "type": "String"
                          }
                        },
                        "type": "DelimitedText",
                        "typeProperties": {
                          "location": {
                            "type": "AzureBlobFSLocation",
                            "fileName": {
                              "value": "@{dataset().blobPath}",
                              "type": "Expression"
                            },
                            "fileSystem": "[variables('safeExportContainerName')]"
                          },
                          "columnDelimiter": ",",
                          "escapeChar": "\"",
                          "quoteChar": "\"",
                          "firstRowAsHeader": true,
                          "compressionCodec": "Gzip"
                        },
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[parameters('storageAccountName')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_msexports_parquet": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_parquet', variables('safeExportContainerName')))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "blobPath": {
                            "type": "String"
                          }
                        },
                        "type": "Parquet",
                        "typeProperties": {
                          "location": {
                            "type": "AzureBlobFSLocation",
                            "fileName": {
                              "value": "@{dataset().blobPath}",
                              "type": "Expression"
                            },
                            "fileSystem": "[variables('safeExportContainerName')]"
                          }
                        },
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[parameters('storageAccountName')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_ingestion": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('safeIngestionContainerName'))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "blobPath": {
                            "type": "String"
                          }
                        },
                        "type": "Parquet",
                        "typeProperties": {
                          "location": {
                            "type": "AzureBlobFSLocation",
                            "fileName": {
                              "value": "@{dataset().blobPath}",
                              "type": "Expression"
                            },
                            "fileSystem": "[variables('safeIngestionContainerName')]"
                          }
                        },
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[if(empty(parameters('remoteHubStorageUri')), parameters('storageAccountName'), 'remoteHubStorage')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_remoteHubStorage",
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_ingestion_files": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_files', variables('safeIngestionContainerName')))]",
                      "properties": {
                        "annotations": [],
                        "parameters": {
                          "folderPath": {
                            "type": "String"
                          }
                        },
                        "type": "Parquet",
                        "typeProperties": {
                          "location": {
                            "type": "AzureBlobFSLocation",
                            "fileSystem": "[variables('safeIngestionContainerName')]",
                            "folderPath": {
                              "value": "@dataset().folderPath",
                              "type": "Expression"
                            }
                          }
                        },
                        "linkedServiceName": {
                          "parameters": {},
                          "referenceName": "[if(empty(parameters('remoteHubStorageUri')), parameters('storageAccountName'), 'remoteHubStorage')]",
                          "type": "LinkedServiceReference"
                        }
                      },
                      "dependsOn": [
                        "linkedService_remoteHubStorage",
                        "linkedService_storageAccount"
                      ]
                    },
                    "dataset_dataExplorer": {
                      "condition": "[variables('deployDataExplorer')]",
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('hubDataExplorerName'))]",
                      "properties": {
                        "type": "AzureDataExplorerTable",
                        "linkedServiceName": {
                          "parameters": {
                            "database": "@dataset().database"
                          },
                          "referenceName": "[variables('hubDataExplorerName')]",
                          "type": "LinkedServiceReference"
                        },
                        "parameters": {
                          "database": {
                            "type": "String",
                            "defaultValue": "[parameters('dataExplorerIngestionDatabase')]"
                          },
                          "table": {
                            "type": "String"
                          }
                        },
                        "typeProperties": {
                          "table": {
                            "value": "@dataset().table",
                            "type": "Expression"
                          }
                        }
                      },
                      "dependsOn": [
                        "linkedService_dataExplorer"
                      ]
                    },
                    "dataset_ftkReleaseFile": {
                      "type": "Microsoft.DataFactory/factories/datasets",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), 'ftkReleaseFile')]",
                      "properties": {
                        "linkedServiceName": {
                          "referenceName": "ftkRepo",
                          "type": "LinkedServiceReference"
                        },
                        "parameters": {
                          "fileName": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string",
                            "defaultValue": "[variables('ftkVersion')]"
                          }
                        },
                        "annotations": [],
                        "type": "DelimitedText",
                        "typeProperties": {
                          "location": {
                            "type": "HttpServerLocation",
                            "relativeUrl": {
                              "value": "@concat('releases/download/v', dataset().version, '/', dataset().fileName)",
                              "type": "Expression"
                            }
                          },
                          "columnDelimiter": ",",
                          "escapeChar": "\\",
                          "firstRowAsHeader": true,
                          "quoteChar": "\""
                        },
                        "schema": []
                      },
                      "dependsOn": [
                        "linkedService_ftkRepo"
                      ]
                    },
                    "trigger_ExportManifestAdded": {
                      "type": "Microsoft.DataFactory/factories/triggers",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('exportManifestAddedTriggerName'))]",
                      "properties": {
                        "annotations": [],
                        "pipelines": [
                          {
                            "pipelineReference": {
                              "referenceName": "[format('{0}_ExecuteETL', variables('safeExportContainerName'))]",
                              "type": "PipelineReference"
                            },
                            "parameters": {
                              "folderPath": "@triggerBody().folderPath",
                              "fileName": "@triggerBody().fileName"
                            }
                          }
                        ],
                        "type": "BlobEventsTrigger",
                        "typeProperties": {
                          "blobPathBeginsWith": "[format('/{0}/blobs/', parameters('exportContainerName'))]",
                          "blobPathEndsWith": "manifest.json",
                          "ignoreEmptyBlobs": true,
                          "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                          "events": [
                            "Microsoft.Storage.BlobCreated"
                          ]
                        }
                      },
                      "dependsOn": [
                        "pipeline_ExecuteExportsETL",
                        "stopTriggers"
                      ]
                    },
                    "trigger_IngestionManifestAdded": {
                      "condition": "[variables('deployDataExplorer')]",
                      "type": "Microsoft.DataFactory/factories/triggers",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('ingestionManifestAddedTriggerName'))]",
                      "properties": {
                        "annotations": [],
                        "pipelines": [
                          {
                            "pipelineReference": {
                              "referenceName": "[format('{0}_ExecuteETL', variables('safeIngestionContainerName'))]",
                              "type": "PipelineReference"
                            },
                            "parameters": {
                              "folderPath": "@triggerBody().folderPath"
                            }
                          }
                        ],
                        "type": "BlobEventsTrigger",
                        "typeProperties": {
                          "blobPathBeginsWith": "[format('/{0}/blobs/', parameters('ingestionContainerName'))]",
                          "blobPathEndsWith": "manifest.json",
                          "ignoreEmptyBlobs": true,
                          "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                          "events": [
                            "Microsoft.Storage.BlobCreated"
                          ]
                        }
                      },
                      "dependsOn": [
                        "pipeline_ExecuteIngestionETL",
                        "stopTriggers"
                      ]
                    },
                    "trigger_SettingsUpdated": {
                      "type": "Microsoft.DataFactory/factories/triggers",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('updateConfigTriggerName'))]",
                      "properties": {
                        "annotations": [],
                        "pipelines": [
                          {
                            "pipelineReference": {
                              "referenceName": "[format('{0}_ConfigureExports', variables('safeConfigContainerName'))]",
                              "type": "PipelineReference"
                            }
                          }
                        ],
                        "type": "BlobEventsTrigger",
                        "typeProperties": {
                          "blobPathBeginsWith": "[format('/{0}/blobs/', parameters('configContainerName'))]",
                          "blobPathEndsWith": "settings.json",
                          "ignoreEmptyBlobs": true,
                          "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                          "events": [
                            "Microsoft.Storage.BlobCreated"
                          ]
                        }
                      },
                      "dependsOn": [
                        "pipeline_ConfigureExports",
                        "stopTriggers"
                      ]
                    },
                    "trigger_DailySchedule": {
                      "type": "Microsoft.DataFactory/factories/triggers",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('dailyTriggerName'))]",
                      "properties": {
                        "pipelines": [
                          {
                            "pipelineReference": {
                              "referenceName": "[format('{0}_StartExportProcess', variables('safeConfigContainerName'))]",
                              "type": "PipelineReference"
                            },
                            "parameters": {
                              "Recurrence": "Daily"
                            }
                          }
                        ],
                        "type": "ScheduleTrigger",
                        "typeProperties": {
                          "recurrence": {
                            "frequency": "Hour",
                            "interval": 24,
                            "startTime": "2023-01-01T01:01:00",
                            "timeZone": "[reference('azuretimezones').outputs.Timezone.value]"
                          }
                        }
                      },
                      "dependsOn": [
                        "azuretimezones",
                        "pipeline_StartExportProcess",
                        "stopTriggers"
                      ]
                    },
                    "trigger_MonthlySchedule": {
                      "type": "Microsoft.DataFactory/factories/triggers",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('monthlyTriggerName'))]",
                      "properties": {
                        "pipelines": [
                          {
                            "pipelineReference": {
                              "referenceName": "[format('{0}_StartExportProcess', variables('safeConfigContainerName'))]",
                              "type": "PipelineReference"
                            },
                            "parameters": {
                              "Recurrence": "Monthly"
                            }
                          }
                        ],
                        "type": "ScheduleTrigger",
                        "typeProperties": {
                          "recurrence": {
                            "frequency": "Month",
                            "interval": 1,
                            "startTime": "2023-01-05T01:11:00",
                            "timeZone": "[reference('azuretimezones').outputs.Timezone.value]",
                            "schedule": {
                              "monthDays": [
                                2,
                                5,
                                19
                              ]
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "azuretimezones",
                        "pipeline_StartExportProcess",
                        "stopTriggers"
                      ]
                    },
                    "pipeline_InitializeHub": {
                      "condition": "[variables('deployDataExplorer')]",
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_InitializeHub', variables('safeConfigContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Get Config",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.00:05:00",
                              "retry": 2,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference"
                              }
                            }
                          },
                          {
                            "name": "Set Version",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "version",
                              "value": {
                                "value": "@activity('Get Config').output.firstRow.version",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Scopes",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopes",
                              "value": {
                                "value": "@string(activity('Get Config').output.firstRow.scopes)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Retention",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "retention",
                              "value": {
                                "value": "@string(activity('Get Config').output.firstRow.retention)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Until Capacity Is Available",
                            "type": "Until",
                            "dependsOn": [
                              {
                                "activity": "Set Version",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Retention",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "expression": {
                                "value": "@equals(variables('tryAgain'), false)",
                                "type": "Expression"
                              },
                              "activities": [
                                {
                                  "name": "Confirm Ingestion Capacity",
                                  "type": "AzureDataExplorerCommand",
                                  "dependsOn": [],
                                  "policy": {
                                    "timeout": "0.12:00:00",
                                    "retry": 0,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "command": ".show capacity | where Resource == 'Ingestions' | project Remaining",
                                    "commandTimeout": "00:20:00"
                                  },
                                  "linkedServiceName": {
                                    "referenceName": "[variables('hubDataExplorerName')]",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                      "database": "[parameters('dataExplorerIngestionDatabase')]"
                                    }
                                  }
                                },
                                {
                                  "name": "If Has Capacity",
                                  "type": "IfCondition",
                                  "dependsOn": [
                                    {
                                      "activity": "Confirm Ingestion Capacity",
                                      "dependencyConditions": [
                                        "Succeeded"
                                      ]
                                    }
                                  ],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "expression": {
                                      "value": "@or(equals(activity('Confirm Ingestion Capacity').output.count, 0), greater(activity('Confirm Ingestion Capacity').output.value[0].Remaining, 0))",
                                      "type": "Expression"
                                    },
                                    "ifFalseActivities": [
                                      {
                                        "name": "Wait for Ingestion",
                                        "type": "Wait",
                                        "dependsOn": [],
                                        "userProperties": [],
                                        "typeProperties": {
                                          "waitTimeInSeconds": 15
                                        }
                                      },
                                      {
                                        "name": "Try Again",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Wait for Ingestion",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": true
                                        }
                                      }
                                    ],
                                    "ifTrueActivities": [
                                      {
                                        "name": "Set ingestion policy in ADX",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": {
                                            "value": "[format('.alter-merge database {0} policy managed_identity \"[ {{ ''ObjectId'' : ''{1}'', ''AllowedUsages'' : ''NativeIngestion'' }}]\"', parameters('dataExplorerIngestionDatabase'), parameters('dataExplorerPrincipalId'))]",
                                            "type": "Expression"
                                          },
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Save Hub Settings in ADX",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Set ingestion policy in ADX",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": {
                                            "value": "@concat('.append HubSettingsLog <| print version=\"', variables('version'), '\",scopes=dynamic(', variables('scopes'), '),retention=dynamic(', variables('retention'), ') | extend scopes = iff(isnull(scopes[0]), pack_array(scopes), scopes) | mv-apply scopeObj = scopes on (where isnotempty(scopeObj.scope) | summarize scopes = make_set(scopeObj.scope))')",
                                            "type": "Expression"
                                          },
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Update PricingUnits in ADX",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Save Hub Settings in ADX",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": "[format('.set-or-replace PricingUnits <| externaldata(x_PricingUnitDescription: string, AccountTypes: string, x_PricingBlockSize: decimal, PricingUnit: string)[@\"https://github.com/microsoft/finops-toolkit/releases/download/v{0}/PricingUnits.csv\"] with (format=\"csv\", ignoreFirstRecord=true) | project-away AccountTypes', variables('ftkVersion'))]",
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Update Regions in ADX",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Update PricingUnits in ADX",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": "[format('.set-or-replace Regions <| externaldata(ResourceLocation: string, RegionId: string, RegionName: string)[@\"https://github.com/microsoft/finops-toolkit/releases/download/v{0}/Regions.csv\"] with (format=\"csv\", ignoreFirstRecord=true)', variables('ftkVersion'))]",
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Update ResourceTypes in ADX",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Update Regions in ADX",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": "[format('.set-or-replace ResourceTypes <| externaldata(x_ResourceType: string, SingularDisplayName: string, PluralDisplayName: string, LowerSingularDisplayName: string, LowerPluralDisplayName: string, IsPreview: bool, Description: string, IconUri: string, Links: string)[@\"https://github.com/microsoft/finops-toolkit/releases/download/v{0}/ResourceTypes.csv\"] with (format=\"csv\", ignoreFirstRecord=true) | project-away Links', variables('ftkVersion'))]",
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Update Services in ADX",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Update ResourceTypes in ADX",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": "[format('.set-or-replace Services <| externaldata(x_ConsumedService: string, x_ResourceType: string, ServiceName: string, ServiceCategory: string, ServiceSubcategory: string, PublisherName: string, x_PublisherCategory: string, x_Environment: string, x_ServiceModel: string)[@\"https://github.com/microsoft/finops-toolkit/releases/download/v{0}/Services.csv\"] with (format=\"csv\", ignoreFirstRecord=true)', variables('ftkVersion'))]",
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Ingestion Complete",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Update Services in ADX",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": false
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "Abort On Error",
                                  "type": "SetVariable",
                                  "dependsOn": [
                                    {
                                      "activity": "If Has Capacity",
                                      "dependencyConditions": [
                                        "Failed"
                                      ]
                                    }
                                  ],
                                  "policy": {
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "variableName": "tryAgain",
                                    "value": false
                                  }
                                }
                              ],
                              "timeout": "0.02:00:00"
                            }
                          },
                          {
                            "name": "Timeout Error",
                            "type": "Fail",
                            "dependsOn": [
                              {
                                "activity": "Until Capacity Is Available",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "message": "Data Explorer ingestion timed out after 2 hours while waiting for available capacity. Please re-run this pipeline to re-attempt ingestion. If you continue to see this error, please report an issue at https://aka.ms/ftk/ideas.",
                              "errorCode": "DataExplorerIngestionTimeout"
                            }
                          }
                        ],
                        "concurrency": 1,
                        "variables": {
                          "version": {
                            "type": "String"
                          },
                          "scopes": {
                            "type": "String"
                          },
                          "retention": {
                            "type": "String"
                          },
                          "tryAgain": {
                            "type": "Boolean",
                            "defaultValue": true
                          }
                        }
                      },
                      "dependsOn": [
                        "dataset_config",
                        "linkedService_dataExplorer"
                      ],
                      "metadata": {
                        "description": "Initializes the hub instance based on the configuration settings."
                      }
                    },
                    "pipeline_StartBackfillProcess": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_StartBackfillProcess', variables('safeConfigContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Get Config",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.00:05:00",
                              "retry": 2,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@variables('fileName')",
                                    "type": "Expression"
                                  },
                                  "folderPath": {
                                    "value": "@variables('folderPath')",
                                    "type": "Expression"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "name": "Set backfill end date",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "endDate",
                              "value": {
                                "value": "@addDays(startOfMonth(utcNow()), -1)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set backfill start date",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "startDate",
                              "value": {
                                "value": "@subtractFromTime(startOfMonth(utcNow()), activity('Get Config').output.firstRow.retention.ingestion.months, 'Month')",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set export start date",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Set backfill start date",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "thisMonth",
                              "value": {
                                "value": "@startOfMonth(variables('endDate'))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set export end date",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Set export start date",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "nextMonth",
                              "value": {
                                "value": "@startOfMonth(subtractFromTime(variables('thisMonth'), 1, 'Month'))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Every Month",
                            "type": "Until",
                            "dependsOn": [
                              {
                                "activity": "Set export end date",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set backfill end date",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "expression": {
                                "value": "@less(variables('thisMonth'), variables('startDate'))",
                                "type": "Expression"
                              },
                              "activities": [
                                {
                                  "name": "Update export start date",
                                  "type": "SetVariable",
                                  "dependsOn": [
                                    {
                                      "activity": "Backfill data",
                                      "dependencyConditions": [
                                        "Completed"
                                      ]
                                    }
                                  ],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "variableName": "thisMonth",
                                    "value": {
                                      "value": "@variables('nextMonth')",
                                      "type": "Expression"
                                    }
                                  }
                                },
                                {
                                  "name": "Update export end date",
                                  "type": "SetVariable",
                                  "dependsOn": [
                                    {
                                      "activity": "Update export start date",
                                      "dependencyConditions": [
                                        "Completed"
                                      ]
                                    }
                                  ],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "variableName": "nextMonth",
                                    "value": {
                                      "value": "@subtractFromTime(variables('thisMonth'), 1, 'Month')",
                                      "type": "Expression"
                                    }
                                  }
                                },
                                {
                                  "name": "Backfill data",
                                  "type": "ExecutePipeline",
                                  "dependsOn": [],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "pipeline": {
                                      "referenceName": "[format('{0}_RunBackfillJob', variables('safeConfigContainerName'))]",
                                      "type": "PipelineReference"
                                    },
                                    "waitOnCompletion": true,
                                    "parameters": {
                                      "StartDate": {
                                        "value": "@variables('thisMonth')",
                                        "type": "Expression"
                                      },
                                      "EndDate": {
                                        "value": "@addDays(addToTime(variables('thisMonth'), 1, 'Month'), -1)",
                                        "type": "Expression"
                                      }
                                    }
                                  }
                                }
                              ],
                              "timeout": "0.02:00:00"
                            }
                          }
                        ],
                        "concurrency": 1,
                        "variables": {
                          "exportName": {
                            "type": "String"
                          },
                          "storageAccountId": {
                            "type": "String",
                            "defaultValue": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                          },
                          "finOpsHub": {
                            "type": "String",
                            "defaultValue": "[parameters('hubName')]"
                          },
                          "resourceManagementUri": {
                            "type": "String",
                            "defaultValue": "[environment().resourceManager]"
                          },
                          "fileName": {
                            "type": "String",
                            "defaultValue": "settings.json"
                          },
                          "folderPath": {
                            "type": "String",
                            "defaultValue": "[parameters('configContainerName')]"
                          },
                          "endDate": {
                            "type": "String"
                          },
                          "startDate": {
                            "type": "String"
                          },
                          "thisMonth": {
                            "type": "String"
                          },
                          "nextMonth": {
                            "type": "String"
                          }
                        }
                      },
                      "dependsOn": [
                        "dataset_config",
                        "pipeline_RunBackfillJob"
                      ],
                      "metadata": {
                        "description": "Runs the backfill job for each month based on retention settings."
                      }
                    },
                    "pipeline_RunBackfillJob": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_RunBackfillJob', variables('safeConfigContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Get Config",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.00:05:00",
                              "retry": 2,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@variables('fileName')",
                                    "type": "Expression"
                                  },
                                  "folderPath": {
                                    "value": "@variables('folderPath')",
                                    "type": "Expression"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "name": "Set Scopes",
                            "description": "Save scopes to test if it is an array",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopesArray",
                              "value": {
                                "value": "@activity('Get Config').output.firstRow.scopes",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Scopes as Array",
                            "description": "Wraps a single scope object into an array to work around the PowerShell bug where single-item arrays are sometimes written as a single object instead of an array.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Set Scopes",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopesArray",
                              "value": {
                                "value": "@createArray(activity('Get Config').output.firstRow.scopes)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Filter Invalid Scopes",
                            "description": "Remove any invalid scopes to avoid errors.",
                            "type": "Filter",
                            "dependsOn": [
                              {
                                "activity": "Set Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Scopes as Array",
                                "dependencyConditions": [
                                  "Skipped",
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@variables('scopesArray')",
                                "type": "Expression"
                              },
                              "condition": {
                                "value": "@and(not(empty(item().scope)), not(equals(item().scope, '/')))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "ForEach Export Scope",
                            "type": "ForEach",
                            "dependsOn": [
                              {
                                "activity": "Filter Invalid Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@activity('Filter Invalid Scopes').output.Value",
                                "type": "Expression"
                              },
                              "isSequential": true,
                              "activities": [
                                {
                                  "name": "Set backfill export name",
                                  "type": "SetVariable",
                                  "dependsOn": [],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "variableName": "exportName",
                                    "value": {
                                      "value": "@toLower(concat(variables('finOpsHub'), '-monthly-costdetails'))",
                                      "type": "Expression"
                                    }
                                  }
                                },
                                {
                                  "name": "Trigger backfill export",
                                  "type": "WebActivity",
                                  "dependsOn": [
                                    {
                                      "activity": "Set backfill export name",
                                      "dependencyConditions": [
                                        "Completed"
                                      ]
                                    }
                                  ],
                                  "policy": {
                                    "timeout": "0.00:05:00",
                                    "retry": 1,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "url": {
                                      "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{variables(''exportName'')}}/run?api-version={0}', variables('exportApiVersion'))]",
                                      "type": "Expression"
                                    },
                                    "method": "POST",
                                    "headers": {
                                      "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunBackfill@{0}', variables('ftkVersion'))]",
                                      "Content-Type": "application/json",
                                      "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                    },
                                    "body": "{\"timePeriod\" : { \"from\" : \"@{pipeline().parameters.StartDate}\", \"to\" : \"@{pipeline().parameters.EndDate}\" }}",
                                    "authentication": {
                                      "type": "MSI",
                                      "resource": {
                                        "value": "@variables('resourceManagementUri')",
                                        "type": "Expression"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "concurrency": 1,
                        "parameters": {
                          "StartDate": {
                            "type": "string"
                          },
                          "EndDate": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "exportName": {
                            "type": "String"
                          },
                          "storageAccountId": {
                            "type": "String",
                            "defaultValue": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                          },
                          "finOpsHub": {
                            "type": "String",
                            "defaultValue": "[parameters('hubName')]"
                          },
                          "resourceManagementUri": {
                            "type": "String",
                            "defaultValue": "[environment().resourceManager]"
                          },
                          "fileName": {
                            "type": "String",
                            "defaultValue": "settings.json"
                          },
                          "folderPath": {
                            "type": "String",
                            "defaultValue": "[parameters('configContainerName')]"
                          },
                          "scopesArray": {
                            "type": "Array"
                          }
                        }
                      },
                      "dependsOn": [
                        "dataset_config"
                      ],
                      "metadata": {
                        "description": "Creates and triggers exports for all defined scopes for the specified date range."
                      }
                    },
                    "pipeline_StartExportProcess": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_StartExportProcess', variables('safeConfigContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Get Config",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.00:05:00",
                              "retry": 2,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@variables('fileName')",
                                    "type": "Expression"
                                  },
                                  "folderPath": {
                                    "value": "@variables('folderPath')",
                                    "type": "Expression"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "name": "Set Scopes",
                            "description": "Save scopes to test if it is an array",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopesArray",
                              "value": {
                                "value": "@activity('Get Config').output.firstRow.scopes",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Scopes as Array",
                            "description": "Wraps a single scope object into an array to work around the PowerShell bug where single-item arrays are sometimes written as a single object instead of an array.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Set Scopes",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopesArray",
                              "value": {
                                "value": "@createArray(activity('Get Config').output.firstRow.scopes)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Filter Invalid Scopes",
                            "description": "Remove any invalid scopes to avoid errors.",
                            "type": "Filter",
                            "dependsOn": [
                              {
                                "activity": "Set Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Scopes as Array",
                                "dependencyConditions": [
                                  "Succeeded",
                                  "Skipped"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@variables('scopesArray')",
                                "type": "Expression"
                              },
                              "condition": {
                                "value": "@and(not(empty(item().scope)), not(equals(item().scope, '/')))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "ForEach Export Scope",
                            "type": "ForEach",
                            "dependsOn": [
                              {
                                "activity": "Filter Invalid Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@activity('Filter Invalid Scopes').output.Value",
                                "type": "Expression"
                              },
                              "isSequential": true,
                              "activities": [
                                {
                                  "name": "Get exports for scope",
                                  "type": "WebActivity",
                                  "dependsOn": [],
                                  "policy": {
                                    "timeout": "0.00:05:00",
                                    "retry": 2,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "url": {
                                      "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports?api-version={0}', variables('exportApiVersion'))]",
                                      "type": "Expression"
                                    },
                                    "method": "GET",
                                    "authentication": {
                                      "type": "MSI",
                                      "resource": {
                                        "value": "@variables('resourceManagementUri')",
                                        "type": "Expression"
                                      }
                                    }
                                  }
                                },
                                {
                                  "name": "Run exports for scope",
                                  "type": "ExecutePipeline",
                                  "dependsOn": [
                                    {
                                      "activity": "Get exports for scope",
                                      "dependencyConditions": [
                                        "Succeeded"
                                      ]
                                    }
                                  ],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "pipeline": {
                                      "referenceName": "[format('{0}_RunExportJobs', variables('safeConfigContainerName'))]",
                                      "type": "PipelineReference"
                                    },
                                    "waitOnCompletion": true,
                                    "parameters": {
                                      "ExportScopes": {
                                        "value": "@activity('Get exports for scope').output.value",
                                        "type": "Expression"
                                      },
                                      "Recurrence": {
                                        "value": "@pipeline().parameters.Recurrence",
                                        "type": "Expression"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "concurrency": 1,
                        "parameters": {
                          "Recurrence": {
                            "type": "string",
                            "defaultValue": "Daily"
                          }
                        },
                        "variables": {
                          "fileName": {
                            "type": "String",
                            "defaultValue": "settings.json"
                          },
                          "folderPath": {
                            "type": "String",
                            "defaultValue": "[parameters('configContainerName')]"
                          },
                          "finOpsHub": {
                            "type": "String",
                            "defaultValue": "[parameters('hubName')]"
                          },
                          "resourceManagementUri": {
                            "type": "String",
                            "defaultValue": "[environment().resourceManager]"
                          },
                          "scopesArray": {
                            "type": "Array"
                          }
                        }
                      },
                      "dependsOn": [
                        "dataset_config",
                        "pipeline_RunExportJobs"
                      ],
                      "metadata": {
                        "description": "Gets a list of all Cost Management exports configured for this hub based on the scopes defined in settings.json, then runs each export using the config_RunExportJobs pipeline."
                      }
                    },
                    "pipeline_RunExportJobs": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_RunExportJobs', variables('safeConfigContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "ForEach export scope",
                            "type": "ForEach",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@pipeline().parameters.exportScopes",
                                "type": "Expression"
                              },
                              "isSequential": true,
                              "activities": [
                                {
                                  "name": "If scheduled",
                                  "type": "IfCondition",
                                  "dependsOn": [],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "expression": {
                                      "value": "@and( startswith(toLower(item().name), toLower(variables('hubName'))), and(contains(string(item().properties.schedule), 'recurrence'), equals(toLower(item().properties.schedule.recurrence), toLower(pipeline().parameters.Recurrence))))",
                                      "type": "Expression"
                                    },
                                    "ifTrueActivities": [
                                      {
                                        "name": "Trigger export",
                                        "type": "WebActivity",
                                        "dependsOn": [],
                                        "policy": {
                                          "timeout": "0.00:05:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "method": "POST",
                                          "url": {
                                            "value": "[format('@{{replace(toLower(concat(variables(''resourceManagementUri''),item().id)), ''com//'', ''com/'')}}/run?api-version={0}', variables('exportApiVersion'))]",
                                            "type": "Expression"
                                          },
                                          "headers": {
                                            "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs@{0}', variables('ftkVersion'))]",
                                            "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                          },
                                          "body": " ",
                                          "authentication": {
                                            "type": "MSI",
                                            "resource": {
                                              "value": "@variables('resourceManagementUri')",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "concurrency": 1,
                        "parameters": {
                          "ExportScopes": {
                            "type": "array"
                          },
                          "Recurrence": {
                            "type": "string",
                            "defaultValue": "Daily"
                          }
                        },
                        "variables": {
                          "resourceManagementUri": {
                            "type": "String",
                            "defaultValue": "[environment().resourceManager]"
                          },
                          "hubName": {
                            "type": "String",
                            "defaultValue": "[parameters('hubName')]"
                          }
                        }
                      },
                      "dependsOn": [
                        "dataset_config"
                      ],
                      "metadata": {
                        "description": "Runs the specified Cost Management exports."
                      }
                    },
                    "pipeline_ConfigureExports": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_ConfigureExports', variables('safeConfigContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Get Config",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.00:05:00",
                              "retry": 2,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@variables('fileName')",
                                    "type": "Expression"
                                  },
                                  "folderPath": {
                                    "value": "@variables('folderPath')",
                                    "type": "Expression"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "name": "Save Scopes",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopesArray",
                              "value": {
                                "value": "@activity('Get Config').output.firstRow.scopes",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Save Scopes as Array",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Save Scopes",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scopesArray",
                              "value": {
                                "value": "@array(activity('Get Config').output.firstRow.scopes)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Filter Invalid Scopes",
                            "type": "Filter",
                            "dependsOn": [
                              {
                                "activity": "Save Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Save Scopes as Array",
                                "dependencyConditions": [
                                  "Skipped",
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@variables('scopesArray')",
                                "type": "Expression"
                              },
                              "condition": {
                                "value": "@and(not(empty(item().scope)), not(equals(item().scope, '/')))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "ForEach Export Scope",
                            "type": "ForEach",
                            "dependsOn": [
                              {
                                "activity": "Filter Invalid Scopes",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@activity('Filter Invalid Scopes').output.value",
                                "type": "Expression"
                              },
                              "isSequential": true,
                              "activities": [
                                {
                                  "name": "Set Export Type",
                                  "type": "SetVariable",
                                  "dependsOn": [],
                                  "policy": {
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "variableName": "exportScopeType",
                                    "value": {
                                      "value": "@if(contains(toLower(item().scope), 'providers/microsoft.billing/billingaccounts'), if(contains(toLower(item().scope), ':'), 'mca', 'ea'), if(contains(toLower(item().scope), 'subscriptions/'), 'subscription', 'undefined'))",
                                      "type": "Expression"
                                    }
                                  }
                                },
                                {
                                  "name": "Switch Export Type",
                                  "type": "Switch",
                                  "dependsOn": [
                                    {
                                      "activity": "Set Export Type",
                                      "dependencyConditions": [
                                        "Succeeded"
                                      ]
                                    }
                                  ],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "on": {
                                      "value": "@toLower(variables('exportScopeType'))",
                                      "type": "Expression"
                                    },
                                    "cases": [
                                      {
                                        "value": "ea",
                                        "activities": [
                                          {
                                            "name": "EA open month focus export",
                                            "type": "WebActivity",
                                            "dependsOn": [],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-daily-costdetails''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'FocusCost', variables('focusSchemaVersion'), false(), 'Parquet', 'Snappy', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.CostsDaily@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "EA closed month focus export",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "EA open month focus export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-monthly-costdetails''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'FocusCost', variables('focusSchemaVersion'), true(), 'Parquet', 'Snappy', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.CostsMonthly@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "EA monthly pricesheet export",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "EA closed month focus export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-monthly-pricesheet''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'Pricesheet', variables('exportSchemaVersion'), true(), 'Parquet', 'Snappy', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.Prices@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "Trigger EA monthly pricesheet export",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "EA monthly pricesheet export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 0,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "method": "POST",
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-monthly-pricesheet''))}}/run?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.Prices@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "body": " ",
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "EA daily reservation details export",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "EA monthly pricesheet export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-daily-reservationdetails''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'ReservationDetails', variables('reservationDetailsSchemaVersion'), false(), 'CSV', 'None', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.ReservationDetails@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "EA daily reservation transactions export",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "EA daily reservation details export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-daily-reservationtransactions''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'ReservationTransactions', variables('exportSchemaVersion'), false(), 'CSV', 'None', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.ReservationTransactions@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "EA daily shared 30day virtualmachines",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "EA daily reservation transactions export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-daily-recommendations-shared-last30days-virtualmachines''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'ReservationRecommendations', variables('exportSchemaVersion'), false(), 'CSV', 'None', 'true', 'CreateNewReport', 'Shared', 'Last30Days', 'VirtualMachines')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.ReservationRecommendations.VM.Shared.30d@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "value": "subscription",
                                        "activities": [
                                          {
                                            "name": "Subscription open month focus export",
                                            "type": "WebActivity",
                                            "dependsOn": [],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-daily-costdetails''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'FocusCost', variables('focusSchemaVersion'), false(), 'Parquet', 'Snappy', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.CostsDaily@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "Subscription closed month focus export",
                                            "type": "WebActivity",
                                            "dependsOn": [
                                              {
                                                "activity": "Subscription open month focus export",
                                                "dependencyConditions": [
                                                  "Succeeded"
                                                ]
                                              }
                                            ],
                                            "policy": {
                                              "timeout": "0.00:05:00",
                                              "retry": 2,
                                              "retryIntervalInSeconds": 30,
                                              "secureOutput": false,
                                              "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                              "url": {
                                                "value": "[format('@{{variables(''resourceManagementUri'')}}@{{item().scope}}/providers/Microsoft.CostManagement/exports/@{{toLower(concat(variables(''finOpsHub''), ''-monthly-costdetails''))}}?api-version={0}', variables('exportApiVersion'))]",
                                                "type": "Expression"
                                              },
                                              "method": "PUT",
                                              "body": {
                                                "value": "[__bicep.getExportBodyV2(parameters('exportContainerName'), 'FocusCost', variables('focusSchemaVersion'), true(), 'Parquet', 'Snappy', 'true', 'CreateNewReport', '', '', '')]",
                                                "type": "Expression"
                                              },
                                              "headers": {
                                                "x-ms-command-name": "[format('FinOpsToolkit.Hubs.config_RunExportJobs.CostsMonthly@{0}', variables('ftkVersion'))]",
                                                "ClientType": "[format('FinOpsToolkit.Hubs@{0}', variables('ftkVersion'))]"
                                              },
                                              "authentication": {
                                                "type": "MSI",
                                                "resource": {
                                                  "value": "@variables('resourceManagementUri')",
                                                  "type": "Expression"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "value": "mca",
                                        "activities": [
                                          {
                                            "name": "Export Type Unsupported Error",
                                            "type": "Fail",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                              "message": {
                                                "value": "@concat('MCA agreements are not supported for managed exports :',variables('exportScope'))",
                                                "type": "Expression"
                                              },
                                              "errorCode": "ExportTypeUnsupported"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "defaultActivities": [
                                      {
                                        "name": "Export Type Not Defined Error",
                                        "type": "Fail",
                                        "dependsOn": [],
                                        "userProperties": [],
                                        "typeProperties": {
                                          "message": {
                                            "value": "@concat('Unable to determine the export scope type for :',variables('exportScope'))",
                                            "type": "Expression"
                                          },
                                          "errorCode": "ExportTypeNotDefined"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "concurrency": 1,
                        "variables": {
                          "scopesArray": {
                            "type": "Array"
                          },
                          "exportName": {
                            "type": "String"
                          },
                          "exportScope": {
                            "type": "String"
                          },
                          "exportScopeType": {
                            "type": "String"
                          },
                          "storageAccountId": {
                            "type": "String",
                            "defaultValue": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                          },
                          "finOpsHub": {
                            "type": "String",
                            "defaultValue": "[parameters('hubName')]"
                          },
                          "resourceManagementUri": {
                            "type": "String",
                            "defaultValue": "[environment().resourceManager]"
                          },
                          "fileName": {
                            "type": "String",
                            "defaultValue": "settings.json"
                          },
                          "folderPath": {
                            "type": "String",
                            "defaultValue": "[parameters('configContainerName')]"
                          }
                        }
                      },
                      "dependsOn": [
                        "dataset_config"
                      ],
                      "metadata": {
                        "description": "Creates Cost Management exports for supported scopes."
                      }
                    },
                    "pipeline_ExecuteExportsETL": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_ExecuteETL', variables('safeExportContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Wait",
                            "description": "Files may not be available immediately after being created.",
                            "type": "Wait",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                              "waitTimeInSeconds": 60
                            }
                          },
                          {
                            "name": "Read Manifest",
                            "description": "Load the export manifest to determine the scope, dataset, and date range.",
                            "type": "Lookup",
                            "dependsOn": [
                              {
                                "activity": "Wait",
                                "dependencyConditions": [
                                  "Completed"
                                ]
                              }
                            ],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "manifest",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@pipeline().parameters.fileName",
                                    "type": "Expression"
                                  },
                                  "folderPath": {
                                    "value": "@pipeline().parameters.folderPath",
                                    "type": "Expression"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "name": "Set Has No Rows",
                            "description": "Check the row count ",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Read Manifest",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "hasNoRows",
                              "value": {
                                "value": "@or(equals(activity('Read Manifest').output.firstRow.blobCount, null), equals(activity('Read Manifest').output.firstRow.blobCount, 0))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Export Dataset Type",
                            "description": "Save the dataset type from the export manifest.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Read Manifest",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "exportDatasetType",
                              "value": {
                                "value": "@activity('Read Manifest').output.firstRow.exportConfig.type",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set MCA Column",
                            "description": "Determines if the dataset schema has channel-specific columns and saves the column name that only exists in MCA to determine if it is an MCA dataset.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Set Export Dataset Type",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "mcaColumnToCheck",
                              "value": {
                                "value": "@if(contains(createArray('pricesheet', 'reservationtransactions'), toLower(variables('exportDatasetType'))), 'BillingProfileId', if(equals(toLower(variables('exportDatasetType')), 'reservationrecommendations'), 'Net Savings', null))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Export Dataset Version",
                            "description": "Save the dataset version from the export manifest.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Read Manifest",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "exportDatasetVersion",
                              "value": {
                                "value": "@activity('Read Manifest').output.firstRow.exportConfig.dataVersion",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Detect Channel",
                            "description": "Determines what channel this export is from. Switch statement handles the different file types if the mcaColumnToCheck variable is set.",
                            "type": "Switch",
                            "dependsOn": [
                              {
                                "activity": "Set Has No Rows",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set MCA Column",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Export Dataset Version",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "on": {
                                "value": "@if(or(empty(variables('mcaColumnToCheck')), variables('hasNoRows')), 'ignore', last(array(split(activity('Read Manifest').output.firstRow.blobs[0].blobName, '.'))))",
                                "type": "Expression"
                              },
                              "cases": [
                                {
                                  "value": "csv",
                                  "activities": [
                                    {
                                      "name": "Check for MCA Column in CSV",
                                      "description": "Checks the dataset to determine if the applicable MCA-specific column exists.",
                                      "type": "Lookup",
                                      "dependsOn": [],
                                      "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "source": {
                                          "type": "DelimitedTextSource",
                                          "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                          },
                                          "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                          }
                                        },
                                        "dataset": {
                                          "referenceName": "[variables('safeExportContainerName')]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@activity('Read Manifest').output.firstRow.blobs[0].blobName",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "name": "Set Schema File with Channel in CSV",
                                      "type": "SetVariable",
                                      "dependsOn": [
                                        {
                                          "activity": "Check for MCA Column in CSV",
                                          "dependencyConditions": [
                                            "Succeeded"
                                          ]
                                        }
                                      ],
                                      "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "variableName": "schemaFile",
                                        "value": {
                                          "value": "@toLower(concat(variables('exportDatasetType'), '_', variables('exportDatasetVersion'), if(and(contains(activity('Check for MCA Column in CSV').output, 'firstRow'), contains(activity('Check for MCA Column in CSV').output.firstRow, variables('mcaColumnToCheck'))), '_mca', '_ea'), '.json'))",
                                          "type": "Expression"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "value": "gz",
                                  "activities": [
                                    {
                                      "name": "Check for MCA Column in Gzip CSV",
                                      "description": "Checks the dataset to determine if the applicable MCA-specific column exists.",
                                      "type": "Lookup",
                                      "dependsOn": [],
                                      "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "source": {
                                          "type": "DelimitedTextSource",
                                          "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                          },
                                          "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                          }
                                        },
                                        "dataset": {
                                          "referenceName": "[format('{0}_gzip', variables('safeExportContainerName'))]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@activity('Read Manifest').output.firstRow.blobs[0].blobName",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "name": "Set Schema File with Channel in Gzip CSV",
                                      "type": "SetVariable",
                                      "dependsOn": [
                                        {
                                          "activity": "Check for MCA Column in Gzip CSV",
                                          "dependencyConditions": [
                                            "Succeeded"
                                          ]
                                        }
                                      ],
                                      "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "variableName": "schemaFile",
                                        "value": {
                                          "value": "@toLower(concat(variables('exportDatasetType'), '_', variables('exportDatasetVersion'), if(and(contains(activity('Check for MCA Column in Gzip CSV').output, 'firstRow'), contains(activity('Check for MCA Column in Gzip CSV').output.firstRow, variables('mcaColumnToCheck'))), '_mca', '_ea'), '.json'))",
                                          "type": "Expression"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "value": "parquet",
                                  "activities": [
                                    {
                                      "name": "Check for MCA Column in Parquet",
                                      "description": "Checks the dataset to determine if the applicable MCA-specific column exists.",
                                      "type": "Lookup",
                                      "dependsOn": [],
                                      "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "source": {
                                          "type": "ParquetSource",
                                          "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                          },
                                          "formatSettings": {
                                            "type": "ParquetReadSettings"
                                          }
                                        },
                                        "dataset": {
                                          "referenceName": "[format('{0}_parquet', variables('safeExportContainerName'))]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@activity('Read Manifest').output.firstRow.blobs[0].blobName",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "name": "Set Schema File with Channel for Parquet",
                                      "type": "SetVariable",
                                      "dependsOn": [
                                        {
                                          "activity": "Check for MCA Column in Parquet",
                                          "dependencyConditions": [
                                            "Succeeded"
                                          ]
                                        }
                                      ],
                                      "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "variableName": "schemaFile",
                                        "value": {
                                          "value": "@toLower(concat(variables('exportDatasetType'), '_', variables('exportDatasetVersion'), if(and(contains(activity('Check for MCA Column in Parquet').output, 'firstRow'), contains(activity('Check for MCA Column in Parquet').output.firstRow, variables('mcaColumnToCheck'))), '_mca', '_ea'), '.json'))",
                                          "type": "Expression"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ],
                              "defaultActivities": [
                                {
                                  "name": "Set Schema File",
                                  "type": "SetVariable",
                                  "dependsOn": [],
                                  "policy": {
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "variableName": "schemaFile",
                                    "value": {
                                      "value": "@toLower(concat(variables('exportDatasetType'), '_', variables('exportDatasetVersion'), '.json'))",
                                      "type": "Expression"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "Set Scope",
                            "description": "Save the scope from the export manifest.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Read Manifest",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "scope",
                              "value": {
                                "value": "@split(toLower(activity('Read Manifest').output.firstRow.exportConfig.resourceId), '/providers/microsoft.costmanagement/exports/')[0]",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Date",
                            "description": "Save the exported month from the export manifest.",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Read Manifest",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "date",
                              "value": {
                                "value": "@replace(substring(activity('Read Manifest').output.firstRow.runInfo.startDate, 0, 7), '-', '')",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Failed to Read Manifest",
                            "type": "Fail",
                            "dependsOn": [
                              {
                                "activity": "Set Date",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              },
                              {
                                "activity": "Set Export Dataset Type",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              },
                              {
                                "activity": "Set Scope",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              },
                              {
                                "activity": "Read Manifest",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              },
                              {
                                "activity": "Set Export Dataset Version",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              },
                              {
                                "activity": "Detect Channel",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "message": {
                                "value": "@concat('Failed to read the manifest file for this export run. Manifest path: ', pipeline().parameters.folderPath)",
                                "type": "Expression"
                              },
                              "errorCode": "ManifestReadFailed"
                            }
                          },
                          {
                            "name": "Check Schema",
                            "description": "Verify that the schema file exists in storage.",
                            "type": "GetMetadata",
                            "dependsOn": [
                              {
                                "activity": "Set Scope",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Date",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Detect Channel",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@variables('schemaFile')",
                                    "type": "Expression"
                                  },
                                  "folderPath": "[format('{0}/schemas', parameters('configContainerName'))]"
                                }
                              },
                              "fieldList": [
                                "exists"
                              ],
                              "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                              },
                              "formatSettings": {
                                "type": "JsonReadSettings"
                              }
                            }
                          },
                          {
                            "name": "Schema Not Found",
                            "type": "Fail",
                            "dependsOn": [
                              {
                                "activity": "Check Schema",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "message": {
                                "value": "@concat('The ', variables('schemaFile'), ' schema mapping file was not found. Please confirm version ', variables('exportDatasetVersion'), ' of the ', variables('exportDatasetType'), ' dataset is supported by this version of FinOps hubs. You may need to upgrade to a newer release. To add support for another dataset, you can create a custom mapping file.')",
                                "type": "Expression"
                              },
                              "errorCode": "SchemaNotFound"
                            }
                          },
                          {
                            "name": "Set Hub Dataset",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Set Export Dataset Type",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "hubDataset",
                              "value": {
                                "value": "@if(equals(toLower(variables('exportDatasetType')), 'focuscost'), 'Costs', if(equals(toLower(variables('exportDatasetType')), 'pricesheet'), 'Prices', if(equals(toLower(variables('exportDatasetType')), 'reservationdetails'), 'CommitmentDiscountUsage', if(equals(toLower(variables('exportDatasetType')), 'reservationrecommendations'), 'Recommendations', if(equals(toLower(variables('exportDatasetType')), 'reservationtransactions'), 'Transactions', toLower(variables('exportDatasetType')))))))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Destination Folder",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Check Schema",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Hub Dataset",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "destinationFolder",
                              "value": {
                                "value": "@replace(concat(variables('hubDataset'),'/',substring(variables('date'), 0, 4),'/',substring(variables('date'), 4, 2),'/',toLower(variables('scope')), if(equals(variables('hubDataset'), 'Recommendations'), activity('Read Manifest').output.firstRow.exportConfig.exportName, '')),'//','/')",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "For Each Blob",
                            "description": "Loop thru each exported file listed in the manifest.",
                            "type": "ForEach",
                            "dependsOn": [
                              {
                                "activity": "Set Destination Folder",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@if(variables('hasNoRows'), json('[]'), activity('Read Manifest').output.firstRow.blobs)",
                                "type": "Expression"
                              },
                              "batchCount": "[if(parameters('enablePublicAccess'), 30, 4)]",
                              "isSequential": false,
                              "activities": [
                                {
                                  "name": "Execute",
                                  "description": "Run the ingestion ETL pipeline.",
                                  "type": "ExecutePipeline",
                                  "dependsOn": [],
                                  "policy": {
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "pipeline": {
                                      "referenceName": "[format('{0}_ETL_{1}', variables('safeExportContainerName'), variables('safeIngestionContainerName'))]",
                                      "type": "PipelineReference"
                                    },
                                    "waitOnCompletion": true,
                                    "parameters": {
                                      "blobPath": {
                                        "value": "@item().blobName",
                                        "type": "Expression"
                                      },
                                      "destinationFolder": {
                                        "value": "@variables('destinationFolder')",
                                        "type": "Expression"
                                      },
                                      "destinationFile": {
                                        "value": "@last(array(split(replace(replace(item().blobName, '.gz', ''), '.csv', '.parquet'), '/')))",
                                        "type": "Expression"
                                      },
                                      "ingestionId": {
                                        "value": "@activity('Read Manifest').output.firstRow.runInfo.runId",
                                        "type": "Expression"
                                      },
                                      "schemaFile": {
                                        "value": "@variables('schemaFile')",
                                        "type": "Expression"
                                      },
                                      "exportDatasetType": {
                                        "value": "@variables('exportDatasetType')",
                                        "type": "Expression"
                                      },
                                      "exportDatasetVersion": {
                                        "value": "@variables('exportDatasetVersion')",
                                        "type": "Expression"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "Copy Manifest",
                            "description": "Copy the manifest to the ingestion container to trigger ADX ingestion",
                            "type": "Copy",
                            "dependsOn": [
                              {
                                "activity": "For Each Blob",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                  "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                  "type": "JsonWriteSettings"
                                }
                              },
                              "enableStaging": false
                            },
                            "inputs": [
                              {
                                "referenceName": "manifest",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": "manifest.json",
                                  "folderPath": {
                                    "value": "@pipeline().parameters.folderPath",
                                    "type": "Expression"
                                  }
                                }
                              }
                            ],
                            "outputs": [
                              {
                                "referenceName": "manifest",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": "manifest.json",
                                  "folderPath": {
                                    "value": "[format('@concat(''{0}/'', variables(''destinationFolder''))', parameters('ingestionContainerName'))]",
                                    "type": "Expression"
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": {
                          "folderPath": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "date": {
                            "type": "String"
                          },
                          "destinationFolder": {
                            "type": "String"
                          },
                          "exportDatasetType": {
                            "type": "String"
                          },
                          "exportDatasetVersion": {
                            "type": "String"
                          },
                          "hasNoRows": {
                            "type": "Boolean"
                          },
                          "hubDataset": {
                            "type": "String"
                          },
                          "mcaColumnToCheck": {
                            "type": "String"
                          },
                          "schemaFile": {
                            "type": "String"
                          },
                          "scope": {
                            "type": "String"
                          }
                        },
                        "annotations": [
                          "New export"
                        ]
                      },
                      "dependsOn": [
                        "dataset_config",
                        "dataset_manifest",
                        "dataset_msexports",
                        "dataset_msexports_gzip",
                        "dataset_msexports_parquet",
                        "pipeline_ToIngestion"
                      ],
                      "metadata": {
                        "description": "Queues the msexports_ETL_ingestion pipeline."
                      }
                    },
                    "pipeline_ToIngestion": {
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_ETL_{1}', variables('safeExportContainerName'), variables('safeIngestionContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Get Existing Parquet Files",
                            "description": "Get the previously ingested files so we can remove any older data. This is necessary to avoid data duplication in reports.",
                            "type": "GetMetadata",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "dataset": {
                                "referenceName": "[format('{0}_files', variables('safeIngestionContainerName'))]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "folderPath": "@pipeline().parameters.destinationFolder"
                                }
                              },
                              "fieldList": [
                                "childItems"
                              ],
                              "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "enablePartitionDiscovery": false
                              },
                              "formatSettings": {
                                "type": "ParquetReadSettings"
                              }
                            }
                          },
                          {
                            "name": "Filter Out Current Exports",
                            "description": "Remove existing files from the current export so those files do not get deleted.",
                            "type": "Filter",
                            "dependsOn": [
                              {
                                "activity": "Get Existing Parquet Files",
                                "dependencyConditions": [
                                  "Completed"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@if(contains(activity('Get Existing Parquet Files').output, 'childItems'), activity('Get Existing Parquet Files').output.childItems, json('[]'))",
                                "type": "Expression"
                              },
                              "condition": {
                                "value": "[format('@and(endswith(item().name, ''.parquet''), not(startswith(item().name, concat(pipeline().parameters.ingestionId, ''{0}''))))', variables('ingestionIdFileNameSeparator'))]",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Load Schema Mappings",
                            "description": "Get schema mapping file to use for the CSV to parquet conversion.",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": true,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": {
                                    "value": "@toLower(pipeline().parameters.schemaFile)",
                                    "type": "Expression"
                                  },
                                  "folderPath": "[format('{0}/schemas', parameters('configContainerName'))]"
                                }
                              }
                            }
                          },
                          {
                            "name": "Failed to Load Schema",
                            "type": "Fail",
                            "dependsOn": [
                              {
                                "activity": "Load Schema Mappings",
                                "dependencyConditions": [
                                  "Failed"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "message": {
                                "value": "@concat('Unable to load the ', pipeline().parameters.schemaFile, ' schema file. Please confirm the schema and version are supported for FinOps hubs ingestion. Unsupported files will remain in the msexports container.')",
                                "type": "Expression"
                              },
                              "errorCode": "SchemaLoadFailed"
                            }
                          },
                          {
                            "name": "Set Additional Columns",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Load Schema Mappings",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "additionalColumns",
                              "value": {
                                "value": "@intersection(array(json(concat('[{\"name\":\"x_SourceProvider\",\"value\":\"Microsoft\"},{\"name\":\"x_SourceName\",\"value\":\"Cost Management\"},{\"name\":\"x_SourceType\",\"value\":\"', pipeline().parameters.exportDatasetVersion, '\"},{\"name\":\"x_SourceVersion\",\"value\":\"', pipeline().parameters.exportDatasetVersion, '\"}'))), activity('Load Schema Mappings').output.firstRow.additionalColumns)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "For Each Old File",
                            "description": "Loop thru each of the existing files from previous exports.",
                            "type": "ForEach",
                            "dependsOn": [
                              {
                                "activity": "Convert to Parquet",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Filter Out Current Exports",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@activity('Filter Out Current Exports').output.Value",
                                "type": "Expression"
                              },
                              "activities": [
                                {
                                  "name": "Delete Old Ingested File",
                                  "description": "Delete the previously ingested files from older exports.",
                                  "type": "Delete",
                                  "dependsOn": [],
                                  "policy": {
                                    "timeout": "0.12:00:00",
                                    "retry": 0,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "dataset": {
                                      "referenceName": "[variables('safeIngestionContainerName')]",
                                      "type": "DatasetReference",
                                      "parameters": {
                                        "blobPath": {
                                          "value": "@concat(pipeline().parameters.destinationFolder, '/', item().name)",
                                          "type": "Expression"
                                        }
                                      }
                                    },
                                    "enableLogging": false,
                                    "storeSettings": {
                                      "type": "AzureBlobFSReadSettings",
                                      "recursive": false,
                                      "enablePartitionDiscovery": false
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "Set Destination Path",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "destinationPath",
                              "value": {
                                "value": "[format('@concat(pipeline().parameters.destinationFolder, ''/'', pipeline().parameters.ingestionId, ''{0}'', pipeline().parameters.destinationFile)', variables('ingestionIdFileNameSeparator'))]",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Convert to Parquet",
                            "description": "[format('Convert CSV to parquet and move the file to the {0} container.', parameters('ingestionContainerName'))]",
                            "type": "Switch",
                            "dependsOn": [
                              {
                                "activity": "Set Destination Path",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Load Schema Mappings",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Additional Columns",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "on": {
                                "value": "@last(array(split(pipeline().parameters.blobPath, '.')))",
                                "type": "Expression"
                              },
                              "cases": [
                                {
                                  "value": "csv",
                                  "activities": [
                                    {
                                      "name": "Convert CSV File",
                                      "type": "Copy",
                                      "dependsOn": [],
                                      "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "source": {
                                          "type": "DelimitedTextSource",
                                          "additionalColumns": {
                                            "value": "@variables('additionalColumns')",
                                            "type": "Expression"
                                          },
                                          "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                          },
                                          "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                          }
                                        },
                                        "sink": {
                                          "type": "ParquetSink",
                                          "storeSettings": {
                                            "type": "AzureBlobFSWriteSettings"
                                          },
                                          "formatSettings": {
                                            "type": "ParquetWriteSettings",
                                            "fileExtension": ".parquet"
                                          }
                                        },
                                        "enableStaging": false,
                                        "parallelCopies": 1,
                                        "validateDataConsistency": false,
                                        "translator": {
                                          "value": "@activity('Load Schema Mappings').output.firstRow.translator",
                                          "type": "Expression"
                                        }
                                      },
                                      "inputs": [
                                        {
                                          "referenceName": "[variables('safeExportContainerName')]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@pipeline().parameters.blobPath",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      ],
                                      "outputs": [
                                        {
                                          "referenceName": "[variables('safeIngestionContainerName')]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@variables('destinationPath')",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "gz",
                                  "activities": [
                                    {
                                      "name": "Convert GZip CSV File",
                                      "type": "Copy",
                                      "dependsOn": [],
                                      "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "source": {
                                          "type": "DelimitedTextSource",
                                          "additionalColumns": {
                                            "value": "@variables('additionalColumns')",
                                            "type": "Expression"
                                          },
                                          "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                          },
                                          "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                          }
                                        },
                                        "sink": {
                                          "type": "ParquetSink",
                                          "storeSettings": {
                                            "type": "AzureBlobFSWriteSettings"
                                          },
                                          "formatSettings": {
                                            "type": "ParquetWriteSettings",
                                            "fileExtension": ".parquet"
                                          }
                                        },
                                        "enableStaging": false,
                                        "parallelCopies": 1,
                                        "validateDataConsistency": false,
                                        "translator": {
                                          "value": "@activity('Load Schema Mappings').output.firstRow.translator",
                                          "type": "Expression"
                                        }
                                      },
                                      "inputs": [
                                        {
                                          "referenceName": "[format('{0}_gzip', variables('safeExportContainerName'))]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@pipeline().parameters.blobPath",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      ],
                                      "outputs": [
                                        {
                                          "referenceName": "[variables('safeIngestionContainerName')]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@variables('destinationPath')",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "parquet",
                                  "activities": [
                                    {
                                      "name": "Move Parquet File",
                                      "type": "Copy",
                                      "dependsOn": [],
                                      "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                      },
                                      "userProperties": [],
                                      "typeProperties": {
                                        "source": {
                                          "type": "ParquetSource",
                                          "additionalColumns": {
                                            "value": "@variables('additionalColumns')",
                                            "type": "Expression"
                                          },
                                          "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                          },
                                          "formatSettings": {
                                            "type": "ParquetReadSettings"
                                          }
                                        },
                                        "sink": {
                                          "type": "ParquetSink",
                                          "storeSettings": {
                                            "type": "AzureBlobFSWriteSettings"
                                          },
                                          "formatSettings": {
                                            "type": "ParquetWriteSettings",
                                            "fileExtension": ".parquet"
                                          }
                                        },
                                        "enableStaging": false,
                                        "parallelCopies": 1,
                                        "validateDataConsistency": false
                                      },
                                      "inputs": [
                                        {
                                          "referenceName": "[format('{0}_parquet', variables('safeExportContainerName'))]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@pipeline().parameters.blobPath",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      ],
                                      "outputs": [
                                        {
                                          "referenceName": "[variables('safeIngestionContainerName')]",
                                          "type": "DatasetReference",
                                          "parameters": {
                                            "blobPath": {
                                              "value": "@variables('destinationPath')",
                                              "type": "Expression"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "defaultActivities": [
                                {
                                  "name": "Unsupported File Type",
                                  "type": "Fail",
                                  "dependsOn": [],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "message": {
                                      "value": "@concat('Unable to ingest the specified export file because the file type is not supported. File: ', pipeline().parameters.blobPath)",
                                      "type": "Expression"
                                    },
                                    "errorCode": "UnsupportedExportFileType"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "Read Hub Config",
                            "description": "Read the hub config to determine if the export should be retained.",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": false,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": "settings.json",
                                  "folderPath": "[parameters('configContainerName')]"
                                }
                              }
                            }
                          },
                          {
                            "name": "If Not Retaining Exports",
                            "description": "If the msexports retention period <= 0, delete the source file. The main reason to keep the source file is to allow for troubleshooting and reprocessing in the future.",
                            "type": "IfCondition",
                            "dependsOn": [
                              {
                                "activity": "Convert to Parquet",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Read Hub Config",
                                "dependencyConditions": [
                                  "Completed"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "expression": {
                                "value": "@lessOrEquals(coalesce(activity('Read Hub Config').output.firstRow.retention.msexports.days, 0), 0)",
                                "type": "Expression"
                              },
                              "ifTrueActivities": [
                                {
                                  "name": "Delete Source File",
                                  "description": "Delete the exported data file to keep storage costs down. This file is not referenced by any reporting systems.",
                                  "type": "Delete",
                                  "dependsOn": [],
                                  "policy": {
                                    "timeout": "0.12:00:00",
                                    "retry": 0,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "dataset": {
                                      "referenceName": "[format('{0}_parquet', variables('safeExportContainerName'))]",
                                      "type": "DatasetReference",
                                      "parameters": {
                                        "blobPath": {
                                          "value": "@pipeline().parameters.blobPath",
                                          "type": "Expression"
                                        }
                                      }
                                    },
                                    "enableLogging": false,
                                    "storeSettings": {
                                      "type": "AzureBlobFSReadSettings",
                                      "recursive": true,
                                      "enablePartitionDiscovery": false
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "parameters": {
                          "blobPath": {
                            "type": "String"
                          },
                          "destinationFile": {
                            "type": "string"
                          },
                          "destinationFolder": {
                            "type": "string"
                          },
                          "ingestionId": {
                            "type": "string"
                          },
                          "schemaFile": {
                            "type": "string"
                          },
                          "exportDatasetType": {
                            "type": "string"
                          },
                          "exportDatasetVersion": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "additionalColumns": {
                            "type": "Array"
                          },
                          "destinationPath": {
                            "type": "String"
                          }
                        },
                        "annotations": []
                      },
                      "dependsOn": [
                        "dataset_config",
                        "dataset_ingestion",
                        "dataset_ingestion_files",
                        "dataset_msexports",
                        "dataset_msexports_gzip",
                        "dataset_msexports_parquet"
                      ],
                      "metadata": {
                        "description": "Transforms CSV data to a standard schema and converts to Parquet."
                      }
                    },
                    "pipeline_ToDataExplorer": {
                      "condition": "[variables('deployDataExplorer')]",
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_ETL_dataExplorer', variables('safeIngestionContainerName')))]",
                      "properties": {
                        "activities": [
                          {
                            "name": "Read Hub Config",
                            "description": "Read the hub config to determine how long data should be retained.",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                  "type": "AzureBlobFSReadSettings",
                                  "recursive": false,
                                  "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                  "type": "JsonReadSettings"
                                }
                              },
                              "dataset": {
                                "referenceName": "[variables('safeConfigContainerName')]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "fileName": "settings.json",
                                  "folderPath": "[parameters('configContainerName')]"
                                }
                              }
                            }
                          },
                          {
                            "name": "Set Final Retention Months",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Read Hub Config",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "finalRetentionMonths",
                              "value": {
                                "value": "@coalesce(activity('Read Hub Config').output.firstRow.retention.final.months, 999)",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Until Capacity Is Available",
                            "type": "Until",
                            "dependsOn": [
                              {
                                "activity": "Set Final Retention Months",
                                "dependencyConditions": [
                                  "Completed",
                                  "Skipped"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "expression": {
                                "value": "@equals(variables('tryAgain'), false)",
                                "type": "Expression"
                              },
                              "activities": [
                                {
                                  "name": "Confirm Ingestion Capacity",
                                  "type": "AzureDataExplorerCommand",
                                  "dependsOn": [],
                                  "policy": {
                                    "timeout": "0.12:00:00",
                                    "retry": 0,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "command": ".show capacity | where Resource == 'Ingestions' | project Remaining",
                                    "commandTimeout": "00:20:00"
                                  },
                                  "linkedServiceName": {
                                    "referenceName": "[variables('hubDataExplorerName')]",
                                    "type": "LinkedServiceReference"
                                  }
                                },
                                {
                                  "name": "If Has Capacity",
                                  "type": "IfCondition",
                                  "dependsOn": [
                                    {
                                      "activity": "Confirm Ingestion Capacity",
                                      "dependencyConditions": [
                                        "Succeeded"
                                      ]
                                    }
                                  ],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "expression": {
                                      "value": "@or(equals(activity('Confirm Ingestion Capacity').output.count, 0), greater(activity('Confirm Ingestion Capacity').output.value[0].Remaining, 0))",
                                      "type": "Expression"
                                    },
                                    "ifFalseActivities": [
                                      {
                                        "name": "Wait for Ingestion",
                                        "type": "Wait",
                                        "dependsOn": [],
                                        "userProperties": [],
                                        "typeProperties": {
                                          "waitTimeInSeconds": 15
                                        }
                                      },
                                      {
                                        "name": "Try Again",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Wait for Ingestion",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": true
                                        }
                                      }
                                    ],
                                    "ifTrueActivities": [
                                      {
                                        "name": "Pre-Ingest Cleanup",
                                        "description": "Cost Management exports include all month-to-date data from the previous export run. To ensure data is not double-reported, it must be dropped from the raw table before ingestion completes. Remove previous ingestions into the raw table for the month and any previous runs of the current ingestion month file in any table.",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "typeProperties": {
                                          "command": {
                                            "value": "@concat('.drop extents <| .show extents | where (TableName == \"', pipeline().parameters.table, '\" and Tags !has \"drop-by:', pipeline().parameters.ingestionId, '\" and Tags has \"drop-by:', pipeline().parameters.folderPath, '\") or (Tags has \"drop-by:', pipeline().parameters.ingestionId, '\" and Tags has \"drop-by:', pipeline().parameters.folderPath, '/', pipeline().parameters.originalFileName, '\")')",
                                            "type": "Expression"
                                          },
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Ingest Data",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Pre-Ingest Cleanup",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 3,
                                          "retryIntervalInSeconds": 120,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "command": {
                                            "value": "[format('@concat(''.ingest into table '', pipeline().parameters.table, '' (\"abfss://{0}@{1}.dfs.{2}/'', pipeline().parameters.folderPath, ''/'', pipeline().parameters.fileName, '';managed_identity=system\") with (format=\"parquet\", ingestionMappingReference=\"'', pipeline().parameters.table, ''_mapping\", tags=\"[\\\"drop-by:'', pipeline().parameters.ingestionId, ''\\\", \\\"drop-by:'', pipeline().parameters.folderPath, ''/'', pipeline().parameters.originalFileName, ''\\\", \\\"drop-by:ftk-version-{3}\\\"]\"); print Success = assert(iff(toscalar($command_results | project-keep HasErrors) == false, true, false), \"Ingestion Failed\")'')', parameters('ingestionContainerName'), parameters('storageAccountName'), environment().suffixes.storage, variables('ftkVersion'))]",
                                            "type": "Expression"
                                          },
                                          "commandTimeout": "01:00:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Post-Ingest Cleanup",
                                        "description": "Cost Management exports include all month-to-date data from the previous export run. To ensure data is not double-reported, it must be dropped after ingestion completes. Remove the current ingestion month file from raw and any old ingestions for the month from the final table.",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                          {
                                            "activity": "Ingest Data",
                                            "dependencyConditions": [
                                              "Completed"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "timeout": "0.12:00:00",
                                          "retry": 0,
                                          "retryIntervalInSeconds": 30,
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "typeProperties": {
                                          "command": {
                                            "value": "@concat('.drop extents <| .show extents | extend isOldFinalData = (TableName startswith \"', replace(pipeline().parameters.table, '_raw', '_final_v'), '\" and Tags !has \"drop-by:', pipeline().parameters.ingestionId, '\" and Tags has \"drop-by:', pipeline().parameters.folderPath, '\") | extend isPastFinalRetention = (TableName startswith \"', replace(pipeline().parameters.table, '_raw', '_final_v'), '\" and todatetime(substring(strcat(replace_string(extract(\"drop-by:[A-Za-z]+/(\\\\d{4}/\\\\d{2}(/\\\\d{2})?)\", 1, Tags), \"/\", \"-\"), \"-01\"), 0, 10)) < datetime_add(\"month\", -', if(lessOrEquals(variables('finalRetentionMonths'), 0), 0, variables('finalRetentionMonths')), ', startofmonth(now()))) | where isOldFinalData or isPastFinalRetention')",
                                            "type": "Expression"
                                          },
                                          "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                          "referenceName": "[variables('hubDataExplorerName')]",
                                          "type": "LinkedServiceReference",
                                          "parameters": {
                                            "database": "[parameters('dataExplorerIngestionDatabase')]"
                                          }
                                        }
                                      },
                                      {
                                        "name": "Ingestion Complete",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Post-Ingest Cleanup",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": false
                                        }
                                      },
                                      {
                                        "name": "Abort On Ingestion Error",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Ingest Data",
                                            "dependencyConditions": [
                                              "Failed"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": false
                                        }
                                      },
                                      {
                                        "name": "Ingestion Failed Error",
                                        "type": "Fail",
                                        "dependsOn": [
                                          {
                                            "activity": "Abort On Ingestion Error",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "userProperties": [],
                                        "typeProperties": {
                                          "message": {
                                            "value": "@concat('Data Explorer ingestion into the ', pipeline().parameters.table, ' table failed. Please fix the error and rerun ingestion for the following folder path: \"', pipeline().parameters.folderPath, '\". File: ', pipeline().parameters.originalFileName, '. Error: ', if(greater(length(activity('Ingest Data').output.errors), 0), activity('Ingest Data').output.errors[0].Message, 'Unknown'), ' (Code: ', if(greater(length(activity('Ingest Data').output.errors), 0), activity('Ingest Data').output.errors[0].Code, 'None'), ')')",
                                            "type": "Expression"
                                          },
                                          "errorCode": "DataExplorerIngestionFailed"
                                        }
                                      },
                                      {
                                        "name": "Abort On Pre-Ingest Drop Error",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Pre-Ingest Cleanup",
                                            "dependencyConditions": [
                                              "Failed"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": false
                                        }
                                      },
                                      {
                                        "name": "Pre-Ingest Drop Failed Error",
                                        "type": "Fail",
                                        "dependsOn": [
                                          {
                                            "activity": "Abort On Pre-Ingest Drop Error",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "userProperties": [],
                                        "typeProperties": {
                                          "message": {
                                            "value": "@concat('Data Explorer pre-ingestion cleanup (drop extents from raw table) for the ', pipeline().parameters.table, ' table failed. Ingestion was not completed. Please fix the error and rerun ingestion for the following folder path: \"', pipeline().parameters.folderPath, '\". File: ', pipeline().parameters.originalFileName, '. Error: ', if(greater(length(activity('Pre-Ingest Cleanup').output.errors), 0), activity('Pre-Ingest Cleanup').output.errors[0].Message, 'Unknown'), ' (Code: ', if(greater(length(activity('Pre-Ingest Cleanup').output.errors), 0), activity('Pre-Ingest Cleanup').output.errors[0].Code, 'None'), ')')",
                                            "type": "Expression"
                                          },
                                          "errorCode": "DataExplorerPreIngestionDropFailed"
                                        }
                                      },
                                      {
                                        "name": "Abort On Post-Ingest Drop Error",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                          {
                                            "activity": "Post-Ingest Cleanup",
                                            "dependencyConditions": [
                                              "Failed"
                                            ]
                                          }
                                        ],
                                        "policy": {
                                          "secureOutput": false,
                                          "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                          "variableName": "tryAgain",
                                          "value": false
                                        }
                                      },
                                      {
                                        "name": "Post-Ingest Drop Failed Error",
                                        "type": "Fail",
                                        "dependsOn": [
                                          {
                                            "activity": "Abort On Post-Ingest Drop Error",
                                            "dependencyConditions": [
                                              "Succeeded"
                                            ]
                                          }
                                        ],
                                        "userProperties": [],
                                        "typeProperties": {
                                          "message": {
                                            "value": "@concat('Data Explorer post-ingestion cleanup (drop extents from final tables) for the ', replace(pipeline().parameters.table, '_raw', '_final_*'), ' table failed. Please fix the error and rerun ingestion for the following folder path: \"', pipeline().parameters.folderPath, '\". File: ', pipeline().parameters.originalFileName, '. Error: ', if(greater(length(activity('Post-Ingest Cleanup').output.errors), 0), activity('Post-Ingest Cleanup').output.errors[0].Message, 'Unknown'), ' (Code: ', if(greater(length(activity('Post-Ingest Cleanup').output.errors), 0), activity('Post-Ingest Cleanup').output.errors[0].Code, 'None'), ')')",
                                            "type": "Expression"
                                          },
                                          "errorCode": "DataExplorerPostIngestionDropFailed"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "timeout": "0.02:00:00"
                            }
                          }
                        ],
                        "parameters": {
                          "folderPath": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "originalFileName": {
                            "type": "string"
                          },
                          "ingestionId": {
                            "type": "string"
                          },
                          "table": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "tryAgain": {
                            "type": "Boolean",
                            "defaultValue": true
                          },
                          "logRetentionDays": {
                            "type": "Integer",
                            "defaultValue": 0
                          },
                          "finalRetentionMonths": {
                            "type": "Integer",
                            "defaultValue": 999
                          }
                        },
                        "annotations": []
                      },
                      "dependsOn": [
                        "dataset_config",
                        "linkedService_dataExplorer"
                      ],
                      "metadata": {
                        "description": "Ingests parquet data into an Azure Data Explorer cluster."
                      }
                    },
                    "pipeline_ExecuteIngestionETL": {
                      "condition": "[variables('deployDataExplorer')]",
                      "type": "Microsoft.DataFactory/factories/pipelines",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('dataFactoryName'), format('{0}_ExecuteETL', variables('safeIngestionContainerName')))]",
                      "properties": {
                        "concurrency": 1,
                        "activities": [
                          {
                            "name": "Wait",
                            "description": "Files may not be available immediately after being created.",
                            "type": "Wait",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                              "waitTimeInSeconds": 60
                            }
                          },
                          {
                            "name": "Set Container Folder Path",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Wait",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "containerFolderPath",
                              "value": {
                                "value": "@join(skip(array(split(pipeline().parameters.folderPath, '/')), 1), '/')",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Get Existing Parquet Files",
                            "description": "Get the previously ingested files so we can get file paths.",
                            "type": "GetMetadata",
                            "dependsOn": [
                              {
                                "activity": "Set Container Folder Path",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "timeout": "0.12:00:00",
                              "retry": 0,
                              "retryIntervalInSeconds": 30,
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "dataset": {
                                "referenceName": "[format('{0}_files', variables('safeIngestionContainerName'))]",
                                "type": "DatasetReference",
                                "parameters": {
                                  "folderPath": "@variables('containerFolderPath')"
                                }
                              },
                              "fieldList": [
                                "childItems"
                              ],
                              "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "enablePartitionDiscovery": false
                              },
                              "formatSettings": {
                                "type": "ParquetReadSettings"
                              }
                            }
                          },
                          {
                            "name": "Filter Out Folders",
                            "description": "Remove any folders or manifest files.",
                            "type": "Filter",
                            "dependsOn": [
                              {
                                "activity": "Get Existing Parquet Files",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "items": {
                                "value": "@if(contains(activity('Get Existing Parquet Files').output, 'childItems'), activity('Get Existing Parquet Files').output.childItems, json('[]'))",
                                "type": "Expression"
                              },
                              "condition": {
                                "value": "@and(equals(item().type, 'File'), not(contains(toLower(item().name), 'manifest.json')))",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "Set Ingestion Timestamp",
                            "type": "SetVariable",
                            "dependsOn": [
                              {
                                "activity": "Wait",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "policy": {
                              "secureOutput": false,
                              "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                              "variableName": "timestamp",
                              "value": {
                                "value": "@utcNow()",
                                "type": "Expression"
                              }
                            }
                          },
                          {
                            "name": "For Each Old File",
                            "description": "Loop thru each of the existing files.",
                            "type": "ForEach",
                            "dependsOn": [
                              {
                                "activity": "Filter Out Folders",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              },
                              {
                                "activity": "Set Ingestion Timestamp",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "batchCount": "[parameters('dataExplorerIngestionCapacity')]",
                              "items": {
                                "value": "@activity('Filter Out Folders').output.Value",
                                "type": "Expression"
                              },
                              "activities": [
                                {
                                  "name": "Execute",
                                  "description": "Run the ADX ETL pipeline.",
                                  "type": "ExecutePipeline",
                                  "dependsOn": [],
                                  "policy": {
                                    "secureInput": false
                                  },
                                  "userProperties": [],
                                  "typeProperties": {
                                    "pipeline": {
                                      "referenceName": "[format('{0}_ETL_dataExplorer', variables('safeIngestionContainerName'))]",
                                      "type": "PipelineReference"
                                    },
                                    "waitOnCompletion": true,
                                    "parameters": {
                                      "folderPath": {
                                        "value": "@variables('containerFolderPath')",
                                        "type": "Expression"
                                      },
                                      "fileName": {
                                        "value": "@item().name",
                                        "type": "Expression"
                                      },
                                      "originalFileName": {
                                        "value": "[format('@last(array(split(item().name, ''{0}'')))', variables('ingestionIdFileNameSeparator'))]",
                                        "type": "Expression"
                                      },
                                      "ingestionId": {
                                        "value": "[format('@concat(first(array(split(item().name, ''{0}''))), ''_'', variables(''timestamp''))', variables('ingestionIdFileNameSeparator'))]",
                                        "type": "Expression"
                                      },
                                      "table": {
                                        "value": "@concat(first(array(split(variables('containerFolderPath'), '/'))), '_raw')",
                                        "type": "Expression"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "If No Files",
                            "description": "If there are no files found, fail the pipeline.",
                            "type": "IfCondition",
                            "dependsOn": [
                              {
                                "activity": "Filter Out Folders",
                                "dependencyConditions": [
                                  "Succeeded"
                                ]
                              }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                              "expression": {
                                "value": "@equals(length(activity('Filter Out Folders').output.Value), 0)",
                                "type": "Expression"
                              },
                              "ifTrueActivities": [
                                {
                                  "name": "Files Not Found",
                                  "type": "Fail",
                                  "dependsOn": [],
                                  "userProperties": [],
                                  "typeProperties": {
                                    "message": {
                                      "value": "@concat('Unable to locate parquet files to ingest from the ', pipeline().parameters.folderPath, ' path. Please confirm the folder path is the full path, including the \"ingestion\" container and not starting with or ending with a slash (\"/\").')",
                                      "type": "Expression"
                                    },
                                    "errorCode": "IngestionFilesNotFound"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "parameters": {
                          "folderPath": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "containerFolderPath": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string"
                          }
                        },
                        "annotations": [
                          "New ingestion"
                        ]
                      },
                      "dependsOn": [
                        "dataset_ingestion_files",
                        "pipeline_ToDataExplorer"
                      ],
                      "metadata": {
                        "description": "Queues the ingestion_ETL_dataExplorer pipeline to account for Data Factory pipeline trigger limits."
                      }
                    },
                    "startTriggers": {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}_startTriggers', parameters('dataFactoryName'))]",
                      "location": "[if(startsWith(parameters('location'), 'china'), 'chinaeast2', parameters('location'))]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject()))]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}_triggerManager', parameters('dataFactoryName'))))]": {}
                        }
                      },
                      "kind": "AzurePowerShell",
                      "properties": {
                        "azPowerShellVersion": "8.0",
                        "retentionInterval": "PT1H",
                        "cleanupPreference": "OnSuccess",
                        "scriptContent": "[variables('$fxv#2')]",
                        "environmentVariables": [
                          {
                            "name": "DataFactorySubscriptionId",
                            "value": "[subscription().id]"
                          },
                          {
                            "name": "DataFactoryResourceGroup",
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "name": "DataFactoryName",
                            "value": "[parameters('dataFactoryName')]"
                          },
                          {
                            "name": "Triggers",
                            "value": "[join(variables('allHubTriggers'), '|')]"
                          },
                          {
                            "name": "Pipelines",
                            "value": "[join(createArray(format('{0}_InitializeHub', variables('safeConfigContainerName'))), '|')]"
                          }
                        ]
                      },
                      "dependsOn": [
                        "pipeline_InitializeHub",
                        "trigger_DailySchedule",
                        "trigger_ExportManifestAdded",
                        "trigger_IngestionManifestAdded",
                        "trigger_MonthlySchedule",
                        "trigger_SettingsUpdated",
                        "triggerManagerIdentity",
                        "triggerManagerRoleAssignments"
                      ]
                    },
                    "azuretimezones": {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "azuretimezones",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "246200639922867735"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Optional. The location to use for the managed identity and deployment script to auto-start triggers. Default = (resource group location)."
                              }
                            },
                            "timezoneobject": {
                              "type": "object",
                              "defaultValue": {
                                "australiaeast": "AUS Eastern Standard Time",
                                "australiacentral": "AUS Eastern Standard Time",
                                "australiacentral2": "AUS Eastern Standard Time",
                                "australiasoutheast": "AUS Eastern Standard Time",
                                "brazilsouth": "E. South America Standard Time",
                                "canadacentral": "Central Standard Time",
                                "canadaeast": "Eastern Standard Time",
                                "centralindia": "India Standard Time",
                                "centralus": "Central Standard Time",
                                "eastasia": "China Standard Time",
                                "eastus": "Eastern Standard Time",
                                "eastus2": "Eastern Standard Time",
                                "francecentral": "W. Europe Standard Time",
                                "germanynorth": "W. Europe Standard Time",
                                "germanywestcentral": "W. Europe Standard Time",
                                "japaneast": "Japan Standard Time",
                                "japanwest": "Japan Standard Time",
                                "koreacentral": "Korea Standard Time",
                                "koreasouth": "Korea Standard Time",
                                "northcentralus": "Central Standard Time",
                                "northeurope": "GMT Standard Time",
                                "norwayeast": "W. Europe Standard Time",
                                "norwaywest": "W. Europe Standard Time",
                                "southcentralus": "Central Standard Time",
                                "southindia": "India Standard Time",
                                "southeastasia": "Singapore Standard Time",
                                "switzerlandnorth": "W. Europe Standard Time",
                                "switzerlandwest": "W. Europe Standard Time",
                                "uksouth": "GMT Standard Time",
                                "ukwest": "GMT Standard Time",
                                "westcentralus": "Central Standard Time",
                                "westeurope": "W. Europe Standard Time",
                                "westindia": "India Standard Time",
                                "westus": "Pacific Standard Time",
                                "westus2": "Pacific Standard Time"
                              }
                            },
                            "utchrs": {
                              "type": "string",
                              "defaultValue": "[utcNow('hh')]"
                            },
                            "utcmins": {
                              "type": "string",
                              "defaultValue": "[utcNow('mm')]"
                            },
                            "utcsecs": {
                              "type": "string",
                              "defaultValue": "[utcNow('ss')]"
                            }
                          },
                          "variables": {
                            "loc": "[toLower(replace(parameters('location'), ' ', ''))]",
                            "timezone": "[coalesce(tryGet(parameters('timezoneobject'), variables('loc')), 'Universal Coordinated Time')]"
                          },
                          "resources": [],
                          "outputs": {
                            "AzureRegion": {
                              "type": "string",
                              "value": "[parameters('location')]"
                            },
                            "Timezone": {
                              "type": "string",
                              "value": "[variables('timezone')]"
                            },
                            "UtcHours": {
                              "type": "string",
                              "value": "[parameters('utchrs')]"
                            },
                            "UtcMinutes": {
                              "type": "string",
                              "value": "[parameters('utcmins')]"
                            },
                            "UtcSeconds": {
                              "type": "string",
                              "value": "[parameters('utcsecs')]"
                            }
                          }
                        }
                      }
                    },
                    "getStoragePrivateEndpointConnections": {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "GetStoragePrivateEndpointConnections",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "storageAccountName": {
                            "value": "[parameters('storageAccountName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "6596647335910944068"
                            }
                          },
                          "parameters": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Optional. Array of private endpoint connections. Pending ones will be approved."
                              }
                            },
                            "storageAccountName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. Name of the storage account."
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "privateEndpointConnection",
                                "count": "[length(parameters('privateEndpointConnections'))]"
                              },
                              "condition": "[equals(parameters('privateEndpointConnections')[copyIndex()].properties.privateLinkServiceConnectionState.status, 'Pending')]",
                              "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
                              "apiVersion": "2023-04-01",
                              "name": "[format('{0}/{1}', parameters('storageAccountName'), last(array(split(parameters('privateEndpointConnections')[copyIndex()].id, '/'))))]",
                              "properties": {
                                "privateLinkServiceConnectionState": {
                                  "status": "Approved",
                                  "description": "Approved-by-pipeline",
                                  "actionRequired": "None"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-04-01').privateEndpointConnections]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "storageManagedPrivateEndpoint"
                      ]
                    },
                    "approveStoragePrivateEndpointConnections": {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "ApproveStoragePrivateEndpointConnections",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "storageAccountName": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "privateEndpointConnections": {
                            "value": "[reference('getStoragePrivateEndpointConnections').outputs.privateEndpointConnections.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "6596647335910944068"
                            }
                          },
                          "parameters": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Optional. Array of private endpoint connections. Pending ones will be approved."
                              }
                            },
                            "storageAccountName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. Name of the storage account."
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "privateEndpointConnection",
                                "count": "[length(parameters('privateEndpointConnections'))]"
                              },
                              "condition": "[equals(parameters('privateEndpointConnections')[copyIndex()].properties.privateLinkServiceConnectionState.status, 'Pending')]",
                              "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
                              "apiVersion": "2023-04-01",
                              "name": "[format('{0}/{1}', parameters('storageAccountName'), last(array(split(parameters('privateEndpointConnections')[copyIndex()].id, '/'))))]",
                              "properties": {
                                "privateLinkServiceConnectionState": {
                                  "status": "Approved",
                                  "description": "Approved-by-pipeline",
                                  "actionRequired": "None"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-04-01').privateEndpointConnections]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "getStoragePrivateEndpointConnections"
                      ]
                    },
                    "getKeyVaultPrivateEndpointConnections": {
                      "condition": "[and(not(empty(parameters('remoteHubStorageUri'))), not(parameters('enablePublicAccess')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "GetKeyVaultPrivateEndpointConnections",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "1305728532573520518"
                            }
                          },
                          "parameters": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Optional. Array of private endpoint connections. Pending ones will be approved."
                              }
                            },
                            "keyVaultName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. Name of the KeyVault."
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "privateEndpointConnection",
                                "count": "[length(parameters('privateEndpointConnections'))]"
                              },
                              "condition": "[equals(parameters('privateEndpointConnections')[copyIndex()].properties.privateLinkServiceConnectionState.status, 'Pending')]",
                              "type": "Microsoft.KeyVault/vaults/privateEndpointConnections",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), last(array(split(parameters('privateEndpointConnections')[copyIndex()].id, '/'))))]",
                              "properties": {
                                "privateLinkServiceConnectionState": {
                                  "status": "Approved",
                                  "description": "Approved-by-pipeline"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').privateEndpointConnections]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "keyVaultManagedPrivateEndpoint"
                      ]
                    },
                    "approveKeyVaultPrivateEndpointConnections": {
                      "condition": "[and(not(empty(parameters('remoteHubStorageUri'))), not(parameters('enablePublicAccess')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "ApproveKeyVaultPrivateEndpointConnections",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "privateEndpointConnections": {
                            "value": "[reference('getKeyVaultPrivateEndpointConnections').outputs.privateEndpointConnections.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "1305728532573520518"
                            }
                          },
                          "parameters": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Optional. Array of private endpoint connections. Pending ones will be approved."
                              }
                            },
                            "keyVaultName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. Name of the KeyVault."
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "privateEndpointConnection",
                                "count": "[length(parameters('privateEndpointConnections'))]"
                              },
                              "condition": "[equals(parameters('privateEndpointConnections')[copyIndex()].properties.privateLinkServiceConnectionState.status, 'Pending')]",
                              "type": "Microsoft.KeyVault/vaults/privateEndpointConnections",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), last(array(split(parameters('privateEndpointConnections')[copyIndex()].id, '/'))))]",
                              "properties": {
                                "privateLinkServiceConnectionState": {
                                  "status": "Approved",
                                  "description": "Approved-by-pipeline"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').privateEndpointConnections]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "getKeyVaultPrivateEndpointConnections"
                      ]
                    },
                    "getDataExplorerPrivateEndpointConnections": {
                      "condition": "[and(variables('deployDataExplorer'), not(parameters('enablePublicAccess')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "GetDataExplorerPrivateEndpointConnections",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dataExplorerName": {
                            "value": "[parameters('dataExplorerName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "12156003319680015068"
                            }
                          },
                          "parameters": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Optional. Array of private endpoint connections. Pending ones will be approved."
                              }
                            },
                            "dataExplorerName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. Name of the ADX cluster."
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "privateEndpointConnection",
                                "count": "[length(parameters('privateEndpointConnections'))]"
                              },
                              "condition": "[equals(parameters('privateEndpointConnections')[copyIndex()].properties.privateLinkServiceConnectionState.status, 'Pending')]",
                              "type": "Microsoft.Kusto/clusters/privateEndpointConnections",
                              "apiVersion": "2023-08-15",
                              "name": "[format('{0}/{1}', parameters('dataExplorerName'), last(array(split(parameters('privateEndpointConnections')[copyIndex()].id, '/'))))]",
                              "properties": {
                                "privateLinkServiceConnectionState": {
                                  "status": "Approved",
                                  "description": "Approved-by-pipeline"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Kusto/clusters', parameters('dataExplorerName')), '2023-08-15').privateEndpointConnections]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "dataExplorerManagedPrivateEndpoint"
                      ]
                    },
                    "approveDataExplorerPrivateEndpointConnections": {
                      "condition": "[and(variables('deployDataExplorer'), not(parameters('enablePublicAccess')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "ApproveDataExplorerPrivateEndpointConnections",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dataExplorerName": {
                            "value": "[parameters('dataExplorerName')]"
                          },
                          "privateEndpointConnections": {
                            "value": "[reference('getDataExplorerPrivateEndpointConnections').outputs.privateEndpointConnections.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.33.93.31351",
                              "templateHash": "12156003319680015068"
                            }
                          },
                          "parameters": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Optional. Array of private endpoint connections. Pending ones will be approved."
                              }
                            },
                            "dataExplorerName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. Name of the ADX cluster."
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "privateEndpointConnection",
                                "count": "[length(parameters('privateEndpointConnections'))]"
                              },
                              "condition": "[equals(parameters('privateEndpointConnections')[copyIndex()].properties.privateLinkServiceConnectionState.status, 'Pending')]",
                              "type": "Microsoft.Kusto/clusters/privateEndpointConnections",
                              "apiVersion": "2023-08-15",
                              "name": "[format('{0}/{1}', parameters('dataExplorerName'), last(array(split(parameters('privateEndpointConnections')[copyIndex()].id, '/'))))]",
                              "properties": {
                                "privateLinkServiceConnectionState": {
                                  "status": "Approved",
                                  "description": "Approved-by-pipeline"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "privateEndpointConnections": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Kusto/clusters', parameters('dataExplorerName')), '2023-08-15').privateEndpointConnections]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "getDataExplorerPrivateEndpointConnections"
                      ]
                    }
                  },
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the Data factory."
                      },
                      "value": "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The Name of the Azure Data Factory instance."
                      },
                      "value": "[parameters('dataFactoryName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'dataExplorer')]",
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
                "[resourceId('Microsoft.Resources/deployments', 'storage')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('remoteHubStorageKey')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "keyVault",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "hubName": {
                    "value": "[parameters('hubName')]"
                  },
                  "uniqueSuffix": {
                    "value": "[variables('uniqueSuffix')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[variables('resourceTags')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "storageAccountKey": {
                    "value": "[parameters('remoteHubStorageKey')]"
                  },
                  "enablePublicAccess": {
                    "value": "[parameters('enablePublicAccess')]"
                  },
                  "virtualNetworkId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.vNetId.value))]",
                  "privateEndpointSubnetId": "[if(parameters('enablePublicAccess'), createObject('value', ''), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.finopsHubSubnetId.value))]",
                  "accessPolicies": {
                    "value": [
                      {
                        "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                          "secrets": [
                            "get"
                          ]
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.33.93.31351",
                      "templateHash": "1357795720924997394"
                    }
                  },
                  "parameters": {
                    "hubName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the hub. Used to ensure unique resource names."
                      }
                    },
                    "uniqueSuffix": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Suffix to add to the KeyVault instance name to ensure uniqueness."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all resources."
                      }
                    },
                    "accessPolicies": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Array of access policies object."
                      }
                    },
                    "storageAccountKey": {
                      "type": "securestring",
                      "metadata": {
                        "description": "Optional. Create and store a key for a remote storage account."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "premium",
                      "allowedValues": [
                        "premium",
                        "standard"
                      ],
                      "metadata": {
                        "description": "Optional. Specifies the SKU for the vault."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Resource tags."
                      }
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to apply to resources based on their resource type. Resource type specific tags will be merged with tags for all resources."
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Resource ID of the virtual network for private endpoints."
                      }
                    },
                    "privateEndpointSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Resource ID of the subnet for private endpoints."
                      }
                    },
                    "enablePublicAccess": {
                      "type": "bool",
                      "metadata": {
                        "description": "Optional. Enable public access to the data lake.  Default: false."
                      }
                    }
                  },
                  "variables": {
                    "copy": [
                      {
                        "name": "formattedAccessPolicies",
                        "count": "[length(parameters('accessPolicies'))]",
                        "input": {
                          "applicationId": "[coalesce(tryGet(parameters('accessPolicies')[copyIndex('formattedAccessPolicies')], 'applicationId'), '')]",
                          "objectId": "[coalesce(tryGet(parameters('accessPolicies')[copyIndex('formattedAccessPolicies')], 'objectId'), '')]",
                          "permissions": "[parameters('accessPolicies')[copyIndex('formattedAccessPolicies')].permissions]",
                          "tenantId": "[coalesce(tryGet(parameters('accessPolicies')[copyIndex('formattedAccessPolicies')], 'tenantId'), tenant().tenantId)]"
                        }
                      }
                    ],
                    "keyVaultPrefix": "[format('{0}-vault', replace(parameters('hubName'), '_', '-'))]",
                    "keyVaultSuffix": "[format('-{0}', parameters('uniqueSuffix'))]",
                    "keyVaultName": "[replace(format('{0}{1}', take(variables('keyVaultPrefix'), sub(24, length(variables('keyVaultSuffix')))), variables('keyVaultSuffix')), '--', '-')]",
                    "keyVaultSecretName": "[format('{0}-storage-key', toLower(parameters('hubName')))]",
                    "keyVaultPrivateDnsZoneName": "[format('privatelink{0}', replace(environment().suffixes.keyvaultDns, 'vault', 'vaultcore'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2023-02-01",
                      "name": "[variables('keyVaultName')]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.KeyVault/vaults'), createObject()))]",
                      "properties": {
                        "enabledForDeployment": true,
                        "enabledForTemplateDeployment": true,
                        "enabledForDiskEncryption": true,
                        "enableSoftDelete": true,
                        "softDeleteRetentionInDays": 90,
                        "enableRbacAuthorization": false,
                        "createMode": "default",
                        "tenantId": "[subscription().tenantId]",
                        "accessPolicies": "[variables('formattedAccessPolicies')]",
                        "sku": {
                          "name": "[if(startsWith(parameters('location'), 'china'), 'standard', parameters('sku'))]",
                          "family": "A"
                        },
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "[if(parameters('enablePublicAccess'), 'Allow', 'Deny')]"
                        }
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('accessPolicies')))]",
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2023-02-01",
                      "name": "[format('{0}/{1}', variables('keyVaultName'), 'add')]",
                      "properties": {
                        "accessPolicies": "[variables('formattedAccessPolicies')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('storageAccountKey')))]",
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-02-01",
                      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('keyVaultSecretName'))]",
                      "properties": {
                        "attributes": {
                          "enabled": true,
                          "exp": 1702648632,
                          "nbf": 10000
                        },
                        "value": "[parameters('storageAccountKey')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[variables('keyVaultPrivateDnsZoneName')]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.KeyVault/privateDnsZones'), createObject()))]",
                      "properties": {}
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', variables('keyVaultPrivateDnsZoneName'), format('{0}-link', replace(variables('keyVaultPrivateDnsZoneName'), '.', '-')))]",
                      "location": "global",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateDnsZones/virtualNetworkLinks'), createObject()))]",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        },
                        "registrationEnabled": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('keyVaultPrivateDnsZoneName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}-ep', variables('keyVaultName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/privateEndpoints'), createObject()))]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "keyVaultLink",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                              "groupIds": [
                                "vault"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('enablePublicAccess'))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', format('{0}-ep', variables('keyVaultName')), 'keyvault-endpoint-zone')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('keyVaultPrivateDnsZoneName')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('keyVaultPrivateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-ep', variables('keyVaultName')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('keyVaultPrivateDnsZoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the key vault."
                      },
                      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the key vault."
                      },
                      "value": "[variables('keyVaultName')]"
                    },
                    "uri": {
                      "type": "string",
                      "metadata": {
                        "description": "The URI of the key vault."
                      },
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-02-01').vaultUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the deployed hub instance."
              },
              "value": "[parameters('hubName')]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure resource location resources were deployed to."
              },
              "value": "[parameters('location')]"
            },
            "dataFactoryName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Data Factory."
              },
              "value": "[variables('dataFactoryName')]"
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the storage account created for the hub instance. This must be used when creating the Cost Management export."
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.resourceId.value]"
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage account created for the hub instance. This must be used when connecting FinOps toolkit Power BI reports to your data."
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.name.value]"
            },
            "storageUrlForPowerBI": {
              "type": "string",
              "metadata": {
                "description": "URL to use when connecting custom Power BI reports to your data."
              },
              "value": "[format('https://{0}.dfs.{1}/{2}', reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.name.value, environment().suffixes.storage, reference(resourceId('Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.ingestionContainer.value)]"
            },
            "clusterId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Data Explorer cluster."
              },
              "value": "[if(not(variables('deployDataExplorer')), '', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.clusterId.value)]"
            },
            "clusterUri": {
              "type": "string",
              "metadata": {
                "description": "The URI of the Data Explorer cluster."
              },
              "value": "[if(not(variables('deployDataExplorer')), '', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.clusterUri.value)]"
            },
            "ingestionDbName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Data Explorer database used for ingesting data."
              },
              "value": "[if(not(variables('deployDataExplorer')), '', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.ingestionDbName.value)]"
            },
            "hubDbName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Data Explorer database used for querying data."
              },
              "value": "[if(not(variables('deployDataExplorer')), '', reference(resourceId('Microsoft.Resources/deployments', 'dataExplorer'), '2022-09-01').outputs.hubDbName.value)]"
            },
            "managedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "Object ID of the Data Factory managed identity. This will be needed when configuring managed exports."
              },
              "value": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'full').identity.principalId]"
            },
            "managedIdentityTenantId": {
              "type": "string",
              "metadata": {
                "description": "Azure AD tenant ID. This will be needed when configuring managed exports."
              },
              "value": "[tenant().tenantId]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name of the resource group."
      },
      "value": "[parameters('hubName')]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure resource location resources were deployed to."
      },
      "value": "[parameters('location')]"
    },
    "dataFactoryName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Data Factory instance."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.dataFactoryName.value]"
    },
    "storageAccountId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the deployed storage account."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.storageAccountId.value]"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account created for the hub instance. This must be used when connecting FinOps toolkit Power BI reports to your data."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.storageAccountName.value]"
    },
    "storageUrlForPowerBI": {
      "type": "string",
      "metadata": {
        "description": "URL to use when connecting custom Power BI reports to your data."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.storageUrlForPowerBI.value]"
    },
    "clusterId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the Data Explorer cluster."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.clusterId.value]"
    },
    "clusterUri": {
      "type": "string",
      "metadata": {
        "description": "URI of the Data Explorer cluster."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.clusterUri.value]"
    },
    "ingestionDbName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Data Explorer database used for ingesting data."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.ingestionDbName.value]"
    },
    "hubDbName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Data Explorer database used for querying data."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.hubDbName.value]"
    },
    "managedIdentityId": {
      "type": "string",
      "metadata": {
        "description": "Object ID of the Data Factory managed identity. This will be needed when configuring managed exports."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.managedIdentityId.value]"
    },
    "managedIdentityTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure AD tenant ID. This will be needed when configuring managed exports."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.managedIdentityTenantId.value]"
    }
  }
}