{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "482539434103934732"
    }
  },
  "parameters": {
    "displayName": {
      "type": "string",
      "defaultValue": "Governance",
      "metadata": {
        "description": "Optional. Display name for the workbook used in the Gallery. Must be unique in the resource group."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location of the resources. Default: Same as deployment. See https://aka.ms/azureregions."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "Reports to help you optimize your cost.",
      "metadata": {
        "description": "Optional. Workbook description."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags for all resources."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry to track anonymous module usage trends, monitor for bugs, and improve future releases."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "19b06e9e-eec2-4a7e-935d-92d77b2f87a3",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Overview",
                      "subTarget": "RC_Overview",
                      "preText": "",
                      "style": "link"
                    },
                    {
                      "id": "528e35b9-aca4-423f-9267-50f62011a3cb",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Virtual machine",
                      "subTarget": "RC_VM",
                      "style": "link"
                    },
                    {
                      "id": "7faacfc6-663e-4ff5-bb64-f86d995f9563",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Storage + backup",
                      "subTarget": "RC_Storage",
                      "style": "link"
                    },
                    {
                      "id": "c17ce2c0-83e6-4e5c-9c3e-f34cbf887e73",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Network",
                      "subTarget": "RC_Network",
                      "style": "link"
                    },
                    {
                      "id": "2f4e49d7-3198-4173-af1c-4cf4c5178000",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "PaaS",
                      "subTarget": "RC_PaaS",
                      "style": "link"
                    },
                    {
                      "id": "f8f7e1fc-8f5d-442a-9788-3eabbf8ab275",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Security",
                      "subTarget": "RC_Security",
                      "style": "link"
                    },
                    {
                      "id": "80ad2db8-a21e-43e9-bd28-75d8d606eaf5",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Monitoring",
                      "subTarget": "RC_Monitoring",
                      "style": "link"
                    },
                    {
                      "id": "6fc0fef0-a016-4923-9239-b641eb5bdc4f",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Services retirement",
                      "subTarget": "RC_ServicesRetirement",
                      "style": "link"
                    },
                    {
                      "id": "e40dbf66-2abe-4bcf-acd7-1ee6d8fc950b",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Resource age",
                      "subTarget": "RC_Age",
                      "style": "link"
                    },
                    {
                      "id": "e112c6e1-db5e-4b0e-99e9-2edac0eba177",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Tag explorer",
                      "subTarget": "RC_Tag",
                      "style": "link"
                    },
                    {
                      "id": "840cd5ea-6b74-484b-846f-01d424b295cd",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Cost management",
                      "subTarget": "RC_Cost",
                      "style": "link"
                    },
                    {
                      "id": "5436a8c9-73c4-4121-a814-dd6fbb0c0d0c",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Usage + limits",
                      "subTarget": "RC_Quota",
                      "style": "link"
                    },
                    {
                      "id": "fa81b57a-8f3c-4502-beb0-128a7fc35f7c",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Compliance",
                      "subTarget": "RC_Compliance",
                      "style": "link"
                    },
                    {
                      "id": "e3acf38e-2dc4-423e-b91d-a173280b5808",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Governance",
                      "subTarget": "RC_Governance",
                      "style": "link"
                    }
                  ]
                },
                "name": "RC_Menu"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "value::tenant"
                  ],
                  "parameters": [
                    {
                      "id": "5704765e-092d-41cb-b856-e5d1d5337ac5",
                      "version": "KqlParameterItem/1.0",
                      "name": "ManagementGroup",
                      "label": "Management group",
                      "type": 2,
                      "query": "resourcecontainers\r\n| where type == \"microsoft.management/managementgroups\"\r\n| extend name = properties.displayName\r\n| project name",
                      "crossComponentResources": [
                        "value::tenant"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resources/tenants",
                      "value": null
                    },
                    {
                      "id": "30297a43-7d69-4daf-93c9-8170d5a995b0",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscription",
                      "type": 6,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| where properties['managementGroupAncestorsChain'] contains '{ManagementGroup:label}'",
                      "crossComponentResources": [
                        "value::tenant"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resources/tenants"
                    }
                  ],
                  "style": "above",
                  "queryType": 1,
                  "resourceType": "microsoft.resources/tenants"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_Age"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_Cost"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_Quota"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_Compliance"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_ServicesRetirement"
                  }
                ],
                "name": "parameters - 0"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "# Welcome the Azure governance workbook"
                      },
                      "name": "Welcome"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "### Reference: [Governance in the Microsoft Cloud Adoption Framework for Azure](https://learn.microsoft.com/azure/cloud-adoption-framework/govern/)",
                        "style": "upsell"
                      },
                      "name": "Reference"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "The objective of this workbook is to provide a comprehensive overview of the governance posture of your Azure environment. It offers the standard metrics aligned with the Cloud Adoption Framework for all the disciplines and has the capability to identify and apply recommendations to identify non compliance.\r\n\r\n## Overview of the Cloud Adoption Framework\r\n\r\n* With any cloud platform, there are common governance disciplines that help inform policies and align toolchains. These disciplines guide decisions about the proper level of automation and enforcement of corporate policy across cloud platforms.\r\n\r\n|Discipline|Description|\r\n|---|---|\r\n| [Cost Management](https://learn.microsoft.com/azure/cloud-adoption-framework/govern/cost-management/)  | Cost is a primary concern for cloud users. Develop policies for cost control for all cloud platforms.\r\n| [Security Baseline](https://learn.microsoft.com/azure/cloud-adoption-framework/govern/security-baseline/) | Security is a complex subject, unique to each company. Once security requirements are established, cloud governance policies and enforcement apply those requirements across network, data, and asset configurations.\r\n| [Identity Baseline](https://learn.microsoft.com/azure/cloud-adoption-framework/govern/identity-baseline/) | Inconsistencies in the application of identity requirements can increase the risk of breach. The Identity Baseline discipline focuses on ensuring that identity is consistently applied across cloud adoption efforts.\r\n| [Resource Consistency](https://learn.microsoft.com/azure/cloud-adoption-framework/govern/resource-consistency/) | Cloud operations depend on consistent resource configuration. Through governance tooling, resources can be configured consistently to manage risks related to onboarding, drift, discoverability, and recovery.\r\n| [Deployment Acceleration](https://learn.microsoft.com/azure/cloud-adoption-framework/govern/deployment-acceleration/) | Centralization, standardization, and consistency in approaches to deployment and configuration improve governance practices. When provided through cloud-based governance tooling, they create a cloud factor that can accelerate deployment activities.\r\n\r\n* To assess your transformation journey, try the [governance benchmark tool](https://learn.microsoft.com/en-us/assessments/b1891add-7646-4d60-a875-32a4ab26327e).\r\n\r\n\r\n\r\n\r\n"
                      },
                      "name": "text - Overview"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Prerequisites\r\n\r\nThis workbook will present various cost-related details in the form of governance, networking, storage, VMs, Webapps, SQL, and cost information to educate the business about cost related to various resources.\r\n\r\nThis workbook requires the following least-privileged (minimum) roles:\r\n\r\n  * **Reader** : allows you to import the workbook without saving it and view all of the workbook tabs except the *Cost management* tab.\r\n  * **Cost Management Reader**: allows you to view the costs in the *Cost management* tab \r\n  * **Workbook Contributor** : allows you to import and save the workbook\r\n\r\n\r\n"
                      },
                      "name": "text - 7"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources\n| summarize count()",
                              "size": 3,
                              "title": "Count of all resources",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              }
                            },
                            "name": "Count of all resources"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| summarize Count=count(id) by subscriptionId\r\n| order by Count desc",
                              "size": 3,
                              "title": "Resource count per subscription (Top 10)",
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "type",
                                    "formatter": 1
                                  }
                                ],
                                "rowLimit": 10,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true
                                },
                                "labelSettings": [
                                  {
                                    "columnId": "subscriptionId",
                                    "label": "Subscription name"
                                  }
                                ]
                              },
                              "sortBy": [],
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "subscriptionId",
                                  "formatter": 15,
                                  "formatOptions": {
                                    "linkTarget": "Resource",
                                    "showIcon": true
                                  }
                                },
                                "leftContent": {
                                  "columnMatch": "Count",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 2,
                                      "maximumSignificantDigits": 3
                                    }
                                  }
                                },
                                "showBorder": false,
                                "rowLimit": 10,
                                "sortCriteriaField": "count_type",
                                "sortOrderField": 2
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "subscriptionId",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "Count",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "chartSettings": {
                                "xAxis": "subscriptionId",
                                "yAxis": [
                                  "Count"
                                ],
                                "showLegend": true,
                                "seriesLabelSettings": [
                                  {
                                    "seriesName": "subscriptionId",
                                    "color": "greenDark"
                                  }
                                ]
                              },
                              "mapSettings": {
                                "locInfo": "LatLong",
                                "sizeSettings": "Count",
                                "sizeAggregation": "Sum",
                                "legendMetric": "Count",
                                "legendAggregation": "Sum",
                                "itemColorSettings": {
                                  "type": "heatmap",
                                  "colorAggregation": "Sum",
                                  "nodeColorField": "Count",
                                  "heatmapPalette": "greenRed"
                                }
                              }
                            },
                            "name": "Resource count per subscription (Top 10)"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources \r\n| extend type = case(\r\ntype contains 'microsoft.netapp/netappaccounts', 'NetApp Accounts',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype contains 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype contains 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype contains 'microsoft.operationalinsights/workspaces', 'Azure Monitor Resources',\r\ntype contains 'microsoft.operationsmanagement', 'Operations Management Resources',\r\ntype contains 'microsoft.insights', 'Azure Monitor Resources',\r\ntype contains 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype contains 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype contains 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\ntype contains 'microsoft.recoveryservices/vaults', 'Backup Vaults',\r\ntype contains 'microsoft.web', 'App Services',\r\ntype contains 'microsoft.managedidentity/userassignedidentities','Managed Identities',\r\ntype contains 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\ntype contains 'microsoft.hybridcompute/machines', 'ARC Machines',\r\ntype contains 'Microsoft.EventHub', 'Event Hub',\r\ntype contains 'Microsoft.EventGrid', 'Event Grid',\r\ntype contains 'Microsoft.Sql', 'SQL Resources',\r\ntype contains 'Microsoft.HDInsight/clusters', 'HDInsight Clusters',\r\ntype contains 'microsoft.devtestlab', 'DevTest Labs Resources',\r\ntype contains 'microsoft.containerinstance', 'Container Instances Resources',\r\ntype contains 'microsoft.portal/dashboards', 'Azure Dashboards',\r\ntype contains 'microsoft.containerregistry/registries', 'Container Registry',\r\ntype contains 'microsoft.automation', 'Automation Resources',\r\ntype contains 'sendgrid.email/accounts', 'SendGrid Accounts',\r\ntype contains 'microsoft.datafactory/factories', 'Data Factory',\r\ntype contains 'microsoft.databricks/workspaces', 'Databricks Workspaces',\r\ntype contains 'microsoft.machinelearningservices/workspaces', 'Machine Learnings Workspaces',\r\ntype contains 'microsoft.alertsmanagement/smartdetectoralertrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.apimanagement/service', 'API Management Services',\r\ntype contains 'microsoft.dbforpostgresql', 'PostgreSQL Resources',\r\ntype contains 'microsoft.scheduler/jobcollections', 'Scheduler Job Collections',\r\ntype contains 'microsoft.visualstudio/account', 'Azure DevOps Organization',\r\ntype contains 'microsoft.network/', 'Network Resources',\r\ntype contains 'microsoft.migrate/' or type contains 'microsoft.offazure', 'Azure Migrate Resources',\r\ntype contains 'microsoft.servicebus/namespaces', 'Service Bus Namespaces',\r\ntype contains 'microsoft.classic', 'ASM Obsolete Resources',\r\ntype contains 'microsoft.resources/templatespecs', 'Template Spec Resources',\r\ntype contains 'microsoft.virtualmachineimages', 'VM Image Templates',\r\ntype contains 'microsoft.documentdb', 'CosmosDB DB Resources',\r\ntype contains 'microsoft.alertsmanagement/actionrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.kubernetes/connectedclusters', 'ARC Kubernetes Clusters',\r\ntype contains 'microsoft.purview', 'Purview Resources',\r\ntype contains 'microsoft.security', 'Security Resources',\r\ntype contains 'microsoft.cdn', 'CDN Resources',\r\ntype contains 'microsoft.devices','IoT Resources',\r\ntype contains 'microsoft.datamigration', 'Data Migraiton Services',\r\ntype contains 'microsoft.cognitiveservices', 'Congitive Services',\r\ntype contains 'microsoft.customproviders', 'Custom Providers',\r\ntype contains 'microsoft.appconfiguration', 'App Services',\r\ntype contains 'microsoft.search', 'Search Services',\r\ntype contains 'microsoft.maps', 'Maps',\r\ntype contains 'microsoft.containerservice/managedclusters', 'AKS',\r\ntype contains 'microsoft.signalrservice', 'SignalR',\r\ntype contains 'microsoft.resourcegraph/queries', 'Resource Graph Queries',\r\ntype contains 'microsoft.batch', 'MS Batch',\r\ntype contains 'microsoft.analysisservices', 'Analysis Services',\r\ntype contains 'microsoft.synapse/workspaces', 'Synapse Workspaces',\r\ntype contains 'microsoft.synapse/workspaces/sqlpools', 'Synapse SQL Pools',\r\ntype contains 'microsoft.kusto/clusters', 'ADX Clusters',\r\ntype contains 'microsoft.resources/deploymentscripts', 'Deployment Scripts',\r\ntype contains 'microsoft.aad/domainservices', 'AD Domain Services',\r\ntype contains 'microsoft.labservices/labaccounts', 'Lab Accounts',\r\ntype contains 'microsoft.automanage/accounts', 'Automanage Accounts',\r\ntype contains 'microsoft.relay/namespaces', 'Azure Relay',\r\ntype contains 'microsoft.notificationhubs/namespaces', 'Notification Hubs',\r\ntype contains 'microsoft.digitaltwins/digitaltwinsinstances', 'Digital Twins',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| order by count_ desc",
                              "size": 3,
                              "title": "Resource number by type (Top 10)",
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "rowLimit": 10
                              }
                            },
                            "name": "Resource number by type"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| summarize count() by location",
                              "size": 3,
                              "title": "Resource number by location",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "map",
                              "mapSettings": {
                                "locInfo": "AzureLoc",
                                "sizeSettings": "count_",
                                "sizeAggregation": "Sum",
                                "legendMetric": "count_",
                                "legendAggregation": "Sum",
                                "itemColorSettings": {
                                  "type": "heatmap",
                                  "colorAggregation": "Sum",
                                  "nodeColorField": "count_",
                                  "heatmapPalette": "greenRed"
                                },
                                "labelSettings": "location",
                                "locInfoColumn": "location"
                              }
                            },
                            "name": "Resource number by location"
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "group - Overview metrics"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Overview"
                },
                "name": "RC_Overview"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "## Things to know before creating a virtual machine\r\nThere's always a multitude of design considerations when you build out an application infrastructure in Azure. These aspects of a virtual machine are important to think about to manage virtual machine properly:\r\n- The names of your application resources\r\n- The location where the resources are stored\r\n- The size of the virtual machine\r\n- The maximum number of virtual machines that can be created\r\n- The operating system that the virtual machine runs\r\n- The configuration of the virtual machine after it starts\r\n- The related resources that the virtual machine needs\r\n"
                      },
                      "name": "text - 13"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources | where type =~ 'Microsoft.Compute/virtualMachines'\n| summarize count() by tostring(properties.storageProfile.osDisk.osType)",
                              "size": 3,
                              "title": "Virtual machine count per OS type",
                              "showRefreshButton": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "properties_storageProfile_osDisk_osType",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "name": "Virtual machine count per OS type"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| project SKU = tostring(properties.hardwareProfile.vmSize)\r\n| summarize count() by SKU\r\n| order by count_ desc",
                              "size": 1,
                              "title": "VM by VM type/size",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "barchart",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "SKU",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "rowLimit": 10
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "SKU",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "count_",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "name": "VM by VM type/size"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| where type=~ 'microsoft.compute/virtualmachinescalesets'\r\n| project subscriptionId, name, location, resourceGroup, Capacity = toint(sku.capacity), Tier = sku.name\r\n| order by Capacity desc",
                              "size": 0,
                              "title": "Virtual machine scale set capacity and size",
                              "noDataMessageStyle": 3,
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ]
                            },
                            "name": "query - virtual machine scale set capacity and size"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId= tostring(properties.storageProfile.osDisk.managedDisk.id)\r\n        | join kind=leftouter(resources\r\n            | where type =~ 'microsoft.compute/disks'\r\n            | where properties !has 'Unattached'\r\n            | where properties has 'osType'\r\n            | project OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB = toint(properties.diskSizeGB), osDiskId=tostring(id)) on osDiskId\r\n        | join kind=leftouter(Resources\r\n            | where type =~ 'microsoft.compute/disks'\r\n            | where properties !has \"osType\"\r\n            | where properties !has 'Unattached'\r\n            | project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB), id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id, sku) on id\r\n| project vmId=id, subscriptionId, resourceGroup, OS, location, osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n| sort by diskSkuCount desc",
                              "size": 0,
                              "title": "Compute disks",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "location",
                                    "formatter": 17
                                  }
                                ],
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "vmId",
                                    "label": "Resource Name"
                                  },
                                  {
                                    "columnId": "subscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "resourceGroup",
                                    "label": "Resource Group"
                                  },
                                  {
                                    "columnId": "location",
                                    "label": "Region"
                                  },
                                  {
                                    "columnId": "osDiskId",
                                    "label": "OS Disk"
                                  },
                                  {
                                    "columnId": "osSku",
                                    "label": "OS Disk SKU"
                                  },
                                  {
                                    "columnId": "osDiskSizeGB",
                                    "label": "OS Disk Size"
                                  }
                                ]
                              }
                            },
                            "name": "Compute disks"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)\r\n| project vmId = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t| where type =~ 'microsoft.network/networkinterfaces'\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t| mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true'\r\n  \t\t| project nicId = id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n| project-away nicId1\r\n| summarize by vmId, subscriptionId, vmSize, nicId, privateIP, publicIpId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t| where type =~ 'microsoft.network/publicipaddresses'\r\n  \t\t| project publicIpId = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n| project-away publicIpId1\r\n| sort by publicIpAddress desc",
                              "size": 0,
                              "title": "Compute networking",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  }
                                ],
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "vmId",
                                    "label": "Resource name"
                                  },
                                  {
                                    "columnId": "subscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "vmSize",
                                    "label": "VM size"
                                  },
                                  {
                                    "columnId": "nicId",
                                    "label": "Network interface"
                                  },
                                  {
                                    "columnId": "privateIP",
                                    "label": "Private IP"
                                  },
                                  {
                                    "columnId": "publicIpId",
                                    "label": "Public IP"
                                  },
                                  {
                                    "columnId": "publicIpAddress",
                                    "label": "Public IP address"
                                  }
                                ]
                              }
                            },
                            "name": "Compute networking"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "# Compute optimization"
                            },
                            "name": "text - 9"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "advisorresources\r\n| where type == \"microsoft.advisor/recommendations\"\r\n| where tostring (properties.category) has \"Cost\"\r\n| where properties.shortDescription.problem has \"underutilized\"\r\n| where properties.impactedField has \"Compute\" or properties.impactedField has \"Container\" or properties.impactedField has \"Web\"\r\n| project AffectedResource=tostring(properties.resourceMetadata.resourceId),Impact=properties.impact,resourceGroup,AdditionaInfo=properties.extendedProperties,subscriptionId,Recommendation=tostring(properties.shortDescription.problem)\r\n",
                              "size": 0,
                              "title": "Underused assets",
                              "noDataMessage": "No underused asset",
                              "noDataMessageStyle": 3,
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ]
                            },
                            "customWidth": "100",
                            "name": "Underused assets"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources  \r\n| where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\" or diskState == 'Unattached'\r\n| project id, subscriptionId, resourceGroup, diskState, location",
                              "size": 0,
                              "title": "Orphaned disks",
                              "noDataMessage": "No orphaned disk",
                              "noDataMessageStyle": 3,
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "location",
                                    "formatter": 17
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Resource Name"
                                  },
                                  {
                                    "columnId": "subscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "resourceGroup",
                                    "label": "Resource group"
                                  },
                                  {
                                    "columnId": "diskState",
                                    "label": "Disk state"
                                  },
                                  {
                                    "columnId": "location",
                                    "label": "Region"
                                  }
                                ]
                              }
                            },
                            "name": "Orphaned disks"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources\r\n| where type has \"microsoft.network/networkinterfaces\"\r\n| extend VM = properties.virtualMachine.id\r\n| extend privateEndPoint = properties['privateEndpoint']['id']\r\n| where properties !has 'virtualmachine' and isnull(privateEndPoint)\r\n| where properties['linkedResourceType'] != \"Microsoft.Netapp/volumes\"\r\n| project id, subscriptionId, resourceGroup, location, VM, privateEndPoint, properties\r\n",
                              "size": 0,
                              "title": "Orphaned NICs",
                              "noDataMessage": "No orphaned NICs",
                              "noDataMessageStyle": 3,
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "location",
                                    "formatter": 17
                                  },
                                  {
                                    "columnMatch": "properties",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "CellDetails",
                                      "linkLabel": "🔍 View details",
                                      "linkIsContextBlade": true
                                    }
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Resource name"
                                  },
                                  {
                                    "columnId": "subscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "resourceGroup",
                                    "label": "Resource group"
                                  },
                                  {
                                    "columnId": "location",
                                    "label": "Region"
                                  },
                                  {
                                    "columnId": "VM",
                                    "label": "Virtual machine"
                                  },
                                  {
                                    "columnId": "privateEndPoint",
                                    "label": "Private end point"
                                  },
                                  {
                                    "columnId": "properties",
                                    "label": "Details"
                                  }
                                ]
                              }
                            },
                            "name": "Orphaned NICs"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "parameters": [
                                {
                                  "id": "98d786aa-8835-493f-9fe4-fe5da150392b",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "VMState",
                                  "label": "Virtual machine state",
                                  "type": 2,
                                  "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend state = properties['extended']['instanceView']['powerState']['displayStatus']\r\n| summarize by tostring(state)",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "value": null
                                }
                              ],
                              "style": "above",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            "name": "parameters - VMState"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "Select a virtual machine state to display the list of resource.",
                              "style": "info"
                            },
                            "conditionalVisibility": {
                              "parameterName": "VMState",
                              "comparison": "isEqualTo"
                            },
                            "name": "text - VMState"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n| extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n| summarize count() by vmState",
                              "size": 3,
                              "showRefreshButton": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "vmState",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": false
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "vmState",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "count_",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "name": "query - VM state chart"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmSize = tostring(properties.hardwareProfile.vmSize)\r\n| extend vmState = properties['extended']['instanceView']['powerState']['displayStatus']\r\n| where vmState == '{VMState}'\r\n| project id, subscriptionId, resourceGroup, vmState, vmSize, location",
                              "size": 0,
                              "title": "Virtual machine list by powerstate",
                              "noDataMessageStyle": 3,
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "resourceGroup",
                                    "formatter": 14,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": false
                                    }
                                  },
                                  {
                                    "columnMatch": "id",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "vmSize",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "19.1429ch"
                                    }
                                  },
                                  {
                                    "columnMatch": "location",
                                    "formatter": 17,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "108px"
                                    }
                                  }
                                ],
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Resource Name"
                                  },
                                  {
                                    "columnId": "subscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "resourceGroup",
                                    "label": "Resource Group"
                                  },
                                  {
                                    "columnId": "vmState",
                                    "label": "VM State"
                                  },
                                  {
                                    "columnId": "vmSize",
                                    "label": "VM Size"
                                  },
                                  {
                                    "columnId": "location",
                                    "label": "Region"
                                  }
                                ]
                              }
                            },
                            "conditionalVisibility": {
                              "parameterName": "VMState",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "query - VM list by powerstate"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "States and billing status of Azure virtual machines : https://learn.microsoft.com/azure/virtual-machines/states-billing",
                              "style": "info"
                            },
                            "name": "Info VM states"
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "group - VMQueries"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_VM"
                },
                "name": "RC_VM"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 1,
                            "content": {
                              "json": "## Storage account + backup"
                            },
                            "name": "text - 9"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                              "size": 3,
                              "title": "Count of all resource types",
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  }
                                ],
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              },
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": false,
                                "sortCriteriaField": "type",
                                "sortOrderField": 1
                              }
                            },
                            "name": "query - Storage - Resource Overview "
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has 'Key Vaults', sku.name,\r\n\ttype =~ 'Key Vaults', properties.sku.name,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId, resourceGroup, Sku, Details",
                              "size": 0,
                              "title": "Resource details",
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Details",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "CellDetails",
                                      "linkLabel": "🔍 View Details",
                                      "linkIsContextBlade": true
                                    }
                                  }
                                ],
                                "rowLimit": 1000,
                                "filter": true,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              }
                            },
                            "name": "query - Storage - Resource Detailed"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "parameters": [
                                {
                                  "id": "e94aafa3-c5d9-4523-89f0-4e87aa754511",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "Resources",
                                  "label": "Storage accounts",
                                  "type": 5,
                                  "isRequired": true,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "where type =~ 'microsoft.storage/storageaccounts'\n| order by name asc\n| extend Rank = row_number()\n| project value = id, label = id, selected = Rank <= 5",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "resourceTypeFilter": {
                                      "microsoft.storage/storageaccounts": true
                                    },
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "value": [
                                    "value::all"
                                  ]
                                },
                                {
                                  "id": "c4b69c01-2263-4ada-8d9c-43433b739ff3",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "TimeRange",
                                  "type": 4,
                                  "isRequired": true,
                                  "typeSettings": {
                                    "selectableValues": [
                                      {
                                        "durationMs": 300000,
                                        "createdTime": "2018-08-06T23:52:38.870Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 900000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 1800000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 3600000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 14400000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 43200000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 86400000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 172800000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 259200000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      },
                                      {
                                        "durationMs": 604800000,
                                        "createdTime": "2018-08-06T23:52:38.871Z",
                                        "isInitialTime": false,
                                        "grain": 1,
                                        "useDashboardTimeRange": false
                                      }
                                    ],
                                    "allowCustom": true
                                  },
                                  "value": {
                                    "durationMs": 172800000
                                  },
                                  "label": "Time range"
                                },
                                {
                                  "id": "9b48988f-dcd2-48cc-b233-5999ed32149f",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "Message",
                                  "type": 1,
                                  "query": "where type == 'microsoft.storage/storageaccounts' \n| summarize Selected = countif(id in ({Resources:value})), Total = count()\n| extend Selected = iff(Selected > 200, 200, Selected)\n| project Message = strcat('# ', Selected, ' / ', Total)",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "isHiddenWhenLocked": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                },
                                {
                                  "id": "070b2474-4e01-478d-a7fa-6c20ad8ea1ad",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "ResourceName",
                                  "type": 1,
                                  "isRequired": true,
                                  "isHiddenWhenLocked": true,
                                  "criteriaData": [
                                    {
                                      "condition": "else result = 'Storage account'",
                                      "criteriaContext": {
                                        "operator": "Default",
                                        "rightValType": "param",
                                        "resultValType": "static",
                                        "resultVal": "Storage account"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "c6c32b32-6eb4-44d5-9cad-156d5d50ec3e",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "ResourceImageUrl",
                                  "type": 1,
                                  "description": "used as a parameter for No Subcriptions workbook template",
                                  "isHiddenWhenLocked": true
                                }
                              ],
                              "style": "above",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            "name": "parameters - 1",
                            "styleSettings": {
                              "margin": "15px 0 0 0"
                            }
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "## Storage accounts details"
                            },
                            "name": "text - 8"
                          },
                          {
                            "type": 11,
                            "content": {
                              "version": "LinkItem/1.0",
                              "style": "tabs",
                              "links": [
                                {
                                  "id": "27d282bb-38ae-4ceb-b2bb-063db08ec6bc",
                                  "cellValue": "selectedTab",
                                  "linkTarget": "parameter",
                                  "linkLabel": "Overview",
                                  "subTarget": "Overview"
                                },
                                {
                                  "id": "9a52f588-fff8-47fe-b56d-81b8068ff6f7",
                                  "cellValue": "selectedTab",
                                  "linkTarget": "parameter",
                                  "linkLabel": "Capacity",
                                  "subTarget": "Capacity"
                                }
                              ]
                            },
                            "name": "Navigation links",
                            "styleSettings": {
                              "margin": "10px 0 0 0"
                            }
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "### Overview section"
                            },
                            "conditionalVisibility": {
                              "parameterName": "1",
                              "comparison": "isEqualTo",
                              "value": "2"
                            },
                            "name": "text - 4"
                          },
                          {
                            "type": 10,
                            "content": {
                              "chartId": "workbookdb19a8d8-91af-44ea-951d-5ffa133b2ebe",
                              "version": "MetricsItem/2.0",
                              "size": 2,
                              "chartType": 0,
                              "resourceType": "microsoft.storage/storageaccounts",
                              "metricScope": 0,
                              "resourceParameter": "Resources",
                              "resourceIds": [
                                "{Resources}"
                              ],
                              "timeContextFromParameter": "TimeRange",
                              "timeContext": {
                                "durationMs": 172800000
                              },
                              "metrics": [
                                {
                                  "namespace": "microsoft.storage/storageaccounts",
                                  "metric": "microsoft.storage/storageaccounts-Transaction-Transactions",
                                  "aggregation": 1
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts",
                                  "metric": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                                  "aggregation": 4
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts",
                                  "metric": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency",
                                  "aggregation": 4
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts",
                                  "metric": "microsoft.storage/storageaccounts-Transaction-Transactions",
                                  "aggregation": 1,
                                  "splitBy": "ResponseType",
                                  "splitBySortOrder": -1,
                                  "splitByLimit": 4,
                                  "columnName": "Errors"
                                }
                              ],
                              "resourceLimit": 200,
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "subTarget": "insights",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Subscription",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Name",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Transaction-Transactions$|Transactions$",
                                    "formatter": 8,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue",
                                      "showIcon": true,
                                      "aggregation": "Sum"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Transaction-Transactions Timeline$|Transactions Timeline$",
                                    "formatter": 21,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency$|microsoft.storage/storageaccounts-Transaction-SuccessServerLatency$|E2E Latency$|Server Latency$",
                                    "formatter": 8,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue",
                                      "linkTarget": "WorkbookTemplate",
                                      "showIcon": true,
                                      "workbookContext": {
                                        "componentIdSource": "column",
                                        "componentId": "Name",
                                        "resourceIdsSource": "column",
                                        "resourceIds": "Name",
                                        "templateIdSource": "static",
                                        "templateId": "Community-Workbooks/Individual Storage/Performance",
                                        "typeSource": "static",
                                        "type": "workbook",
                                        "gallerySource": "static",
                                        "gallery": "microsoft.storage/storageaccounts"
                                      }
                                    },
                                    "numberFormat": {
                                      "unit": 23,
                                      "options": {
                                        "style": "decimal",
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency Timeline$|E2E Latency Timeline$",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency Timeline",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Success/Errors",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "success/Errors",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": ".*\\/Errors",
                                    "formatter": 8,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "gray",
                                      "linkTarget": "WorkbookTemplate",
                                      "showIcon": true,
                                      "workbookContext": {
                                        "componentIdSource": "column",
                                        "componentId": "Name",
                                        "resourceIdsSource": "column",
                                        "resourceIds": "Name",
                                        "templateIdSource": "static",
                                        "templateId": "Community-Workbooks/Individual Storage/Failures",
                                        "typeSource": "static",
                                        "type": "workbook",
                                        "gallerySource": "static",
                                        "gallery": "microsoft.storage/storageaccounts"
                                      }
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "Server Latency Timeline",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  }
                                ],
                                "rowLimit": 10000,
                                "filter": true,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "Subscription"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Name"
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_heatmap_microsoft.storage/storageaccounts-Transaction-Transactions$|Transactions$_3",
                                    "sortOrder": 2
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "Subscription",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Transaction-Transactions",
                                    "label": "Transactions"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Transaction-Transactions Timeline",
                                    "label": "Transactions timeline"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                                    "label": "E2E latency"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency Timeline",
                                    "label": "E2E latency timeline"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency",
                                    "label": "Server latency"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency Timeline",
                                    "label": "Server latency timeline"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "$gen_heatmap_microsoft.storage/storageaccounts-Transaction-Transactions$|Transactions$_3",
                                  "sortOrder": 2
                                }
                              ],
                              "showExportToExcel": true
                            },
                            "conditionalVisibility": {
                              "parameterName": "selectedTab",
                              "comparison": "isEqualTo",
                              "value": "Overview"
                            },
                            "showPin": true,
                            "name": "storage account metrics",
                            "styleSettings": {
                              "margin": "0 10px 0 10px"
                            }
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "## Capacity section"
                            },
                            "conditionalVisibility": {
                              "parameterName": "1",
                              "comparison": "isEqualTo",
                              "value": "2"
                            },
                            "name": "text - 6"
                          },
                          {
                            "type": 10,
                            "content": {
                              "chartId": "workbookdb19a8d8-91af-44ea-951d-5ffa133b2ebe",
                              "version": "MetricsItem/2.0",
                              "size": 3,
                              "chartType": 0,
                              "resourceType": "microsoft.storage/storageaccounts",
                              "metricScope": 0,
                              "resourceParameter": "Resources",
                              "resourceIds": [
                                "{Resources}"
                              ],
                              "timeContextFromParameter": "TimeRange",
                              "timeContext": {
                                "durationMs": 172800000
                              },
                              "metrics": [
                                {
                                  "namespace": "microsoft.storage/storageaccounts",
                                  "metric": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                                  "aggregation": 4
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts/blobservices",
                                  "metric": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity",
                                  "aggregation": 4
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts/fileservices",
                                  "metric": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity",
                                  "aggregation": 4
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts/queueservices",
                                  "metric": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity",
                                  "aggregation": 4
                                },
                                {
                                  "namespace": "microsoft.storage/storageaccounts/tableservices",
                                  "metric": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity",
                                  "aggregation": 4
                                }
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "subTarget": "insights",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Subscription",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Name",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Capacity-UsedCapacity$|microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity$|microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity$|microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity$|microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity$",
                                    "formatter": 8,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue",
                                      "linkTarget": "WorkbookTemplate",
                                      "showIcon": true,
                                      "workbookContext": {
                                        "componentIdSource": "column",
                                        "componentId": "Name",
                                        "resourceIdsSource": "column",
                                        "resourceIds": "Name",
                                        "templateIdSource": "static",
                                        "templateId": "Community-Workbooks/Individual Storage/Capacity",
                                        "typeSource": "static",
                                        "type": "workbook",
                                        "gallerySource": "static",
                                        "gallery": "microsoft.storage/storageaccounts"
                                      }
                                    },
                                    "numberFormat": {
                                      "unit": 2,
                                      "options": {
                                        "style": "decimal",
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts-Capacity-UsedCapacity Timeline$|Account used capacity Timeline$",
                                    "formatter": 21,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity Timeline$|Blob capacity Timeline$",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity Timeline$|File capacity Timeline$",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity Timeline$|Queue capacity Timeline$",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity Timeline$|Table capacity Timeline$",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  }
                                ],
                                "rowLimit": 10000,
                                "filter": true,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "Subscription"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Name"
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_link_$gen_group_0",
                                    "sortOrder": 1
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "Subscription",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                                    "label": "Account used capacity"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts-Capacity-UsedCapacity Timeline",
                                    "label": "Account used capacity timeline"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity",
                                    "label": "Blob capacity"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity Timeline",
                                    "label": "Blob capacity timeline"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity",
                                    "label": "File capacity"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/fileservices-Capacity-FileCapacity Timeline",
                                    "label": "File capacity timeline"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity",
                                    "label": "Queue capacity"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity Timeline",
                                    "label": "Queue capacity timeline"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity",
                                    "label": "Table capacity"
                                  },
                                  {
                                    "columnId": "microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity Timeline",
                                    "label": "Table capacity timeline"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "$gen_link_$gen_group_0",
                                  "sortOrder": 1
                                }
                              ],
                              "showExportToExcel": true
                            },
                            "conditionalVisibility": {
                              "parameterName": "selectedTab",
                              "comparison": "isEqualTo",
                              "value": "Capacity"
                            },
                            "showPin": true,
                            "name": "storage account capacity metrics",
                            "styleSettings": {
                              "margin": "0 10px 0 10px"
                            }
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo",
                        "value": ""
                      },
                      "name": "Storage account + backup"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 1,
                            "content": {
                              "json": "Azure Backup now provides a set of customizable reporting templates to help you generate audit evidence reports for backup in an easier way. [Learn more](https://aka.ms/BCDRAuditReportTemplates).",
                              "style": "upsell"
                            },
                            "name": "AuditText"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "## Backup details\r\n### Manage and securely backup your resources\r\nExplore and monitor backup estate at scale in real time across vaults."
                            },
                            "name": "text - 8"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "parameters": [
                                {
                                  "id": "2373a24f-ad32-4909-a7f6-59b373dcde6c",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "Workspaces",
                                  "label": "Workspace",
                                  "type": 5,
                                  "description": "LA workspaces configured in vault diagnostic settings",
                                  "isRequired": true,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "showDefault": false
                                  },
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "value": []
                                }
                              ],
                              "style": "above",
                              "doNotRunWhenHidden": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            "customWidth": "100",
                            "name": "Filters1"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Workspaces}"
                              ],
                              "parameters": [
                                {
                                  "id": "2965ad33-1401-47c9-8f4b-9b7126f87014",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "TimeRange",
                                  "label": "Time Range",
                                  "type": 4,
                                  "description": "Period of time for which reports should be viewed",
                                  "isRequired": true,
                                  "typeSettings": {
                                    "selectableValues": [
                                      {
                                        "durationMs": 259200000
                                      },
                                      {
                                        "durationMs": 604800000
                                      },
                                      {
                                        "durationMs": 1209600000
                                      },
                                      {
                                        "durationMs": 2419200000
                                      },
                                      {
                                        "durationMs": 2592000000
                                      },
                                      {
                                        "durationMs": 5184000000
                                      },
                                      {
                                        "durationMs": 7776000000
                                      }
                                    ],
                                    "allowCustom": true
                                  },
                                  "value": {
                                    "durationMs": 604800000
                                  }
                                },
                                {
                                  "id": "efede5fa-f577-4766-b9b6-6ba4e525f844",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "DataSourceSubscription",
                                  "label": "Datasource  Subscription",
                                  "type": 6,
                                  "description": "Use to filter for datasources within a specific subscription",
                                  "isRequired": true,
                                  "multiSelect": true,
                                  "quote": "",
                                  "delimiter": ",",
                                  "query": "let RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = \"*\";\r\nlet VaultLocationList = \"*\";\r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\n_AzureBackup_GetBackupInstances(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| distinct tostring(split(tostring(todynamic(DatasourceResourceId)),\"/\")[2])",
                                  "crossComponentResources": [
                                    "{Workspaces}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "selectAllValue": "*",
                                    "showDefault": false
                                  },
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "value": []
                                },
                                {
                                  "id": "256c7e33-df90-4956-aaf3-699aeaad912f",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "DataSourceLocation",
                                  "label": "Data source location",
                                  "type": 2,
                                  "description": "Use to filter for data sources within a specific location",
                                  "isRequired": true,
                                  "multiSelect": true,
                                  "quote": "",
                                  "delimiter": ",",
                                  "query": "let RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet VaultLocationList = \"*\";\r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\n_AzureBackup_GetBackupInstances(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| distinct VaultLocation",
                                  "crossComponentResources": [
                                    "{Workspaces}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "selectAllValue": "*",
                                    "showDefault": false
                                  },
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "value": [
                                    "value::all"
                                  ]
                                },
                                {
                                  "id": "16ad110f-4ea3-44d6-826b-4ea3bbd68c93",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "JobOperation",
                                  "label": "Job Operation",
                                  "type": 2,
                                  "description": "Use to filter for a particular operation type",
                                  "isRequired": true,
                                  "multiSelect": true,
                                  "quote": "",
                                  "delimiter": ",",
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "selectAllValue": "*",
                                    "showDefault": false
                                  },
                                  "jsonData": "\r\n[    \r\n{ \"value\": \"Backup\", \t\t\t\t\t\t\"label\": \"Backup\" },\r\n{ \"value\": \"Restore\", \t\t\t\t\t\t\"label\": \"Restore\" }\r\n]",
                                  "value": [
                                    "value::all"
                                  ]
                                },
                                {
                                  "id": "6a6222bf-a28a-4c98-9d74-838e74497167",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "JobStatus",
                                  "label": "Job Status",
                                  "type": 2,
                                  "description": "Use to filter for a particular job status",
                                  "isRequired": true,
                                  "multiSelect": true,
                                  "quote": "",
                                  "delimiter": ",",
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "selectAllValue": "*",
                                    "showDefault": false
                                  },
                                  "jsonData": "\r\n[    \r\n{ \"value\": \"Completed\", \t\t\t\t\t\t\"label\": \"Completed\" },\r\n{ \"value\": \"Failed\", \t\t\t\"label\": \"Failed\" },\r\n\r\n{ \"value\": \"CompletedWithWarnings\", \t\t\t\t\t\t\"label\": \"CompletedWithWarnings\" },\r\n{ \"value\": \"Cancelled\", \"label\": \"Cancelled\" }\r\n]",
                                  "value": [
                                    "value::all"
                                  ]
                                },
                                {
                                  "id": "849a6401-cbaf-44b9-a733-0819f8923791",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "SearchItem",
                                  "label": "Search Item",
                                  "type": 1,
                                  "description": "Use to search for an item by name"
                                }
                              ],
                              "style": "above",
                              "doNotRunWhenHidden": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            "customWidth": "100",
                            "conditionalVisibility": {
                              "parameterName": "Workspaces",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Filters2"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "## Backup job history"
                            },
                            "conditionalVisibility": {
                              "parameterName": "Workspaces",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Heading2"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet DataSourceSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet DataSourceLocationList = todynamic( @\"{DataSourceLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = todynamic( @\"{JobOperation}\"); \r\nlet JobStatusList = todynamic( @\"{JobStatus}\");\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, DataSourceSubscriptionList, DataSourceLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| where BackupInstanceFriendlyName contains iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupInstanceFriendlyName)\r\n| sort by BackupInstanceId\r\n| summarize count() by Status",
                              "size": 3,
                              "title": "Jobs by Status",
                              "noDataMessage": "No record found for the selected time and scope.",
                              "showRefreshButton": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "crossComponentResources": [
                                "{Workspaces}"
                              ],
                              "visualization": "piechart",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "UniqueId",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "DurationInSecs",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "customWidth": "0",
                            "conditionalVisibility": {
                              "parameterName": "Workspaces",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Chart1",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Workspaces}"
                              ],
                              "parameters": [
                                {
                                  "id": "7a64467f-eec7-495b-9099-233fb7bceb08",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "RowsPerPage",
                                  "label": "Rows per page",
                                  "type": 2,
                                  "description": "Number of rows to display in a single page",
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "showDefault": false
                                  },
                                  "jsonData": "[[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]"
                                },
                                {
                                  "id": "5c65bc61-a721-42b7-960b-3fe7a6170eb6",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "Page",
                                  "type": 2,
                                  "description": "Page number",
                                  "isRequired": true,
                                  "query": "\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet DataSourceSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet DataSourceLocationList = todynamic( @\"{DataSourceLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = todynamic( @\"{JobOperation}\"); \r\nlet JobStatusList = todynamic( @\"{JobStatus}\");\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet backupItem = '{SearchItem}';\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, DataSourceSubscriptionList, DataSourceLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| where BackupInstanceFriendlyName contains backupItem\r\n| summarize c=count()\r\n| project num = (c-1)/toint('{RowsPerPage}') + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))\r\n\r\n",
                                  "crossComponentResources": [
                                    "{Workspaces}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "showDefault": false
                                  },
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "value": "1"
                                }
                              ],
                              "style": "above",
                              "doNotRunWhenHidden": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            "customWidth": "100",
                            "conditionalVisibility": {
                              "parameterName": "Workspaces",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Filters3"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet DataSourceSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet DataSourceLocationList = todynamic( @\"{DataSourceLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = todynamic( @\"{JobOperation}\"); \r\nlet JobStatusList = todynamic( @\"{JobStatus}\");\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet backupItem = '{SearchItem}';\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, DataSourceSubscriptionList, DataSourceLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| where BackupInstanceFriendlyName contains iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupInstanceFriendlyName)\r\n| sort by BackupInstanceId\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/toint('{RowsPerPage}') + 1))\r\n| where page_num has ('{Page}')\r\n| project BackupItem = BackupInstanceId,BackupItemFriendlyName = BackupInstanceFriendlyName ,Vault = VaultResourceId,Subscription = VaultSubscriptionId, VaultLocation = VaultLocation,JobOperation = OperationCategory,JobStartTime = StartTime,JobDuration = tostring(todouble(DurationInSecs)/60/60),JobStatus = Status,FailureCode = ErrorTitle\r\n",
                              "size": 3,
                              "title": "List of jobs in period",
                              "noDataMessage": "No record found for the selected time and scope.",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "crossComponentResources": [
                                "{Workspaces}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "BackupItem",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "BackupItemFriendlyName",
                                    "formatter": 16,
                                    "formatOptions": {
                                      "linkColumn": "BackupItem",
                                      "linkTarget": "Resource",
                                      "showIcon": true,
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "Vault",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "Subscription",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true,
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "VaultLocation",
                                    "formatter": 17,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "JobOperation",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "JobStartTime",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "JobDuration",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "10%"
                                    },
                                    "numberFormat": {
                                      "unit": 0,
                                      "options": {
                                        "style": "decimal",
                                        "minimumFractionDigits": 2,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "JobStatus",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "icons",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Warning",
                                          "representation": "2",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Failed",
                                          "representation": "failed",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "Blank",
                                          "text": "{0}{1}"
                                        }
                                      ],
                                      "customColumnWidthSetting": "10%"
                                    }
                                  },
                                  {
                                    "columnMatch": "FailureCode",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "10%"
                                    }
                                  }
                                ],
                                "rowLimit": 1000,
                                "labelSettings": [
                                  {
                                    "columnId": "BackupItemFriendlyName",
                                    "label": "Backup instance"
                                  },
                                  {
                                    "columnId": "Vault",
                                    "label": "Vault"
                                  },
                                  {
                                    "columnId": "Subscription",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "VaultLocation",
                                    "label": "Location"
                                  },
                                  {
                                    "columnId": "JobOperation",
                                    "label": "Job operation"
                                  },
                                  {
                                    "columnId": "JobStartTime",
                                    "label": "Job start time (UTC)"
                                  },
                                  {
                                    "columnId": "JobDuration",
                                    "label": "Job duration (hours)"
                                  },
                                  {
                                    "columnId": "JobStatus",
                                    "label": "Job status"
                                  },
                                  {
                                    "columnId": "FailureCode",
                                    "label": "Job failure code"
                                  }
                                ]
                              },
                              "sortBy": []
                            },
                            "customWidth": "100",
                            "conditionalVisibility": {
                              "parameterName": "Workspaces",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Grid1",
                            "styleSettings": {
                              "margin": "5px",
                              "padding": "5px",
                              "showBorder": true
                            }
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "Backup"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "RC_Storage"
                  },
                  {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "RC_Storage"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "where type has \"microsoft.network\"\r\n| extend type = case(\r\n\ttype == 'microsoft.network/networkinterfaces', \"NICs\",\r\n\ttype == 'microsoft.network/networksecuritygroups', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\", \"Public IPs\", \r\n\ttype == 'microsoft.network/virtualnetworks', \"vNets\",\r\n\ttype == 'microsoft.network/networkwatchers/connectionmonitors', \"Connection Monitors\",\r\n\ttype == 'microsoft.network/privatednszones', \"Private DNS\",\r\n\ttype == 'microsoft.network/virtualnetworkgateways', @\"vNet Gateways\",\r\n\ttype == 'microsoft.network/connections', \"Connections\",\r\n\ttype == 'microsoft.network/networkwatchers', \"Network Watchers\",\r\n\ttype == 'microsoft.network/privateendpoints', \"Private Endpoints\",\r\n\ttype == 'microsoft.network/localnetworkgateways', \"Local Network Gateways\",\r\n\ttype == 'microsoft.network/privatednszones/virtualnetworklinks', \"vNet Links\",\r\n\ttype == 'microsoft.network/dnszones', 'DNS Zones',\r\n\ttype == 'microsoft.network/networkwatchers/flowlogs', 'Flow Logs',\r\n\ttype == 'microsoft.network/routetables', 'Route Tables',\r\n\ttype == 'microsoft.network/loadbalancers', 'Load Balancers',\r\n    type =~ 'Microsoft.Network/applicationGateways', 'Application Gateways',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                        "size": 3,
                        "title": "Count of all network resources by resource type",
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "visualization": "tiles",
                        "tileSettings": {
                          "showBorder": false,
                          "titleContent": {
                            "columnMatch": "type",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "count_",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        }
                      },
                      "name": "query - Network resource"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "# Network security group"
                      },
                      "name": "Network security group title"
                    },
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "7763ba7f-6187-4448-a94c-890392ed31d0",
                            "version": "KqlParameterItem/1.0",
                            "name": "OrphanNSG",
                            "label": "Orphaned",
                            "type": 10,
                            "isRequired": true,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "jsonData": "[[\r\n    { \"value\":\"and isnotnull(properties.networkInterfaces) or type =~ 'microsoft.network/networksecuritygroups' and isnotnull(properties.subnets)\", \"label\":\"No\" },\r\n    { \"value\":\"and isnull(properties.networkInterfaces) and isnull(properties.subnets)\", \"label\":\"Yes\" }\r\n]",
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": "and isnotnull(properties.networkInterfaces) or type =~ 'microsoft.network/networksecuritygroups' and isnotnull(properties.subnets)"
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "NSG"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Resources\r\n| where type =~ 'microsoft.network/networksecuritygroups' {OrphanNSG}\r\n| project Resource=id, resourceGroup, subscriptionId, location",
                        "size": 0,
                        "title": "NSGs",
                        "noDataMessage": "No NSGs Found",
                        "noDataMessageStyle": 3,
                        "exportedParameters": [
                          {
                            "fieldName": "Resource",
                            "parameterName": "SelectedResourceId",
                            "parameterType": 5
                          }
                        ],
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "filter": true
                        },
                        "sortBy": []
                      },
                      "name": "NSGs"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Resources\r\n    | where type =~ 'microsoft.network/networksecuritygroups'\r\n    | where id == \"{SelectedResourceId}\"\r\n    | project id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix, \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName, networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId, resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n| project id, location, access, direction, priority, sourceAddressPrefix, sourcePortRange, destinationPortRange, subscriptionId, resourceGroup, Details",
                        "size": 1,
                        "title": "NSG rules",
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "subscriptionId",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "resourceGroup",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "Details",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkLabel": "🔍 View details",
                                "linkIsContextBlade": true
                              }
                            }
                          ]
                        }
                      },
                      "conditionalVisibility": {
                        "parameterName": "SelectedResourceId",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "NSG rules"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "# Public IPs"
                      },
                      "name": "Public IP title"
                    },
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "37cdc20d-07c3-466c-84bb-4d8050932641",
                            "version": "KqlParameterItem/1.0",
                            "name": "OrphanIPs",
                            "label": "Orphan",
                            "type": 10,
                            "isRequired": true,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "jsonData": "[[\r\n    { \"value\":\"isnotnull\", \"label\":\"No\" },\r\n    { \"value\":\"isnull\", \"label\":\"Yes\" }\r\n]",
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": "isnotnull"
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "Public IPs"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Resources\r\n| where type =~ 'Microsoft.Network/publicIPAddresses' and {OrphanIPs}(properties.ipAddress)\r\n| extend ipAddress = properties.ipAddress\r\n| extend sku = sku.name\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, resourceGroup, name, location,sku,Details",
                        "size": 0,
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "$gen_group",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "linkIsContextBlade": true,
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "Resource",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "subscriptionId",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "Details",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkLabel": "🔍 View details",
                                "linkIsContextBlade": true
                              }
                            }
                          ],
                          "filter": true,
                          "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": [
                              "subscriptionId"
                            ],
                            "expandTopLevel": true,
                            "finalBy": "Resource"
                          }
                        }
                      },
                      "name": "query - Networking Details - PiPs"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "# Application gateway"
                      },
                      "name": "Application gateway title"
                    },
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "007b8dbe-6bc6-40f9-b4bc-55f2ec14916c",
                            "version": "KqlParameterItem/1.0",
                            "name": "OrphanAppGW",
                            "label": "Orphaned",
                            "type": 10,
                            "isRequired": true,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "jsonData": "[[\r\n    { \"value\":\"//\", \"label\":\"No\" },\r\n    { \"value\":\"|\", \"label\":\"Yes\" }\r\n]",
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": "//"
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "ApplicationGateway"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "resources\r\n| where type =~ 'Microsoft.Network/applicationGateways'\r\n| extend backendPoolsCount = array_length(properties.backendAddressPools),SKUName= tostring(properties.sku.name), SKUTier= tostring(properties.sku.tier),SKUCapacity=properties.sku.capacity,backendPools=properties.backendAddressPools\r\n| project id, name, SKUName, SKUTier, SKUCapacity\r\n| join (\r\n    resources\r\n    | where type =~ 'Microsoft.Network/applicationGateways'\r\n    | mvexpand backendPools = properties.backendAddressPools\r\n    | extend backendIPCount = array_length(backendPools.properties.backendIPConfigurations)\r\n    | extend backendAddressesCount = array_length(backendPools.properties.backendAddresses)\r\n    | extend backendPoolName  = backendPools.properties.backendAddressPools.name\r\n    | summarize backendIPCount = sum(backendIPCount) ,backendAddressesCount=sum(backendAddressesCount) by id\r\n) on id\r\n| project-away id1\r\n{OrphanAppGW} where  (backendIPCount == 0 or isempty(backendIPCount)) and (backendAddressesCount==0 or isempty(backendAddressesCount))\r\n| order by id asc",
                        "size": 0,
                        "noDataMessage": "No app gateways",
                        "noDataMessageStyle": 3,
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ]
                      },
                      "name": "query - Application Gateways"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "# Load balancer"
                      },
                      "name": "Load balancer title"
                    },
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "8cffc283-1878-4035-a669-5d9697e9edc1",
                            "version": "KqlParameterItem/1.0",
                            "name": "OrphanLB",
                            "label": "Orphaned",
                            "type": 10,
                            "isRequired": true,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "jsonData": "[[\r\n    { \"value\":\"!=\", \"label\":\"No\" },\r\n    { \"value\":\"==\", \"label\":\"Yes\" }\r\n]",
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": "!="
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "LoadBalancers"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where properties.backendAddressPools {OrphanLB} \"[]\"\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, resourceGroup, location, tostring(sku.name), Details",
                        "size": 0,
                        "noDataMessage": "No load balancers",
                        "noDataMessageStyle": 3,
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "subscriptionId",
                              "formatter": 15,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "location",
                              "formatter": 17
                            },
                            {
                              "columnMatch": "Details",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkLabel": "🔍 View details",
                                "linkIsContextBlade": true
                              }
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "Resource",
                              "label": "Resource Name"
                            },
                            {
                              "columnId": "subscriptionId",
                              "label": "Subscription"
                            },
                            {
                              "columnId": "resourceGroup",
                              "label": "Resource group"
                            },
                            {
                              "columnId": "location",
                              "label": "Region"
                            },
                            {
                              "columnId": "sku_name",
                              "label": "SKU"
                            }
                          ]
                        }
                      },
                      "name": "query - Load Balancers"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "RC_Network"
                  },
                  {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "RC_Network"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "## Stay informed and act quickly on service issues\r\nAzure Service Health notifies you about Azure service incidents and planned maintenance so you can take action to mitigate downtime. Configure customisable cloud alerts and use your personalised dashboard to analyse health issues, monitor the impact to your cloud resources, get guidance and support, and share details and updates."
                      },
                      "name": "text - 4"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "servicehealthresources\r\n| where type =~ 'Microsoft.ResourceHealth/events'\r\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\r\n| where properties.Status == 'Active' and tolong(impactStartTime) > 1\r\n\r\n| extend Details = pack_all()\r\n| project ServiceHealthID=id, Description=description, Region=location, eventType, Status=status, Details",
                        "size": 1,
                        "title": "All active Service Health events",
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "ServiceHealthID",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": false,
                                "customColumnWidthSetting": "20ch"
                              }
                            },
                            {
                              "columnMatch": "Description",
                              "formatter": 1,
                              "formatOptions": {
                                "customColumnWidthSetting": "60ch"
                              }
                            },
                            {
                              "columnMatch": "eventType",
                              "formatter": 1
                            },
                            {
                              "columnMatch": "Status",
                              "formatter": 1
                            },
                            {
                              "columnMatch": "Details",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkLabel": "🔍 View details",
                                "linkIsContextBlade": true
                              }
                            }
                          ]
                        },
                        "tileSettings": {
                          "showBorder": false
                        }
                      },
                      "name": "query - 15"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Activity log monitoring"
                      },
                      "name": "text - 15"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "resourcechanges\r\n| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),\r\nchangeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId, \r\nchangedProperties = properties.changes, changeCount = properties.changeAttributes.changesCount\r\n| where changeTime > ago(1d)\r\n| order by changeTime desc\r\n| project changeTime, targetResourceId, changeType, correlationId, changeCount, changedProperties",
                        "size": 0,
                        "title": "All changes in the past one day",
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "changeTime",
                              "formatter": 6,
                              "formatOptions": {
                                "customColumnWidthSetting": "24ch"
                              }
                            },
                            {
                              "columnMatch": "targetResourceId",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "42.7143ch"
                              }
                            },
                            {
                              "columnMatch": "changedProperties",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkLabel": "🔍 View details",
                                "linkIsContextBlade": true
                              }
                            }
                          ]
                        }
                      },
                      "name": "query - 12"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "resourcechanges\r\n| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),\r\nchangeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId\r\n| where changeType == \"Delete\"\r\n| order by changeTime desc\r\n| project changeTime, resourceGroup, targetResourceId, changeType, correlationId",
                        "size": 0,
                        "title": "Resources deleted",
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "changeTime",
                              "formatter": 6
                            }
                          ]
                        }
                      },
                      "name": "query - 13"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "RC_Monitoring"
                  },
                  {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "RC_Monitoring"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "## Use tags to organize your Azure resources and management hierarchy\r\nTags are metadata elements that you apply to your Azure resources. They're key-value pairs that help you identify resources based on settings that are relevant to your organization. If you want to track the deployment environment for your resources, add a key named Environment. To identify the resources deployed to production, give them a value of Production. The fully formed key-value pair is Environment = Production.\r\n\r\nTo get more information about tags, see [Resource naming and tagging decision guide](https://learn.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming-and-tagging-decision-guide?toc=%2Fazure%2Fazure-resource-manager%2Fmanagement%2Ftoc.json)"
                      },
                      "name": "text - 9"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "Tag names with spaces, hyphens, and underscores are not supported.",
                        "style": "info"
                      },
                      "name": "warning tag explorer"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "parameters": [
                                {
                                  "id": "bae67738-90ef-4698-9020-5e1f91d67f82",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "TagName",
                                  "label": "Tag name",
                                  "type": 2,
                                  "isRequired": true,
                                  "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "value": null
                                }
                              ],
                              "style": "formVertical",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            "customWidth": "33",
                            "name": "parameters - 0"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "parameters": [
                                {
                                  "id": "cb0ae78d-a49b-457b-baed-d83c97a2c934",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "TagValue",
                                  "label": "Tag value",
                                  "type": 2,
                                  "query": "Resources\r\n| extend TagValue = tostring(tags.{TagName})\r\n| project TagValue\r\n| distinct TagValue",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                }
                              ],
                              "style": "formVertical",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            "customWidth": "33",
                            "conditionalVisibility": {
                              "parameterName": "TagName",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "parameters - 2"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "parameters": [
                                {
                                  "id": "81756016-e942-4fa0-976e-06d8ce919f83",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "ResourceType",
                                  "label": "Resource type",
                                  "type": 7,
                                  "typeSettings": {
                                    "additionalResourceOptions": [],
                                    "includeAll": true,
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "value": null
                                }
                              ],
                              "style": "formVertical",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            "customWidth": "33",
                            "conditionalVisibility": {
                              "parameterName": "TagName",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "ResourceType"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources\r\n| extend tag = tags.{TagName}\r\n| mv-expand bagexpansion=array tags\r\n| where isnotempty(tags)\r\n//| where tags[0] =~ '{TagName}' and tags[1] =~ '{TagValue}'\r\n| where tags[0] == '{TagName}' and tags[1] == '{TagValue}'\r\n| where type contains '{ResourceType}'\r\n| project id, tag",
                              "size": 0,
                              "title": "Resource with tag",
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Resource name"
                                  },
                                  {
                                    "columnId": "tag",
                                    "label": "Tag value"
                                  }
                                ]
                              }
                            },
                            "customWidth": "50",
                            "conditionalVisibility": {
                              "parameterName": "TagName",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "query - Resource with tag"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Resources\r\n| extend tag = tags.{TagName}\r\n| mv-expand bagexpansion=array tags\r\n| where isnotempty(tags)\r\n| where tags[0] == '{TagName}' and tags[1] == ''\r\n| where type contains '{ResourceType}'\r\n| project id, tag",
                              "size": 0,
                              "title": "Tag with empty value",
                              "noDataMessage": "No tagged resources with empty value found",
                              "noDataMessageStyle": 3,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Resource name"
                                  },
                                  {
                                    "columnId": "tag",
                                    "label": "Tag value"
                                  }
                                ]
                              }
                            },
                            "customWidth": "50",
                            "conditionalVisibility": {
                              "parameterName": "TagName",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "query - Empty value"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources \r\n| where tags =~ '' or tags =~ '{}'\r\n| where type contains '{ResourceType}'\r\n| project Name=id",
                              "size": 0,
                              "title": "Untagged resources",
                              "noDataMessage": "No untagged resources found",
                              "noDataMessageStyle": 3,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  }
                                ],
                                "rowLimit": 100,
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "Name",
                                    "label": "Resource name"
                                  }
                                ]
                              }
                            },
                            "name": "query - Untagged resources"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| extend tag = tags.{TagName}\r\n| mv-expand bagexpansion=array tags\r\n| where isnotempty(tags)\r\n| where tags[0] == '{TagName}' and tags[1] == '{TagValue}'\r\n| project id, tag",
                              "size": 0,
                              "title": "Subscription list",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "tag",
                                    "formatter": 1
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "tag",
                                    "label": "Tag value"
                                  }
                                ]
                              }
                            },
                            "conditionalVisibility": {
                              "parameterName": "TagName",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "query - Subscription list"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n| extend tag = tags.{TagName}\r\n| mv-expand bagexpansion=array tags\r\n| where isnotempty(tags)\r\n| where tags[0] == '{TagName}' and tags[1] == '{TagValue}'\r\n| project id, tag",
                              "size": 0,
                              "title": "Resource groups list",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "tag",
                                    "formatter": 1
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "id",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "tag",
                                    "label": "Tag value"
                                  }
                                ]
                              }
                            },
                            "conditionalVisibility": {
                              "parameterName": "TagName",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "query - ResourceGroup list"
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "group - TagQueries"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Tag"
                },
                "name": "RC_Tags"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources\r\n| where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max), 0.001))\r\n| where subscriptionSecureScore > 0\r\n| project subscriptionId, subscriptionSecureScore\r\n| order by subscriptionSecureScore asc",
                        "size": 0,
                        "title": "Security Scores by Subscription",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "subscriptionId",
                              "formatter": 15,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": true,
                                "customColumnWidthSetting": "65ch"
                              }
                            },
                            {
                              "columnMatch": "subscriptionSecureScore",
                              "formatter": 8,
                              "formatOptions": {
                                "min": 0,
                                "max": 100,
                                "palette": "redGreen",
                                "customColumnWidthSetting": "55ch"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false
                                }
                              }
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "subscriptionId",
                              "label": "Subscription Name"
                            },
                            {
                              "columnId": "subscriptionSecureScore",
                              "label": "Subscription Secure Score"
                            }
                          ]
                        }
                      },
                      "name": "query - Monitor & Security - Security Scores"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "SecurityResources \r\n| where type == 'microsoft.security/securescores/securescorecontrols' \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount, currentscore = properties.score.current, maxscore = properties.score.max, subscriptionId, details = properties\r\n| project SecureControl , unhealthy, currentscore, maxscore, subscriptionId, details",
                        "size": 0,
                        "title": "Security Scores by Control",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "$gen_group",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true,
                                "customColumnWidthSetting": "65ch"
                              }
                            },
                            {
                              "columnMatch": "Subscription",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true,
                                "customColumnWidthSetting": "65ch"
                              }
                            },
                            {
                              "columnMatch": "SecureControl",
                              "formatter": 5,
                              "tooltipFormat": {}
                            },
                            {
                              "columnMatch": "unhealthy",
                              "formatter": 8,
                              "formatOptions": {
                                "min": 0,
                                "palette": "greenRed",
                                "customColumnWidthSetting": "20ch"
                              }
                            },
                            {
                              "columnMatch": "currentscore",
                              "formatter": 8,
                              "formatOptions": {
                                "palette": "redGreen",
                                "customColumnWidthSetting": "20ch"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "maxscore",
                              "formatter": 8,
                              "formatOptions": {
                                "palette": "blue",
                                "customColumnWidthSetting": "20ch"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "subscriptionId",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "details",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkLabel": "Details",
                                "linkIsContextBlade": true
                              }
                            },
                            {
                              "columnMatch": "subscriptionSecureScore",
                              "formatter": 8,
                              "formatOptions": {
                                "min": 0,
                                "max": 100,
                                "palette": "redGreen",
                                "customColumnWidthSetting": "20"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false
                                }
                              }
                            }
                          ],
                          "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": [
                              "subscriptionId"
                            ],
                            "expandTopLevel": true,
                            "finalBy": "SecureControl"
                          },
                          "labelSettings": [
                            {
                              "columnId": "unhealthy",
                              "label": "Unhealthy"
                            },
                            {
                              "columnId": "currentscore",
                              "label": "Current Score"
                            },
                            {
                              "columnId": "maxscore",
                              "label": "Max Score"
                            },
                            {
                              "columnId": "subscriptionId",
                              "label": "Subscription"
                            }
                          ]
                        }
                      },
                      "name": "query - Monitor & Security - Security Scores by Control"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "parameters": [
                                {
                                  "id": "4f93ebba-a9d5-4e11-8de4-b605c2b4368f",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "ResourceIdFilter",
                                  "type": 1,
                                  "isGlobal": true,
                                  "isHiddenWhenLocked": true,
                                  "label": "Resource ID"
                                },
                                {
                                  "id": "e505498f-d2eb-4dd6-928f-0f0f0e9cc371",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "AlertDisplayNameFilter",
                                  "type": 1,
                                  "isGlobal": true,
                                  "isHiddenWhenLocked": true,
                                  "label": "Alert display name"
                                },
                                {
                                  "id": "39e382f9-4780-40fa-8595-15eda0f08ad4",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "NewAlertFilter",
                                  "type": 1,
                                  "isGlobal": true,
                                  "isHiddenWhenLocked": true,
                                  "label": "New alert"
                                }
                              ],
                              "style": "above",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            "name": "parameters - 15"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | where properties.Status in ('Active')\r\n  | where properties.Severity in ('Low', 'Medium', 'High')\r\n  | extend SeverityRank = case(\r\n    properties.Severity == 'High', 3,\r\n    properties.Severity == 'Medium', 2,\r\n    properties.Severity == 'Low', 1,\r\n    0\r\n   )\r\n  | project-away SeverityRank\r\n  | extend Severity = properties.Severity\r\n  | project Severity = tostring(Severity)\r\n  | summarize Count = count() by Severity",
                              "size": 0,
                              "title": "Severity                                                                                                     ",
                              "exportedParameters": [
                                {
                                  "fieldName": "Subscription",
                                  "parameterName": "Subscription",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "Severity",
                                  "parameterName": "SeverityFilter",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "Severity",
                                    "formatter": 1
                                  }
                                ]
                              },
                              "chartSettings": {
                                "yAxis": [
                                  "Count"
                                ],
                                "seriesLabelSettings": [
                                  {
                                    "seriesName": "Medium",
                                    "color": "orange"
                                  },
                                  {
                                    "seriesName": "High",
                                    "color": "redDark"
                                  },
                                  {
                                    "seriesName": "Low",
                                    "color": "yellow"
                                  }
                                ]
                              }
                            },
                            "customWidth": "33",
                            "name": "Severity"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | summarize Count =count() by resourceGroup",
                              "size": 0,
                              "title": "Resource Group",
                              "exportFieldName": "resourceGroup",
                              "exportParameterName": "resourceGroupFilter",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart"
                            },
                            "customWidth": "33",
                            "name": "query - 9"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n  | project id = tolower(id), tags\r\n  | join kind=inner (securityresources\r\n  | where type =~ \"microsoft.security/locations/alerts\"\r\n  | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n  | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n  | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n  | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n  | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))| project-away resourceNameIndex, splitAffectedResourceId, hostName, isAzure\r\n  | project alertId = id, subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\r\n    ) on $left.id == $right.affectedResourceId\r\n  | extend id = alertId, subscriptionId, properties = alertProperties\r\n  | where properties.Status in ('Active')\r\n  | where properties.Severity in ('Low', 'Medium', 'High')\r\n  | extend SeverityRank = case(\r\n    properties.Severity == 'High', 3,\r\n    properties.Severity == 'Medium', 2,\r\n    properties.Severity == 'Low', 1,\r\n    0\r\n    )\r\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId) asc\r\n   | extend Tag = parse_json(tags)\r\n  | mv-expand Tag\r\n | parse Tag with * ':\"' TagValue '\"}'\r\n | project TagValue, alertId\r\n | summarize Count = count() by TagValue",
                              "size": 0,
                              "title": "Tag",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart"
                            },
                            "customWidth": "30",
                            "name": "query - 7",
                            "styleSettings": {
                              "maxWidth": "100%"
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "datatable(ResourceId: string) [ \"All\"] | union (securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend Prop = parse_json(properties)\r\n  | where Prop.Severity == \"High\"\r\n    | extend ResourceIdentifiers = Prop.[\"ResourceIdentifiers\"]\r\n    | project ResourceIdentifiers\r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | where isnotempty(ResourceId )\r\n|  summarize Count=count() by tostring(ResourceId)\r\n  | top 5 by Count)",
                              "size": 1,
                              "title": "Top 5 attacked resources (with High Severity)",
                              "noDataMessage": "There are no Top 5 attacked resources found",
                              "exportedParameters": [
                                {
                                  "fieldName": "ResourceId",
                                  "parameterName": "ResourceIdFilter",
                                  "defaultValue": "All"
                                },
                                {
                                  "fieldName": "ResourceId",
                                  "parameterName": "ShowTable",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "Resource ID",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  }
                                ],
                                "sortBy": [
                                  {
                                    "itemKey": "Count",
                                    "sortOrder": 2
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "ResourceId",
                                    "label": "Resource ID"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "Count",
                                  "sortOrder": 2
                                }
                              ]
                            },
                            "customWidth": "33",
                            "name": "Top 5 attacked resources (with High Severity)"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "  datatable(AlertDisplayName: string) [ \"All\"] | union(securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n    | extend Prop = parse_json(properties)\r\n  | extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n  | project tostring(AlertDisplayName)\r\n  | summarize Count = count() by AlertDisplayName\r\n  | top 5 by Count)",
                              "size": 1,
                              "title": "Top alert types       ",
                              "exportedParameters": [
                                {
                                  "fieldName": "AlertDisplayName",
                                  "parameterName": "AlertDisplayNameFilter",
                                  "defaultValue": "All"
                                },
                                {
                                  "fieldName": "AlertDisplayName",
                                  "parameterName": "ShowTable",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "sortBy": [
                                  {
                                    "itemKey": "Count",
                                    "sortOrder": 2
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "AlertDisplayName",
                                    "label": "Alert display name"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "Count",
                                  "sortOrder": 2
                                }
                              ]
                            },
                            "customWidth": "33",
                            "name": "Top alert types"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "  datatable(AlertDisplayName: string) [ \"All\"] | union(securityresources\r\n| where type =~ 'microsoft.security/locations/alerts'\r\n| extend Prop = parse_json(properties)\r\n| extend TimeGeneratedUtc = Prop.[\"TimeGeneratedUtc\"]\r\n| extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n| where TimeGeneratedUtc > ago(24h)\r\n| summarize Count=count() by tostring(AlertDisplayName))",
                              "size": 1,
                              "title": "New Alerts (Since last 24hrs)",
                              "noDataMessage": "No new alerts in Last 24 hours",
                              "noDataMessageStyle": 3,
                              "exportedParameters": [
                                {
                                  "fieldName": "AlertDisplayName",
                                  "parameterName": "NewAlertFilter",
                                  "defaultValue": "All"
                                },
                                {
                                  "fieldName": "AlertDisplayName",
                                  "parameterName": "ShowTable",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "ClearOther",
                                    "formatter": 5
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "AlertDisplayName",
                                    "label": "Alert display name"
                                  }
                                ]
                              },
                              "sortBy": []
                            },
                            "customWidth": "33",
                            "name": "New Alerts (Since last 24hrs)"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "",
                              "size": 0,
                              "title": "Parameters at this point",
                              "queryType": 2
                            },
                            "conditionalVisibility": {
                              "parameterName": "parameter1",
                              "comparison": "isEqualTo",
                              "value": "1"
                            },
                            "name": "query - 23"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| project-rename P= properties\r\n| extend Details = parse_json(P)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = tostring(Details.[\"Severity\"])\r\n| where Severity == \"High\"\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = tostring(Details.[\"Status\"])\r\n| extend Tactics = tostring(Details.[\"Intent\"])\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| where Status == \"Active\"\r\n| where (\"{ResourceIdFilter}\" == \"All\" or ResourceId == \"{ResourceIdFilter}\") \r\n    // if either alert name or new alert are set, union those 2 together, if neither are set treat as all\r\n    and ((\"{AlertDisplayNameFilter}\" == \"All\" and \"{NewAlertFilter}\" == \"All\") or AlertDisplayName == \"{AlertDisplayNameFilter}\" or AlertDisplayName == \"{NewAlertFilter}\")\r\n| extend SeverityRank = case(\r\n    Severity == 'High', 3,\r\n    Severity == 'Medium', 2,\r\n    Severity == 'Low', 1,\r\n    0\r\n    )\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| project\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertUri,\r\n    Tactics,\r\n    SeverityRank,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId\r\n| sort by SeverityRank",
                              "size": 0,
                              "title": "{$rowCount} Active Alerts ",
                              "exportedParameters": [
                                {
                                  "fieldName": "ResourceId",
                                  "parameterName": "Resource",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "AlertUri",
                                  "parameterName": "AlertUri",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "SystemAlertId",
                                  "parameterName": "SystemAlertId",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "SubscriptionId",
                                  "parameterName": "SubscriptionId",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "ResourceGroup",
                                  "parameterName": "ResourceGroup",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "Location",
                                  "parameterName": "Location",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "Severity",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "High",
                                          "representation": "redBright",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Medium",
                                          "representation": "orange",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Low",
                                          "representation": "yellow",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Informational ",
                                          "representation": "gray",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": null,
                                          "text": "{0}{1}"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "columnMatch": "SystemAlertId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertDisplayName",
                                    "formatter": 1,
                                    "formatOptions": {
                                      "linkTarget": "OpenBlade",
                                      "bladeOpenContext": {
                                        "bladeName": "AlertBlade",
                                        "extensionName": "Microsoft_Azure_Security",
                                        "bladeParameters": [
                                          {
                                            "name": "alertId",
                                            "source": "column",
                                            "value": "SystemAlertId"
                                          },
                                          {
                                            "name": "subscriptionId",
                                            "source": "column",
                                            "value": "SubscriptionId"
                                          },
                                          {
                                            "name": "resourceGroup",
                                            "source": "column",
                                            "value": "ResourceGroup"
                                          },
                                          {
                                            "name": "referencedFrom",
                                            "source": "static",
                                            "value": "activeAlertsWorkbook"
                                          },
                                          {
                                            "name": "location",
                                            "source": "column",
                                            "value": "Location"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "IsIncident",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "AlertUri",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Tactics",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "SubscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Location",
                                    "formatter": 17
                                  },
                                  {
                                    "columnMatch": "ResourceId",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "TenantId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Description",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProviderName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "VendorName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "VendorOriginalId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SourceComputerId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertType",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ConfidenceLevel",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ConfidenceScore",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "StartTime",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "EndTime",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProcessingEndTime",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "RemediationSteps",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ExtendedProperties",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Entities",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SourceSystem",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "WorkspaceSubscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "WorkspaceResourceGroup",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ExtendedLinks",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProductName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProductComponentName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertLink",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "Url"
                                    }
                                  },
                                  {
                                    "columnMatch": "SystemIncidentId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SystemAlertId1",
                                    "formatter": 5
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "SystemAlertId",
                                    "label": "Alert ID"
                                  },
                                  {
                                    "columnId": "AlertDisplayName",
                                    "label": "Alert name"
                                  },
                                  {
                                    "columnId": "IsIncident",
                                    "label": "Incident/alert"
                                  },
                                  {
                                    "columnId": "SeverityRank",
                                    "label": "Severity"
                                  },
                                  {
                                    "columnId": "SubscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "ResourceGroup",
                                    "label": "Resource group"
                                  },
                                  {
                                    "columnId": "ResourceId",
                                    "label": "Resource"
                                  }
                                ]
                              },
                              "sortBy": []
                            },
                            "conditionalVisibility": {
                              "parameterName": "ShowTable",
                              "comparison": "isNotEqualTo"
                            },
                            "showPin": true,
                            "name": "SecurityIncidents - FilterbyResourceId",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 11,
                            "content": {
                              "version": "LinkItem/1.0",
                              "style": "list",
                              "links": [
                                {
                                  "id": "2f6ff56b-9afb-46f6-968d-a59cb744ea14",
                                  "linkTarget": "OpenBlade",
                                  "linkLabel": "Open Alert View",
                                  "style": "primary",
                                  "bladeOpenContext": {
                                    "bladeName": "AlertBlade",
                                    "extensionName": "Microsoft_Azure_Security",
                                    "bladeParameters": [
                                      {
                                        "name": "alertId",
                                        "source": "static",
                                        "value": "{SystemAlertId}"
                                      },
                                      {
                                        "name": "subscriptionId",
                                        "source": "static",
                                        "value": "{SubscriptionId}"
                                      },
                                      {
                                        "name": "resourceGroup",
                                        "source": "static",
                                        "value": "{ResourceGroup}"
                                      },
                                      {
                                        "name": "referencedFrom",
                                        "source": "static",
                                        "value": "activeAlertsWorkbook"
                                      },
                                      {
                                        "name": "location",
                                        "source": "static",
                                        "value": "{Location}"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "conditionalVisibility": {
                              "parameterName": "SystemAlertId",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Alerts  "
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "### MITRE ATT&CK tactics &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
                            },
                            "customWidth": "100",
                            "name": "text - 17"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| extend Details = parse_json(properties)\r\n| extend Tactics = Details.[\"Intent\"]\r\n| project Tactics\r\n| extend Tactic = split(Tactics,\",\")\r\n| mv-expand Tactic\r\n| extend Tactic = trim(\" \",tostring(Tactic))\r\n| summarize Count = count() by Tactic\r\n| sort by Count desc\r\n",
                              "size": 0,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "barchart",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "Tactics",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "Tactics",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "count_",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "mapSettings": {
                                "locInfo": "LatLong",
                                "sizeSettings": "count_",
                                "sizeAggregation": "Sum",
                                "legendMetric": "count_",
                                "legendAggregation": "Sum",
                                "itemColorSettings": {
                                  "type": "heatmap",
                                  "colorAggregation": "Sum",
                                  "nodeColorField": "count_",
                                  "heatmapPalette": "greenRed"
                                }
                              }
                            },
                            "name": "query - 17"
                          },
                          {
                            "type": 11,
                            "content": {
                              "version": "LinkItem/1.0",
                              "style": "tabs",
                              "links": [
                                {
                                  "id": "bd374a50-b240-4232-ad4a-77725f80bcf5",
                                  "cellValue": "View",
                                  "linkTarget": "parameter",
                                  "linkLabel": "List View",
                                  "subTarget": "List",
                                  "preText": "",
                                  "style": "link"
                                },
                                {
                                  "id": "588b7d9f-8ff1-4afa-8d3f-b0085ae6b148",
                                  "cellValue": "View",
                                  "linkTarget": "parameter",
                                  "linkLabel": "Map View",
                                  "subTarget": "Map",
                                  "preText": "",
                                  "style": "link"
                                }
                              ]
                            },
                            "name": "links - 10"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "parameters": [
                                {
                                  "id": "1ffc8fe9-a919-4c9e-8489-a92f0a7d79e1",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "ResourceFilter",
                                  "label": "Resource",
                                  "type": 5,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend Prop = parse_json(properties)\r\n  | extend ResourceIdentifiers = Prop.[\"ResourceIdentifiers\"]\r\n    | project ResourceIdentifiers\r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  //| where isnotempty(ResourceId )\r\n  | extend Resource = tolower(tostring(ResourceId))\r\n  | summarize count() by Resource\r\n  | project Resource\r\n  //| order by Resource asc\r\n",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "defaultValue": "value::all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "value": [
                                    "value::all"
                                  ]
                                },
                                {
                                  "id": "e9522d87-143f-408b-93ea-b8f07223995e",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "SeverityFilter",
                                  "label": "Severity",
                                  "type": 2,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "value": [
                                    "value::all"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "jsonData": "[\r\n\r\n{\"value\": \"High\", \"label\":\"High\"},\r\n{\"value\": \"Medium\", \"label\":\"Medium\"},\r\n{\"value\": \"Low\", \"label\":\"Low\"},\r\n{\"value\": \"Informational\", \"label\":\"Informational\"}\r\n]\r\n    \r\n ",
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "defaultValue": "value::all"
                                },
                                {
                                  "id": "664365b5-1fc4-4cfa-b99d-a72e3d35ab11",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "ResourceGroupFilter",
                                  "label": "Resource group",
                                  "type": 2,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend resourceGroup = iif(isempty(resourceGroup),\" \",resourceGroup)\r\n| summarize Count =count() by resourceGroup\r\n  | project resourceGroup",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "defaultValue": "value::all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "value": [
                                    "value::all"
                                  ]
                                },
                                {
                                  "id": "48a8dd7e-43ab-413e-88f8-a433100d92ce",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "AlertNameFilter",
                                  "label": "Alert name",
                                  "type": 2,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n    | extend Prop = parse_json(properties)\r\n  | extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n  | distinct tostring(AlertDisplayName)\r\n  | order by AlertDisplayName asc\r\n ",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "defaultValue": "value::all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                },
                                {
                                  "id": "378aeb0c-9135-43fa-b46a-86f71baa0137",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "TagFilter",
                                  "label": "Tag",
                                  "type": 2,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "securityresources\r\n  | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n  | extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n  | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n  | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n  | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n  | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n  | extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | extend Resource = tolower(tostring(ResourceId))\r\n  | project alertId = id, subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId),tostring(Severity), SystemAlertId, AlertDisplayName,IsIncident = iif(IsIncident==\"true\",\"Incident\",\"Alert\"),AlertUri,Status,Tactics,SubscriptionId,ResourceGroup,Location, ResourceIdentifier=Details.[\"ResourceIdentifiers\"],Resource\r\n  | join kind=leftouter (\r\n  resources\r\n  | project id = tolower(id), tags\r\n  ) on $left.affectedResourceId == $right.id\r\n | extend Tag = parse_json(tags)\r\n  | mv-expand Tag\r\n | parse Tag with * ':\"' TagValue '\"}'\r\n | extend TagValue = iif(isempty(TagValue),\" \",TagValue)\r\n  | project TagValue, alertId\r\n | distinct TagValue\r\n ",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "defaultValue": "value::all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                }
                              ],
                              "style": "pills",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            "conditionalVisibility": {
                              "parameterName": "View",
                              "comparison": "isEqualTo",
                              "value": "List"
                            },
                            "name": "parameters - 23"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| project\r\n    alertId = id,\r\n    subscriptionId,\r\n    alertProperties = properties,\r\n    affectedResourceId = tolower(affectedResourceId),\r\n    tostring(Severity),\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertUri,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId,\r\n    ResourceIdentifier=Details.[\"ResourceIdentifiers\"],\r\n    Resource\r\n| join kind=leftouter (\r\n    resources\r\n    | project id = tolower(id), tags\r\n    )\r\n    on $left.affectedResourceId == $right.id\r\n| extend id = alertId, subscriptionId, properties = alertProperties\r\n| extend ResourceFilter =\" {ResourceFilter}\"\r\n| where Resource in~ ({ResourceFilter})\r\n| where Severity in~ ({SeverityFilter})\r\n| where AlertDisplayName in~ ({AlertNameFilter})\r\n| where Status == \"Active\"\r\n| extend ResourceGroup = iif(isempty(ResourceGroup), \" \", ResourceGroup)\r\n| where ResourceGroup in~ ({ResourceGroupFilter})\r\n| extend tag = iff(isempty(tags), dynamic({\"tags\": \" \"}), parse_json(tags))\r\n| mv-expand tag\r\n| parse tag with * ':\"' TagValue '\"}'\r\n| extend TagValue = iif(isempty(TagValue), \" \", TagValue)\r\n| where TagValue in ({TagFilter})\r\n| where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n| project\r\n    (Severity),\r\n    tostring(SystemAlertId),\r\n    tostring(AlertDisplayName),\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertURI = tostring(AlertUri),\r\n    tostring(Status),\r\n    tostring(Tactics),\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    TagValue,\r\n    tostring(tags),\r\n    tostring(ResourceId)\r\n| distinct\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident,\r\n    AlertURI,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    tags,\r\n    ResourceId\r\n| order by Severity asc",
                              "size": 0,
                              "title": "Active Alerts ",
                              "exportedParameters": [
                                {
                                  "fieldName": "Resource",
                                  "parameterName": "Resource",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "AlertUri",
                                  "parameterName": "AlertUri",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "SystemAlertId",
                                  "parameterName": "SystemAlertId",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "SubscriptionId",
                                  "parameterName": "SubscriptionId",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "ResourceGroup",
                                  "parameterName": "ResourceGroup",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "Location",
                                  "parameterName": "Location",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "Severity",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "High",
                                          "representation": "redBright",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Medium",
                                          "representation": "orange",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Low",
                                          "representation": "yellow",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "Informational ",
                                          "representation": "gray",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": null,
                                          "text": "{0}{1}"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "columnMatch": "SystemAlertId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "IsIncident",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "AlertURI",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "linkTarget": "Url"
                                    }
                                  },
                                  {
                                    "columnMatch": "Status",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SubscriptionId",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Location",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ResourceId",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Alert ID",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Alert URI",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "linkTarget": "Url"
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource ID",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertUri",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ResourceIdentifier",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "TenantId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Description",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProviderName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "VendorName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "VendorOriginalId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SourceComputerId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertType",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ConfidenceLevel",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ConfidenceScore",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "StartTime",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "EndTime",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProcessingEndTime",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "RemediationSteps",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ExtendedProperties",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Entities",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SourceSystem",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "WorkspaceSubscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "WorkspaceResourceGroup",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ExtendedLinks",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProductName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "ProductComponentName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "AlertLink",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "Url"
                                    }
                                  },
                                  {
                                    "columnMatch": "SystemIncidentId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "SystemAlertId1",
                                    "formatter": 5
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "AlertDisplayName",
                                    "label": "Alert name"
                                  },
                                  {
                                    "columnId": "IsIncident",
                                    "label": "Incident/alert"
                                  },
                                  {
                                    "columnId": "AlertURI",
                                    "label": "Alert URI"
                                  },
                                  {
                                    "columnId": "SubscriptionId",
                                    "label": "Subscription"
                                  },
                                  {
                                    "columnId": "ResourceGroup",
                                    "label": "Resource group"
                                  },
                                  {
                                    "columnId": "tags",
                                    "label": "Tags"
                                  },
                                  {
                                    "columnId": "ResourceId",
                                    "label": "Resource"
                                  }
                                ]
                              },
                              "sortBy": []
                            },
                            "conditionalVisibility": {
                              "parameterName": "View",
                              "comparison": "isEqualTo",
                              "value": "List"
                            },
                            "showPin": true,
                            "name": "SecurityIncidents"
                          },
                          {
                            "type": 11,
                            "content": {
                              "version": "LinkItem/1.0",
                              "style": "list",
                              "links": [
                                {
                                  "id": "8e6f9368-ccbe-4092-b898-8a27c77a06b3",
                                  "linkTarget": "OpenBlade",
                                  "linkLabel": "Open Alert View",
                                  "preText": "",
                                  "style": "primary",
                                  "bladeOpenContext": {
                                    "bladeName": "AlertBlade",
                                    "extensionName": "Microsoft_Azure_Security",
                                    "bladeParameters": [
                                      {
                                        "name": "alertId",
                                        "source": "static",
                                        "value": "{SystemAlertId}"
                                      },
                                      {
                                        "name": "subscriptionId",
                                        "source": "static",
                                        "value": "{SubscriptionId}"
                                      },
                                      {
                                        "name": "resourceGroup",
                                        "source": "static",
                                        "value": "{ResourceGroup}"
                                      },
                                      {
                                        "name": "referencedFrom",
                                        "source": "static",
                                        "value": "activeAlertsWorkbook"
                                      },
                                      {
                                        "name": "location",
                                        "source": "static",
                                        "value": "{Location}"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "conditionalVisibilities": [
                              {
                                "parameterName": "View",
                                "comparison": "isEqualTo",
                                "value": "List"
                              },
                              {
                                "parameterName": "SystemAlertId",
                                "comparison": "isNotEqualTo"
                              }
                            ],
                            "name": "links - 19"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> To see more information about the alerts in the map view: <br><br> &nbsp; 1. Configure continuous export to export your security alerts to a Log Analytics workspace by following the instructions described \r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> here. </span>](https://docs.microsoft.com/en-us/azure/defender-for-cloud/continuous-export?tabs=azure-portal)\r\n<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"><br> &nbsp;  2. In the \"Workspace\" filter below, choose the Log Analytics workspace your security alerts are exported to.\r\n\r\n"
                            },
                            "conditionalVisibility": {
                              "parameterName": "View",
                              "comparison": "isEqualTo",
                              "value": "Map"
                            },
                            "name": "text - 21"
                          },
                          {
                            "type": 9,
                            "content": {
                              "version": "KqlParameterItem/1.0",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "parameters": [
                                {
                                  "id": "8724f927-b766-4814-a895-8c55565fb7f8",
                                  "version": "KqlParameterItem/1.0",
                                  "name": "Workspace",
                                  "type": 5,
                                  "multiSelect": true,
                                  "quote": "'",
                                  "delimiter": ",",
                                  "query": "resources\r\n| where type contains \"solution\"\r\n| where name contains \"security\"\r\n| project id = tostring(properties.workspaceResourceId)\r\n| distinct id",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "typeSettings": {
                                    "additionalResourceOptions": [
                                      "value::all"
                                    ],
                                    "showDefault": false
                                  },
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                }
                              ],
                              "style": "pills",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            },
                            "conditionalVisibility": {
                              "parameterName": "View",
                              "comparison": "isEqualTo",
                              "value": "Map"
                            },
                            "name": "parameters - 15"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| project-rename P= properties\r\n| extend Details = parse_json(P)\r\n | extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertLink = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertLink with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertLink with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertLink with * '/location/'  Location  \r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | where isnotempty(ResourceId )\r\n| project  Severity, SystemAlertId, tostring(AlertDisplayName),IsIncident = iif(IsIncident==\"true\",\"Incident\",\"Alert\"),tostring(AlertLink),Status,Tactics,tostring(ResourceId),SubscriptionId,ResourceGroup,Location\r\n| distinct tostring(SystemAlertId),tostring(AlertDisplayName),tostring(AlertLink),tostring(ResourceId)\r\n| summarize count() by ResourceId, AlertLink, AlertDisplayName\r\n",
                              "size": 0,
                              "title": "AlertsMapView ",
                              "exportMultipleValues": true,
                              "exportAggregateParts": true,
                              "exportedParameters": [
                                {
                                  "fieldName": "ResourceId",
                                  "parameterName": "Resource",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "AlertLink",
                                  "parameterName": "AlertLink",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "AlertDisplayName",
                                  "parameterName": "AlertDisplayName",
                                  "parameterType": 1
                                }
                              ],
                              "exportToExcelOptions": "all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "map",
                              "mapSettings": {
                                "locInfo": "AzureResource",
                                "locInfoColumn": "ResourceId",
                                "sizeSettings": "count_",
                                "sizeAggregation": "Sum",
                                "legendMetric": "count_",
                                "legendAggregation": "Sum",
                                "itemColorSettings": {
                                  "nodeColorField": "count_",
                                  "colorAggregation": "Sum",
                                  "type": "heatmap",
                                  "heatmapPalette": "coldHot"
                                }
                              }
                            },
                            "customWidth": "50",
                            "conditionalVisibility": {
                              "parameterName": "View",
                              "comparison": "isEqualTo",
                              "value": "Map"
                            },
                            "name": "AlertsMapView ",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let T = datatable ( AlertLink:string)\r\n[\r\n{AlertLink}\r\n];\r\nT\r\n| parse AlertLink with * '/alertId/' AlertId '/subscriptionId/' SubscriptionId '/resourceGroup/' ResourceGroup '/' * 'location/' Location \r\n| distinct AlertLink, AlertId, ResourceGroup,Location,SubscriptionId\r\n| join kind = inner (SecurityAlert\r\n| where isempty(ResourceId) == false\r\n| where TimeGenerated > ago(90d)\r\n| project SystemAlertId,ResourceId, DisplayName,StartTime) on $left.AlertId == $right.SystemAlertId\r\n| project ResourceId,DisplayName,AlertId, SubscriptionId, ResourceGroup, Location,StartTime\r\n| order by ResourceId,DisplayName, StartTime asc\r\n\r\n\r\n\r\n",
                              "size": 0,
                              "exportedParameters": [
                                {
                                  "fieldName": "AlertId",
                                  "parameterName": "AlertId",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "SubscriptionId",
                                  "parameterName": "SubscriptionId",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "Location",
                                  "parameterName": "Location",
                                  "parameterType": 1
                                },
                                {
                                  "fieldName": "ResourceGroup",
                                  "parameterName": "ResourceGroup",
                                  "parameterType": 1
                                }
                              ],
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "ResourceId",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "23ch"
                                    }
                                  },
                                  {
                                    "columnMatch": "DisplayName",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "45ch"
                                    }
                                  },
                                  {
                                    "columnMatch": "AlertId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Location",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "StartTime",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "23ch"
                                    }
                                  },
                                  {
                                    "columnMatch": "TimeGenerated",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "22ch"
                                    }
                                  },
                                  {
                                    "columnMatch": "AlertLink",
                                    "formatter": 5
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "ResourceId",
                                    "label": "Resource ID"
                                  },
                                  {
                                    "columnId": "DisplayName",
                                    "label": "Alert name"
                                  },
                                  {
                                    "columnId": "AlertId",
                                    "label": "Alert ID"
                                  },
                                  {
                                    "columnId": "SubscriptionId",
                                    "label": "Subscription ID"
                                  },
                                  {
                                    "columnId": "ResourceGroup",
                                    "label": "Resource group"
                                  },
                                  {
                                    "columnId": "StartTime",
                                    "label": "Start time"
                                  }
                                ]
                              },
                              "sortBy": [],
                              "tileSettings": {
                                "showBorder": false
                              }
                            },
                            "customWidth": "45",
                            "conditionalVisibilities": [
                              {
                                "parameterName": "View",
                                "comparison": "isEqualTo",
                                "value": "Map"
                              },
                              {
                                "parameterName": "AlertLink",
                                "comparison": "isNotEqualTo"
                              }
                            ],
                            "name": "AlertLink-Table"
                          }
                        ]
                      },
                      "name": "Security Discipline"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "RC_Security"
                  },
                  {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "RC_Security"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "1e6e4cc7-5d76-48ef-8ce1-16f33f4f6dea",
                            "version": "KqlParameterItem/1.0",
                            "name": "SubscriptionAge",
                            "label": "Subscription name",
                            "type": 6,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "includeAll": true,
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": null
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "parameters - SubscriptionAge"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Azure resource age\r\nAzure *resource age* is one of the metric to monitor as part of the \"resource consistency\" discipline of the Cloud Adoption Framework. This metric help you to identify old resources to be assessed and cleaned if they are not used anymore."
                      },
                      "name": "text - ResourceAgeDescription"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "template",
                        "loadFromTemplateId": "community-Workbooks/Common/noSubscriptions",
                        "items": []
                      },
                      "conditionalVisibility": {
                        "parameterName": "SubscriptionAge",
                        "comparison": "isEqualTo",
                        "value": ""
                      },
                      "name": "No Subscriptions group - Age"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{SubscriptionAge:id}/resources?\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2021-04-01\"},{\"key\":\"$expand\",\"value\":\"createdTime,changedTime,provisioningState\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$..id\",\"columnid\":\"id\",\"columnType\":\"string\"},{\"path\":\"$..type\",\"columnid\":\"type\",\"columnType\":\"string\"},{\"path\":\"$..location\",\"columnid\":\"location\",\"columnType\":\"string\"},{\"path\":\"$..createdTime\",\"columnid\":\"createdTime\",\"columnType\":\"datetime\"},{\"path\":\"$..changedTime\",\"columnid\":\"changedTime\",\"columnType\":\"datetime\"},{\"path\":\"$..provisioningState\",\"columnid\":\"provisioningState\",\"columnType\":\"string\"},{\"path\":\"$..tags\",\"columnid\":\"tags\"}]}}]}",
                        "size": 0,
                        "title": "Resource age",
                        "showExportToExcel": true,
                        "queryType": 12,
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "type",
                              "formatter": 16,
                              "formatOptions": {
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "location",
                              "formatter": 17
                            },
                            {
                              "columnMatch": "createdTime",
                              "formatter": 6
                            },
                            {
                              "columnMatch": "changedTime",
                              "formatter": 6
                            },
                            {
                              "columnMatch": "provisioningState",
                              "formatter": 1
                            },
                            {
                              "columnMatch": "tags",
                              "formatter": 1
                            }
                          ],
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "changedTime",
                              "sortOrder": 1
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "id",
                              "label": "Resource Name"
                            },
                            {
                              "columnId": "type",
                              "label": "Resource Type"
                            },
                            {
                              "columnId": "location",
                              "label": "Region"
                            },
                            {
                              "columnId": "createdTime",
                              "label": "Created Time"
                            },
                            {
                              "columnId": "changedTime",
                              "label": "Last Change"
                            },
                            {
                              "columnId": "provisioningState",
                              "label": "Provisioning State"
                            },
                            {
                              "columnId": "tags",
                              "label": "Tags"
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "changedTime",
                            "sortOrder": 1
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "SubscriptionAge",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "query - Resource age"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Age"
                },
                "name": "Resource Age"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "e15ef842-dadb-4a7b-b5f6-5d1bbe35b7af",
                            "version": "KqlParameterItem/1.0",
                            "name": "Subscription",
                            "type": 6,
                            "description": "Cost information can only be displayed per subscription",
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "includeAll": true,
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": null
                          },
                          {
                            "id": "b73ef334-95b2-4ead-8dd2-51a90a90ce6f",
                            "version": "KqlParameterItem/1.0",
                            "name": "Aggregation",
                            "type": 2,
                            "isRequired": true,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "jsonData": "[[\r\n    { \"value\": \"SubscriptionId\", \"label\": \"Subscription\", \"selected\":true},\r\n    { \"value\": \"ResourceGroup\", \"label\": \"Resource Group\"},\r\n    { \"value\": \"ResourceType\", \"label\": \"Resource Type\"}\r\n]",
                            "timeContext": {
                              "durationMs": 86400000
                            }
                          },
                          {
                            "id": "55ef4a45-0603-48cf-bb9b-a963e7a33be2",
                            "version": "KqlParameterItem/1.0",
                            "name": "TimeFrame",
                            "type": 2,
                            "typeSettings": {
                              "additionalResourceOptions": []
                            },
                            "jsonData": "[[\r\n { \"value\": \"BillingMonthToDate\", \"label\": \"Billing MonthToDate\"},\r\n { \"value\": \"MonthToDate\", \"label\": \"MonthToDate\", \"selected\":true },\r\n { \"value\": \"TheLastBillingMonth\", \"label\": \"Last Billing Month\"},\r\n { \"value\": \"TheLastMonth\", \"label\": \"Last Month\"},\r\n { \"value\": \"WeekToDate\", \"label\": \"WeekToDate\"}\r\n]",
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "label": "Timeframe"
                          }
                        ],
                        "style": "above",
                        "doNotRunWhenHidden": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "parameters - Cost Subscription"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Microsoft Cost Management\r\n\r\nBefore you can control and optimize your costs, you first need to understand where they originated – from the underlying resources used to support your cloud projects to the environments they're deployed in and the owners who manage them. Full visibility backed by a thorough tagging strategy is critical to accurately understand your spending patterns and enforce cost control mechanisms.\r\n\r\n[Cost Management](https://portal.azure.com/#view/Microsoft_Azure_CostManagement/Menu/~/overview) is a set of FinOps tools that enable you to analyze, manage, and optimize your costs.\r\n\r\nCalculate your estimated hourly or monthly costs for using Azure with the [Azure Calculator](https://azure.microsoft.com/pricing/calculator/).\r\n\r\nCreate visuals and reports with the [Cost Management connector](https://learn.microsoft.com/power-bi/connect-data/desktop-connect-azure-cost-management) in Power BI Desktop."
                      },
                      "name": "text - AzureCostManagement"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":\" {\\r\\n   \\\"type\\\": \\\"Usage\\\",\\r\\n   \\\"timeframe\\\": \\\"{TimeFrame}\\\",\\r\\n   \\\"dataset\\\": {\\r\\n     \\\"granularity\\\": \\\"None\\\",\\r\\n     \\\"aggregation\\\": {\\r\\n       \\\"totalCost\\\": {\\r\\n         \\\"name\\\": \\\"PreTaxCost\\\",\\r\\n         \\\"function\\\": \\\"Sum\\\"\\r\\n       }\\r\\n     },\\r\\n     \\\"grouping\\\": [\\r\\n       {\\r\\n         \\\"type\\\": \\\"Dimension\\\",\\r\\n         \\\"name\\\": \\\"{Aggregation}\\\"\\r\\n       }\\r\\n     ]\\r\\n   }\\r\\n }\",\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:id}/providers/Microsoft.CostManagement/query?\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2019-11-01\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[]}}]}",
                        "size": 0,
                        "title": "Overall cost",
                        "showExportToExcel": true,
                        "queryType": 12,
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "PreTaxCost",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                },
                                "emptyValCustomText": "\"0\""
                              }
                            },
                            {
                              "columnMatch": "SubscriptionId",
                              "formatter": 15,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "ResourceGroup",
                              "formatter": 14,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": false
                              }
                            },
                            {
                              "columnMatch": "ResourceType",
                              "formatter": 16,
                              "formatOptions": {
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "resourceGroup",
                              "formatter": 14,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "linkIsContextBlade": false,
                                "showIcon": false
                              }
                            }
                          ],
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "$gen_number_PreTaxCost_0",
                              "sortOrder": 2
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "PreTaxCost",
                              "label": "Cost"
                            },
                            {
                              "columnId": "Currency",
                              "label": "Currency"
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "$gen_number_PreTaxCost_0",
                            "sortOrder": 2
                          }
                        ],
                        "tileSettings": {
                          "showBorder": false
                        }
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "query - Overall cost"
                    },
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "parameters": [
                          {
                            "id": "6cc7fc26-1a56-41cb-ad43-301e0f9f8903",
                            "version": "KqlParameterItem/1.0",
                            "name": "TagName",
                            "label": "Tag name",
                            "type": 2,
                            "isRequired": true,
                            "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
                            "crossComponentResources": [
                              "{Subscription}"
                            ],
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources",
                            "value": ""
                          },
                          {
                            "id": "2fc46f5d-ce69-42ea-8ebf-1c3d69c4e780",
                            "version": "KqlParameterItem/1.0",
                            "name": "TagValue",
                            "label": "Tag value",
                            "type": 2,
                            "isRequired": true,
                            "query": "Resources\r\n| extend TagValue = tostring(tags.{TagName})\r\n| project TagValue\r\n| distinct TagValue",
                            "crossComponentResources": [
                              "{Subscription}"
                            ],
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources",
                            "value": ""
                          }
                        ],
                        "style": "above",
                        "doNotRunWhenHidden": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "parameters - TagFilter"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":\" {\\r\\n   \\\"type\\\": \\\"Usage\\\",\\r\\n   \\\"timeframe\\\": \\\"{TimeFrame}\\\",\\r\\n   \\\"dataset\\\": {\\r\\n     \\\"granularity\\\": \\\"None\\\",\\r\\n     \\\"filter\\\": {\\r\\n                 \\\"tags\\\" : {\\r\\n                     \\\"name\\\" : \\\"{TagName}\\\",\\r\\n                     \\\"operator\\\" : \\\"In\\\",\\r\\n                     \\\"values\\\" : [\\r\\n                        \\\"{TagValue}\\\"\\r\\n                     ]\\r\\n                 }\\r\\n     },\\r\\n     \\\"aggregation\\\": {\\r\\n       \\\"totalCost\\\": {\\r\\n         \\\"name\\\": \\\"PreTaxCost\\\",\\r\\n         \\\"function\\\": \\\"Sum\\\"\\r\\n       }\\r\\n     },\\r\\n     \\\"grouping\\\": [\\r\\n       {\\r\\n         \\\"type\\\": \\\"Dimension\\\",\\r\\n         \\\"name\\\": \\\"{Aggregation}\\\"\\r\\n       }\\r\\n     ]\\r\\n   }\\r\\n }\",\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:id}/providers/Microsoft.CostManagement/query?\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2019-11-01\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[]}}]}",
                        "size": 3,
                        "title": "Overall cost filtered by tag",
                        "showExportToExcel": true,
                        "queryType": 12,
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "PreTaxCost",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                },
                                "emptyValCustomText": "\"0\""
                              }
                            },
                            {
                              "columnMatch": "SubscriptionId",
                              "formatter": 15,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "ResourceType",
                              "formatter": 16,
                              "formatOptions": {
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "resourceGroup",
                              "formatter": 14,
                              "formatOptions": {
                                "linkTarget": "Resource",
                                "linkIsContextBlade": false,
                                "showIcon": true
                              }
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "PreTaxCost",
                              "label": "Cost"
                            }
                          ]
                        },
                        "tileSettings": {
                          "showBorder": false
                        }
                      },
                      "conditionalVisibility": {
                        "parameterName": "TagValue",
                        "comparison": "isNotEqualTo",
                        "value": ""
                      },
                      "name": "query - Sub cost per tag"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Cost"
                },
                "name": "RC_Cost Management"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "loadType": "always",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                          "value::tenant"
                        ],
                        "parameters": [
                          {
                            "id": "f967854d-c31e-46a6-b8b0-6b9fff7ce582",
                            "version": "KqlParameterItem/1.0",
                            "name": "ManagementGroup",
                            "label": "Management group",
                            "type": 2,
                            "query": "resourcecontainers\r\n| where type == \"microsoft.management/managementgroups\"\r\n| extend name = properties.displayName\r\n| project name",
                            "crossComponentResources": [
                              "value::tenant"
                            ],
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 1,
                            "resourceType": "microsoft.resources/tenants",
                            "value": null
                          },
                          {
                            "id": "476f61f4-2271-4e58-9b5e-7958d9a4ca3b",
                            "version": "KqlParameterItem/1.0",
                            "name": "Subscription",
                            "type": 6,
                            "isRequired": true,
                            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| where properties['managementGroupAncestorsChain'] contains '{ManagementGroup:label}'",
                            "crossComponentResources": [
                              "value::tenant"
                            ],
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 1,
                            "resourceType": "microsoft.resources/tenants",
                            "value": null
                          }
                        ],
                        "style": "above",
                        "doNotRunWhenHidden": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resources/tenants"
                      },
                      "conditionalVisibility": {
                        "parameterName": "SelectedTab",
                        "comparison": "isEqualTo",
                        "value": "RC_Compliance"
                      },
                      "name": "parameters - Scope Filter For RC_Compliance"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Build and scale your applications quickly while maintaining control\r\nTake advantage of built-in and custom policies to set guardrails in your subscriptions. Easily deploy fully governed environments throughout your organization with Azure Blueprints. And, manage costs by gaining insights into your cloud spend so that you get the most from your cloud investments.<br>\r\n- Enforce and audit your policies for any Azure service<br>\r\n- Create compliant environments using Azure Blueprints, including resources, policies, and role-access controls<br>\r\n- Ensure that you’re compliant with external regulations by using built-in compliance controls<br>\r\n- Monitor cost and encourage accountability across your entire organization"
                      },
                      "name": "text - 16"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "// Breakdown of compliance information for each assignment at subscription/MG/tenant scope\r\n// Gets aggregated compliance and policy definition information for each of the assignments in the selected scope as well as a few additional details, including: policySetDefinition or policyDefinition details for those assignments, the number of policies/groups within the policysetDefinitions listed, number of non-compliant policies within each policySetDefinition and the resource count breakdown per compliance state for those assignments.\r\n// Click the \"Run query\" command above to execute the query and see results.\r\npolicyResources\r\n| where type =~'Microsoft.Authorization/PolicyAssignments'\r\n| project policyAssignmentId = tolower(tostring(id)), policyAssignmentName = name, policyAssignmentDisplayName = tostring(properties.displayName), policyAssignmentScope = tostring(properties.scope), policyAssignmentDefinitionId = tolower(properties.policyDefinitionId), policyAssignmentNotScopes = tolower(properties.notScopes) \r\n| where policyAssignmentScope == \"{Subscription}\"\r\n| join kind=leftouter(\r\n policyResources\r\n | where type =~'Microsoft.Authorization/PolicySetDefinitions' or type =~'Microsoft.Authorization/PolicyDefinitions'\r\n | project definitionId = tolower(id), type, numberOfPolicies = array_length(properties.policyDefinitions), category = tostring(properties.metadata.category), numberOfGroups= array_length(properties.policyDefinitionGroups), mode = tostring(properties.mode)\r\n | extend isRegulatoryInitiative = iff(category =~ 'Regulatory Compliance', true, false)\r\n | extend definitionType = iff(type =~ 'Microsoft.Authorization/PolicysetDefinitions', 'initiative', 'policy')\r\n | extend isRPMode = iff(mode startswith 'Microsoft.', true, false)\r\n | project definitionId, numberOfPolicies, category, numberOfGroups, isRegulatoryInitiative, definitionType, isRPMode\r\n) on $left.policyAssignmentDefinitionId == $right.definitionId\r\n| join kind=leftouter(\r\n policyResources \r\n | where type =~ 'Microsoft.PolicyInsights/PolicyStates'\r\n | extend complianceState = tostring(properties.complianceState)\r\n | extend policyStateResourceId =id, resourceId = tostring(properties.resourceId), policyAssignmentId = tostring(properties.policyAssignmentId), policyDefinitionId = tostring(properties.policyDefinitionId), policySetDefinitionId = tostring(properties.policySetDefinitionId), policyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId), policyDefinitionAction = tostring(properties.policyDefinitionAction), policyDefinitionGroupNames = iff(isnotnull(properties.policyDefinitionGroupNames), properties.policyDefinitionGroupNames, dynamic([''])), stateWeight = toint(properties.stateWeight)\r\n | summarize max(stateWeight) by resourceId, policyAssignmentId, policySetDefinitionId\r\n | summarize resourceCounts = count() by policyAssignmentId, policySetDefinitionId, max_stateWeight\r\n| extend complianceState = case(\r\nmax_stateWeight == 300, 'noncompliant',\r\nmax_stateWeight == 200, 'compliant',\r\nmax_stateWeight == 100, 'conflict',\r\nmax_stateWeight == 50, 'exempt',\r\nmax_stateWeight == 10, 'unknown',\r\n'notapplicable')\r\n | extend pack = pack('complianceState', complianceState, 'resourceCounts', resourceCounts), numberOfNonCompliantResources = toint(iff(complianceState =~ 'NonCompliant', resourceCounts,0))\r\n | summarize numberOfNonCompliantResources = max(numberOfNonCompliantResources), details = makelist(pack) by policyAssignmentId, policySetDefinitionId\r\n | limit 5000\r\n) on $left.policyAssignmentId == $right.policyAssignmentId\r\n| sort by numberOfNonCompliantResources desc\r\n| project-away policyAssignmentId1",
                              "size": 0,
                              "title": "Resource compliance",
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resources/tenants",
                              "crossComponentResources": [
                                "value::tenant"
                              ],
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "policyAssignmentId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "policyAssignmentName",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "policyAssignmentDisplayName",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "GenericDetails",
                                      "linkIsContextBlade": true
                                    }
                                  },
                                  {
                                    "columnMatch": "policyAssignmentScope",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "policyAssignmentDefinitionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "policyAssignmentNotScopes",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "definitionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "numberOfPolicies",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "numberOfGroups",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "isRegulatoryInitiative",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "isRPMode",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "policySetDefinitionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "details",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "CellDetails",
                                      "linkLabel": "🔍 View details",
                                      "linkIsContextBlade": true
                                    }
                                  }
                                ],
                                "filter": true,
                                "sortBy": [
                                  {
                                    "itemKey": "category",
                                    "sortOrder": 2
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "policyAssignmentId",
                                    "label": "Assignment ID"
                                  },
                                  {
                                    "columnId": "policyAssignmentName",
                                    "label": "Assignment name"
                                  },
                                  {
                                    "columnId": "policyAssignmentDisplayName",
                                    "label": "Assignment display name"
                                  },
                                  {
                                    "columnId": "policyAssignmentScope",
                                    "label": "Assignment scope"
                                  },
                                  {
                                    "columnId": "policyAssignmentDefinitionId",
                                    "label": "Assignment definition ID"
                                  },
                                  {
                                    "columnId": "definitionId",
                                    "label": "Definition ID"
                                  },
                                  {
                                    "columnId": "numberOfPolicies",
                                    "label": "Number of policies"
                                  },
                                  {
                                    "columnId": "category",
                                    "label": "Category"
                                  },
                                  {
                                    "columnId": "definitionType",
                                    "label": "Type"
                                  },
                                  {
                                    "columnId": "numberOfNonCompliantResources",
                                    "label": "Non compliant resources"
                                  },
                                  {
                                    "columnId": "details",
                                    "label": "Details"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "category",
                                  "sortOrder": 2
                                }
                              ]
                            },
                            "name": "query - ResourceCompliance"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\"\r\n| summarize AggregatedValue = count() by ResourceProviderValue\r\n| order by AggregatedValue desc",
                              "size": 3,
                              "showAnalytics": true,
                              "title": "Failures by resources",
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.resources/subscriptions",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "ResourceProviderValue",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "AggregatedValue",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "ResourceProviderValue",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "AggregatedValue",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "customWidth": "33",
                            "name": "query - Failures by resources"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\" or ActivityStatusValue has \"Failed\"\r\n| summarize AggregatedValue = count() by OperationNameValue\r\n| order by AggregatedValue desc",
                              "size": 3,
                              "showAnalytics": true,
                              "title": "Failures by operations",
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.resources/subscriptions",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "ResourceProviderValue",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "AggregatedValue",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "ResourceProviderValue",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "AggregatedValue",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "customWidth": "33",
                            "name": "query - Failures by operations"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\" or ActivityStatusValue has \"Failed\"\r\n| summarize AggregatedValue = count() by CategoryValue\r\n| order by AggregatedValue desc",
                              "size": 3,
                              "showAnalytics": true,
                              "title": "Failures by category",
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.resources/subscriptions",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "ResourceProviderValue",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "AggregatedValue",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "ResourceProviderValue",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "AggregatedValue",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "customWidth": "33",
                            "name": "query - Failures by category"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\" or ActivityStatusValue has \"Failed\"\r\n| order by CategoryValue\r\n",
                              "size": 0,
                              "title": "Failure by category details",
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "showExportToExcel": true,
                              "queryType": 0,
                              "resourceType": "microsoft.resources/subscriptions",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "Authorization",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Authorization_d",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Claims",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Claims_d",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Properties_d",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "_ResourceId",
                                    "formatter": 5
                                  }
                                ],
                                "filter": true
                              }
                            },
                            "name": "query - Failure by category details"
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "group - ComplianceQueries"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Compliance"
                },
                "name": "RC_Compliance"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "parameters": [
                          {
                            "id": "4168a8b2-a522-4f0d-9575-893d70d9239d",
                            "version": "KqlParameterItem/1.0",
                            "name": "RulesCount",
                            "type": 1,
                            "description": "Count of the governance rule, when there is no rules, empty state will be shown",
                            "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\"\r\n| where tostring(properties.isDisabled) == \"false\"\r\n| count",
                            "crossComponentResources": [
                              "{Subscription}"
                            ],
                            "isHiddenWhenLocked": true,
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources"
                          }
                        ],
                        "style": "above",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      "name": "Tabs"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Security governance in Microsoft Defender for Cloud\r\n\r\n   Microsoft Defender for Cloud continuously assesses your hybrid and multi-cloud workloads and     provides you with recommendations to harden your assets and enhance your security posture. <br>Central security teams often experience challenges when driving the personnel within their organizations to implement recommendations. The organizations' security posture can suffer as a result.<br>\r\nWe're introducing a brand-new, built-in governance experience to set ownership and expected remediation timeframes to resolve recommendations.\r\n\r\nTo use this governance report, you need to create security governance rules.\r\n<br>[Learn more >](https://aka.ms/GovernanceDocumentation)\r\n"
                      },
                      "conditionalVisibility": {
                        "parameterName": "RulesCount",
                        "comparison": "isEqualTo"
                      },
                      "name": "text - 13"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 1,
                            "content": {
                              "json": "Select one or more governance rules from the list to see a list of affected recommendations",
                              "style": "info"
                            },
                            "name": "RulesGridExplination"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| summarize count() by assignmentStatus\r\n",
                              "size": 3,
                              "title": "Resource status",
                              "noDataMessage": "No unhealthy resources found",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "piechart",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "OsType",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false,
                                      "maximumFractionDigits": 2,
                                      "maximumSignificantDigits": 3
                                    }
                                  }
                                },
                                "showBorder": true
                              },
                              "graphSettings": {
                                "type": 0,
                                "topContent": {
                                  "columnMatch": "OsType",
                                  "formatter": 1
                                },
                                "centerContent": {
                                  "columnMatch": "count_",
                                  "formatter": 1,
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              },
                              "chartSettings": {
                                "seriesLabelSettings": [
                                  {
                                    "seriesName": "Ontime",
                                    "color": "blue"
                                  },
                                  {
                                    "seriesName": "Completed",
                                    "color": "green"
                                  },
                                  {
                                    "seriesName": "Unassigned",
                                    "color": "orange"
                                  },
                                  {
                                    "seriesName": "Overdue",
                                    "color": "redBright"
                                  }
                                ]
                              }
                            },
                            "customWidth": "20",
                            "name": "statusePerAssessment"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\"\r\n| where tostring(properties.isDisabled) == \"false\"\r\n| extend ruleName = todynamic(name)\r\n| extend ownerType = iif(tostring(properties.ownerSource.type) == \"Manually\", \"Email\", \"ByTag\")\r\n| extend description = tostring(properties.description)\r\n| extend displayName = tostring(properties.displayName)\r\n| extend governanceEmailNotification = todynamic(properties.governanceEmailNotification)\r\n| extend isGracePeriod = todynamic(properties.isGracePeriod)\r\n| extend remediationTimeframe = todynamic(properties.remediationTimeframe)\r\n| extend Days = tolong(totimespan(remediationTimeframe)/1d)\r\n| extend Days = iff(Days > 0, iff(Days == 1, \"1 day\", strcat(Days,\" days\")), \"\")\r\n| extend sourceResourceType = todynamic(properties.sourceResourceType)\r\n| extend conditionSets = todynamic(properties.conditionSets)\r\n| extend rulePriority = todynamic(properties.rulePriority)\r\n| extend ownerSource = todynamic(properties.ownerSource)\r\n| extend isDisabled = todynamic(properties.isDisabled)\r\n| extend ruleType = todynamic(properties.ruleType)\r\n| extend  RuleConditionSet = tostring(properties.conditionSets), property =  properties.conditionSets[0].conditions[0].property, operator = properties.conditionSets[0].conditions[0].operator\r\n| project Subscription = tostring(subscriptionId), [\"Display name\"] = tostring(properties.displayName), Priority = toint(properties.rulePriority), [\"Remediation timeframe\"] = Days, [\"Owner type\"] = ownerType, Owner = tostring(properties.ownerSource.value), [\"Grace period enabled\"] = tostring(properties.isGracePeriod), Rule = id, properties, RuleConditionSet\r\n| sort by Subscription, Priority asc",
                              "size": 0,
                              "title": "Governance rules",
                              "noDataMessage": "No Rules found",
                              "exportMultipleValues": true,
                              "exportedParameters": [
                                {
                                  "fieldName": "Rule",
                                  "parameterName": "Rule",
                                  "parameterType": 1,
                                  "quote": ""
                                },
                                {
                                  "fieldName": "RuleConditionSet",
                                  "parameterName": "RuleConditionSet",
                                  "parameterType": 1,
                                  "quote": ""
                                },
                                {
                                  "fieldName": "Owner",
                                  "parameterName": "Owner",
                                  "parameterType": 1,
                                  "quote": ""
                                }
                              ],
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "Subscription",
                                    "formatter": 15,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Display name",
                                    "formatter": 1,
                                    "formatOptions": {
                                      "bladeOpenContext": {
                                        "bladeName": "CreateGovernanceRuleContextBlade",
                                        "extensionName": "Microsoft_Azure_Security",
                                        "bladeParameters": [
                                          {
                                            "name": "",
                                            "source": "column",
                                            "value": "properties"
                                          },
                                          {
                                            "name": "subscriptionId",
                                            "source": "column",
                                            "value": "subscriptionId"
                                          },
                                          {
                                            "name": "governanceRuleToEdit",
                                            "source": "column",
                                            "value": "properties"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "Priority",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "Remediation timeframe",
                                    "formatter": 0,
                                    "tooltipFormat": {
                                      "tooltip": "DD.HH.MM.SS"
                                    }
                                  },
                                  {
                                    "columnMatch": "Grace period enabled",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "icons",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "true",
                                          "representation": "success",
                                          "text": ""
                                        },
                                        {
                                          "operator": "==",
                                          "thresholdValue": "false",
                                          "representation": "4",
                                          "text": ""
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "success",
                                          "text": "{0}{1}"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "columnMatch": "Rule",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "name",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "DisplayName",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "ownerDetails",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "isGracePeriod",
                                    "formatter": 1
                                  },
                                  {
                                    "columnMatch": "remediationTimeframe",
                                    "formatter": 1
                                  }
                                ],
                                "rowLimit": 1000,
                                "filter": true,
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_link_Subscription_0",
                                    "sortOrder": 2
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "Owner",
                                    "label": "Owner details"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "$gen_link_Subscription_0",
                                  "sortOrder": 2
                                }
                              ]
                            },
                            "customWidth": "80",
                            "conditionalVisibility": {
                              "parameterName": "Subscription",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "Rules",
                            "styleSettings": {
                              "maxWidth": "100"
                            }
                          }
                        ],
                        "exportParameters": true
                      },
                      "customWidth": "100",
                      "conditionalVisibility": {
                        "parameterName": "RulesCount",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "subscriptionOverView"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "---"
                      },
                      "conditionalVisibility": {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "resourceView"
                      },
                      "name": "LineSeparator1"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "💡 Selected filter for **RuleConditionSet:** {RuleConditionSet}\r\n💡 Selected filter for **Rule:** {Rule}\r\n💡 Selected filter for **Owner:** {Owner}\r\n",
                        "style": "{selectedTab}"
                      },
                      "conditionalVisibility": {
                        "parameterName": "parameter1",
                        "comparison": "isEqualTo",
                        "value": "1"
                      },
                      "name": "ResourceFilter"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": " \r\n---"
                      },
                      "conditionalVisibility": {
                        "parameterName": "selectedTab",
                        "comparison": "isEqualTo",
                        "value": "resourceView"
                      },
                      "name": "LineSeparator2"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "Select a recommendation from the list to see a list of affected resources",
                        "style": "info"
                      },
                      "conditionalVisibilities": [
                        {
                          "parameterName": "Rule",
                          "comparison": "isNotEqualTo"
                        },
                        {
                          "parameterName": "DisplayName",
                          "comparison": "isEqualTo"
                        }
                      ],
                      "name": "assessmentsExplaination"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false\r\n| extend RuleConditionSet = '{RuleConditionSet}'\r\n| where RuleConditionSet contains name or RuleConditionSet contains properties.metadata.severity\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| summarize count() by assignmentStatus",
                        "size": 3,
                        "title": "Status per rule",
                        "noDataMessage": "No unhealthy resources found",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "visualization": "piechart",
                        "gridSettings": {
                          "rowLimit": 10000
                        },
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "OsType",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "count_",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false,
                                "maximumFractionDigits": 2,
                                "maximumSignificantDigits": 3
                              }
                            }
                          },
                          "showBorder": true
                        },
                        "graphSettings": {
                          "type": 0,
                          "topContent": {
                            "columnMatch": "OsType",
                            "formatter": 1
                          },
                          "centerContent": {
                            "columnMatch": "count_",
                            "formatter": 1,
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        },
                        "chartSettings": {
                          "seriesLabelSettings": [
                            {
                              "seriesName": "Ontime",
                              "color": "blue"
                            },
                            {
                              "seriesName": "Completed",
                              "color": "green"
                            },
                            {
                              "seriesName": "Unassigned",
                              "color": "orange"
                            },
                            {
                              "seriesName": "Overdue",
                              "color": "redBright"
                            }
                          ]
                        }
                      },
                      "customWidth": "20",
                      "conditionalVisibility": {
                        "parameterName": "Rule",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "statusPerRule"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false\r\n| extend RuleConditionSet = '{RuleConditionSet}'\r\n| where RuleConditionSet contains name or RuleConditionSet contains properties.metadata.severity\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| where hasAssignment == true\r\n| extend owner = tostring(governanceassignmentsProperties.owner)\r\n| extend owner = iif(isnull(owner) == false and isempty(owner) == false, owner, \"Unspecified\")\r\n| extend assignmentStatus = iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\")\r\n| summarize Ontime = countif(assignmentStatus == \"Ontime\"), Overdue = countif(assignmentStatus == \"Overdue\") by selectedOwner = owner\r\n| sort by Overdue desc",
                        "size": 0,
                        "title": "Status per owner",
                        "exportMultipleValues": true,
                        "exportedParameters": [
                          {
                            "fieldName": "selectedOwner",
                            "parameterName": "selectedOwner",
                            "quote": ""
                          }
                        ],
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "Ontime",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "!=",
                                    "thresholdValue": "0",
                                    "representation": "info",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            {
                              "columnMatch": "Overdue",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "!=",
                                    "thresholdValue": "0",
                                    "representation": "3",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "selectedOwner",
                              "label": "Owner"
                            }
                          ]
                        }
                      },
                      "customWidth": "30",
                      "conditionalVisibilities": [
                        {
                          "parameterName": "Owner",
                          "comparison": "isNotEqualTo"
                        },
                        {
                          "parameterName": "RuleConditionSet",
                          "comparison": "isNotEqualTo"
                        }
                      ],
                      "name": "Owner status"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false and isnull(DisplayName) == false\r\n| extend RuleConditionSet = '{RuleConditionSet}'\r\n| where RuleConditionSet contains name or RuleConditionSet contains properties.metadata.severity\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| extend Status = assignmentStatus\r\n| summarize Completed = countif(Status == \"Completed\"), Ontime = countif(Status == \"Ontime\"), Overdue = countif(Status == \"Overdue\"),Unassigned = countif(Status == \"Unassigned\") by DisplayName = tostring(properties.displayName)\r\n| sort by Overdue desc",
                        "size": 0,
                        "title": "Recommendations",
                        "noDataMessage": "No Assessments found",
                        "exportedParameters": [
                          {
                            "fieldName": "id",
                            "parameterName": "id",
                            "parameterType": 1
                          },
                          {
                            "fieldName": "DisplayName",
                            "parameterName": "DisplayName",
                            "parameterType": 1
                          }
                        ],
                        "showExportToExcel": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "DisplayName",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "75ch"
                              }
                            },
                            {
                              "columnMatch": "Completed",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "!=",
                                    "thresholdValue": "0",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": "{0}{1}"
                                  }
                                ],
                                "customColumnWidthSetting": "15ch"
                              }
                            },
                            {
                              "columnMatch": "Ontime",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "!=",
                                    "thresholdValue": "0",
                                    "representation": "1",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "representation": "Unknown",
                                    "text": "{0}{1}"
                                  }
                                ],
                                "customColumnWidthSetting": "15ch"
                              }
                            },
                            {
                              "columnMatch": "Overdue",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "!=",
                                    "thresholdValue": "0",
                                    "representation": "3",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": "{0}{1}"
                                  }
                                ],
                                "customColumnWidthSetting": "15ch"
                              }
                            },
                            {
                              "columnMatch": "Unassigned",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "!=",
                                    "thresholdValue": "0",
                                    "representation": "2",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": "0"
                                  }
                                ],
                                "customColumnWidthSetting": "15ch"
                              }
                            },
                            {
                              "columnMatch": "Status",
                              "formatter": 1
                            },
                            {
                              "columnMatch": "id",
                              "formatter": 1,
                              "formatOptions": {
                                "customColumnWidthSetting": "90ch"
                              }
                            },
                            {
                              "columnMatch": "owner",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "40ch"
                              }
                            },
                            {
                              "columnMatch": "DueDate",
                              "formatter": 6
                            },
                            {
                              "columnMatch": "Severity",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "Resource",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": "OpenBlade",
                                "linkIsContextBlade": false,
                                "showIcon": true,
                                "bladeOpenContext": {
                                  "bladeName": "GenericResourceHealthDetailsBlade",
                                  "extensionName": "Microsoft_Azure_Security",
                                  "bladeParameters": [
                                    {
                                      "name": "resourceId",
                                      "source": "cell",
                                      "value": "%2Fsubscriptions%2F3b5bc982-20bc-4b59-b1ca-f8488bb86736%2FresourceGroups%2Fdemo%2Fproviders%2FMicrosoft.HybridCompute%2Fmachines%2FW2019"
                                    }
                                  ]
                                },
                                "customColumnWidthSetting": "20ch"
                              }
                            },
                            {
                              "columnMatch": "ResourceGroup",
                              "formatter": 14,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true,
                                "customColumnWidthSetting": "25ch"
                              }
                            },
                            {
                              "columnMatch": "Source",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "15ch"
                              }
                            },
                            {
                              "columnMatch": "OperatingSystem",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "25ch"
                              }
                            },
                            {
                              "columnMatch": "Category",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "20ch"
                              }
                            },
                            {
                              "columnMatch": "Remediation",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "RemediationSteps",
                              "formatter": 11,
                              "formatOptions": {
                                "linkColumn": "Remediation",
                                "linkTarget": "Url"
                              },
                              "tooltipFormat": {
                                "tooltip": "Click to view remediation steps"
                              }
                            },
                            {
                              "columnMatch": "Code",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Healthy",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Unhealthy",
                                    "representation": "3",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            {
                              "columnMatch": "resourceGroup",
                              "formatter": 14,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            }
                          ],
                          "rowLimit": 10000,
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "$gen_thresholds_Ontime_2",
                              "sortOrder": 2
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "DisplayName",
                              "label": "Display name"
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "$gen_thresholds_Ontime_2",
                            "sortOrder": 2
                          }
                        ]
                      },
                      "customWidth": "50",
                      "conditionalVisibility": {
                        "parameterName": "Rule",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "Assessmetns"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 1,
                            "content": {
                              "json": ""
                            },
                            "customWidth": "50",
                            "conditionalVisibility": {
                              "parameterName": "RuleConditionSet",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "empty text"
                          },
                          {
                            "type": 12,
                            "content": {
                              "version": "NotebookGroup/1.0",
                              "groupType": "editable",
                              "items": [
                                {
                                  "type": 3,
                                  "content": {
                                    "version": "KqlItem/1.0",
                                    "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend displayNameFilter = tostring(\"{DisplayName}\")\r\n| extend selectedOwner = '{selectedOwner}'\r\n| where displayNameFilter == tostring(properties.displayName)\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, owner = properties.owner,governanceassignmentsProperties = todynamic(properties), remediationDueDate, isGrace = properties.isGracePeriod) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n                                          | extend resourceId = iff(source =~ \"azure\", properties.resourceDetails.Id, iff(source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id, iff(source =~ \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id, iff(source =~ 'aws', properties.resourceDetails.AzureResourceId, iff(source =~ 'gcp', properties.resourceDetails.AzureResourceId, properties.resourceDetails.Id)))))\r\n| extend owner = tostring(governanceassignmentsProperties.owner)\r\n| extend owner = iif(isnull(owner) == false and isempty(owner) == false and hasAssignment == true , owner, iif(hasAssignment == false, owner, \"Unspecified\"))\r\n| where '{selectedOwner}' == '' or (selectedOwner contains owner and hasAssignment == true)\r\n| project [\"Resource\"] = resourceId, Subscription = subscriptionId ,Status = assignmentStatus, Owner = owner, [\"Due date\"] = remediationDueDate, [\"Grace period enabled\"] = isGrace\r\n| sort by Status desc",
                                    "size": 0,
                                    "title": "List of resources for: {DisplayName}",
                                    "noDataMessage": "No Assessments found",
                                    "exportFieldName": "id",
                                    "exportParameterName": "id",
                                    "showExportToExcel": true,
                                    "queryType": 1,
                                    "resourceType": "microsoft.resourcegraph/resources",
                                    "crossComponentResources": [
                                      "{Subscription}"
                                    ],
                                    "gridSettings": {
                                      "formatters": [
                                        {
                                          "columnMatch": "Resource id",
                                          "formatter": 13,
                                          "formatOptions": {
                                            "linkTarget": null,
                                            "showIcon": true,
                                            "customColumnWidthSetting": "90ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Subscription",
                                          "formatter": 15,
                                          "formatOptions": {
                                            "linkTarget": "Resource",
                                            "showIcon": true
                                          }
                                        },
                                        {
                                          "columnMatch": "Status",
                                          "formatter": 18,
                                          "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                              {
                                                "operator": "==",
                                                "thresholdValue": "Completed",
                                                "representation": "success",
                                                "text": "{0}{1}"
                                              },
                                              {
                                                "operator": "==",
                                                "thresholdValue": "Unassigned",
                                                "representation": "2",
                                                "text": "{0}{1}"
                                              },
                                              {
                                                "operator": "==",
                                                "thresholdValue": "Overdue",
                                                "representation": "3",
                                                "text": "{0}{1}"
                                              },
                                              {
                                                "operator": "==",
                                                "thresholdValue": "Ontime",
                                                "representation": "1",
                                                "text": "{0}{1}"
                                              },
                                              {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": null,
                                                "text": "{0}{1}"
                                              }
                                            ]
                                          },
                                          "numberFormat": {
                                            "unit": 0,
                                            "options": {
                                              "style": "decimal"
                                            }
                                          }
                                        },
                                        {
                                          "columnMatch": "Grace period enabled",
                                          "formatter": 18,
                                          "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                              {
                                                "operator": "==",
                                                "thresholdValue": "true",
                                                "representation": "success",
                                                "text": ""
                                              },
                                              {
                                                "operator": "==",
                                                "thresholdValue": "false",
                                                "representation": "4",
                                                "text": ""
                                              },
                                              {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "Blank",
                                                "text": "{0}{1}"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "columnMatch": "owner",
                                          "formatter": 0,
                                          "formatOptions": {
                                            "customColumnWidthSetting": "40ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "DueDate",
                                          "formatter": 6
                                        },
                                        {
                                          "columnMatch": "id",
                                          "formatter": 0,
                                          "formatOptions": {
                                            "customColumnWidthSetting": "90ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "DisplayName",
                                          "formatter": 0,
                                          "formatOptions": {
                                            "customColumnWidthSetting": "100ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Completed",
                                          "formatter": 4,
                                          "formatOptions": {
                                            "palette": "green",
                                            "customColumnWidthSetting": "15ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Ontime",
                                          "formatter": 4,
                                          "formatOptions": {
                                            "palette": "blue",
                                            "customColumnWidthSetting": "15ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Overdue",
                                          "formatter": 4,
                                          "formatOptions": {
                                            "palette": "redBright",
                                            "customColumnWidthSetting": "15ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Unassigned",
                                          "formatter": 4,
                                          "formatOptions": {
                                            "palette": "orange",
                                            "customColumnWidthSetting": "15ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Severity",
                                          "formatter": 5
                                        },
                                        {
                                          "columnMatch": "Resource",
                                          "formatter": 13,
                                          "formatOptions": {
                                            "linkTarget": "OpenBlade",
                                            "linkIsContextBlade": false,
                                            "showIcon": true,
                                            "bladeOpenContext": {
                                              "bladeName": "GenericResourceHealthDetailsBlade",
                                              "extensionName": "Microsoft_Azure_Security",
                                              "bladeParameters": [
                                                {
                                                  "name": "resourceId",
                                                  "source": "cell",
                                                  "value": "%2Fsubscriptions%2F3b5bc982-20bc-4b59-b1ca-f8488bb86736%2FresourceGroups%2Fdemo%2Fproviders%2FMicrosoft.HybridCompute%2Fmachines%2FW2019"
                                                }
                                              ]
                                            },
                                            "customColumnWidthSetting": "20ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "ResourceGroup",
                                          "formatter": 14,
                                          "formatOptions": {
                                            "linkTarget": null,
                                            "showIcon": true,
                                            "customColumnWidthSetting": "25ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Source",
                                          "formatter": 0,
                                          "formatOptions": {
                                            "customColumnWidthSetting": "15ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "OperatingSystem",
                                          "formatter": 0,
                                          "formatOptions": {
                                            "customColumnWidthSetting": "25ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Category",
                                          "formatter": 0,
                                          "formatOptions": {
                                            "customColumnWidthSetting": "20ch"
                                          }
                                        },
                                        {
                                          "columnMatch": "Remediation",
                                          "formatter": 5
                                        },
                                        {
                                          "columnMatch": "RemediationSteps",
                                          "formatter": 11,
                                          "formatOptions": {
                                            "linkColumn": "Remediation",
                                            "linkTarget": "Url"
                                          },
                                          "tooltipFormat": {
                                            "tooltip": "Click to view remediation steps"
                                          }
                                        },
                                        {
                                          "columnMatch": "Code",
                                          "formatter": 18,
                                          "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                              {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{0}{1}"
                                              },
                                              {
                                                "operator": "==",
                                                "thresholdValue": "Unhealthy",
                                                "representation": "3",
                                                "text": "{0}{1}"
                                              },
                                              {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "success",
                                                "text": "{0}{1}"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "columnMatch": "resourceGroup",
                                          "formatter": 14,
                                          "formatOptions": {
                                            "linkTarget": null,
                                            "showIcon": true
                                          }
                                        }
                                      ],
                                      "rowLimit": 10000,
                                      "filter": true
                                    },
                                    "sortBy": []
                                  },
                                  "conditionalVisibility": {
                                    "parameterName": "DisplayName",
                                    "comparison": "isNotEqualTo"
                                  },
                                  "name": "Assignments"
                                }
                              ]
                            },
                            "name": "assessmentsWithExplaination"
                          },
                          {
                            "type": 1,
                            "content": {
                              "json": "💡 Selected filter for **DisplayName:** {DisplayName}\r\n💡 Selected filter for **selectedOwner:** {selectedOwner}\r\n",
                              "style": "{selectedTab}"
                            },
                            "conditionalVisibility": {
                              "parameterName": "parameter1",
                              "comparison": "isEqualTo",
                              "value": "1"
                            },
                            "name": "ResourceFilter - Copy"
                          }
                        ]
                      },
                      "name": "assessmentsGrid"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Governance"
                },
                "name": "RC_Governance"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "cc98cfec-0182-4887-854e-536e9f3857da",
                            "version": "KqlParameterItem/1.0",
                            "name": "Subscription",
                            "type": 6,
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "includeAll": true,
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "value": null
                          },
                          {
                            "id": "1c3411d9-e319-4d74-8e97-61e2f4c56a56",
                            "version": "KqlParameterItem/1.0",
                            "name": "Location",
                            "type": 2,
                            "isRequired": true,
                            "query": "resources\r\n| summarize by location\r\n| where location != \"global\"",
                            "crossComponentResources": [
                              "{Subscription}"
                            ],
                            "typeSettings": {
                              "additionalResourceOptions": [],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources",
                            "value": "westeurope"
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      "name": "parameters - 0"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "## Azure subscription and service limits, quotas, and constraints<br>\r\nTo know more about Azure service limits & quotas, see [Azure subscription and service limits, quotas, and constraints](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits?toc=%2Fazure%2Fnetworking%2Ftoc.json#networking-limits)."
                      },
                      "name": "text - Limits"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "template",
                        "loadFromTemplateId": "community-Workbooks/Common/noSubscriptions",
                        "items": []
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isEqualTo",
                        "value": ""
                      },
                      "name": "No Subscriptions group - RC_Quota"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{Subscription:id}/providers/microsoft.compute/locations/{Location}/usages?api-version=2022-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"currentValue\",\"columnid\":\"Used\",\"columnType\":\"long\"},{\"path\":\"limit\",\"columnid\":\"Limit\",\"columnType\":\"long\"},{\"path\":\"name.localizedValue\",\"columnid\":\"Resource\"}]}}]}",
                        "size": 0,
                        "title": "Compute resource limits",
                        "showRefreshButton": true,
                        "showExportToExcel": true,
                        "queryType": 12,
                        "gridSettings": {
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "Limit",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "Limit",
                            "sortOrder": 1
                          }
                        ]
                      },
                      "customWidth": "50",
                      "conditionalVisibilities": [
                        {
                          "parameterName": "Subscription",
                          "comparison": "isNotEqualTo",
                          "value": ""
                        },
                        {
                          "parameterName": "Location",
                          "comparison": "isNotEqualTo"
                        }
                      ],
                      "name": "query - ComputeLimits"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{Subscription:id}/providers/microsoft.network/locations/{Location}/usages?api-version=2022-01-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"currentValue\",\"columnid\":\"Used\",\"columnType\":\"long\"},{\"path\":\"limit\",\"columnid\":\"Limit\",\"columnType\":\"long\"},{\"path\":\"name.localizedValue\",\"columnid\":\"Resource\"}]}}]}",
                        "size": 0,
                        "title": "Network resource limits",
                        "showRefreshButton": true,
                        "showExportToExcel": true,
                        "queryType": 12,
                        "gridSettings": {
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "Limit",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "Limit",
                            "sortOrder": 1
                          }
                        ]
                      },
                      "customWidth": "50",
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "query - NetworkLimits"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{Subscription:id}/providers/microsoft.storage/locations/{Location}/usages?api-version=2021-09-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"currentValue\",\"columnid\":\"Used\",\"columnType\":\"long\"},{\"path\":\"limit\",\"columnid\":\"Limit\",\"columnType\":\"long\"},{\"path\":\"name.localizedValue\",\"columnid\":\"Resource\"}]}}]}",
                        "size": 4,
                        "title": "Storage account limits",
                        "showRefreshButton": true,
                        "showExportToExcel": true,
                        "queryType": 12,
                        "gridSettings": {
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "Limit",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "Limit",
                            "sortOrder": 1
                          }
                        ]
                      },
                      "customWidth": "100",
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "query - StorageLimits"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_Quota"
                },
                "name": "Usage + limits"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "title": "Automation",
                        "expandable": true,
                        "expanded": true,
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| where type has 'microsoft.automation'\r\n\tor type has 'microsoft.logic'\r\n\tor type has 'microsoft.web/customapis'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\n\ttype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\n\ttype =~ 'microsoft.logic/workflows','LogicApps',\r\n\ttype =~ 'microsoft.automation/automationaccounts/runbooks', 'Automation Runbooks',\r\n    type =~ 'microsoft.automation/automationaccounts/configurations', 'Automation Configurations',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                              "size": 3,
                              "title": "Count of all resource types",
                              "showRefreshButton": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                }
                              }
                            },
                            "name": "Count of all resource types"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| where type has 'microsoft.automation'\r\n\t or type has 'microsoft.logic'\r\n\t or type has 'microsoft.web/customapis'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\n\ttype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\n\ttype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\n\ttype =~ 'microsoft.logic/workflows','LogicApps',\r\n\ttype =~ 'microsoft.automation/automationaccounts/runbooks', 'Automation Runbooks',\r\n\ttype =~ 'microsoft.automation/automationaccounts/configurations', 'Automation Configurations',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n| extend LogicAppTrigger = iif(type =~ 'LogicApps', case(\r\n\tLogicAppTrigger has 'manual', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger has 'Recurrence', tostring(LogicAppTrigger.Recurrence.type),\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)), LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ 'Automation Runbooks', properties.state, \r\n\ttype =~ 'LogicApps', properties.state,\r\n\ttype =~ 'Automation Accounts', properties.state,\r\n\ttype =~ 'Automation Configurations', properties.state,\r\n\t' ')\r\n| extend CreatedDate = case(\r\n\ttype =~ 'Automation Runbooks', properties.creationTime, \r\n\ttype =~ 'LogicApps', properties.createdTime,\r\n\ttype =~ 'Automation Accounts', properties.creationTime,\r\n\ttype =~ 'Automation Configurations', properties.creationTime,\r\n\t' ')\r\n| extend LastModified = case(\r\n\ttype =~ 'Automation Runbooks', properties.lastModifiedTime, \r\n\ttype =~ 'LogicApps', properties.changedTime,\r\n\ttype =~ 'Automation Accounts', properties.lastModifiedTime,\r\n\ttype =~ 'Automation Configurations', properties.lastModifiedTime,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger, State, Details",
                              "size": 0,
                              "title": "Details",
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Details",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "CellDetails",
                                      "linkLabel": "🔍 View details",
                                      "linkIsContextBlade": true
                                    }
                                  }
                                ],
                                "rowLimit": 1000,
                                "filter": true,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              },
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": true,
                                "sortCriteriaField": "type",
                                "sortOrderField": 1
                              }
                            },
                            "name": "query - PaaS - Automation Detailed"
                          }
                        ]
                      },
                      "name": "Group - Automation",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "title": "App services",
                        "expandable": true,
                        "expanded": true,
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| where type has 'microsoft.web'\r\n\t or type =~ 'microsoft.apimanagement/service'\r\n\t or type =~ 'microsoft.network/frontdoors'\r\n\t or type =~ 'microsoft.network/applicationgateways'\r\n\t or type =~ 'microsoft.appconfiguration/configurationstores'\r\n| extend type = case(\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype =~ 'microsoft.network/frontdoors', 'Front Door',\r\n\ttype =~ 'microsoft.apimanagement/service', 'API Management',\r\n\ttype =~ 'microsoft.web/certificates', 'App Certificates',\r\n\ttype =~ 'microsoft.appconfiguration/configurationstores', 'App Config Stores',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                              "size": 3,
                              "title": "Count of all resource types",
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  }
                                ],
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              },
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": false,
                                "sortCriteriaField": "type",
                                "sortOrderField": 1
                              }
                            },
                            "name": "query - PaaS - Apps Overview"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources\r\n| where type has 'microsoft.web'\r\n\t or type =~ 'microsoft.apimanagement/service'\r\n\t or type =~ 'microsoft.network/frontdoors'\r\n\t or type =~ 'microsoft.network/applicationgateways'\r\n\t or type =~ 'microsoft.appconfiguration/configurationstores'\r\n| extend type = case(\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype =~ 'microsoft.network/frontdoors', 'Front Door',\r\n\ttype =~ 'microsoft.apimanagement/service', 'API Management',\r\n\ttype =~ 'microsoft.web/certificates', 'App Certificates',\r\n\ttype =~ 'microsoft.appconfiguration/configurationstores', 'App Config Stores',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ 'App Gateways', properties.sku.name, \r\n\ttype =~ 'Azure Functions', properties.sku,\r\n\ttype =~ 'API Management', sku.name,\r\n\ttype =~ 'App Service Plans', sku.name,\r\n\ttype =~ 'App Services', properties.sku,\r\n\ttype =~ 'App Config Stores', sku.name,\r\n\t' ')\r\n| extend State = case(\r\n\ttype =~ 'App Config Stores', properties.provisioningState,\r\n\ttype =~ 'App Service Plans', properties.status,\r\n\ttype =~ 'Azure Functions', properties.state,\r\n\ttype =~ 'App Services', properties.state,\r\n\ttype =~ 'API Management', properties.provisioningState,\r\n\ttype =~ 'App Gateways', properties.provisioningState,\r\n\ttype =~ 'Front Door', properties.provisioningState,\r\n\t' ')\r\n| mv-expand publicIpId = properties.frontendIPConfigurations\r\n| mv-expand publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t| where type =~ 'microsoft.network/publicipaddresses'\r\n  \t\t| project publicIpId = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n| extend PublicIP = case(\r\n\ttype =~ 'API Management', properties.publicIPAddresses,\r\n\ttype =~ 'App Gateways', publicIpAddress,\r\n    type =~ 'App Services', properties.inboundIpAddress,\r\n    type =~ 'Azure Functions', properties.inboundIpAddress,\r\n\t' ')\r\n| extend Instances = case(\r\n\ttype =~ 'API Management', sku.capacity,\r\n    type =~ 'App Services', properties.siteConfig.numberOfWorkers,\r\n    type =~ 'Azure Functions', properties.siteConfig.numberOfWorkers,\r\n    type =~ 'App Service Plans', properties.currentNumberOfWorkers,\r\n\t' ')\r\n| extend ServicePlan = case(\r\n    type =~ 'App Services', properties.serverFarmId,\r\n    type =~ 'Azure Functions', properties.serverFarmId,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId, Sku, State, PublicIP, Instances, ServicePlan, Details",
                              "size": 0,
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "Details",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "CellDetails",
                                      "linkLabel": "🔍 View details",
                                      "linkIsContextBlade": true
                                    }
                                  }
                                ],
                                "rowLimit": 1000,
                                "filter": true,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              },
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": true,
                                "sortCriteriaField": "type",
                                "sortOrderField": 1
                              }
                            },
                            "name": "query - PaaS - Apps Detailed"
                          }
                        ]
                      },
                      "name": "Group - App Services",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "title": "Data",
                        "expandable": true,
                        "expanded": true,
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "resources \r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n\tor type =~ 'microsoft.sql/servers/databases'\r\n\tor type =~ 'microsoft.dbformysql/servers'\r\n\tor type =~ 'microsoft.sql/servers'\r\n    or type =~ 'Microsoft.DBforPostgreSQL/servers'\r\n    or type =~ 'Microsoft.DBforMariaDB/servers'\r\n    or type =~ 'microsoft.dbforpostgresql/flexibleservers'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.documentdb/databaseaccounts', 'CosmosDB',\r\n\ttype =~ 'microsoft.sql/servers/databases', 'SQL DBs',\r\n\ttype =~ 'microsoft.dbformysql/servers', 'MySQL Servers',\r\n\ttype =~ 'microsoft.sql/servers', 'SQL Servers',\r\n    type =~ 'Microsoft.DBforPostgreSQL/servers', 'PostgreSQL Servers',\r\n    type =~ 'microsoft.dbforpostgresql/flexibleservers', 'PostgreSQL Flexi Servers',\r\n    type =~ 'Microsoft.DBforMariaDB/servers', 'MariaDB Servers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                              "size": 3,
                              "title": "Count of all resource types",
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "visualization": "tiles",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": null,
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  }
                                ],
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              },
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": true,
                                "sortCriteriaField": "type",
                                "sortOrderField": 1
                              }
                            },
                            "name": "query - PaaS - Data Overview"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "// data\r\n// Click the \"Run query\" command above to execute the query and see results.\r\nresources \r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n\tor type =~ 'microsoft.sql/servers/databases'\r\n\tor type =~ 'microsoft.dbformysql/servers'\r\n\tor type =~ 'microsoft.sql/servers'\r\n    or type =~ 'Microsoft.DBforPostgreSQL/servers'\r\n    or type =~ 'Microsoft.DBforMariaDB/servers'\r\n    or type =~ 'microsoft.dbforpostgresql/flexibleservers'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.documentdb/databaseaccounts', 'CosmosDB',\r\n\ttype =~ 'microsoft.sql/servers/databases', 'SQL DBs',\r\n\ttype =~ 'microsoft.dbformysql/servers', 'MySQL Servers',\r\n\ttype =~ 'microsoft.sql/servers', 'SQL Servers',\r\n    type =~ 'Microsoft.DBforPostgreSQL/servers', 'PostgreSQL Servers',\r\n    type =~ 'microsoft.dbforpostgresql/flexibleservers', 'PostgreSQL Flexi Servers',\r\n    type =~ 'Microsoft.DBforMariaDB/servers', 'MariaDB Servers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype =~ 'CosmosDB', properties.databaseAccountOfferType,\r\n\ttype =~ 'SQL DBs', sku.name,\r\n\ttype =~ 'MySQL Servers', sku.name,\r\n    type =~ 'PostgreSQL Servers', sku.name,\r\n    type =~ 'PostgreSQL Flexi Servers', sku.name,\r\n    type =~ 'MariaDB Servers', sku.name,\r\n\t' ')\r\n| extend Status = case(\r\n\ttype =~ 'CosmosDB', properties.provisioningState,\r\n\ttype =~ 'SQL DBs', properties.status,\r\n    type =~ 'SQL Servers', properties.state,\r\n\ttype =~ 'MySQL Servers', properties.userVisibleState,\r\n    type =~ 'PostgreSQL Servers', properties.state,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.state,\r\n    type =~ 'MariaDB Servers', properties.userVisibleState,\r\n\t' ')\r\n| extend Endpoint = case(\r\n\ttype =~ 'MySQL Servers', properties.fullyQualifiedDomainName,\r\n\ttype =~ 'SQL Servers', properties.fullyQualifiedDomainName,\r\n\ttype =~ 'CosmosDB', properties.documentEndpoint,\r\n    type =~ 'PostgreSQL Servers', properties.fullyQualifiedDomainName,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.fullyQualifiedDomainName,\r\n    type =~ 'MariaDB Servers', properties.fullyQualifiedDomainName,\r\n\t' ')\r\n| extend PublicNetworkAccess = case(\r\n\ttype =~ 'MySQL Servers', properties.publicNetworkAccess,\r\n\ttype =~ 'SQL Servers', properties.publicNetworkAccess,\r\n    type =~ 'PostgreSQL Servers', properties.publicNetworkAccess,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.publicNetworkAccess,\r\n    type =~ 'MariaDB Servers', properties.publicNetworkAccess,\r\n\t' ')\r\n| extend Version = case(\r\n\ttype =~ 'MySQL Servers', properties.version,\r\n\ttype =~ 'SQL Servers', properties.version,\r\n    type =~ 'PostgreSQL Servers', properties.version,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.version,\r\n    type =~ 'MariaDB Servers', properties.version,\r\n\t' ')\r\n| extend maxSizeGB = todouble(case(\r\n\ttype =~ 'SQL DBs', properties.maxSizeBytes,\r\n\ttype =~ 'MySQL Servers', properties.storageProfile.storageMB,\r\n    type =~ 'PostgreSQL Servers', properties.storageProfile.storageMB,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.storageProfile.storageMB,\r\n    type =~ 'MariaDB Servers', properties.storageProfile.storageMB,\r\n\t' '))\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB /1000 /1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, subscriptionId, type, Sku, Status, Endpoint, Version, PublicNetworkAccess, maxSizeGB, Details\r\n\r\n",
                              "size": 0,
                              "title": "Details",
                              "noDataMessage": "No resources found",
                              "showRefreshButton": true,
                              "showExportToExcel": true,
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "$gen_group",
                                    "formatter": 13,
                                    "formatOptions": {
                                      "linkTarget": "Resource",
                                      "showIcon": true
                                    }
                                  },
                                  {
                                    "columnMatch": "Resource",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "subscriptionId",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "maxSizeGB",
                                    "formatter": 0,
                                    "numberFormat": {
                                      "unit": 4,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "Details",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "CellDetails",
                                      "linkLabel": "🔍 View details",
                                      "linkIsContextBlade": true
                                    }
                                  }
                                ],
                                "rowLimit": 1000,
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": [
                                    "subscriptionId"
                                  ],
                                  "expandTopLevel": true,
                                  "finalBy": "Resource"
                                }
                              },
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "type",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "count_",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": true,
                                "sortCriteriaField": "type",
                                "sortOrderField": 1
                              }
                            },
                            "name": "query - PaaS - Data Detailed"
                          }
                        ]
                      },
                      "name": "Data",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "RC_PaaS"
                  },
                  {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "RC_PaaS"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "template",
                  "loadFromTemplateId": "community-Workbooks/Azure Advisor/AzureServiceRetirement",
                  "items": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "RC_ServicesRetirement"
                },
                "name": "group - Service retirement"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "template",
                  "loadFromTemplateId": "community-Workbooks/Common/noSubscriptions",
                  "items": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "Subscription",
                    "comparison": "isEqualTo",
                    "value": ""
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_Quota"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_Age"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isNotEqualTo",
                    "value": "RC_ServicesRetirement"
                  }
                ],
                "name": "No Subscriptions group"
              }
            ]
          },
          "name": "Azure Governance Workbook"
        }
      ],
      "fallbackResourceIds": [
        "Azure Monitor"
      ],
      "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
    },
    "version": "",
    "workbookJson": "[string(variables('$fxv#0'))]",
    "workbookId": "907",
    "telemetryId": "[format('00f120b5-2007-6120-0000-{0}30126b006', variables('workbookId'))]",
    "finOpsToolkitVersion": "0.1"
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('pid-{0}-{1}', variables('telemetryId'), uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "FinOps toolkit",
              "version": "[variables('finOpsToolkitVersion')]"
            }
          },
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, 'Microsoft.Insights/workbooks', parameters('displayName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "shared",
      "properties": {
        "category": "workbook",
        "description": "[parameters('description')]",
        "displayName": "[parameters('displayName')]",
        "serializedData": "[variables('workbookJson')]",
        "sourceId": "Azure Monitor",
        "version": "[variables('version')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the workbook."
      },
      "value": "[resourceId('Microsoft.Insights/workbooks', guid(resourceGroup().id, 'Microsoft.Insights/workbooks', parameters('displayName')))]"
    },
    "workbookUrl": {
      "type": "string",
      "metadata": {
        "description": "Link to the workbook in the Azure portal."
      },
      "value": "[format('{0}/#view/AppInsightsExtension/UsageNotebookBlade/ComponentId/Azure%20Monitor/ConfigurationId/{1}/Type/{2}/WorkbookTemplateName/{3}', environment().portal, uriComponent(resourceId('Microsoft.Insights/workbooks', guid(resourceGroup().id, 'Microsoft.Insights/workbooks', parameters('displayName')))), reference(resourceId('Microsoft.Insights/workbooks', guid(resourceGroup().id, 'Microsoft.Insights/workbooks', parameters('displayName'))), '2022-04-01').category, uriComponent(reference(resourceId('Microsoft.Insights/workbooks', guid(resourceGroup().id, 'Microsoft.Insights/workbooks', parameters('displayName'))), '2022-04-01').displayName))]"
    }
  }
}