{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Virtual Machine Name"
      },
      "defaultValue": "vmName"
    },
    "virtualMachineSize": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Virtual Machine Size"
      },
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_D2s_v3",
        "Standard_D2s_v3",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D4s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3"
      ],
      "defaultValue": "Standard_D2s_v3"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Virtual Machine Administrator User Name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description":  "SQL Server Virtual Machine Administrator Password"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]",
    "vmNSGName": "ExistingNsg",
    "ipAddressName": "ExistingPip",
    "virtualNetworkName": "ExistingVNet",
    "vmNicName": "ExistingNic"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2020-08-01-preview",
      "location": "[parameters('location')]",
      "comments": "Storage account used to store VM disks",
      "tags": {
        "displayName": "Storage Account"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('vmNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "comments": "NSG for the VM subnet.",
      "tags": {
        "displayName": "VM NSG"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('ipAddressName')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "comments": " Public IP used by the Jump VM",
      "tags": {
        "displayName": "VM Public IP"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "comments": "Virtual network for overall solution",
      "tags": {
        "displayName": "Virtual Network"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('vmNSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vmNicName')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "comments": "NIC for the VM",
      "tags": {
        "displayName": "VM NIC"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ipAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),'default')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachineName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "comments": "Windows VM",
      "tags": {
        "displayName": "Virtual Machine"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "windowsvm",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2014SP2-WS2012R2",
            "sku": "Enterprise",
            "version": "latest"
          },
          "osDisk": {
            "name":"[concat(parameters('virtualMachineName'), '_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('virtualMachineName'), '_DataDisk1')]",
              "createOption": "Empty",
              "lun": 0,
              "diskSizeGB": 1023,
              "caching": "ReadOnly"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'), '/SqlIaasExtension')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "type": "SqlIaaSAgent",
        "publisher": "Microsoft.SqlServer.Management",
        "typeHandlerVersion": "1.2",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "AutoTelemetrySettings": {
            "Region": "[parameters('location')]"
          },
          "AutoPatchingSettings": {
            "PatchCategory": "WindowsMandatoryUpdates",
            "Enable": true,
            "DayOfWeek": "Sunday",
            "MaintenanceWindowStartingHour": "2",
            "MaintenanceWindowDuration": "60"
          },
          "KeyVaultCredentialSettings": {
            "Enable": false
          },
          "ServerConfigurationsManagementSettings": {
            "SQLConnectivityUpdateSettings": {
              "ConnectivityType": "Private",
              "Port": "1433"
            },
            "SQLWorkloadTypeUpdateSettings": {
              "SQLWorkloadType": "GENERAL"
            },
            "SQLStorageUpdateSettings": {
              "DiskCount": "1",
              "NumberOfColumns": "1",
              "StartingDeviceID": "2",
              "DiskConfigurationType": "NEW"
            },
            "AdditionalFeaturesServerConfigurations": {
              "IsRServicesEnabled": "false"
            }
          }
        }
      }
    }
  ]
}

