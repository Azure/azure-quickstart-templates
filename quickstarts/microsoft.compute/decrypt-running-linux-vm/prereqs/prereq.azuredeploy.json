{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmName": {
        "type": "string",
        "defaultValue": "simpleLinuxVM",
        "metadata": {
          "description": "The name of you Virtual Machine."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[toLower(concat('simplelinuxvm-', uniqueString(resourceGroup().id)))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "ubuntuOSVersion": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "allowedValues": [
          "12.04.5-LTS",
          "14.04.5-LTS",
          "16.04.0-LTS",
          "18.04-LTS"
        ],
        "metadata": {
          "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "VmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "The size of the VM"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "vNet",
        "metadata": {
          "description": "Name of the VNET"
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "Subnet",
        "metadata": {
          "description": "Name of the subnet in the virtual network"
        }
      },
      "networkSecurityGroupName": {
        "type": "string",
        "defaultValue": "SecGroupNet",
        "metadata": {
          "description": "Name of the Network Security Group"
        }
      },
      "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the KeyVault to place the volume encryption key."
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource group of the KeyVault"
      }
    },
    "keyEncryptionKeyURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"
      }
    },
    "keyEncryptionAlgorithm": {
      "type": "string",
      "defaultValue": "RSA-OAEP",
      "metadata": {
        "description": "keyEncryptionAlgorithm used to wrap volume encryption key using KeyEncryptionKeyURL"
      }
    },
    "volumeType": {
      "type": "string",
      "defaultValue": "Data",
      "metadata": {
        "description": "Volume type being targeted for encryption operatio"
      }
    },
    "forceUpdateTag": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "Pass in a unique value like a GUID everytime the operation needs to be force run"
      }
    }
},
    "variables": {
      "extensionName": "AzureDiskEncryptionForLinux",
      "extensionVersion": "1.1",
      "encryptionOperation": "EnableEncryption",
      "keyVaultURL": "[concat('https://', parameters('keyVaultName'))]",
      "keyVaultResourceID": "[concat(subscription().id,'/resourceGroups/',parameters('keyVaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
      "vmName": "[parameters('vmName')]",
      "publicIpAddressName": "[concat(parameters('vmName'), 'PublicIP' )]",
      "networkInterfaceName": "[concat(parameters('vmName'),'NetInt')]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
      "osDiskType": "Standard_LRS",
      "subnetAddressPrefix": "10.1.0.0/24",
      "addressPrefix": "10.1.0.0/16",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[variables('networkInterfaceName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
          "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "[parameters('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "priority": 1000,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[parameters('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2020-06-01",
        "name": "[variables('publicIpAddressName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIpAllocationMethod": "Dynamic",
          "publicIPAddressVersion": "IPv4",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          },
          "idleTimeoutInMinutes": 4
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[parameters('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('VmSize')]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "managedDisk": {
                "storageAccountType": "[variables('osDiskType')]"
              }
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          }
        }
      },
      {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "name": "[concat(parameters('vmName'),'/diskEncryption')]",
      "properties": {
        "publisher": "Microsoft.Azure.Security",
        "type": "[variables('extensionName')]",
        "typeHandlerVersion": "[variables('extensionVersion')]",
        "autoUpgradeMinorVersion": true,
        "forceUpdateTag": "[parameters('forceUpdateTag')]",
        "settings": {
          "EncryptionOperation": "[variables('encryptionOperation')]",
          "KeyVaultURL": "[variables('keyVaultURL')]",
          "KeyVaultResourceId": "[variables('keyVaultResourceID')]",
          "KeyEncryptionKeyURL": "[parameters('keyEncryptionKeyURL')]",
          "KekVaultResourceId": "[if(empty(parameters('keyEncryptionKeyURL')),'',variables('keyVaultResourceID'))]",
          "KeyEncryptionAlgorithm": "[parameters('keyEncryptionAlgorithm')]",
          "VolumeType": "[parameters('volumeType')]"
        }
      }
    }
    ],
    "outputs": {
      "vmName": {
        "type": "string",
        "value": "[variables('vmName')]"
      }
    }
  }