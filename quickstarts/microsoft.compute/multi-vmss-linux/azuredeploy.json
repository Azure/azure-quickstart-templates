{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for all VMs"
      }
    },
    "vmssSku": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "metadata": {
        "description": "Size of the scale set"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources"
      }
    },
    "numberOfVMSS": {
      "type": "int",
      "metadata": {
        "description": "Number of VMSSes to deploy"
      }
    },
    "singlePlacementGroup": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Documentation here: https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups"
      }
    },
    "instanceCountPerVMSS": {
      "type": "int",
      "minValue": 1,
      "maxValue": 1000,
      "metadata": {
        "description": "Number of VM instances per scale set; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 1000 or less"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    }
  },
  "variables": {
    "VMSSPrefix": "vmss-linux",
    "newVNETName": "[concat(variables('VMSSPrefix'), '-vnet')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "subnet",
    "subnetPrefix": "10.0.0.0/16"
  },
  "resources": [
    {
      "apiVersion": "2020-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('newVNETName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[concat('clusterSet', copyindex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "copy": {
        "name": "deploymentLoop",
        "count": "[parameters('numberOfVMSS')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('newVNETName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/base.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMSSName": {
            "value": "[concat(variables('VMSSPrefix'), padLeft(copyindex(), 2, '0'))]"
          },
          "singlePlacementGroup": {
            "value": "[parameters('singlePlacementGroup')]"
          },
          "instanceCount": {
            "value": "[parameters('instanceCountPerVMSS')]"
          },
          "subnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('newVnetName'), variables('subnetName'))]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "adminPasswordOrKey": {
            "value": "[parameters('adminPasswordOrKey')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vmssSku": {
            "value": "[parameters('vmssSku')]"
          }
        }
      }
    }
  ]
}
