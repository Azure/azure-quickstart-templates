{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin user name for the virtual machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin user password for virtual machine."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Default lovation"
        }

      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "Size of VM"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Name of VNET to which the VM NIC belongs to"
        }
      },
      "subnetName": {
        "type": "string",
        "metadata": {
          "description": "Name of Subnet to which the VM NIC belongs to"
        }
      },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the KeyVault to place the volume encryption key"
      }
    },
      "enabledForDeployment": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
        }
      },
      "enabledForDiskEncryption": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
        }
      },
      "enabledForTemplateDeployment": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        }
      },
      "keysPermissions": {
        "type": "array",
        "defaultValue": [
          "list",
          "get",
          "decrypt",
          "encrypt",
          "unwrapkey",
          "wrapkey"
        ],
        "metadata": {
          "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
        }
      },
      "secretsPermissions": {
        "type": "array",
        "defaultValue": [
          "list",
          "get"
        ],
        "metadata": {
          "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "Specifies whether the key vault is a standard vault or a premium vault."
        }
      }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "osSku": "2012-R2-Datacenter",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "dnsNameForPublicIP": "[toLower(parameters('vmName'))]",
    "publicIPAddressName": "[toLower(concat('publicIP',parameters('vmName')))]",
    "publicIPAddressType": "Dynamic",
    "nicName": "[toLower(concat('nic',parameters('vmName')))]",
    "keyVaultURL": "[concat('https://', parameters('keyVaultName'), environment().suffixes.keyVaultDns)]",
    "encryptionOperation": "EnableEncryption",
    "keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
  },
  "resources": [
          {
        "type": "Microsoft.Network/VirtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "apiVersion": "2019-09-01",
        "location": "[parameters('location')]",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.0.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24"
                  }
               }
            ]
         }
      },
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[variables('dnsNameForPublicIP')]"
          }
        }
      },
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-07-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[parameters('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "identity": {
            "type": "SystemAssigned"
          },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('osSku')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            },
            "dataDisks": [
             {
                 "diskSizeGB": 512,
                 "lun": 1,
                 "name": "DataDisk-01",
                 "createOption": "empty",
                 "caching": "None"
             }
           ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        }
    },
    {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2019-09-01",
        "name": "[parameters('keyVaultName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        ],
        "properties": {
          "enabledForDeployment": "[parameters('enabledForDeployment')]",
          "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
          "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
          "tenantId": "[subscription().tenantId]",
          "accessPolicies": [
            {
              "objectId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName')), '2019-07-01', 'full').identity.principalId]",
              "tenantId": "[subscription().tenantId]",
              "permissions": {
                "keys": "[parameters('keysPermissions')]",
                "secrets": "[parameters('secretsPermissions')]"
              }
            }
          ],
          "sku": {
            "name": "[parameters('skuName')]",
            "family": "A"
          },
          "networkAcls": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'),'/diskEncryption')]",
        "apiVersion": "2020-12-01",
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
        ],
        "location": "[parameters('location')]",
        "properties": {
            "publisher": "Microsoft.Azure.Security",
            "type": "AzureDiskEncryption",
            "typeHandlerVersion": "2.2",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "EncryptionOperation": "[variables('encryptionOperation')]",
                "KeyVaultURL": "[variables('keyVaultURL')]",
                "KeyVaultResourceId": "[variables('keyVaultResourceId')]",
                "VolumeType": "All"
            }
          }
        }
      ]
    }

