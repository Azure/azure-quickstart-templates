{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vaultName": {
        "type": "string",
        "defaultValue": "[concat('keyvault-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Specifies the name of the KeyVault, this value must be globally unique."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the Azure location where the key vault should be created."
        }
      },
      "accessPolicies": {
        "type": "array",
        "metadata": {
          "description": "Access policies of the Key Vault."
        }
      },
      "tenantId": {
        "type": "string",
        "metadata": {
          "description": "Tenant ID for the Key Vault."
        }
      }
    },
    "resources": [
      {
        "name": "vault-prereq",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/modules/Microsoft.KeyVault/vaults/1.0/azuredeploy.json",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "accessPolicies": {
              "value": "[parameters('accessPolicies')]"
            },
            "vaultName": {
              "value": "[parameters('vaultName')]"
            },
            "location": {
              "value": "[parameters('location')]"
            },
            "enabledForDeployment": {
              "value": true
            },
            "enabledForDiskEncryption": {
              "value": true
            },
            "enabledForTemplateDeployment": {
              "value": true
            },
            "tenantId": {
              "value": "[parameters('tenantId')]"
            }
          }
        }
      }
    ],
    "outputs": {
      "outKeyVaultName": {
        "type": "string",
        "value": "[parameters('vaultName')]"
      },
      "outKeyVaultResourceGroupName": {
        "type": "string",
        "value": "[resourceGroup().name]"
      }
    }
  }