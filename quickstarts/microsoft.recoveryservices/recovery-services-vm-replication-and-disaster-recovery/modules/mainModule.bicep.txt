@description('Location for all resources.')
param location string = resourceGroup().location
@description('Location of the recovery service Vault for disaster recovery')
param replicationLocation string = 'eastus2'

@description('Virtual network resource name.')
param virtualNetworkName string
@description('Virtual network resource Address Space.')
param virtualNetworkAddressSpace string = '10.100.0.0/16'
@description('Virtual network resource Subnet 1 name.')
param subnetName1 string
@description('Virtual network resource Subnet 2 name.')
param subnetName2 string
@description('Virtual network resource Subnet 1 Address Prefix.')
param subnetAddressPrefix1 string = '10.100.0.0/24'
@description('Virtual network resource Subnet 2 Address Prefix.')
param subnetAddressPrefix2 string = '10.100.1.0/24'
@secure()
@description('Virtual machine resource admin username')
param vmAdminUsername string
@secure()
@description('Virtual machine resource admin password')
param vmAdminPassword string
@description('Virtual machine size')
param vmSize string = 'Standard_D2s_v3'
@description('Storage account name')
param storageAccountName string = 'storage${uniqueString(resourceGroup().id)}'
@description('Azure recovery service vault name')
param recoveryServiceVaultName string = 'rsv-${uniqueString(resourceGroup().id)}'



@description('Set to true is disaster recovery vm replication should be enabled on the VM')
param disasterRecoveryEnabled bool = true
@description('Virtual machine resource object')
param virtualMachineObject object

module network 'virtualnetwork/main.bicep' = {
  name: 'networkComponent'
  params: {
    location: location
    virtualNetworkName: virtualNetworkName
    virtualNetworkAddressSpace: virtualNetworkAddressSpace
    subnetName1: subnetName1
    subnetAddressPrefix1: subnetAddressPrefix1
    subnetName2: subnetName2
    subnetAddressPrefix2: subnetAddressPrefix2
  }
}

module virtualMachine 'virtualmachine/main.bicep' = {
  name: 'virtualMachineComponent'
  params: {
    location: location
    subnetId: network.outputs.computeSubnet
    virtualMachine: virtualMachineObject
    adminUsername: vmAdminUsername
    adminPassword: vmAdminPassword
    disasterRecoveryEnabled: disasterRecoveryEnabled
  }
}

module userDefinedManagedIdentity 'identity/main.bicep' = {
  name: 'userDefinedManagedIdentityComponent'
  params: {
    location: location
    recoveryServiceVaultName: recoveryServiceVaultName
  }
}

module storageAccount 'storage/main.bicep' = {
  name: 'storageAccountComponent'
  params: {
    location: location
    storageAccountName: storageAccountName
    virtualNetworkId: network.outputs.virtualNetworkId
    subnetId: network.outputs.privateEndpointSubnet
    recoveryServiceVaultIdentityPrincipalId: userDefinedManagedIdentity.outputs.recoveryServiceVaultUserDefinedManagedIdentityPrincipalId
  }
}

module disasterRecovery 'recoveryservicevault/main.bicep' = {
  name: 'disasterRecoveryComponent'
  params: {
    location: location
    replicationLocation: replicationLocation
    recoveryServiceVaultName: recoveryServiceVaultName
    recoveryServiceVaultIdentityId: userDefinedManagedIdentity.outputs.recoveryServiceVaultUserDefinedManagedIdentityId
    virtualNetworkId: network.outputs.virtualNetworkId
    recoveryNetworkId: ''
    subnetId: network.outputs.privateEndpointSubnet
    storageAccountId: storageAccount.outputs.storageAccountId
    virtualMachine: virtualMachine
  }
}
