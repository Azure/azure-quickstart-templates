{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "dev",
      "templateHash": "12560223677407066596"
    }
  },
  "parameters": {
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL server."
      }
    },
    "sqlDatabase": {
      "type": "object",
      "metadata": {
        "description": "The SQL database parameters object."
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-02-02-preview",
      "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name)]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sqlDatabase').skuName]",
        "tier": "[parameters('sqlDatabase').tier]"
      },
      "properties": {
        "zoneRedundant": "[parameters('sqlDatabase').zoneRedundant]",
        "collation": "[parameters('sqlDatabase').collation]",
        "maxSizeBytes": "[if(equals(parameters('sqlDatabase').dataMaxSize, 0), null(), mul(mul(mul(1024, 1024), 1024), parameters('sqlDatabase').dataMaxSize))]",
        "licenseType": "[if(parameters('sqlDatabase').hybridBenefit, 'BasePrice', 'LicenseIncluded')]",
        "readScale": "[if(equals(parameters('sqlDatabase').readReplicas, 0), 'Disabled', 'Enabled')]",
        "readReplicaCount": "[parameters('sqlDatabase').readReplicas]",
        "minCapacity": "[if(equals(parameters('sqlDatabase').minimumCores, 0), null(), parameters('sqlDatabase').minimumCores)]",
        "autoPauseDelay": "[if(equals(parameters('sqlDatabase').autoPauseDelay, 0), null(), parameters('sqlDatabase').autoPauseDelay)]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]",
      "properties": {
        "status": "[parameters('sqlDatabase').dataEncryption]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]"
      ]
    },
    {
      "condition": "[parameters('sqlDatabase').longTermBackup.enabled]",
      "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'Default')]",
      "properties": {
        "weeklyRetention": "[parameters('sqlDatabase').longTermBackup.weeklyRetention]",
        "monthlyRetention": "[parameters('sqlDatabase').longTermBackup.monthlyRetention]",
        "yearlyRetention": "[parameters('sqlDatabase').longTermBackup.yearlyRetention]",
        "weekOfYear": "[parameters('sqlDatabase').longTermBackup.weekOfYear]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('shortTermBackup-{0}', uniqueString(parameters('sqlServerName'), parameters('sqlDatabase').name)))]",
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    },
    {
      "condition": "[and(and(parameters('sqlDatabase').azureDefender.enabled, parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.recurringScans), not(empty(parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.name)))]",
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'Default')]",
      "properties": {
        "recurringScans": {
          "isEnabled": "[parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.recurringScans]",
          "emailSubscriptionAdmins": "[parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.emailSubscriptionAdmins]",
          "emails": "[parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.emails]"
        },
        "storageContainerPath": "[if(not(empty(parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.name)), format('{0}{1}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.resourceGroupName), 'Microsoft.Storage/storageAccounts', parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.name), '2021-04-01').primaryEndpoints.blob, parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.containerName), '')]",
        "storageAccountAccessKey": "[if(not(empty(parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.name)), listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.resourceGroupName), 'Microsoft.Storage/storageAccounts', parameters('sqlDatabase').azureDefender.vulnerabilityAssessments.storageAccount.name), '2021-04-01').keys[0].value, '')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('azureDefender-{0}', uniqueString(parameters('sqlServerName'), parameters('sqlDatabase').name)))]",
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    },
    {
      "condition": "[parameters('sqlDatabase').diagnosticLogsAndMetrics.auditLogs]",
      "type": "microsoft.insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Sql/servers/{0}/databases/{1}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
      "name": "SQLSecurityAuditEvents_3d229c42-c7e7-4c97-9a99-ec0d0d8b86c1",
      "properties": {
        "workspaceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sqlDatabase').diagnosticLogsAndMetrics.subscriptionId, parameters('sqlDatabase').diagnosticLogsAndMetrics.resourceGroupName), 'Microsoft.OperationalInsights/workspaces', parameters('sqlDatabase').diagnosticLogsAndMetrics.name)]",
        "logs": [
          {
            "category": "SQLSecurityAuditEvents",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('auditSettings-{0}', uniqueString(parameters('sqlServerName'), parameters('sqlDatabase').name)))]",
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    },
    {
      "condition": "[not(empty(parameters('sqlDatabase').diagnosticLogsAndMetrics.name))]",
      "type": "microsoft.insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Sql/servers/{0}/databases/{1}', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
      "name": "sendLogsAndMetrics",
      "properties": {
        "copy": [
          {
            "name": "logs",
            "count": "[length(parameters('sqlDatabase').diagnosticLogsAndMetrics.logs)]",
            "input": {
              "category": "[parameters('sqlDatabase').diagnosticLogsAndMetrics.logs[copyIndex('logs')]]",
              "enabled": true
            }
          },
          {
            "name": "metrics",
            "count": "[length(parameters('sqlDatabase').diagnosticLogsAndMetrics.metrics)]",
            "input": {
              "category": "[parameters('sqlDatabase').diagnosticLogsAndMetrics.metrics[copyIndex('metrics')]]",
              "enabled": true
            }
          }
        ],
        "workspaceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sqlDatabase').diagnosticLogsAndMetrics.subscriptionId, parameters('sqlDatabase').diagnosticLogsAndMetrics.resourceGroupName), 'Microsoft.OperationalInsights/workspaces', parameters('sqlDatabase').diagnosticLogsAndMetrics.name)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    },
    {
      "condition": "[not(equals(parameters('sqlDatabase').shortTermBackupRetention, 0))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('shortTermBackup-{0}', uniqueString(parameters('sqlServerName'), parameters('sqlDatabase').name))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sqlDatabase": {
            "value": "[parameters('sqlDatabase')]"
          },
          "sqlServerName": {
            "value": "[parameters('sqlServerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "dev",
              "templateHash": "13857232367360321477"
            }
          },
          "parameters": {
            "sqlDatabase": {
              "type": "object"
            },
            "sqlServerName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/{1}/Default', parameters('sqlServerName'), parameters('sqlDatabase').name)]",
              "properties": {
                "retentionDays": "[parameters('sqlDatabase').shortTermBackupRetention]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('azureDefender-{0}', uniqueString(parameters('sqlServerName'), parameters('sqlDatabase').name))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sqlDatabase": {
            "value": "[parameters('sqlDatabase')]"
          },
          "sqlServerName": {
            "value": "[parameters('sqlServerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "dev",
              "templateHash": "2829092679645401993"
            }
          },
          "parameters": {
            "sqlDatabase": {
              "type": "object"
            },
            "sqlServerName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/{1}/Default', parameters('sqlServerName'), parameters('sqlDatabase').name)]",
              "properties": {
                "state": "[if(parameters('sqlDatabase').azureDefender.enabled, 'Enabled', 'Disabled')]",
                "emailAddresses": "[parameters('sqlDatabase').azureDefender.emailAddresses]",
                "emailAccountAdmins": "[parameters('sqlDatabase').azureDefender.emailAccountAdmins]",
                "disabledAlerts": "[parameters('sqlDatabase').azureDefender.disabledRules]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('auditSettings-{0}', uniqueString(parameters('sqlServerName'), parameters('sqlDatabase').name))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sqlDatabase": {
            "value": "[parameters('sqlDatabase')]"
          },
          "sqlServerName": {
            "value": "[parameters('sqlServerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "dev",
              "templateHash": "5447449594683998530"
            }
          },
          "parameters": {
            "sqlDatabase": {
              "type": "object"
            },
            "sqlServerName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "defaultAuditActionsAndGroups": [
              "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
              "FAILED_DATABASE_AUTHENTICATION_GROUP",
              "BATCH_COMPLETED_GROUP"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers/databases/auditingSettings",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/{1}/Default', parameters('sqlServerName'), parameters('sqlDatabase').name)]",
              "properties": {
                "state": "[if(parameters('sqlDatabase').diagnosticLogsAndMetrics.auditLogs, 'Enabled', 'Disabled')]",
                "auditActionsAndGroups": "[if(not(empty(parameters('sqlDatabase').auditActionsAndGroups)), parameters('sqlDatabase').auditActionsAndGroups, variables('defaultAuditActionsAndGroups'))]",
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": "[parameters('sqlDatabase').diagnosticLogsAndMetrics.auditLogs]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1])]",
        "[resourceId('Microsoft.Sql/servers/databases/transparentDataEncryption', split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[0], split(format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabase').name), '/')[1], 'current')]"
      ]
    }
  ]
}