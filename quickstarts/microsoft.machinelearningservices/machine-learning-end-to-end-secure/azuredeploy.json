{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "17419789560179185050"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for all resource names."
      },
      "maxLength": 10,
      "minLength": 2
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region used for the deployment of all resources."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Set of tags to apply to all resources."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "Virtual network address prefix"
      }
    },
    "trainingSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "Training subnet address prefix"
      }
    },
    "scoringSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "Scoring subnet address prefix"
      }
    },
    "azureBastionSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.250.0/27",
      "metadata": {
        "description": "Bastion subnet address prefix"
      }
    },
    "deployJumphost": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy a Bastion jumphost to access the network-isolated environment?"
      }
    },
    "dsvmJumpboxUsername": {
      "type": "string",
      "metadata": {
        "description": "Jumphost virtual machine username"
      }
    },
    "dsvmJumpboxPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Jumphost virtual machine password"
      },
      "minLength": 8
    },
    "amlComputePublicIp": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable public IP for Azure Machine Learning compute nodes"
      }
    },
    "amlComputeDefaultVmSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "VM size for the default compute cluster"
      }
    }
  },
  "variables": {
    "name": "[toLower(format('{0}', parameters('prefix')))]",
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 4)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('nsg-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "nsgName": {
            "value": "[format('nsg-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "13791425909816820813"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "nsgName": {
              "type": "string",
              "metadata": {
                "description": "Name of the network security group"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[parameters('nsgName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "BatchNodeManagement",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "29876-29877",
                      "sourceAddressPrefix": "BatchNodeManagement",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AzureMachineLearning",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "44224",
                      "sourceAddressPrefix": "AzureMachineLearning",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AzureActiveDirectory",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "AzureActiveDirectory",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AzureMachineLearningOutbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "AzureMachineLearning",
                      "access": "Allow",
                      "priority": 150,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AzureResourceManager",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "AzureResourceManager",
                      "access": "Allow",
                      "priority": 160,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AzureStorageAccount",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[format('Storage.{0}', parameters('location'))]",
                      "access": "Allow",
                      "priority": 170,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AzureFrontDoor",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "AzureFrontDoor.FrontEnd",
                      "access": "Allow",
                      "priority": 180,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AzureContainerRegistry",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('location'))]",
                      "access": "Allow",
                      "priority": 190,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "MicrosoftContainerRegistry",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "MicrosoftContainerRegistry",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "networkSecurityGroup": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[format('vnet-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "networkSecurityGroupId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('nsg-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.networkSecurityGroup.value]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "trainingSubnetPrefix": {
            "value": "[parameters('trainingSubnetPrefix')]"
          },
          "scoringSubnetPrefix": {
            "value": "[parameters('scoringSubnetPrefix')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "17789176342070712478"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the virtual network resource"
              }
            },
            "networkSecurityGroupId": {
              "type": "string",
              "metadata": {
                "description": "Group ID of the network security group"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "192.168.0.0/16",
              "metadata": {
                "description": "Virtual network address prefix"
              }
            },
            "trainingSubnetPrefix": {
              "type": "string",
              "defaultValue": "192.168.0.0/24",
              "metadata": {
                "description": "Training subnet address prefix"
              }
            },
            "scoringSubnetPrefix": {
              "type": "string",
              "defaultValue": "192.168.1.0/24",
              "metadata": {
                "description": "Scoring subnet address prefix"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-01-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "snet-training",
                    "properties": {
                      "addressPrefix": "[parameters('trainingSubnetPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "networkSecurityGroup": {
                        "id": "[parameters('networkSecurityGroupId')]"
                      }
                    }
                  },
                  {
                    "name": "snet-scoring",
                    "properties": {
                      "addressPrefix": "[parameters('scoringSubnetPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.KeyVault"
                        },
                        {
                          "service": "Microsoft.ContainerRegistry"
                        },
                        {
                          "service": "Microsoft.Storage"
                        }
                      ],
                      "networkSecurityGroup": {
                        "id": "[parameters('networkSecurityGroupId')]"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('virtualNetworkName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('nsg-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('kv-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyvaultName": {
            "value": "[format('kv-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "keyvaultPleName": {
            "value": "[format('ple-{0}-{1}-kv', variables('name'), variables('uniqueSuffix'))]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/snet-training', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "702722023526591644"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure Region to deploy the resources into"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the Key Vault Instance"
              }
            },
            "keyvaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault"
              }
            },
            "keyvaultPleName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault private link endpoint"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "The Subnet ID where the Key Vault Private Link is to be created"
              }
            },
            "virtualNetworkId": {
              "type": "string",
              "metadata": {
                "description": "The VNet ID where the Key Vault Private Link is to be created"
              }
            }
          },
          "variables": {
            "privateDnsZoneName": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[parameters('keyvaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-01-01",
              "name": "[parameters('keyvaultPleName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('keyvaultPleName')]",
                    "properties": {
                      "groupIds": [
                        "vault"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/vault-PrivateDnsZoneGroup', parameters('keyvaultPleName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[variables('privateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('keyvaultPleName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "keyvaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('st{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageName": {
            "value": "[format('st{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "storagePleBlobName": {
            "value": "[format('ple-{0}-{1}-st-blob', variables('name'), variables('uniqueSuffix'))]"
          },
          "storagePleFileName": {
            "value": "[format('ple-{0}-{1}-st-file', variables('name'), variables('uniqueSuffix'))]"
          },
          "storageSkuName": {
            "value": "Standard_LRS"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/snet-training', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "6137443409535856789"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "storageName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage account"
              }
            },
            "storagePleBlobName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage blob private link endpoint"
              }
            },
            "storagePleFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage file private link endpoint"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet"
              }
            },
            "virtualNetworkId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the virtual network"
              }
            },
            "storageSkuName": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "Storage SKU"
              },
              "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Premium_LRS",
                "Premium_ZRS"
              ]
            }
          },
          "variables": {
            "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
            "blobPrivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
            "filePrivateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[variables('storageNameCleaned')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('storageSkuName')]"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowCrossTenantReplication": false,
                "allowSharedKeyAccess": true,
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "queue": {
                      "enabled": true,
                      "keyType": "Service"
                    },
                    "table": {
                      "enabled": true,
                      "keyType": "Service"
                    }
                  }
                },
                "isHnsEnabled": false,
                "isNfsV3Enabled": false,
                "keyPolicy": {
                  "keyExpirationPeriodInDays": 7
                },
                "largeFileSharesState": "Disabled",
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-01-01",
              "name": "[parameters('storagePleBlobName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('storagePleBlobName')]",
                    "properties": {
                      "groupIds": [
                        "blob"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                      "privateLinkServiceConnectionState": {
                        "status": "Approved",
                        "description": "Auto-Approved",
                        "actionsRequired": "None"
                      }
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-01-01",
              "name": "[parameters('storagePleFileName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('storagePleFileName')]",
                    "properties": {
                      "groupIds": [
                        "file"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                      "privateLinkServiceConnectionState": {
                        "status": "Approved",
                        "description": "Auto-Approved",
                        "actionsRequired": "None"
                      }
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('blobPrivateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/blob-PrivateDnsZoneGroup', parameters('storagePleBlobName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[variables('blobPrivateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('storagePleBlobName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('blobPrivateDnsZoneName'), uniqueString(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('filePrivateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/flie-PrivateDnsZoneGroup', parameters('storagePleFileName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[variables('filePrivateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('storagePleFileName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('filePrivateDnsZoneName'), uniqueString(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
              ]
            }
          ],
          "outputs": {
            "storageId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('cr{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "containerRegistryName": {
            "value": "[format('cr{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "containerRegistryPleName": {
            "value": "[format('ple-{0}-{1}-cr', variables('name'), variables('uniqueSuffix'))]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/snet-training', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "9081604833272928747"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "metadata": {
                "description": "Container registry name"
              }
            },
            "containerRegistryPleName": {
              "type": "string",
              "metadata": {
                "description": "Container registry private link endpoint name"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet"
              }
            },
            "virtualNetworkId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the virtual network"
              }
            }
          },
          "variables": {
            "containerRegistryNameCleaned": "[replace(parameters('containerRegistryName'), '-', '')]",
            "privateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
            "groupName": "registry"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-09-01",
              "name": "[variables('containerRegistryNameCleaned')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "adminUserEnabled": true,
                "dataEndpointEnabled": false,
                "networkRuleBypassOptions": "AzureServices",
                "networkRuleSet": {
                  "defaultAction": "Deny"
                },
                "policies": {
                  "quarantinePolicy": {
                    "status": "disabled"
                  },
                  "retentionPolicy": {
                    "status": "enabled",
                    "days": 7
                  },
                  "trustPolicy": {
                    "status": "disabled",
                    "type": "Notary"
                  }
                },
                "publicNetworkAccess": "Disabled",
                "zoneRedundancy": "Disabled"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-01-01",
              "name": "[parameters('containerRegistryPleName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('containerRegistryPleName')]",
                    "properties": {
                      "groupIds": [
                        "[variables('groupName')]"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/{1}-PrivateDnsZoneGroup', parameters('containerRegistryPleName'), variables('groupName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[variables('privateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('containerRegistryPleName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
              ]
            }
          ],
          "outputs": {
            "containerRegistryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('appi-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationInsightsName": {
            "value": "[format('appi-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "4714943211236057872"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Application Insights resource name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "DisableIpMasking": false,
                "DisableLocalAuth": false,
                "Flow_Type": "Bluefield",
                "ForceCustomerStorageForProfiler": false,
                "ImmediatePurgeDataOn30Days": true,
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Disabled",
                "Request_Source": "rest"
              }
            }
          ],
          "outputs": {
            "applicationInsightsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('mlw-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "machineLearningName": {
            "value": "[format('mlw-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "machineLearningFriendlyName": {
            "value": "Private link endpoint sample workspace"
          },
          "machineLearningDescription": {
            "value": "This is an example workspace having a private link endpoint."
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "applicationInsightsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appi-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.applicationInsightsId.value]"
          },
          "containerRegistryId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('cr{0}{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.containerRegistryId.value]"
          },
          "keyVaultId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('kv-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.keyvaultId.value]"
          },
          "storageAccountId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('st{0}{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.storageId.value]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/snet-training', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "computeSubnetId": {
            "value": "[format('{0}/subnets/snet-training', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "aksSubnetId": {
            "value": "[format('{0}/subnets/snet-scoring', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value]"
          },
          "machineLearningPleName": {
            "value": "[format('ple-{0}-{1}-mlw', variables('name'), variables('uniqueSuffix'))]"
          },
          "amlComputePublicIp": {
            "value": "[parameters('amlComputePublicIp')]"
          },
          "mlAksName": {
            "value": "[format('aks-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "vmSizeParam": {
            "value": "[parameters('amlComputeDefaultVmSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "5509886718053543233"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string",
              "metadata": {
                "description": "Prefix for resource names"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "machineLearningName": {
              "type": "string",
              "metadata": {
                "description": "Machine learning workspace name"
              }
            },
            "machineLearningFriendlyName": {
              "type": "string",
              "defaultValue": "[parameters('machineLearningName')]",
              "metadata": {
                "description": "Machine learning workspace display name"
              }
            },
            "machineLearningDescription": {
              "type": "string",
              "metadata": {
                "description": "Machine learning workspace description"
              }
            },
            "mlAksName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Kubernetes services resource to create and attached to the machine learning workspace"
              }
            },
            "applicationInsightsId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the application insights resource"
              }
            },
            "containerRegistryId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the container registry resource"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the key vault resource"
              }
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the storage account resource"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet resource"
              }
            },
            "computeSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the compute subnet"
              }
            },
            "aksSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Kubernetes services resource"
              }
            },
            "virtualNetworkId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the virtual network"
              }
            },
            "machineLearningPleName": {
              "type": "string",
              "metadata": {
                "description": "Machine learning workspace private link endpoint name"
              }
            },
            "amlComputePublicIp": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable public IP for Azure Machine Learning compute nodes"
              }
            },
            "vmSizeParam": {
              "type": "string",
              "metadata": {
                "description": "VM size for the default compute cluster"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2022-05-01",
              "name": "[parameters('machineLearningName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[parameters('machineLearningFriendlyName')]",
                "description": "[parameters('machineLearningDescription')]",
                "applicationInsights": "[parameters('applicationInsightsId')]",
                "containerRegistry": "[parameters('containerRegistryId')]",
                "keyVault": "[parameters('keyVaultId')]",
                "storageAccount": "[parameters('storageAccountId')]",
                "imageBuildCompute": "cluster001",
                "publicNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "machineLearningNetworking",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "virtualNetworkId": {
                    "value": "[parameters('virtualNetworkId')]"
                  },
                  "workspaceArmId": {
                    "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "machineLearningPleName": {
                    "value": "[parameters('machineLearningPleName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "15999653408780054662"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "machineLearningPleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Machine learning workspace private link endpoint name"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the virtual network resource"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet resource"
                      }
                    },
                    "workspaceArmId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the machine learning workspace"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    }
                  },
                  "variables": {
                    "privateDnsZoneName": {
                      "azureusgovernment": "privatelink.api.ml.azure.us",
                      "azurechinacloud": "privatelink.api.ml.azure.cn",
                      "azurecloud": "privatelink.api.azureml.ms"
                    },
                    "privateAznbDnsZoneName": {
                      "azureusgovernment": "privatelink.notebooks.usgovcloudapi.net",
                      "azurechinacloud": "privatelink.notebooks.chinacloudapi.cn",
                      "azurecloud": "privatelink.notebooks.azure.net"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2022-01-01",
                      "name": "[parameters('machineLearningPleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('machineLearningPleName')]",
                            "properties": {
                              "groupIds": [
                                "amlworkspace"
                              ],
                              "privateLinkServiceId": "[parameters('workspaceArmId')]"
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('privateDnsZoneName')[toLower(environment().name)]]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('privateDnsZoneName')[toLower(environment().name)], uniqueString(parameters('workspaceArmId')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName')[toLower(environment().name)])]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('privateAznbDnsZoneName')[toLower(environment().name)]]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('privateAznbDnsZoneName')[toLower(environment().name)], uniqueString(parameters('workspaceArmId')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateAznbDnsZoneName')[toLower(environment().name)])]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2022-01-01",
                      "name": "[format('{0}/amlworkspace-PrivateDnsZoneGroup', parameters('machineLearningPleName'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneName')[environment().name]]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName')[toLower(environment().name)])]"
                            }
                          },
                          {
                            "name": "[variables('privateAznbDnsZoneName')[environment().name]]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateAznbDnsZoneName')[toLower(environment().name)])]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName')[toLower(environment().name)])]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('machineLearningPleName'))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateAznbDnsZoneName')[toLower(environment().name)])]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "machineLearningComputes",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearning": {
                    "value": "[parameters('machineLearningName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "computeSubnetId": {
                    "value": "[parameters('computeSubnetId')]"
                  },
                  "aksName": {
                    "value": "[parameters('mlAksName')]"
                  },
                  "aksSubnetId": {
                    "value": "[parameters('aksSubnetId')]"
                  },
                  "prefix": {
                    "value": "[parameters('prefix')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "amlComputePublicIp": {
                    "value": "[parameters('amlComputePublicIp')]"
                  },
                  "vmSizeParam": {
                    "value": "[parameters('vmSizeParam')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "18188692107272943181"
                    }
                  },
                  "parameters": {
                    "prefix": {
                      "type": "string",
                      "metadata": {
                        "description": "Prefix for resource names"
                      }
                    },
                    "machineLearning": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Machine Learning workspace to create the compute resources in"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    },
                    "computeSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the compute subnet"
                      }
                    },
                    "aksName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Kubernetes services resource"
                      }
                    },
                    "aksSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the Azure Kubernetes services resource"
                      }
                    },
                    "amlComputePublicIp": {
                      "type": "bool",
                      "metadata": {
                        "description": "Resource ID of the Azure Kubernetes services resource"
                      }
                    },
                    "vmSizeParam": {
                      "type": "string",
                      "metadata": {
                        "description": "VM size for the default compute cluster"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/computes",
                      "apiVersion": "2022-05-01",
                      "name": "[format('{0}/cluster001', parameters('machineLearning'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "computeType": "AmlCompute",
                        "computeLocation": "[parameters('location')]",
                        "description": "Machine Learning cluster 001",
                        "disableLocalAuth": true,
                        "properties": {
                          "vmPriority": "Dedicated",
                          "vmSize": "[parameters('vmSizeParam')]",
                          "enableNodePublicIp": "[parameters('amlComputePublicIp')]",
                          "isolatedNetwork": false,
                          "osType": "Linux",
                          "remoteLoginPortPublicAccess": "Disabled",
                          "scaleSettings": {
                            "minNodeCount": 0,
                            "maxNodeCount": 5,
                            "nodeIdleTimeBeforeScaleDown": "PT120S"
                          },
                          "subnet": {
                            "id": "[parameters('computeSubnetId')]"
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/computes",
                      "apiVersion": "2022-05-01",
                      "name": "[format('{0}/{1}-ci001', parameters('machineLearning'), parameters('prefix'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "computeType": "ComputeInstance",
                        "computeLocation": "[parameters('location')]",
                        "description": "Machine Learning compute instance 001",
                        "disableLocalAuth": true,
                        "properties": {
                          "applicationSharingPolicy": "Personal",
                          "computeInstanceAuthorizationType": "personal",
                          "sshSettings": {
                            "sshPublicAccess": "Disabled"
                          },
                          "subnet": {
                            "id": "[parameters('computeSubnetId')]"
                          },
                          "vmSize": "[parameters('vmSizeParam')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[parameters('aksName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "aksClusterName": {
                            "value": "[parameters('aksName')]"
                          },
                          "computeName": {
                            "value": "[parameters('aksName')]"
                          },
                          "aksSubnetId": {
                            "value": "[parameters('aksSubnetId')]"
                          },
                          "workspaceName": {
                            "value": "[parameters('machineLearning')]"
                          },
                          "vmSizeParam": {
                            "value": "[parameters('vmSizeParam')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.11.1.770",
                              "templateHash": "15058646902539064799"
                            }
                          },
                          "parameters": {
                            "aksClusterName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Azure Kubernetes Service cluster"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            },
                            "aksSubnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID for the Azure Kubernetes Service subnet"
                              }
                            },
                            "workspaceName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Azure Machine Learning workspace"
                              }
                            },
                            "computeName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Azure Machine Learning attached compute"
                              }
                            },
                            "vmSizeParam": {
                              "type": "string",
                              "metadata": {
                                "description": "Size of the virtual machine"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ContainerService/managedClusters",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('aksClusterName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "properties": {
                                "kubernetesVersion": "1.24.0",
                                "dnsPrefix": "[format('{0}-dns', parameters('aksClusterName'))]",
                                "agentPoolProfiles": [
                                  {
                                    "name": "[toLower('agentpool')]",
                                    "count": 3,
                                    "vmSize": "[parameters('vmSizeParam')]",
                                    "osDiskSizeGB": 128,
                                    "vnetSubnetID": "[parameters('aksSubnetId')]",
                                    "maxPods": 110,
                                    "osType": "Linux",
                                    "mode": "System",
                                    "type": "VirtualMachineScaleSets"
                                  }
                                ],
                                "enableRBAC": true,
                                "networkProfile": {
                                  "networkPlugin": "kubenet",
                                  "serviceCidr": "10.0.0.0/16",
                                  "dnsServiceIP": "10.0.0.10",
                                  "dockerBridgeCidr": "172.17.0.1/16",
                                  "loadBalancerSku": "standard"
                                },
                                "apiServerAccessProfile": {
                                  "enablePrivateCluster": true
                                }
                              }
                            },
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/computes",
                              "apiVersion": "2022-05-01",
                              "name": "[format('{0}/{1}', parameters('workspaceName'), parameters('computeName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "computeType": "AKS",
                                "resourceId": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]",
                                "properties": {
                                  "aksNetworkingConfiguration": {
                                    "subnetId": "[parameters('aksSubnetId')]"
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "aksResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'machineLearningNetworking')]"
              ]
            }
          ],
          "outputs": {
            "machineLearningId": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('appi-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('cr{0}{1}-deployment', variables('name'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('kv-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('st{0}{1}-deployment', variables('name'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "condition": "[parameters('deployJumphost')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('vm-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualMachineName": {
            "value": "[format('vm-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/snet-training', reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.id.value)]"
          },
          "adminUsername": {
            "value": "[parameters('dsvmJumpboxUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('dsvmJumpboxPassword')]"
          },
          "networkSecurityGroupId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('nsg-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.networkSecurityGroup.value]"
          },
          "vmSizeParameter": {
            "value": "[parameters('amlComputeDefaultVmSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "13576308340796437747"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet"
              }
            },
            "networkSecurityGroupId": {
              "type": "string",
              "metadata": {
                "description": "Network Security Group Resource ID"
              }
            },
            "virtualMachineName": {
              "type": "string",
              "metadata": {
                "description": "Virtual machine name"
              }
            },
            "vmSizeParameter": {
              "type": "string",
              "metadata": {
                "description": "Virtual machine size"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Virtual machine admin username"
              }
            },
            "adminPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Virtual machine admin password"
              },
              "minLength": 8
            }
          },
          "variables": {
            "aadLoginExtensionName": "AADLoginForWindows"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-nic', parameters('virtualMachineName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "Dynamic"
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[parameters('networkSecurityGroupId')]"
                }
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-03-01",
              "name": "[parameters('virtualMachineName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSizeParameter')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  },
                  "imageReference": {
                    "publisher": "microsoft-dsvm",
                    "offer": "dsvm-win-2019",
                    "sku": "server-2019",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('virtualMachineName')))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachineName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                    "enableAutomaticUpdates": true,
                    "provisionVMAgent": true,
                    "patchSettings": {
                      "enableHotpatching": false,
                      "patchMode": "AutomaticByOS"
                    }
                  }
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('virtualMachineName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachineName'), variables('aadLoginExtensionName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.ActiveDirectory",
                "type": "[variables('aadLoginExtensionName')]",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
              ]
            }
          ],
          "outputs": {
            "dsvmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('nsg-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "condition": "[parameters('deployJumphost')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('bas-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastionHostName": {
            "value": "[format('bas-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))).outputs.name.value]"
          },
          "addressPrefix": {
            "value": "[parameters('azureBastionSubnetPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "6441661915689160168"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure region where the Bastion should be deployed"
              }
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network name"
              }
            },
            "addressPrefix": {
              "type": "string",
              "defaultValue": "192.168.250.0/27",
              "metadata": {
                "description": "The address prefix to use for the Bastion subnet"
              }
            },
            "publicIpName": {
              "type": "string",
              "defaultValue": "pip-bastion",
              "metadata": {
                "description": "The name of the Bastion public IP address"
              }
            },
            "bastionHostName": {
              "type": "string",
              "defaultValue": "bastion-jumpbox",
              "metadata": {
                "description": "The name of the Bastion host"
              }
            }
          },
          "variables": {
            "subnetName": "AzureBastionSubnet"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), variables('subnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('addressPrefix')]",
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Disabled"
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-01-01",
              "name": "[parameters('publicIpName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-01-01",
              "name": "[parameters('bastionHostName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vnetName'), variables('subnetName')), '/')[0], split(format('{0}/{1}', parameters('vnetName'), variables('subnetName')), '/')[1])]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vnetName'), variables('subnetName')), '/')[0], split(format('{0}/{1}', parameters('vnetName'), variables('subnetName')), '/')[1])]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              ]
            }
          ],
          "outputs": {
            "bastionId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/bastionHosts', parameters('bastionHostName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    }
  ]
}