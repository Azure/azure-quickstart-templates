{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning workspace."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name for the storage account to created and associated with the workspace."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[concat('kv',uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name for the key vault to created and associated with the workspace."
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]",
            "metadata": {
                "description": "Specifies the tenant ID of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API."
            }
        },
        "applicationInsightsName": {
            "type": "string",
            "defaultValue": "[concat('ai',uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name for the application insights to created and associated with the workspace."
            }
        },
        "computeName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning amlcompute cluster to be deployed"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS1_v2",
            "type": "string",
            "metadata": {
                "description": "The VM size for compute instance"
            }
        },
        "minNodeCount": {
            "defaultValue": 0,
            "type": "int",
            "metadata": {
                "description": "The minimum number of nodes to use on the cluster. If not specified, defaults to 0"
            }
        },
        "maxNodeCount": {
            "defaultValue": 1,
            "type": "int",
            "metadata": {
                "description": " The maximum number of nodes to use on the cluster. If not specified, defaults to 1."
            }
        },
        "nodeIdleTimeBeforeScaleDown": {
            "defaultValue": "PT120S",
            "type": "string",
            "metadata": {
                "description": "Idle time before scale down"
            }
        }
  },
  "resources": [
      {
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2021-04-01",
          "name": "[parameters('storageAccountName')]",
          "location": "[parameters('location')]",
          "sku": {
              "name": "Standard_LRS"
          },
          "kind": "StorageV2",
          "properties": {
              "encryption": {
                  "services": {
                      "blob": {
                          "enabled": true
                      },
                      "file": {
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              },
              "supportsHttpsTrafficOnly": true
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults",
          "apiVersion": "2021-10-01",
          "name": "[parameters('keyVaultName')]",
          "location": "[parameters('location')]",
          "properties": {
              "tenantId": "[parameters('tenantId')]",
              "sku": {
                  "name": "standard",
                  "family": "A"
              },
              "accessPolicies": []
          }
      },
      {
          "type": "Microsoft.Insights/components",
          "apiVersion": "2020-02-02",
          "name": "[parameters('applicationInsightsName')]",
          "location": "[parameters('location')]",
          "kind": "web",
          "properties": {
              "Application_Type": "web"
          }
      },
      {
          "type": "Microsoft.MachineLearningServices/workspaces",
          "apiVersion": "2022-05-01",
          "name": "[parameters('workspaceName')]",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
              "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
          ],
          "identity": {
              "type": "systemAssigned"
          },
          "properties": {
              "friendlyName": "[parameters('workspaceName')]",
              "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
              "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
              "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
          }
        },
        {
          "type": "Microsoft.MachineLearningServices/workspaces/computes",
          "name": "[concat(parameters('workspaceName'), '/', parameters('computeName'))]",
          "apiVersion": "2021-01-01",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]"
          ],
          "properties": {
              "computeType": "AmlCompute",
              "properties": {
                    "vmSize": "[parameters('vmSize')]",
                    "scaleSettings": {
                        "minNodeCount": "[parameters('minNodeCount')]",
                        "maxNodeCount": "[parameters('maxNodeCount')]",
                        "nodeIdleTimeBeforeScaleDown": "[parameters('nodeIdleTimeBeforeScaleDown')]"
                    }
                }
            }
        }
  ],
  "outputs": {
      "workspaceName": {
          "type": "string",
          "value": "[parameters('workspaceName')]"
      },
      "computeName": {
          "type": "string",
          "value": "[parameters('computeName')]"
      }
    }
}
