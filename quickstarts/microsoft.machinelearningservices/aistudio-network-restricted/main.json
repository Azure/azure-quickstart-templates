{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "3948304981611677450"
    }
  },
  "parameters": {
    "aiHubName": {
      "type": "string",
      "defaultValue": "demo",
      "minLength": 2,
      "maxLength": 12,
      "metadata": {
        "description": "Name for the AI resource and used to derive name of dependent resources."
      }
    },
    "aiHubFriendlyName": {
      "type": "string",
      "defaultValue": "Demo AI resource",
      "metadata": {
        "description": "Friendly name for your Azure AI resource"
      }
    },
    "aiHubDescription": {
      "type": "string",
      "defaultValue": "This is an example AI resource for use in Azure AI Studio.",
      "metadata": {
        "description": "Description of your Azure AI resource displayed in AI studio"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Set of tags to apply to all resources."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Resource name of the virtual network to deploy the resource into."
      }
    },
    "vnetRgName": {
      "type": "string",
      "metadata": {
        "description": "Resource group name of the virtual network to deploy the resource into."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet to deploy into."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which the resources should be deployed."
      }
    },
    "prefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "Prefix for all resource names."
      }
    }
  },
  "variables": {
    "name": "[toLower(format('{0}', parameters('aiHubName')))]",
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 7)]",
    "vnetResourceId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/virtualNetworks/{2}', subscription().subscriptionId, parameters('vnetRgName'), parameters('vnetName'))]",
    "subnetResourceId": "[format('{0}/subnets/{1}', variables('vnetResourceId'), parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "subnetResourceId": {
            "value": "[variables('subnetResourceId')]"
          },
          "vnetResourceId": {
            "value": "[variables('vnetResourceId')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "12604268799003102962"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string",
              "minLength": 2,
              "maxLength": 10,
              "metadata": {
                "description": "Prefix for all resource names."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Subnet Id to deploy into."
              }
            },
            "vnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the virtual network to deploy the resource into."
              }
            }
          },
          "variables": {
            "name": "[toLower(format('{0}', parameters('prefix')))]",
            "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 4)]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('appi-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "applicationInsightsName": {
                    "value": "[format('appi-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[format('ws-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "16696287949484117890"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "metadata": {
                        "description": "Application Insights resource name"
                      }
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Log Analytics resource name"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2022-10-01",
                      "name": "[parameters('logAnalyticsWorkspaceName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "name": "PerGB2018"
                        },
                        "retentionInDays": 30,
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Disabled"
                      }
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('applicationInsightsName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                        "Flow_Type": "Bluefield"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "applicationInsightsId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('kv-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "keyvaultName": {
                    "value": "[format('kv-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "keyvaultPleName": {
                    "value": "[format('ple-{0}-{1}-kv', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetResourceId')]"
                  },
                  "virtualNetworkId": {
                    "value": "[parameters('vnetResourceId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "13336815030307701123"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The Azure Region to deploy the resources into"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to apply to the Key Vault Instance"
                      }
                    },
                    "keyvaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Key Vault"
                      }
                    },
                    "keyvaultPleName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Key Vault private link endpoint"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "The Subnet ID where the Key Vault Private Link is to be created"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "The VNet ID where the Key Vault Private Link is to be created"
                      }
                    }
                  },
                  "variables": {
                    "privateDnsZoneName": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2023-07-01",
                      "name": "[parameters('keyvaultName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "createMode": "default",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enableSoftDelete": true,
                        "enableRbacAuthorization": true,
                        "enablePurgeProtection": true,
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Deny"
                        },
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "softDeleteRetentionInDays": 7,
                        "tenantId": "[subscription().tenantId]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[parameters('keyvaultPleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('keyvaultPleName')]",
                            "properties": {
                              "groupIds": [
                                "vault"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('privateDnsZoneName')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', parameters('keyvaultPleName'), 'vault-PrivateDnsZoneGroup')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneName')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('keyvaultPleName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyvaultId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('cr{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerRegistryName": {
                    "value": "[format('cr{0}{1}', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "containerRegistryPleName": {
                    "value": "[format('ple-{0}-{1}-cr', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetResourceId')]"
                  },
                  "virtualNetworkId": {
                    "value": "[parameters('vnetResourceId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "11351629738970574558"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "metadata": {
                        "description": "Container registry name"
                      }
                    },
                    "containerRegistryPleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Container registry private link endpoint name"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the virtual network"
                      }
                    }
                  },
                  "variables": {
                    "containerRegistryNameCleaned": "[replace(parameters('containerRegistryName'), '-', '')]",
                    "privateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
                    "groupName": "registry"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2023-07-01",
                      "name": "[variables('containerRegistryNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "Premium"
                      },
                      "properties": {
                        "adminUserEnabled": false,
                        "dataEndpointEnabled": false,
                        "networkRuleBypassOptions": "AzureServices",
                        "networkRuleSet": {
                          "defaultAction": "Deny"
                        },
                        "policies": {
                          "quarantinePolicy": {
                            "status": "disabled"
                          },
                          "retentionPolicy": {
                            "status": "enabled",
                            "days": 7
                          },
                          "trustPolicy": {
                            "status": "enabled",
                            "type": "Notary"
                          }
                        },
                        "publicNetworkAccess": "Disabled",
                        "zoneRedundancy": "Disabled"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[parameters('containerRegistryPleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('containerRegistryPleName')]",
                            "properties": {
                              "groupIds": [
                                "[variables('groupName')]"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('privateDnsZoneName')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', parameters('containerRegistryPleName'), format('{0}-PrivateDnsZoneGroup', variables('groupName')))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneName')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('containerRegistryPleName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "containerRegistryId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ai{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "aiServiceName": {
                    "value": "[format('ai{0}{1}', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "aiServicesPleName": {
                    "value": "[format('ple-{0}-{1}-ais', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetResourceId')]"
                  },
                  "virtualNetworkId": {
                    "value": "[parameters('vnetResourceId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "18352507087394746345"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    },
                    "aiServiceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the AI service"
                      }
                    },
                    "aiServicesPleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the AI service private link endpoint for cognitive services"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the virtual network"
                      }
                    },
                    "aiServiceSkuName": {
                      "type": "string",
                      "defaultValue": "S0",
                      "allowedValues": [
                        "S0"
                      ],
                      "metadata": {
                        "description": "AI service SKU"
                      }
                    }
                  },
                  "variables": {
                    "aiServiceNameCleaned": "[replace(parameters('aiServiceName'), '-', '')]",
                    "cognitiveServicesPrivateDnsZoneName": "privatelink.cognitiveservices.azure.com",
                    "openAiPrivateDnsZoneName": "privatelink.openai.azure.com"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.CognitiveServices/accounts",
                      "apiVersion": "2023-05-01",
                      "name": "[variables('aiServiceNameCleaned')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('aiServiceSkuName')]"
                      },
                      "kind": "AIServices",
                      "properties": {
                        "publicNetworkAccess": "Enabled",
                        "disableLocalAuth": true,
                        "apiProperties": {
                          "statisticsEnabled": false
                        },
                        "networkAcls": {
                          "defaultAction": "Deny",
                          "virtualNetworkRules": [
                            {
                              "id": "[parameters('subnetId')]",
                              "ignoreMissingVnetServiceEndpoint": false
                            }
                          ]
                        },
                        "customSubDomainName": "[variables('aiServiceNameCleaned')]"
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[parameters('aiServicesPleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('aiServicesPleName')]",
                            "properties": {
                              "groupIds": [
                                "account"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServiceNameCleaned'))]"
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServiceNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('cognitiveServicesPrivateDnsZoneName')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('openAiPrivateDnsZoneName')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('cognitiveServicesPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('cognitiveServicesPrivateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('openAiPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('openAiPrivateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', parameters('aiServicesPleName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[replace(variables('openAiPrivateDnsZoneName'), '.', '-')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('openAiPrivateDnsZoneName'))]"
                            }
                          },
                          {
                            "name": "[replace(variables('cognitiveServicesPrivateDnsZoneName'), '.', '-')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('cognitiveServicesPrivateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('aiServicesPleName'))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('cognitiveServicesPrivateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('openAiPrivateDnsZoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "aiServicesId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServiceNameCleaned'))]"
                    },
                    "aiServicesEndpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServiceNameCleaned')), '2023-05-01').endpoint]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('st{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "storageName": {
                    "value": "[format('st{0}{1}', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "storagePleBlobName": {
                    "value": "[format('ple-{0}-{1}-st-blob', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "storagePleFileName": {
                    "value": "[format('ple-{0}-{1}-st-file', variables('name'), variables('uniqueSuffix'))]"
                  },
                  "storageSkuName": {
                    "value": "Standard_LRS"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetResourceId')]"
                  },
                  "virtualNetworkId": {
                    "value": "[parameters('vnetResourceId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "5062003753912677525"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    },
                    "storageName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage account"
                      }
                    },
                    "storagePleBlobName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage blob private link endpoint"
                      }
                    },
                    "storagePleFileName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage file private link endpoint"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the virtual network"
                      }
                    },
                    "storageSkuName": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "allowedValues": [
                        "Standard_LRS",
                        "Standard_ZRS",
                        "Standard_GRS",
                        "Standard_GZRS",
                        "Standard_RAGRS",
                        "Standard_RAGZRS",
                        "Premium_LRS",
                        "Premium_ZRS"
                      ],
                      "metadata": {
                        "description": "Storage SKU"
                      }
                    }
                  },
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "blobPrivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                    "filePrivateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2023-01-01",
                      "name": "[variables('storageNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('storageSkuName')]"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowCrossTenantReplication": false,
                        "allowSharedKeyAccess": true,
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": false,
                        "isNfsV3Enabled": false,
                        "keyPolicy": {
                          "keyExpirationPeriodInDays": 7
                        },
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Deny"
                        },
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[parameters('storagePleBlobName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('storagePleBlobName')]",
                            "properties": {
                              "groupIds": [
                                "blob"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                              }
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-11-01",
                      "name": "[parameters('storagePleFileName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('storagePleFileName')]",
                            "properties": {
                              "groupIds": [
                                "file"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                              }
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('blobPrivateDnsZoneName')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', parameters('storagePleBlobName'), 'blob-PrivateDnsZoneGroup')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('blobPrivateDnsZoneName')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('storagePleBlobName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('blobPrivateDnsZoneName'), uniqueString(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('filePrivateDnsZoneName')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-11-01",
                      "name": "[format('{0}/{1}', parameters('storagePleFileName'), 'flie-PrivateDnsZoneGroup')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('filePrivateDnsZoneName')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('storagePleFileName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('filePrivateDnsZoneName'), uniqueString(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "aiservicesID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('ai{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.aiServicesId.value]"
            },
            "aiservicesTarget": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('ai{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.aiServicesEndpoint.value]"
            },
            "storageId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('st{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.storageId.value]"
            },
            "keyvaultId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('kv-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.keyvaultId.value]"
            },
            "containerRegistryId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('cr{0}{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.containerRegistryId.value]"
            },
            "applicationInsightsId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appi-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.applicationInsightsId.value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ai-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aiHubName": {
            "value": "[format('aih-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "aiHubFriendlyName": {
            "value": "[parameters('aiHubFriendlyName')]"
          },
          "aiHubDescription": {
            "value": "[parameters('aiHubDescription')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "uniqueSuffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "vnetResourceId": {
            "value": "[variables('vnetResourceId')]"
          },
          "subnetResourceId": {
            "value": "[variables('subnetResourceId')]"
          },
          "aiServicesId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.aiservicesID.value]"
          },
          "aiServicesTarget": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.aiservicesTarget.value]"
          },
          "applicationInsightsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.applicationInsightsId.value]"
          },
          "containerRegistryId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.containerRegistryId.value]"
          },
          "keyVaultId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.keyvaultId.value]"
          },
          "storageAccountId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))), '2022-09-01').outputs.storageId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "10758495904865085209"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "aiHubName": {
              "type": "string",
              "metadata": {
                "description": "AI hub name"
              }
            },
            "aiHubFriendlyName": {
              "type": "string",
              "defaultValue": "[parameters('aiHubName')]",
              "metadata": {
                "description": "AI hub display name"
              }
            },
            "aiHubDescription": {
              "type": "string",
              "metadata": {
                "description": "AI hub description"
              }
            },
            "applicationInsightsId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the application insights resource for storing diagnostics logs"
              }
            },
            "containerRegistryId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the container registry resource for storing docker images"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the key vault resource for storing connection strings"
              }
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the storage account resource for storing experimentation outputs"
              }
            },
            "aiServicesId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the AI Services resource"
              }
            },
            "aiServicesTarget": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the AI Services endpoint"
              }
            },
            "vnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the virtual network to deploy the resource into."
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Subnet Id to deploy into."
              }
            },
            "uniqueSuffix": {
              "type": "string",
              "metadata": {
                "description": "Unique Suffix used for name generation"
              }
            }
          },
          "variables": {
            "privateEndpointName": "[format('{0}-AIHub-PE', parameters('aiHubName'))]",
            "targetSubResource": [
              "amlworkspace"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-01-01-preview",
              "name": "[format('{0}/{1}', parameters('aiHubName'), format('{0}-connection-AIServices', parameters('aiHubName')))]",
              "properties": {
                "category": "AIServices",
                "target": "[parameters('aiServicesTarget')]",
                "authType": "ApiKey",
                "isSharedToAll": true,
                "credentials": {
                  "key": "[format('{0}', listKeys(parameters('aiServicesId'), '2021-10-01').key1)]"
                },
                "metadata": {
                  "ApiType": "Azure",
                  "ResourceId": "[parameters('aiServicesId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2023-10-01",
              "name": "[parameters('aiHubName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[parameters('aiHubFriendlyName')]",
                "description": "[parameters('aiHubDescription')]",
                "keyVault": "[parameters('keyVaultId')]",
                "storageAccount": "[parameters('storageAccountId')]",
                "applicationInsights": "[parameters('applicationInsightsId')]",
                "containerRegistry": "[parameters('containerRegistryId')]",
                "publicNetworkAccess": "Disabled",
                "managedNetwork": {
                  "isolationMode": "AllowInternetOutBound"
                },
                "sharedPrivateLinkResources": []
              },
              "kind": "hub"
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-11-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                },
                "customNetworkInterfaceName": "[format('{0}-nic-{1}', parameters('aiHubName'), parameters('uniqueSuffix'))]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('aiHubName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]",
                      "groupIds": "[variables('targetSubResource')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.api.azureml.ms",
              "location": "global",
              "tags": {},
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.notebooks.azure.net",
              "location": "global",
              "tags": {},
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.api.azureml.ms', format('{0}-api', uniqueString(parameters('vnetResourceId'))))]",
              "location": "global",
              "properties": {
                "virtualNetwork": {
                  "id": "[parameters('vnetResourceId')]"
                },
                "registrationEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.notebooks.azure.net', format('{0}-notebooks', uniqueString(parameters('vnetResourceId'))))]",
              "location": "global",
              "properties": {
                "virtualNetwork": {
                  "id": "[parameters('vnetResourceId')]"
                },
                "registrationEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.notebooks.azure.net')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}/{1}', variables('privateEndpointName'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-api-azureml-ms",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')]"
                    }
                  },
                  {
                    "name": "privatelink-notebooks-azure-net",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.notebooks.azure.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.notebooks.azure.net')]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', 'privatelink.api.azureml.ms', format('{0}-api', uniqueString(parameters('vnetResourceId'))))]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', 'privatelink.notebooks.azure.net', format('{0}-notebooks', uniqueString(parameters('vnetResourceId'))))]"
              ]
            }
          ],
          "outputs": {
            "aiHubID": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix')))]"
      ]
    }
  ]
}