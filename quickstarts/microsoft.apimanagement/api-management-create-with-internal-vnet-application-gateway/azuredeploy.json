{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "12070281286799895634"
    }
  },
  "parameters": {
    "base_name": {
      "type": "string",
      "metadata": {
        "description": "This will be used to derive names for all of your resources"
      }
    },
    "log_analytics_workspace_id": {
      "type": "string",
      "metadata": {
        "description": "The resource ID for an existing Log Analytics workspace"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location in which resources will be created"
      }
    },
    "apim_sku": {
      "type": "string",
      "defaultValue": "Developer",
      "allowedValues": [
        "Developer",
        "Premium"
      ],
      "metadata": {
        "description": "The edition of Azure API Management to use. This must be an edition that supports VNET Integration. This selection can have a significant impact on consumption cost and 'Developer' is recommended for non-production use."
      }
    },
    "apim_capacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Azure API Management capacity units to provision. For Developer edition, this must equal 1."
      }
    },
    "app_gateway_capacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Azure Application Gateway capacity units to provision. This setting has a direct impact on consumption cost and is recommended to be left at the default value of 1"
      }
    },
    "vnet_address_prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The address space (in CIDR notation) to use for the VNET to be deployed in this solution. If integrating with other networked components, there should be no overlap in address space."
      }
    },
    "app_gateway_subnet_prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The address space (in CIDR notation) to use for the subnet to be used by Azure Application Gateway. Must be contained in the VNET address space."
      }
    },
    "apim_subnet_prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "The address space (in CIDR notation) to use for the subnet to be used by Azure API Management. Must be contained in the VNET address space."
      }
    },
    "apim_publisher_name": {
      "type": "string",
      "defaultValue": "Contoso",
      "metadata": {
        "description": "Descriptive name for publisher to be used in the portal"
      }
    },
    "apim_publisher_email": {
      "type": "string",
      "defaultValue": "api@contoso.com",
      "metadata": {
        "description": "Email adddress associated with publisher"
      }
    }
  },
  "variables": {
    "appInsightName": "[format('{0}-ai', parameters('base_name'))]",
    "vnetName": "[format('{0}-vnet', parameters('base_name'))]",
    "apimName": "[format('{0}-apim', parameters('base_name'))]",
    "publicIPName": "[format('{0}-pip', parameters('base_name'))]",
    "gatewayName": "[format('{0}-agw', parameters('base_name'))]",
    "vnet_dns_link_name": "[format('{0}-vnet-dns-link', parameters('base_name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2022-08-01",
      "name": "[variables('apimName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('apim_sku')]",
        "capacity": "[parameters('apim_capacity')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "publisherName": "[parameters('apim_publisher_name')]",
        "publisherEmail": "[parameters('apim_publisher_email')]",
        "virtualNetworkType": "Internal",
        "virtualNetworkConfiguration": {
          "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'apimSubnet')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/gateways",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', variables('apimName'), 'my-gateway')]",
      "properties": {
        "locationData": {
          "name": "My internal location"
        },
        "description": "Self hosted gateway bringing API Management to the edge"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/loggers",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', variables('apimName'), 'AppInsightsLogger')]",
      "properties": {
        "loggerType": "applicationInsights",
        "resourceId": "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]",
        "credentials": {
          "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').InstrumentationKey]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', variables('apimName'), 'applicationinsights')]",
      "properties": {
        "alwaysLog": "allErrors",
        "httpCorrelationProtocol": "Legacy",
        "verbosity": "information",
        "logClientIp": true,
        "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apimName'), 'AppInsightsLogger')]",
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100
        },
        "frontend": {
          "request": {
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "body": {
              "bytes": 0
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
        "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apimName'), 'AppInsightsLogger')]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.ApiManagement/service/{0}', variables('apimName'))]",
      "name": "logToAnalytics",
      "properties": {
        "workspaceId": "[parameters('log_analytics_workspace_id')]",
        "logs": [
          {
            "category": "GatewayLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2023-09-01",
      "name": "[variables('gatewayName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "WAF_v2",
          "tier": "WAF_v2",
          "capacity": "[parameters('app_gateway_capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'appGatewaySubnet')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "gatewayBackEnd",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[format('{0}.azure-api.net', variables('apimName'))]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "apim-gateway-https-setting",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "hostName": "[format('{0}.azure-api.net', variables('apimName'))]",
              "pickHostNameFromBackendAddress": false,
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('gatewayName'), 'apim-gateway-probe')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "apim-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontEndIPConfigurations', variables('gatewayName'), 'appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontEndPorts', variables('gatewayName'), 'port_80')]"
              },
              "protocol": "Http",
              "requireServerNameIndication": false
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "apim-routing-rule",
            "properties": {
              "ruleType": "Basic",
              "priority": 1,
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('gatewayName'), 'apim-listener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('gatewayName'), 'gatewayBackEnd')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('gatewayName'), 'apim-gateway-https-setting')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "apim-gateway-probe",
            "properties": {
              "protocol": "Https",
              "host": "[format('{0}.azure-api.net', variables('apimName'))]",
              "port": 443,
              "path": "/status-0123456789abcdef",
              "interval": 30,
              "timeout": 120,
              "unhealthyThreshold": 8,
              "pickHostNameFromBackendHttpSettings": false,
              "minServers": 0
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Detection",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.2",
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'azure-api.net')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Network/applicationGateways/{0}', variables('gatewayName'))]",
      "name": "logToAnalytics",
      "properties": {
        "workspaceId": "[parameters('log_analytics_workspace_id')]",
        "logs": [
          {
            "category": "ApplicationGatewayAccessLog",
            "enabled": true
          },
          {
            "category": "ApplicationGatewayPerformanceLog",
            "enabled": true
          },
          {
            "category": "ApplicationGatewayFirewallLog",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/applicationGateways', variables('gatewayName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[parameters('log_analytics_workspace_id')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[variables('publicIPName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('base_name')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet_address_prefix')]"
          ]
        },
        "subnets": [
          {
            "type": "subnets",
            "name": "appGatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('app_gateway_subnet_prefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "type": "subnets",
            "name": "apimSubnet",
            "properties": {
              "addressPrefix": "[parameters('apim_subnet_prefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "azure-api.net",
      "location": "global",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "condition": true,
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', 'azure-api.net', variables('apimName'))]",
      "properties": {
        "ttl": 36000,
        "aRecords": [
          {
            "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', variables('apimName')), '2022-08-01').privateIPAddresses[0]]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'azure-api.net')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', 'azure-api.net', variables('vnet_dns_link_name'))]",
      "location": "global",
      "properties": {
        "registrationEnabled": true,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'azure-api.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    }
  ],
  "outputs": {
    "publicEndpointFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName')), '2023-09-01').dnsSettings.fqdn]"
    }
  }
}