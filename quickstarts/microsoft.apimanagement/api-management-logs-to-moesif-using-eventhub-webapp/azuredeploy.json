{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "7331718759374526426"
    }
  },
  "parameters": {
    "moesifApplicationId": {
      "type": "string",
      "minLength": 50,
      "metadata": {
        "description": "Your Moesif Application Id which can be found within your Moesif Portal. After signing up for a Moesif account, your Moesif Application Id will be displayed during the onboarding steps. Sets environment variable APIMEVENTS-MOESIF-APPLICATION-ID in App Service"
      }
    },
    "existingApiMgmtName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "Name of your existing Azure API Management service. If blank, the log-to-eventhub logger is not created. The API Management service must be in same Resource Group as the deployment"
      }
    },
    "azureAppServiceSku": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2",
        "P1v3",
        "P2v3",
        "P3v3"
      ],
      "metadata": {
        "description": "The instance / SKU name for Azure App Service eg: B1, B2, S1, P1V2. Note F1 and D1 shared plan are not supported as they do not support 'alwaysOn'"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "defaultValue": "[format('moesiflog{0}', uniqueString(resourceGroup().id))]",
      "minLength": 6,
      "metadata": {
        "description": "A prefix that will be added to created resource names and DNS URLs. Allowed characters: alphabets and numbers only. Resulting name must be maximum 24 characters (storage account maximum)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources. eg 'westus2'"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The base URL where templates are located. Should end with trailing '/'"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    }
  },
  "variables": {
    "moesifSessionToken": "optional",
    "moesifApiVersion": "v1",
    "apiManagementLoggerName": "moesif-log-to-event-hub",
    "azureWebsitesDomainLookup": {
      "AzureCloud": ".azurewebsites.net",
      "AzureUSGovernment": ".azurewebsites.us"
    },
    "azureWebsitesDomain": "[variables('azureWebsitesDomainLookup')[environment().name]]",
    "eventHubNS": "[parameters('dnsNamePrefix')]",
    "eventHubName": "[parameters('dnsNamePrefix')]",
    "eventHubSendPolicyName": "[format('{0}-send-policy', parameters('dnsNamePrefix'))]",
    "eventHubListenPolicy": "[format('{0}-listen-policy', parameters('dnsNamePrefix'))]",
    "azAppServiceWebJobZipUri": "[uri(parameters('_artifactsLocation'), format('scripts/apim-2-moesif-webjob-webdeploy.zip{0}', parameters('_artifactsLocationSasToken')))]",
    "storageAccountName": "[replace(parameters('dnsNamePrefix'), '-', '')]",
    "apiMgrSpecified": "[greater(length(parameters('existingApiMgmtName')), 0)]",
    "tags": {
      "purpose": "moesif"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "398839086305246667"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The name for storage account. Max 24 chars. a-z A-Z 0-9 no special characters or spaces. Used in DNS url"
              }
            },
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS"
            },
            "storageKind": {
              "type": "string",
              "defaultValue": "StorageV2"
            },
            "tags": {
              "type": "object"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources. eg 'westus2'"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "[parameters('storageKind')]"
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "eventhub-deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "eventHubNsName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "eventHubName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "eventHubSendPolicyName": {
            "value": "[variables('eventHubSendPolicyName')]"
          },
          "eventHubListenPolicy": {
            "value": "[variables('eventHubListenPolicy')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "11737312789674277153"
            }
          },
          "parameters": {
            "eventHubNsName": {
              "type": "string"
            },
            "eventHubName": {
              "type": "string"
            },
            "eventHubSendPolicyName": {
              "type": "string",
              "defaultValue": "evt-hub-apim-send-policy"
            },
            "eventHubListenPolicy": {
              "type": "string",
              "defaultValue": "evt-hub-app-consume-policy"
            },
            "ehNsSkuName": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "ehNsSkuTier": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "ehNsSkuCapacity": {
              "type": "int",
              "defaultValue": 1
            },
            "ehNsIsAutoInflateEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "ehNsMaximumThroughputUnits": {
              "type": "int",
              "defaultValue": 0
            },
            "ehNsZoneRedundant": {
              "type": "bool",
              "defaultValue": false
            },
            "messageRetentionInDays": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "Number of days to retain messages in eventhub"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2022-01-01-preview",
              "name": "[parameters('eventHubNsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('ehNsSkuName')]",
                "tier": "[parameters('ehNsSkuTier')]",
                "capacity": "[parameters('ehNsSkuCapacity')]"
              },
              "properties": {
                "isAutoInflateEnabled": "[parameters('ehNsIsAutoInflateEnabled')]",
                "maximumThroughputUnits": "[parameters('ehNsMaximumThroughputUnits')]",
                "zoneRedundant": "[parameters('ehNsZoneRedundant')]"
              }
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2022-01-01-preview",
              "name": "[format('{0}/{1}', parameters('eventHubNsName'), parameters('eventHubName'))]",
              "properties": {
                "messageRetentionInDays": "[parameters('messageRetentionInDays')]",
                "partitionCount": 2,
                "status": "Active"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNsName'))]"
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
              "apiVersion": "2022-01-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('eventHubNsName'), parameters('eventHubName'), parameters('eventHubSendPolicyName'))]",
              "properties": {
                "rights": [
                  "Send"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNsName'), parameters('eventHubName'))]"
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces/authorizationRules",
              "apiVersion": "2022-01-01-preview",
              "name": "[format('{0}/{1}', parameters('eventHubNsName'), parameters('eventHubListenPolicy'))]",
              "properties": {
                "rights": [
                  "Manage",
                  "Listen",
                  "Send"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNsName'))]"
              ]
            }
          ],
          "outputs": {
            "eventHubNsName": {
              "type": "string",
              "value": "[parameters('eventHubNsName')]"
            },
            "eventHubName": {
              "type": "string",
              "value": "[parameters('eventHubName')]"
            },
            "eventHubSendPolicyName": {
              "type": "string",
              "value": "[parameters('eventHubSendPolicyName')]"
            },
            "eventHubListenPolicy": {
              "type": "string",
              "value": "[parameters('eventHubListenPolicy')]"
            },
            "eventHubSendResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventHubNsName'), parameters('eventHubName'), parameters('eventHubSendPolicyName'))]"
            },
            "eventHubListenResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventHubNsName'), parameters('eventHubListenPolicy'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[variables('apiMgrSpecified')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "api-management-logger-deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "existingApiMgmtName": {
            "value": "[parameters('existingApiMgmtName')]"
          },
          "logToEventhubLoggerName": {
            "value": "[variables('apiManagementLoggerName')]"
          },
          "eventHubNS": {
            "value": "[variables('eventHubNS')]"
          },
          "eventHubName": {
            "value": "[variables('eventHubName')]"
          },
          "eventHubSendPolicyName": {
            "value": "[variables('eventHubSendPolicyName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "9341908268224277547"
            }
          },
          "parameters": {
            "existingApiMgmtName": {
              "type": "string",
              "metadata": {
                "description": "Name of existing Api Management service. eg: 'blue-api-mgmt-v2'"
              }
            },
            "logToEventhubLoggerName": {
              "type": "string",
              "metadata": {
                "description": "The name of log-to-eventhub 'logger-id' referred to in policy xml"
              }
            },
            "eventHubNS": {
              "type": "string",
              "metadata": {
                "description": "Name of Eventhub Namespace"
              }
            },
            "eventHubName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Eventhub"
              }
            },
            "eventHubSendPolicyName": {
              "type": "string",
              "metadata": {
                "description": "Name of Eventhub Send Policy"
              }
            }
          },
          "variables": {
            "credentialsName": "[format('credentials-{0}', parameters('logToEventhubLoggerName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}', parameters('existingApiMgmtName'), parameters('logToEventhubLoggerName'))]",
              "properties": {
                "loggerType": "azureEventHub",
                "description": "This logger logs to event hub",
                "credentials": {
                  "name": "[variables('credentialsName')]",
                  "connectionString": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', split(format('{0}/{1}/{2}', parameters('eventHubNS'), parameters('eventHubName'), parameters('eventHubSendPolicyName')), '/')[0], split(format('{0}/{1}/{2}', parameters('eventHubNS'), parameters('eventHubName'), parameters('eventHubSendPolicyName')), '/')[1], split(format('{0}/{1}/{2}', parameters('eventHubNS'), parameters('eventHubName'), parameters('eventHubSendPolicyName')), '/')[2]), '2022-01-01-preview').primaryConnectionString]"
                }
              }
            }
          ],
          "outputs": {
            "logToEventhubLoggerName": {
              "type": "string",
              "value": "[parameters('logToEventhubLoggerName')]"
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ApiManagement/service/loggers', split(format('{0}/{1}', parameters('existingApiMgmtName'), parameters('logToEventhubLoggerName')), '/')[0], split(format('{0}/{1}', parameters('existingApiMgmtName'), parameters('logToEventhubLoggerName')), '/')[1])]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'eventhub-deploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "app-service-plan-deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "appServiceSkuName": {
            "value": "[parameters('azureAppServiceSku')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "17351723853407499736"
            }
          },
          "parameters": {
            "appServicePlanName": {
              "type": "string",
              "metadata": {
                "description": "The name to be given to this new App Service Plan"
              }
            },
            "appServiceSkuName": {
              "type": "string",
              "defaultValue": "B1",
              "allowedValues": [
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1v2",
                "P2v2",
                "P3v2",
                "P1v3",
                "P2v3",
                "P3v3"
              ],
              "metadata": {
                "description": "The instance / SKU name for Azure App Service eg: B1, B2, S1, S2, P1V2. Note F1 and D1 shared plan are not supported as they do not support 'alwaysOn'"
              }
            },
            "tags": {
              "type": "object"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources. eg 'westus2'"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('appServiceSkuName')]"
              },
              "kind": "app",
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "app-service-deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServiceName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "appServicePlanName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "eventHubNamespace": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "eventHubName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "eventHubListenPolicy": {
            "value": "[variables('eventHubListenPolicy')]"
          },
          "apimEvtStorName": {
            "value": "[variables('storageAccountName')]"
          },
          "apimEvtMoesifApplicationId": {
            "value": "[parameters('moesifApplicationId')]"
          },
          "apimEvtMoesifSessionToken": {
            "value": "[variables('moesifSessionToken')]"
          },
          "apimEvtMoesifApiVersion": {
            "value": "[variables('moesifApiVersion')]"
          },
          "azureWebsitesDomain": {
            "value": "[variables('azureWebsitesDomain')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "13349046128694076939"
            }
          },
          "parameters": {
            "appServiceName": {
              "type": "string",
              "metadata": {
                "description": "The name to be given to this new App Service. This value is used in DNS and must be unique."
              }
            },
            "appServicePlanName": {
              "type": "string",
              "metadata": {
                "description": "The name of an existing App Service plan for which the App Service will be created"
              }
            },
            "eventHubNamespace": {
              "type": "string",
              "metadata": {
                "description": "sets environment variable APIMEVENTS-EVENTHUB-NAME"
              }
            },
            "eventHubName": {
              "type": "string",
              "metadata": {
                "description": "Sets environment variable APIMEVENTS-EVENTHUB-NAME"
              }
            },
            "eventHubListenPolicy": {
              "type": "string",
              "metadata": {
                "description": "Name of Event Hubs Namespace listen policy. Found in EventHubNamespace/Settings/Shared access policies: eg 'moesiflogaaaaaa-listen-policy'"
              }
            },
            "apimEvtStorName": {
              "type": "string",
              "metadata": {
                "description": "Sets environment variable APIMEVENTS-STORAGEACCOUNT-NAME"
              }
            },
            "apimEvtMoesifApplicationId": {
              "type": "string",
              "metadata": {
                "description": "Sets environment variable APIMEVENTS-MOESIF-APPLICATION-ID"
              }
            },
            "apimEvtMoesifSessionToken": {
              "type": "string",
              "defaultValue": "optional",
              "metadata": {
                "description": "Sets environment variable APIMEVENTS-MOESIF-SESSION-TOKEN"
              }
            },
            "apimEvtMoesifApiVersion": {
              "type": "string",
              "defaultValue": "v1",
              "metadata": {
                "description": "Sets environment variable APIMEVENTS-MOESIF-API-VERSION"
              }
            },
            "azureWebsitesDomain": {
              "type": "string",
              "metadata": {
                "description": "DNS name to use for azure webapp such as .azurewebsites.net"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources. eg 'westus2'"
              }
            }
          },
          "variables": {
            "appServiceHostName": "[format('{0}{1}', parameters('appServiceName'), parameters('azureWebsitesDomain'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('appServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "app",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "enabled": true,
                "hostNameSslStates": [
                  {
                    "name": "[variables('appServiceHostName')]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[format('{0}.scm{1}', parameters('appServiceName'), parameters('azureWebsitesDomain'))]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                  }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APIMEVENTS-EVENTHUB-CONNECTIONSTRING",
                      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventHubNamespace'), parameters('eventHubListenPolicy')), '2021-11-01').primaryConnectionString]"
                    },
                    {
                      "name": "APIMEVENTS-EVENTHUB-NAME",
                      "value": "[parameters('eventHubName')]"
                    },
                    {
                      "name": "APIMEVENTS-STORAGEACCOUNT-NAME",
                      "value": "[parameters('apimEvtStorName')]"
                    },
                    {
                      "name": "APIMEVENTS-STORAGEACCOUNT-KEY",
                      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('apimEvtStorName')), '2021-02-01').keys[0].value]"
                    },
                    {
                      "name": "APIMEVENTS-MOESIF-APPLICATION-ID",
                      "value": "[parameters('apimEvtMoesifApplicationId')]"
                    },
                    {
                      "name": "APIMEVENTS-MOESIF-SESSION-TOKEN",
                      "value": "[parameters('apimEvtMoesifSessionToken')]"
                    },
                    {
                      "name": "APIMEVENTS-MOESIF-API-VERSION",
                      "value": "[parameters('apimEvtMoesifApiVersion')]"
                    }
                  ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None"
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'web')]",
              "properties": {
                "netFrameworkVersion": "v5.0",
                "logsDirectorySizeLimit": 60,
                "numberOfWorkers": 1,
                "alwaysOn": true,
                "detailedErrorLoggingEnabled": true,
                "httpLoggingEnabled": true,
                "requestTracingEnabled": true,
                "ftpsState": "Disabled",
                "minTlsVersion": "1.2",
                "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php",
                  "hostingstart.html"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                "[resourceId('Microsoft.Web/sites/hostNameBindings', parameters('appServiceName'), variables('appServiceHostName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), variables('appServiceHostName'))]",
              "properties": {
                "siteName": "[parameters('appServiceName')]",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "appServiceName": {
              "type": "string",
              "value": "[parameters('appServiceName')]"
            },
            "appServiceHostName": {
              "type": "string",
              "value": "[variables('appServiceHostName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'app-service-plan-deploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'eventhub-deploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'storage-deploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "app-service-webjob-msdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServiceName": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "webJobZipDeployUrl": {
            "value": "[variables('azAppServiceWebJobZipUri')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "11495121953042658670"
            }
          },
          "parameters": {
            "appServiceName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure App service resource"
              }
            },
            "webJobZipDeployUrl": {
              "type": "string",
              "metadata": {
                "description": "URL to Zip file that contains webjob using format suitable to be published using msdeploy"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/MSDeploy', parameters('appServiceName'))]",
              "properties": {
                "addOnPackages": [
                  {
                    "packageUri": "[parameters('webJobZipDeployUrl')]",
                    "AppOffline": true
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'app-service-deploy')]"
      ]
    }
  ],
  "outputs": {
    "logToEventhubLoggerName": {
      "type": "string",
      "value": "[variables('apiManagementLoggerName')]"
    }
  }
}