{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "mutualAuthenticationCertificate": {
      "type": "securestring",
      "metadata": {
        "description": "Base-64 encoded Mutual authentication PFX certificate."
      }
    },
    "certificatePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Mutual authentication certificate password."
      }
    },
    "googleClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Google client secret to configure google identity."
      }
    },
    "openIdConnectClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "OpenId connect client secret."
      }
    },
    "tenantPolicy": {
      "type": "string",
      "metadata": {
        "description": "Tenant policy XML."
      }
    },
    "apiPolicy": {
      "type": "string",
      "metadata": {
        "description": "API policy XML."
      }
    },
    "operationPolicy": {
      "type": "string",
      "metadata": {
        "description": "Operation policy XML."
      }
    },
    "productPolicy": {
      "type": "string",
      "metadata": {
        "description": "Product policy XML."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "URI to artifacts location"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
      },
      "defaultValue": ""
    },
    "dnsNamePrefix": {
      "type": "string",
      "defaultValue": "[concat('ns', uniqueString(resourceGroup().id))]",
      "minLength": 6,
      "metadata": {
          "description": "A prefix that will be added to created resource names and DNS URLs. Allowed characters: alphabets and numbers only. Resulting name must be maximum 24 characters (storage account maximum)"
      }
    }
  },
  "variables": {
    "eventHubSendPolicyName": "[concat(parameters('dnsNamePrefix'), '-send-policy')]",
    "eventHubListenPolicy": "[concat(parameters('dnsNamePrefix'), '-listen-policy')]",
    "apiManagementServiceName": "[concat('apiservice', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "eventhub-deploy",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'), concat('nested/namespaces.json', parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "eventHubNsName": {
                    "value": "[parameters('dnsNamePrefix')]"
                },
                "eventHubName": {
                    "value": "[parameters('dnsNamePrefix')]"
                },
                "eventHubSendPolicyName": {
                    "value": "[variables('eventHubSendPolicyName')]"
                },
                "eventHubListenPolicy": {
                    "value": "[variables('eventHubListenPolicy')]"
                },
                "tags": {
                    "value": {}
                },
                "location": {
                    "value": "[parameters('location')]"
                }
            }
        }
    },
    {
      "apiVersion": "2017-03-01",
      "name": "[variables('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'eventhub-deploy')]"
      ],
      "tags": {},
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]"
      },
      "resources": [
        {
          "apiVersion": "2017-03-01",
          "type": "policies",
          "name": "policy",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "policyContent": "[parameters('tenantPolicy')]"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "PetStoreSwaggerImportExample",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "contentFormat": "swagger-link-json",
            "contentValue": "http://petstore.swagger.io/v2/swagger.json",
            "path": "examplepetstore"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "exampleApi",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Example API Name",
            "description": "Description for example API",
            "serviceUrl": "https://example.net",
            "path": "exampleapipath",
            "protocols": [
              "HTTPS"
            ]
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "exampleOperationsDELETE",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/exampleApi')]"
              ],
              "properties": {
                "displayName": "DELETE resource",
                "method": "DELETE",
                "urlTemplate": "/resource",
                "description": "A demonstration of a DELETE call"
              }
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "exampleOperationsGET",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/exampleApi')]"
              ],
              "properties": {
                "displayName": "GET resource",
                "method": "GET",
                "urlTemplate": "/resource",
                "description": "A demonstration of a GET call"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/exampleApi')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/exampleApi/operations/exampleOperationsGET')]"
                  ],
                  "properties": {
                    "policyContent": "[parameters('operationPolicy')]"
                  }
                }
              ]
            }
          ]
        },
        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "exampleApiWithPolicy",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Example API Name with Policy",
            "description": "Description for example API with policy",
            "serviceUrl": "https://exampleapiwithpolicy.net",
            "path": "exampleapiwithpolicypath",
            "protocols": [
              "HTTPS"
            ]
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "policies",
              "name": "policy",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/exampleApiWithPolicy')]"
              ],
              "properties": {
                "policyContent": "[parameters('apiPolicy')]"
              }
            }
          ]
        },
        {
          "apiVersion": "2017-03-01",
          "type": "products",
          "name": "exampleProduct",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Example Product Name",
            "description": "Description for example product",
            "terms": "Terms for example product",
            "subscriptionRequired": true,
            "approvalRequired": false,
            "subscriptionsLimit": 1,
            "state": "published"
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "apis",
              "name": "exampleApi",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/exampleApi')]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/exampleProduct')]"
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "policies",
              "name": "policy",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/exampleProduct')]"
              ],
              "properties": {
                "policyContent": "[parameters('productPolicy')]"
              }
            }
          ]
        },
        {
          "apiVersion": "2017-03-01",
          "type": "users",
          "name": "exampleUser1",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "firstName": "ExampleFirstName1",
            "lastName": "ExampleLastName1",
            "email": "ExampleFirst1@example.com",
            "state": "active",
            "note": "note for example user 1"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "users",
          "name": "exampleUser2",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "firstName": "ExampleFirstName2",
            "lastName": "ExampleLastName2",
            "email": "ExampleFirst2@example.com",
            "state": "active",
            "note": "note for example user 2"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "users",
          "name": "exampleUser3",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "firstName": "ExampleFirstName3",
            "lastName": "ExampleLastName3",
            "email": "ExampleFirst3@example.com",
            "state": "active",
            "note": "note for example user 3"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "properties",
          "name": "exampleproperties",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "propertyExampleName",
            "value": "propertyExampleValue",
            "tags": [
              "exampleTag"
            ]
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "subscriptions",
          "name": "examplesubscription1",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/exampleProduct')]",
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/users/exampleUser1')]"
          ],
          "properties": {
            "productId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/exampleServiceName/products/exampleProduct",
            "userId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/exampleServiceName/users/exampleUser1"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "subscriptions",
          "name": "examplesubscription2",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/exampleProduct')]",
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/users/exampleUser3')]",
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/subscriptions/examplesubscription1')]"
          ],
          "properties": {
            "productId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/exampleServiceName/products/exampleProduct",
            "userId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/exampleServiceName/users/exampleUser3"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "certificates",
          "name": "exampleCertificate",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "data": "[parameters('mutualAuthenticationCertificate')]",
            "password": "[parameters('certificatePassword')]"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "groups",
          "name": "exampleGroup",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Example Group Name",
            "description": "Example group description"
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "users",
              "name": "exampleUser3",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/groups/exampleGroup')]"
              ]
            }
          ]
        },
        {
          "apiVersion": "2017-03-01",
          "type": "openidConnectProviders",
          "name": "exampleOpenIdConnectProvider",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "exampleOpenIdConnectProviderName",
            "description": "Description for example OpenId Connect provider",
            "metadataEndpoint": "https://example-openIdConnect-url.net",
            "clientId": "exampleClientId",
            "clientSecret": "[parameters('openIdConnectClientSecret')]"
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "loggers",
          "name": "exampleLogger",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "loggerType": "azureEventHub",
            "description": "Description for example logger",
            "credentials": {
              "name": "exampleEventHubName",
              "connectionString": "[listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('dnsNamePrefix'), parameters('dnsNamePrefix'), variables('eventHubSendPolicyName')), '2017-04-01').primaryConnectionString]"
            }
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "identityProviders",
          "name": "google",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "clientId": "googleClientId",
            "clientSecret": "[parameters('googleClientSecret')]"
          }
        }
      ]
    }
  ]
}
