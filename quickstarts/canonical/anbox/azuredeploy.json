{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "18079100200092349451"
    }
  },
  "parameters": {
    "addDedicatedDataDiskForLXD": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Add a dedicated disk for the LXD storage pool"
      }
    },
    "administratorPublicSSHKey": {
      "type": "securestring",
      "metadata": {
        "description": "Public SSH key of the virtual machine administrator"
      }
    },
    "administratorUsername": {
      "type": "string",
      "metadata": {
        "description": "Virtual machine administrator username"
      }
    },
    "exposeAnboxContainerServices": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Expose Anbox container services to the public internet on the port range 10000-11000; when false, Anbox container services will only be accessible from the virtual machine"
      }
    },
    "exposeAnboxManagementService": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Expose the Anbox Management Service to the public internet on port 8444; when false, the Anbox Management Service will only be accessible from the virtual machine"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of all resources"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "anboxVirtualMachineNetworkInterfaceSecurityGroup",
      "metadata": {
        "description": "Name of the virtual machine network interface security group"
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "CIDR block of the virtual network subnet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "anboxVirtualNetworkSubnet",
      "metadata": {
        "description": "Name of the virtual network subnet"
      }
    },
    "ubuntuImageOffer": {
      "type": "string",
      "defaultValue": "0001-com-ubuntu-pro-jammy",
      "metadata": {
        "description": "Offer of the Ubuntu image from which to launch the virtual machine; must be a Pro offer if an argument is not provided for the ubuntuProToken parameter"
      }
    },
    "ubuntuImageSKU": {
      "type": "string",
      "defaultValue": "pro-22_04-lts-gen2",
      "metadata": {
        "description": "SKU of the Ubuntu image from which to launch the virtual machine; must be a Pro SKU if an argument is not provided for the ubuntuProToken parameter"
      }
    },
    "ubuntuProToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Ubuntu Pro token to attach to the virtual machine; will be ignored by cloud-init if the arguments provided for the ubuntuImageOffer and ubuntuImageSKU parameters correspond to a Pro image (see https://cloudinit.readthedocs.io/en/latest/reference/modules.html#ubuntu-pro)"
      }
    },
    "virtualMachineDataDiskSizeInGB": {
      "type": "int",
      "defaultValue": 100,
      "minValue": 100,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of the virtual machine data disk (LXD storage pool) when applicable; see the addDedicatedDataDiskForLXD parameter; must comply with https://anbox-cloud.io/docs/reference/requirements#anbox-cloud-appliance-4"
      }
    },
    "virtualMachineName": {
      "type": "string",
      "defaultValue": "anboxVirtualMachine",
      "metadata": {
        "description": "Name of the virtual machine"
      }
    },
    "virtualMachineOperatingSystemDiskSizeInGB": {
      "type": "int",
      "defaultValue": 40,
      "minValue": 40,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of the virtual machine operating system disk; must comply with https://anbox-cloud.io/docs/reference/requirements#anbox-cloud-appliance-4"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v5",
      "metadata": {
        "description": "Size of the virtual machine; must comply with https://anbox-cloud.io/docs/reference/requirements#anbox-cloud-appliance-4"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "CIDR block of the virtual network"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "anboxVirtualNetwork",
      "metadata": {
        "description": "Name of the virtual network"
      }
    }
  },
  "variables": {
    "anboxDestinationPortRangesAnboxManagementService": "[if(parameters('exposeAnboxManagementService'), createArray('8444'), createArray())]",
    "anboxDestinationPortRangesBase": [
      "80",
      "443",
      "5349",
      "60000-60100"
    ],
    "anboxDestinationPortRangesContainers": "[if(parameters('exposeAnboxContainerServices'), createArray('10000-11000'), createArray())]",
    "anboxDestinationPortRanges": "[concat(variables('anboxDestinationPortRangesAnboxManagementService'), variables('anboxDestinationPortRangesBase'), variables('anboxDestinationPortRangesContainers'))]",
    "cloudConfigWithToken": "#cloud-config\r\n\r\npackage_upgrade: true\r\n\r\nubuntu_advantage:\r\n  token: ubuntuProToken\r\n  enable:\r\n    - anbox-cloud",
    "cloudConfigWithoutToken": "#cloud-config\r\n\r\npackage_upgrade: true\r\n\r\nubuntu_advantage:\r\n  enable:\r\n    - anbox-cloud",
    "cloudConfig": "[base64(if(empty(parameters('ubuntuProToken')), variables('cloudConfigWithoutToken'), replace(variables('cloudConfigWithToken'), 'ubuntuProToken', parameters('ubuntuProToken'))))]",
    "dataDisks": "[if(parameters('addDedicatedDataDiskForLXD'), createArray(createObject('createOption', 'Empty', 'diskSizeGB', parameters('virtualMachineDataDiskSizeInGB'), 'lun', 0, 'managedDisk', createObject('storageAccountType', 'Premium_LRS'))), createArray())]",
    "imagePlan": "[if(empty(parameters('ubuntuProToken')), createObject('name', parameters('ubuntuImageSKU'), 'product', parameters('ubuntuImageOffer'), 'publisher', 'canonical'), null())]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('administratorUsername'))]",
            "keyData": "[parameters('administratorPublicSSHKey')]"
          }
        ]
      }
    },
    "networkInterfaceName": "[format('{0}NetworkInterface', parameters('virtualMachineName'))]",
    "publicIPAddressName": "[format('{0}PublicIP', parameters('virtualMachineName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-09-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "Anbox",
            "properties": {
              "priority": 1010,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRanges": "[variables('anboxDestinationPortRanges')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[format('{0}IPConfiguration', variables('networkInterfaceName'))]",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2023-09-01').subnets[0].id]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-09-01",
      "name": "[parameters('virtualMachineName')]",
      "location": "[parameters('location')]",
      "plan": "[variables('imagePlan')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "diskSizeGB": "[parameters('virtualMachineOperatingSystemDiskSizeInGB')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "[parameters('ubuntuImageOffer')]",
            "sku": "[parameters('ubuntuImageSKU')]",
            "version": "latest"
          },
          "dataDisks": "[variables('dataDisks')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('administratorUsername')]",
          "adminPassword": "[parameters('administratorPublicSSHKey')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]",
          "customData": "[variables('cloudConfig')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    }
  ],
  "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[format('ssh -i $PATH_TO_ADMINISTRATOR_PRIVATE_SSH_KEY {0}@{1}', parameters('administratorUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2023-09-01').ipAddress)]"
    },
    "virtualMachinePublicIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2023-09-01').ipAddress]"
    }
  }
}