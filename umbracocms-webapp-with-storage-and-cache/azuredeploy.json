{
   "$schema":"http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "siteName":{
         "type":"string",
         "metadata":{
            "description":"Name of azure web app"
         }
      },
      "hostingPlanName":{
         "type":"string",
         "metadata":{
            "description":"Name of azure web app service plan"
         }
      },
      "hostingEnvironment":{
         "type":"string",
         "defaultValue":""
      },
      "serverFarmResourceGroup":{
         "type":"string",
         "metadata":{
            "description":"Name of your resource group"
         }
      },
      "siteLocation":{
         "type":"string",
         "metadata":{
            "description":"Azure region where the web app will be deployed"
         }
      },
      "sku":{
         "type":"string",
         "allowedValues":[
            "Standard",
            "Premium"
         ],
         "defaultValue":"Standard",
         "metadata":{
            "description":"Choose either Standard or Premium Azure Web Apps pricing tiers. It defaults to Standard"
         }
      },
      "workerSize":{
         "type":"string",
         "allowedValues":[
            "0",
            "1",
            "2"
         ],
         "defaultValue":"0",
         "metadata":{
            "description":"Worker Size( 0=Small, 1=Medium, 2=Large )"
         }
      },
      "serverName":{
         "type":"string",
         "metadata":{
            "description":"SQL Azure DB Server name"
         }
      },
      "serverLocation":{
         "type":"string",
         "metadata":{
            "description":"SQL Azure DB server location"
         }
      },
      "administratorLogin":{
         "type":"string",
         "metadata":{
            "description":"SQL Azure DB administrator  user login"
         }
      },
      "administratorLoginPassword":{
         "type":"securestring",
         "metadata":{
            "description":"Worker Size( 0=Small, 1=Medium, 2=Large )"
         }
      },
      "databaseName":{
         "type":"string",
         "metadata":{
            "description":"Database Name)"
         }
      },
      "collation":{
         "type":"string",
         "defaultValue":"SQL_Latin1_General_CP1_CI_AS",
         "metadata":{
            "description":"SQL DB Collation"
         }
      },
      "edition":{
         "type":"string",
         "defaultValue":"Standard",
         "metadata":{
            "description":"SQL DB Sku : Standard"
         }
      },
      "maxSizeBytes":{
         "type":"string",
         "defaultValue":"1073741824",
         "metadata":{
            "description":"Maximum Size Bytes"
         }
      },
      "requestedServiceObjectiveId":{
         "type":"string",
         "defaultValue":"910b4fcb-8a29-4c3e-958f-f7ba794388b2",
         "metadata":{
            "description":"Requested Service Objective Id"
         }
      },
      "storageName":{
         "type":"string",
         "metadata":{
            "description":"Storage Account Name"
         }
      },
      "storageAccountType":{
         "type":"string",
         "allowedValues":[
            "Standard-LRS",
            "Standard-GRS",
            "Standard-RAGRS",
            "Standard-ZRS"
         ],
         "metadata":{
            "description":"Storage Account Type : Standard-LRS, Standard-GRS,Standard-RAGRS,Standard-ZRS"
         },
         "defaultValue":"Standard-GRS"
      },
      "redisCacheName":{
         "type":"string",
         "metadata":{
            "description":"Redis Cache Name"
         }
      },
      "redisCacheSKU":{
         "type":"string",
         "allowedValues":[
            "Basic",
            "Standard"
         ],
         "metadata":{
            "description":"Redis Cache Sku : Basic , Standard"
         },
         "defaultValue":"Standard"
      },
      "redisCacheFamily":{
         "type":"string",
         "defaultValue":"C",
         "metadata":{
            "description":"Redis Cache Family : C such as  C0, C1 etc"
         }
      },
      "redisCacheCapacity":{
         "type":"int",
         "allowedValues":[
            0,
            1,
            2,
            3,
            4,
            5,
            6
         ],
         "metadata":{
            "description":"Redis Cache Capacity  , supported values from 0 to 6"
         },
         "defaultValue":0
      },
      "redisCacheVersion":{
         "type":"string",
         "defaultValue":"2.8",
         "metadata":{
            "description":"Redis Cache version 2.8"
         }
      },
      "NonAdmin_DatabaseUsername":{
         "type":"string",
         "metadata":{
            "description":"Non-admin Database User. Must be Unique"
         }
      },
      "NonAdmin_DatabasePassword":{
         "type":"securestring",
         "metadata":{
            "description":"Non-admin Database User password"
         }
      }
   },
   "resources":[
      {
         "apiVersion":"2014-04-01-preview",
         "name":"[parameters('redisCacheName')]",
         "type":"Microsoft.Cache/Redis",
         "location":"[parameters('siteLocation')]",
         "properties":{
            "sku":{
               "name":"[parameters('redisCacheSKU')]",
               "family":"[parameters('redisCacheFamily')]",
               "capacity":"[parameters('redisCacheCapacity')]"
            },
            "redisVersion":"[parameters('redisCacheVersion')]",
            "enableNonSslPort":true
         }
      },
      {
         "apiVersion":"2.0",
         "name":"[parameters('serverName')]",
         "type":"Microsoft.Sql/servers",
         "location":"[parameters('serverLocation')]",
         "properties":{
            "administratorLogin":"[parameters('administratorLogin')]",
            "administratorLoginPassword":"[parameters('administratorLoginPassword')]"
         },
         "resources":[
            {
               "apiVersion":"2.0",
               "name":"[parameters('databaseName')]",
               "type":"databases",
               "location":"[parameters('serverLocation')]",
               "dependsOn":[
                  "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
               ],
               "properties":{
                  "edition":"[parameters('edition')]",
                  "collation":"[parameters('collation')]",
                  "maxSizeBytes":"[parameters('maxSizeBytes')]",
                  "requestedServiceObjectiveId":"[parameters('requestedServiceObjectiveId')]"
               }
            },
            {
               "apiVersion":"2.0",
               "name":"AllowAllWindowsAzureIps",
               "type":"firewallrules",
               "location":"[parameters('serverLocation')]",
               "dependsOn":[
                  "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
               ],
               "properties":{
                  "endIpAddress":"0.0.0.0",
                  "startIpAddress":"0.0.0.0"
               }
            }
         ]
      },
      {
         "apiVersion":"2014-06-01",
         "type":"Microsoft.ClassicStorage/storageAccounts",
         "name":"[parameters('storageName')]",
         "location":"[parameters('siteLocation')]",
         "properties":{
            "accountType":"[parameters('storageAccountType')]"
         }
      },
      {
         "apiVersion":"2014-06-01",
         "name":"[parameters('hostingPlanName')]",
         "type":"Microsoft.Web/serverFarms",
         "location":"[parameters('siteLocation')]",
         "properties":{
            "name":"[parameters('hostingPlanName')]",
            "sku":"[parameters('sku')]",
            "workerSize":"[parameters('workerSize')]",
            "hostingEnvironment":"[parameters('hostingEnvironment')]",
            "numberOfWorkers":1
         }
      },
      {
         "apiVersion":"2015-02-01",
         "name":"[parameters('siteName')]",
         "type":"Microsoft.Web/Sites",
         "location":"[parameters('siteLocation')]",
         "tags":{
            "[concat('hidden-related:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]":"empty"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
         ],
         "properties":{
            "name":"[parameters('siteName')]",
            "serverFarmId":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
            "hostingEnvironment":"[parameters('hostingEnvironment')]"
         },
         "resources":[
            {
               "apiVersion":"2014-06-01",
               "name":"MSDeploy",
               "type":"Extensions",
               "dependsOn":[
                  "[concat('Microsoft.Web/Sites/', parameters('siteName'))]",
                  "[concat('Microsoft.Web/Sites/', parameters('siteName'), '/config/web')]",
                  "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
               ],
               "properties":{
                  "packageUri":"https://auxmktplceprod.blob.core.windows.net/packages/Premium-UmbracoCms.7.3.0.zip",
                  "dbType":"SQL",
                  "connectionString":"[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', parameters('serverName'), ';Password=', parameters('administratorLoginPassword'), ';')]",
                  "setParameters":{
                     "Application Path":"[parameters('siteName')]",
                     "Database Server":"[reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName]",
                     "Database Name":"[parameters('databaseName')]",
                     "Database Username":"[parameters('NonAdmin_DatabaseUsername')]",
                     "Database Password":"[parameters('NonAdmin_DatabasePassword')]",
                     "Database Administrator":"[parameters('administratorLogin')]",
                     "Database Administrator Password":"[parameters('administratorLoginPassword')]",
                     "azurestoragerootUrl":"[concat('https://',parameters('storageName'), '.blob.core.windows.net')]",
                     "azurestoragecontainerName":"media",
                     "azurestorageconnectionString":"[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'), ';AccountKey=' , listKeys(concat('Microsoft.ClassicStorage/storageAccounts/', parameters('storageName')), '2014-06-01').primaryKey )]",
                     "rediscachehost":"[concat(parameters('redisCacheName'), '.redis.cache.windows.net')]",
                     "rediscacheport":"6379",
                     "rediscacheaccessKey":"[listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')), '2014-04-01').primaryKey]",
                     "azurestoragecacheControl":"*|public, max-age=31536000;js|no-cache"
                  }
               }
            },
            {
               "apiVersion":"2015-04-01",
               "name":"connectionstrings",
               "type":"config",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]",
                  "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]",
                  "[concat('Microsoft.Web/Sites/', parameters('siteName'), '/Extensions/MSDeploy')]"
               ],
               "properties":{
                  "defaultConnection":{
                     "value":"[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', parameters('serverName'), ';Password=', parameters('administratorLoginPassword'), ';')]",
                     "type":"SQLAzure"
                  }
               }
            },
            {
               "apiVersion":"2014-06-01",
               "name":"web",
               "type":"config",
               "dependsOn":[
                  "[concat('Microsoft.Web/Sites/', parameters('siteName'))]"
               ],
               "properties":{
                  "phpVersion":"off",
                  "netFrameworkVersion":"v4.5",
                  "use32BitWorkerProcess":"[parameters('use32bitWorkerProcess')",
                  "webSocketsEnabled":true,
                  "alwaysOn":"[parameters('enableAlwaysOn')]",
                  "httpLoggingEnabled":true,
                  "logsDirectorySizeLimit":40
               }
            }
         ]
      },
      {
         "apiVersion":"2014-04-01",
         "name":"[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
         "type":"microsoft.insights/autoscalesettings",
         "location":"East US",
         "tags":{
            "[concat('hidden-link:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]":"Resource"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
         ],
         "properties":{
            "profiles":[
               {
                  "name":"Default",
                  "capacity":{
                     "minimum":"1",
                     "maximum":"2",
                     "default":"1"
                  },
                  "rules":[
                     {
                        "metricTrigger":{
                           "metricName":"CpuPercentage",
                           "metricResourceUri":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'),  '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                           "timeGrain":"PT1M",
                           "statistic":"Average",
                           "timeWindow":"PT10M",
                           "timeAggregation":"Average",
                           "operator":"GreaterThan",
                           "threshold":80.0
                        },
                        "scaleAction":{
                           "direction":"Increase",
                           "type":"ChangeCount",
                           "value":"1",
                           "cooldown":"PT10M"
                        }
                     },
                     {
                        "metricTrigger":{
                           "metricName":"CpuPercentage",
                           "metricResourceUri":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                           "timeGrain":"PT1M",
                           "statistic":"Average",
                           "timeWindow":"PT1H",
                           "timeAggregation":"Average",
                           "operator":"LessThan",
                           "threshold":60.0
                        },
                        "scaleAction":{
                           "direction":"Decrease",
                           "type":"ChangeCount",
                           "value":"1",
                           "cooldown":"PT1H"
                        }
                     }
                  ]
               }
            ],
            "enabled":false,
            "name":"[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
            "targetResourceUri":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
         }
      },
      {
         "apiVersion":"2014-04-01",
         "name":"[concat('ServerErrors ', parameters('siteName'))]",
         "type":"microsoft.insights/alertrules",
         "location":"East US",
         "tags":{
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]":"Resource"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
         ],
         "properties":{
            "name":"[concat('ServerErrors ', parameters('siteName'))]",
            "description":"[concat(parameters('siteName'), ' has some server errors, status code 5xx.')]",
            "isEnabled":false,
            "condition":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
               "dataSource":{
                  "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                  "resourceUri":"[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]",
                  "metricName":"Http5xx"
               },
               "operator":"GreaterThan",
               "threshold":0.0,
               "windowSize":"PT5M"
            },
            "action":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
               "sendToServiceOwners":true,
               "customEmails":[

               ]
            }
         }
      },
      {
         "apiVersion":"2014-04-01",
         "name":"[concat('ForbiddenRequests ', parameters('siteName'))]",
         "type":"microsoft.insights/alertrules",
         "location":"East US",
         "tags":{
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]":"Resource"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
         ],
         "properties":{
            "name":"[concat('ForbiddenRequests ', parameters('siteName'))]",
            "description":"[concat(parameters('siteName'), ' has some requests that are forbidden, status code 403.')]",
            "isEnabled":false,
            "condition":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
               "dataSource":{
                  "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                  "resourceUri":"[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]",
                  "metricName":"Http403"
               },
               "operator":"GreaterThan",
               "threshold":0,
               "windowSize":"PT5M"
            },
            "action":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
               "sendToServiceOwners":true,
               "customEmails":[

               ]
            }
         }
      },
      {
         "apiVersion":"2014-04-01",
         "name":"[concat('CPUHigh ', parameters('hostingPlanName'))]",
         "type":"microsoft.insights/alertrules",
         "location":"East US",
         "tags":{
            "[concat('hidden-link:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]":"Resource"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
         ],
         "properties":{
            "name":"[concat('CPUHigh ', parameters('hostingPlanName'))]",
            "description":"[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
            "isEnabled":false,
            "condition":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
               "dataSource":{
                  "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                  "resourceUri":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                  "metricName":"CpuPercentage"
               },
               "operator":"GreaterThan",
               "threshold":90,
               "windowSize":"PT15M"
            },
            "action":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
               "sendToServiceOwners":true,
               "customEmails":[

               ]
            }
         }
      },
      {
         "apiVersion":"2014-04-01",
         "name":"[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
         "type":"microsoft.insights/alertrules",
         "location":"East US",
         "tags":{
            "[concat('hidden-link:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]":"Resource"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
         ],
         "properties":{
            "name":"[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
            "description":"[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
            "isEnabled":false,
            "condition":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
               "dataSource":{
                  "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                  "resourceUri":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                  "metricName":"HttpQueueLength"
               },
               "operator":"GreaterThan",
               "threshold":100.0,
               "windowSize":"PT5M"
            },
            "action":{
               "odata.type":"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
               "sendToServiceOwners":true,
               "customEmails":[

               ]
            }
         }
      },
      {
         "apiVersion":"2014-04-01",
         "name":"[parameters('siteName')]",
         "type":"microsoft.insights/components",
         "location":"Central US",
         "tags":{
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]":"Resource"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
         ],
         "properties":{
            "applicationId":"[parameters('siteName')]"
         }
      }
   ]
}