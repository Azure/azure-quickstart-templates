{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "location":{
         "type":"string",
         "metadata":{
            "description":"The region to deploy the resources into"
         },
        "defaultValue":"[resourceGroup().location]"
      },
      "sharepointFarmName":{
         "type":"string",
         "metadata":{
            "description":"The name of the Sharepoint farm"
         },
         "defaultValue":"spfarm"
      },
      "adminUsername":{
         "type":"string",
         "metadata":{
            "description":"The name of the Administrator of the new VMs and Domain"
         }
      },
      "adminPassword":{
         "type":"securestring",
         "metadata":{
            "description":"The password for the Administrator account of the new VMs and Domain"
         }
      },
      "adVMSize":{
         "type":"string",
         "metadata":{
            "description":"The size of the AD VMs Created"
         },
         "defaultValue":"Standard_DS1"
      },
      "sqlVMSize":{
         "type":"string",
         "metadata":{
            "description":"The size of the SQL VMs Created"
         },
         "defaultValue":"Standard_DS3"
      },
      "witnessVMSize":{
         "type":"string",
         "metadata":{
            "description":"The size of the Witness VM Created"
         },
         "defaultValue":"Standard_DS1"
      },
      "spVMSize":{
         "type":"string",
         "metadata":{
            "description":"The size of the SP VMs Created"
         },
         "defaultValue":"Standard_DS2"
      },
      "domainName":{
         "type":"string",
         "metadata":{
            "description":"The FQDN of the AD Domain created "
         },
         "defaultValue":"sphafarm.local"
      },
      "sqlServerServiceAccountUserName":{
         "type":"string",
         "metadata":{
            "description":"The SQL Server Service account name"
         },
         "defaultValue":"sqlservice"
      },
      "sqlServerServiceAccountPassword":{
         "type":"securestring",
         "metadata":{
            "description":"The SQL Server Service account password"
         }
      },
      "sharePointSetupUserAccountUserName":{
         "type":"string",
         "metadata":{
            "description":"The Sharepoint Setup account name"
         },
         "defaultValue":"sp_setup"
      },
      "sharePointSetupUserAccountPassword":{
         "type":"securestring",
         "metadata":{
            "description":"The Sharepoint Setup account password"
         }
      },
      "sharePointFarmAccountUserName":{
         "type":"string",
         "metadata":{
            "description":"The Sharepoint Farm account name"
         },
         "defaultValue":"sp_farm"
      },
      "sharePointFarmAccountPassword":{
         "type":"securestring",
         "metadata":{
            "description":"The Sharepoint Farm account password"
         }
      },
      "sharePointFarmPassphrasePassword":{
         "type":"securestring",
         "metadata":{
            "description":"The Sharepoint Farm Passphrase"
         }
      },
      "spSiteTemplateName":{
         "type":"string",
         "metadata":{
            "description":"The Sharepoint Content Site Template Name"
         },
         "defaultValue":"STS#0"
      },
      "storageAccountNamePrefix":{
         "type":"string",
         "metadata":{
            "description":"The prefix of the new storage account created to store the VMs disks, different storage accounts will be created for AD,SQL and Sharepoint VMs"
         }
      },
      "storageAccountType":{
         "type":"string",
         "metadata":{
            "description":"The type of the Storage Account created"
         },
         "defaultValue":"Premium_LRS"
      },
      "virtualNetworkAddressRange":{
         "type":"string",
         "metadata":{
            "description":"The address range of the new VNET in CIDR format"
         },
         "defaultValue":"10.0.0.0/16"
      },
      "staticSubnet":{
         "type":"string",
         "metadata":{
            "description":"The address range of the subnet static IPs are allocated from in the new VNET"
         },
         "defaultValue":"10.0.0.0/24"
      },
      "sqlSubnet":{
         "type":"string",
         "metadata":{
            "description":"The address range of the SQL subnet created in the new VNET"
         },
         "defaultValue":"10.0.1.0/24"
      },
      "spWebSubnet":{
         "type":"string",
         "metadata":{
            "description":"The address range of the SP Web subnet created in the new VNET"
         },
         "defaultValue":"10.0.2.0/24"
      },
      "spAppSubnet":{
         "type":"string",
         "metadata":{
            "description":"The address range of the SP App subnet created in the new VNET"
         },
         "defaultValue":"10.0.3.0/24"
      },
      "adPDCNICIPAddress":{
         "type":"string",
         "metadata":{
            "description":"The IP address of the new AD VM"
         },
         "defaultValue":"10.0.0.4"
      },
      "adBDCNICIPAddress":{
         "type":"string",
         "metadata":{
            "description":"The IP address of the new AD VM"
         },
         "defaultValue":"10.0.0.5"
      },
      "sqlLBIPAddress":{
         "type":"string",
         "metadata":{
            "description":"The IP address of the new SQL ILB"
         },
         "defaultValue":"10.0.0.6"
      },
      "spWebIPRGName":{
         "type":"string",
         "defaultValue":"",
         "metadata":{
            "description":"Resource Group containing existing SP Web IP address"
         }
      },
      "spWebIPNewOrExisting":{
         "type":"string",
         "defaultValue":"new",
         "allowedValues":[
            "new",
            "existing"
         ],
         "metadata":{
            "description":"Indicates whether the Sharepoint farm's IP is new or existing"
         }
      },
      "spWebIPAddressName":{
         "type":"string",
         "metadata":{
            "description":"The new or existing - depending on value of spWebIPNewOrExisting parameter - IP address name for SP Web "
         }
      },
      "dnsPrefix":{
         "type":"string",
         "metadata":{
            "description":"The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
         }
      },
      "virtualNetworkName" : {
        "type" : "string",
        "defaultValue" : "spfarmhaVNET",
        "metadata":{
           "description":"Name of virtual network to be created"
        }
      },
      "baseUrl":{
         "type":"string",
         "metadata":{
            "description":"Base URL for Marketplace",
            "artifactsBaseUrl":""
         },
         "defaultValue":"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sharepoint-server-farm-ha"
      }
   },
   "variables":{
      "spCADNSPrefix" : "[concat(parameters('dnsPrefix'),'admin')]",
      "spCAIPAddressName" : "[concat(parameters('spWebIPAddressName'),'admin')]",
      "configDatabaseName":"SP_Config",
      "administrationContentDatabaseName":"SP_AdminContent",
      "contentDatabaseName":"spfarm_Content",
      "lbSettings":{
         "rdpLBFE":"rdpLBFE",
         "sqlLBFE":"sqlLBFE",
         "spWebLBFE":"spWebLBFE",
         "spCALBFE":"spCALBFE",
         "adLBBE":"adLBBE",
         "sqlLBBE":"sqlLBBE",
         "spWebLBBE":"spWebLBBE",
         "spCALBBE":"spCALBBE",
         "spWebLB":"spWeb",
         "spCALB":"spCALB",
         "sqlLBName":"sqlLoadBalancer",
         "rdpLBName":"rdpLoadBalancer",
         "spWebLBName":"spWebLoadBalancer",
         "spCALBName":"spCALoadBalancer"
      },
      "subnetNames":{
         "staticSubnetName":"staticSubnet",
         "sqlSubnetName":"sqlSubnet",
         "spWebSubnetName":"spWebSubnet",
         "spAppSubnetName":"spAppSubnet"
      },
      "RDPNAT":"RDP",
      "spCANAT":"spCANAT",
      "SQLAOProbe":"SQLAlwaysOnEndPointProbe",
      "spWebProbe":"spWebProbe",
      "spWebProbePort":8088,
      "rdpIPAddressName":"rdpIP",
      "vmSettings":{
         "availabilitySets":{
            "sqlAvailabilitySetName":"sqlAvailabilitySet",
            "adAvailabilitySetName":"adAvailabilitySet",
            "spWebAvailabilitySetName":"spWebAvailabilitySet",
            "spAppAvailabilitySetName":"spAppAvailabilitySet"
         },
         "noOfSqlVMs":2,
         "noOfspRoleVMs":2,
         "vmContainerName":"vhds",
         "adPDCVMName":"ad-pdc",
         "adBDCVMName":"ad-bdc",
         "sqlVMName":"sql-",
         "sqlwVMName":"sql-w",
         "spwebVMName":"sps-web-",
         "spappVMName":"sps-app-",
         "windowsImagePublisher":"MicrosoftWindowsServer",
         "windowsImageOffer":"WindowsServer",
         "windowsImageSKU":"2012-R2-Datacenter",
         "sqlImagePublisher":"MicrosoftSQLServer",
         "sqlImageOffer":"SQL2014-WS2012R2",
         "sqlImageSKU":"Enterprise",
         "spImagePublisher":"MicrosoftSharePoint",
         "spImageOffer":"MicrosoftSharePointServer",
         "spImageSKU":"2013",
         "rdpPort":3389,
         "spCentralAdminPort":80,
         "windowsDiskSize":128,
         "sqlDiskSize":1000,
         "spDiskSize":128
      },
      "prefix":"[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
      "sqlAOEPName":"[concat(variables('prefix'),'-hadr')]",
      "sqlAOAGName":"[concat(variables('prefix'),'-ag')]",
      "sqlAOListenerName":"[concat(variables('prefix'),'ag-listener')]",
      "sharePath":"[concat(variables('prefix'),'-fsw')]",
      "clusterName":"[concat(variables('prefix'),'-fc')]",
      "adPDCNicName":"[concat(variables('vmSettings').adPDCVMName,'-nic')]",
      "adBDCNicName":"[concat(variables('vmSettings').adBDCVMName,'-nic')]",
      "sqlwNicName":"[concat(variables('vmSettings').sqlwVMName,'-nic')]",
      "VnetID":"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "staticSubnetRef":"[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
      "sqlSubnetRef":"[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
      "spWebSubnetRef":"[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spWebSubnetName)]",
      "spAppSubnetRef":"[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spAppSubnetName)]",
      "spWebResourceIdexisting":"[resourceId(parameters('spWebIPRGName'),concat('Microsoft.Network','/','publicIPAddresses'),parameters('spWebIPAddressName'))]",
      "spWebResourceIdnew":"[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('spWebIPAddressName'))]",
      "sharepointCAfqdn":"[concat(variables('spCADNSPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
      "sharepointWebfqdn":"[concat(parameters('dnsPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
      "ids":{
         "adNicId":"[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
         "rdplbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
         "spWeblbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",
         "sqllbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
         "spCAlbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]",
         "spCAResourceId":"[resourceId('Microsoft.Network/publicIPAddresses',variables('spCAIPAddressName'))]",
         "adAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.adAvailabilitySetName)]",
         "sqlAvailabilitySetName":"[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]",
         "spWebAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]",
         "spAppAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]"
      },
      "derivedIds":{
         "adIPConfigID":"[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
         "rdplbFEConfigID":"[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
         "spWebLBFEConfigID":"[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
         "adRDPNATRuleID":"[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
         "adBEAddressPoolID":"[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
         "spWebProbeID":"[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
         "spWebBEAddressPoolID":"[concat(variables('ids').spWeblbID,'/backendAddressPools/',variables('lbSettings').spWebLBBE)]",
         "sqlBEAddressPoolID":"[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
         "sqllbFEConfigID":"[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
         "sqllbProbeID":"[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
         "spCABEAddressPoolID":"[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
         "spCAlbFEConfigID":"[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
         "spCANATRuleID":"[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
      },
      "subnets":[
         {
            "name":"[variables('subnetNames').staticSubnetName]",
            "properties":{
               "addressPrefix":"[parameters('staticSubnet')]"
            }
         },
         {
            "name":"[variables('subnetNames').sqlSubnetName]",
            "properties":{
               "addressPrefix":"[parameters('sqlSubnet')]"
            }
         },
         {
            "name":"[variables('subnetNames').spWebSubnetName]",
            "properties":{
               "addressPrefix":"[parameters('spWebSubnet')]"
            }
         },
         {
            "name":"[variables('subnetNames').spAppSubnetName]",
            "properties":{
               "addressPrefix":"[parameters('spAppSubnet')]"
            }
         }
      ],
      "configuration":{
         "vnetwithDNSTemplateURL":"[concat(parameters('baseUrl'),'/vnet-with-dns-server.json')]",
         "nicTemplateURL":"[concat(parameters('baseUrl'),'/nic.json')]",
         "adPDCModulesURL":"[concat(variables('assetLocation'),'/CreateADPDC.ps1.zip')]",
         "adPDCConfigurationFunction":"CreateADPDC.ps1\\CreateADPDC",
         "adBDCPreparationModulesURL":"[concat(variables('assetLocation'),'/PrepareADBDC.ps1.zip')]",
         "adBDCPreparationFunction":"PrepareADBDC.ps1\\PrepareADBDC",
         "adBDCConfigurationModulesURL":"[concat(variables('assetLocation'),'/ConfigureADBDC.ps1.zip')]",
         "adBDCConfigurationFunction":"ConfigureADBDC.ps1\\ConfigureADBDC",
         "fswConfigurationModulesURL":"[concat(variables('assetLocation'),'/ConfigureFileShareWitness.ps1.zip')]",
         "fswConfigurationFunction":"ConfigureFileShareWitness.ps1\\ConfigureFileShareWitness",
         "fswPreparationModulesURL":"[concat(variables('assetLocation'),'/PrepareFileShareWitness.ps1.zip')]",
         "fswPreparationFunction":"PrepareFileShareWitness.ps1\\PrepareFileShareWitness",
         "sqlAOPrepareModulesURL":"[concat(variables('assetLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
         "sqlAOPrepareFunction":"PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
         "sqlAOConfigurationModulesURL":"[concat(variables('assetLocation'),'/ConfigureAlwaysOnSqlServer.ps1.zip')]",
         "sqlAOConfigurationFunction":"ConfigureAlwaysOnSqlServer.ps1\\ConfigureAlwaysOnSqlServer",
         "prepareClusterModulesURL":"[concat(variables('assetLocation'),'/PrepareFailoverCluster.ps1.zip')]",
         "prepareClusterConfigurationFunction":"PrepareFailoverCluster.ps1\\PrepareFailoverCluster",
         "configureClusterModulesURL":"[concat(variables('assetLocation'),'/ConfigureFailoverCluster.ps1.zip')]",
         "configureClusterConfigurationFunction":"ConfigureFailoverCluster.ps1\\ConfigureFailoverCluster",
         "spConfigurationModulesURL":"[concat(variables('assetLocation'),'/ConfigureSharePointServerHA.ps1.zip')]",
         "spConfigurationFunction":"ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA",
         "spPreparationModulesURL":"[concat(variables('assetLocation'),'/PrepareSharePointServerHA.ps1.zip')]",
         "spPreparationFunction":"PrepareSharePointServerHA.ps1\\PrepareSharePointServerHA",
         "spWebIPAdressSetupURL":"[concat(parameters('baseUrl'),'/publicip-',parameters('spWebIPNewOrExisting'),'.json')]",
         "spCAIPAdressSetupURL":"[concat(parameters('baseUrl'),'/publicip-','new.json')]",
         "rdpIPAdressSetupURL":"[concat(parameters('baseUrl'),'/publicip-rdp.json')]",
         "availabilitySetSetupURL":"[concat(parameters('baseUrl'),'/availabilitySets.json')]",
         "provisioningPrimaryDCURL":"[concat(parameters('baseUrl'),'/provisioningPrimaryDomainController.json')]",
         "provisioningBackupDCURL":"[concat(parameters('baseUrl'),'/provisioningBackupDomainController.json')]",
         "configuringBackupDCURL":"[concat(parameters('baseUrl'),'/configuringBackupDomainController.json')]",
         "configuringSQLAlwaysOnClusterUrl":"[concat(parameters('baseUrl'),'/configuringSQLAlwaysOnCluster.json')]",
         "provisioningSharepointVMsURL":"[concat(parameters('baseUrl'),'/provisioningSharepointVMs.json')]",
         "configuringSharepointUrl":"[concat(parameters('baseUrl'),'/configuringSharePoint.json')]",
         "creatingStorageAccounts":"[concat(parameters('baseUrl'),'/creatingStorageAccounts.json')]",
         "provisioningSQLVMsURL":"[concat(parameters('baseUrl'),'/provisioningSQLVMs.json')]",
         "vnetSetupURL":"[concat(parameters('baseUrl'),'/vnet-new.json')]",
         "setupLBsUrl":"[concat(parameters('baseUrl'),'/setupLBs.json')]",
         "creatingNicsUrl":"[concat(parameters('baseUrl'),'/creatingNICS.json')]"
      },
      "assetLocation":"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sharepoint-server-farm-ha/dscv2"
   },
   "resources":[
      {
         "name":"CreatingStorageAccounts",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingStorageAccounts]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "storageAccountType":{
                  "value":"[parameters('storageAccountType')]"
               }
            }
         }
      },
      {
         "name":"SettingUpRdp",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').rdpIPAdressSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "rdpIPAddressName":{
                  "value":"[variables('rdpIPAddressName')]"
               },
               "rdpLBName":{
                  "value":"[variables('lbSettings').rdpLBName]"
               },
               "rdpLBFE":{
                  "value":"[variables('lbSettings').rdpLBFE]"
               },
               "adLBBE":{
                  "value":"[variables('lbSettings').adLBBE]"
               },
               "RDPNAT":{
                  "value":"[variables('RDPNAT')]"
               },
               "rdplbFEConfigID":{
                  "value":"[variables('derivedIds').rdplbFEConfigID]"
               }
            }
         }
      },
      {
         "name":"SettingUpSharepointWebPublicIP",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').spWebIPAdressSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "publicIPAddressName":{
                  "value":"[parameters('spWebIPAddressName')]"
               },
               "publicIPAddressType":{
                  "value":"dynamic"
               },
               "dnsPrefix":{
                  "value":"[parameters('dnsPrefix')]"
               },
               "publicIpRGName":{
                  "value":"[parameters('spWebIPRGName')]"
               }
            }
         }
      },
      {
         "name":"SettingUpSharepointCentralAdminPublicIP",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').spCAIPAdressSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "publicIPAddressName":{
                  "value":"[variables('spCAIPAddressName')]"
               },
               "publicIPAddressType":{
                  "value":"dynamic"
               },
               "dnsPrefix":{
                  "value":"[variables('spCADNSPrefix')]"
               },
               "publicIpRGName":{
                  "value":"[resourceGroup().name]"
               }
            }
         }
      },
      {
         "name":"CreatingAvailabilitySets",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').availabilitySetSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "adAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.adAvailabilitySetName]"
               },
               "sqlAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
               },
               "spWebAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.spWebAvailabilitySetName]"
               },
               "spAppAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.spAppAvailabilitySetName]"
               }
            }
         }
      },
      {
         "name":"CreatingVirtualNetwork",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').vnetSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "virtualNetworkName":{
                  "value":"[parameters('virtualNetworkName')]"
               },
               "virtualNetworkAddressRange":{
                  "value":"[parameters('virtualNetworkAddressRange')]"
               },
               "subnets":{
                  "value":"[variables('subnets')]"
               }
            }
         }
      },
      {
         "name":"SettingUpLoadBalancers",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/SettingUpSharepointCentralAdminPublicIP",
            "Microsoft.Resources/deployments/SettingUpSharepointWebPublicIP",
            "Microsoft.Resources/deployments/SettingUpRdp",
            "Microsoft.Resources/deployments/CreatingVirtualNetwork"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').setupLBsUrl]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "spCALBName":{
                  "value":"[variables('lbSettings').spCALBName]"
               },
               "spCALBFE":{
                  "value":"[variables('lbSettings').spCALBFE]"
               },
               "spCAResourceId":{
                  "value":"[variables('ids').spCAResourceId]"
               },
               "spCALBBE":{
                  "value":"[variables('lbSettings').spCALBBE]"
               },
               "spCANAT":{
                  "value":"[variables('spCANAT')]"
               },
               "spCAlbFEConfigID":{
                  "value":"[variables('derivedIds').spCAlbFEConfigID]"
               },
               "spWebLBName":{
                  "value":"[variables('lbSettings').spWebLBName]"
               },
               "spWebLBFE":{
                  "value":"[variables('lbSettings').spWebLBFE]"
               },
               "spWebResourceId":{
                  "value":"[variables(concat('spWebResourceId',parameters('spWebIPNewOrExisting')))]"
               },
               "spWebLBBE":{
                  "value":"[variables('lbSettings').spWebLBBE]"
               },
               "spWebLB":{
                  "value":"[variables('lbSettings').spWebLB]"
               },
               "spWebLBFEConfigID":{
                  "value":"[variables('derivedIds').spWebLBFEConfigID]"
               },
               "spWebBEAddressPoolID":{
                  "value":"[variables('derivedIds').spWebBEAddressPoolID]"
               },
               "spWebProbeID":{
                  "value":"[variables('derivedIds').spWebProbeID]"
               },
               "spWebProbe":{
                  "value":"[variables('spWebProbe')]"
               },
               "sqlLBName":{
                  "value":"[variables('lbSettings').sqlLBName]"
               },
               "sqlLBFE":{
                  "value":"[variables('lbSettings').sqlLBFE]"
               },
               "sqlLBIPAddress":{
                  "value":"[parameters('sqlLBIPAddress')]"
               },
               "staticSubnetRef":{
                  "value":"[variables('staticSubnetRef')]"
               },
               "sqlLBBE":{
                  "value":"[variables('lbSettings').sqlLBBE]"
               },
               "sqllbFEConfigID":{
                  "value":"[variables('derivedIds').sqllbFEConfigID]"
               },
               "sqllbProbeID":{
                  "value":"[variables('derivedIds').sqllbProbeID]"
               },
               "SQLAOProbe":{
                  "value":"[variables('SQLAOProbe')]"
               }
            }
         }
      },
      {
         "name":"CreatingNetworkInterfaces",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingVirtualNetwork",
            "Microsoft.Resources/deployments/SettingUpRdp",
            "Microsoft.Resources/deployments/SettingUpLoadBalancers"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingNicsUrl]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "adPDCNicName":{
                  "value":"[variables('adPDCNicName')]"
               },
               "adPDCNICIPAddress":{
                  "value":"[parameters('adPDCNICIPAddress')]"
               },
               "staticSubnetRef":{
                  "value":"[variables('staticSubnetRef')]"
               },
               "adBEAddressPoolID":{
                  "value":"[variables('derivedIds').adBEAddressPoolID]"
               },
               "adRDPNATRuleID":{
                  "value":"[variables('derivedIds').adRDPNATRuleID]"
               },
               "adBDCNicName":{
                  "value":"[variables('adBDCNicName')]"
               },
               "adBDCNICIPAddress":{
                  "value":"[parameters('adBDCNICIPAddress')]"
               },
               "sqlVMName":{
                  "value":"[variables('vmSettings').sqlVMName]"
               },
               "sqlSubnetRef":{
                  "value":"[variables('sqlSubnetRef')]"
               },
               "sqlBEAddressPoolID":{
                  "value":"[variables('derivedIds').sqlBEAddressPoolID]"
               },
               "spwebVMName":{
                  "value":"[variables('vmSettings').spwebVMName]"
               },
               "spWebSubnetRef":{
                  "value":"[variables('spWebSubnetRef')]"
               },
               "spWebBEAddressPoolID":{
                  "value":"[variables('derivedIds').spWebBEAddressPoolID]"
               },
               "spappVMName":{
                  "value":"[variables('vmSettings').spappVMName]"
               },
               "spAppSubnetRef":{
                  "value":"[variables('spAppSubnetRef')]"
               },
               "spCABEAddressPoolID":{
                  "value":"[variables('derivedIds').spCABEAddressPoolID]"
               },
               "spCANATRuleID":{
                  "value":"[variables('derivedIds').spCANATRuleID]"
               },
               "sqlwNicName":{
                  "value":"[variables('sqlwNicName')]"
               }
            }
         }
      },
      {
         "name":"ProvisioningPrimaryADDomainController",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingStorageAccounts",
            "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
            "Microsoft.Resources/deployments/CreatingAvailabilitySets",
            "Microsoft.Resources/deployments/SettingUpRdp"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').provisioningPrimaryDCURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "adPDCVMName":{
                  "value":"[variables('vmSettings').adPDCVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "availabilitySet":{
                  "value":"[variables('ids').adAvailabilitySetName]"
               },
               "adVMSize":{
                  "value":"[parameters('adVMSize')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "windowsImagePublisher":{
                  "value":"[variables('vmSettings').windowsImagePublisher]"
               },
               "windowsImageOffer":{
                  "value":"[variables('vmSettings').windowsImageOffer]"
               },
               "windowsImageSKU":{
                  "value":"[variables('vmSettings').windowsImageSKU]"
               },
               "vmContainerName":{
                  "value":"[variables('vmSettings').vmContainerName]"
               },
               "adPDCNicName":{
                  "value":"[variables('adPDCNicName')]"
               },
               "domainName":{
                  "value":"[parameters('domainName')]"
               },
               "adPDCConfigurationFunction":{
                  "value":"[variables('configuration').adPDCConfigurationFunction]"
               },
               "adPDCModulesURL":{
                  "value":"[variables('configuration').adPDCModulesURL]"
               }
            }
         }
      },
      {
         "name":"UpdatingDNStoPrimaryADVM",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/ProvisioningPrimaryADDomainController"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').vnetwithDNSTemplateURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "virtualNetworkName":{
                  "value":"[parameters('virtualNetworkName')]"
               },
               "virtualNetworkAddressRange":{
                  "value":"[parameters('virtualNetworkAddressRange')]"
               },
               "subnets":{
                  "value":"[variables('subnets')]"
               },
               "DNSServerAddress":{
                  "value":[
                     "[parameters('adPDCNICIPAddress')]"
                  ]
               }
            }
         }
      },
      {
         "name":"ProvisioningBackupADDomainController",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingStorageAccounts",
            "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
            "Microsoft.Resources/deployments/CreatingAvailabilitySets"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').provisioningBackupDCURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "adBDCVMName":{
                  "value":"[variables('vmSettings').adBDCVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "availabilitySet":{
                  "value":"[variables('ids').adAvailabilitySetName]"
               },
               "adVMSize":{
                  "value":"[parameters('adVMSize')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "windowsImagePublisher":{
                  "value":"[variables('vmSettings').windowsImagePublisher]"
               },
               "windowsImageOffer":{
                  "value":"[variables('vmSettings').windowsImageOffer]"
               },
               "windowsImageSKU":{
                  "value":"[variables('vmSettings').windowsImageSKU]"
               },
               "vmContainerName":{
                  "value":"[variables('vmSettings').vmContainerName]"
               },
               "adBDCNicName":{
                  "value":"[variables('adBDCNicName')]"
               },
               "DNSServer":{
                  "value":"[parameters('adPDCNICIPAddress')]"
               },
               "adBDCPreparationFunction":{
                  "value":"[variables('configuration').adBDCPreparationFunction]"
               },
               "adBDCPreparationModulesURL":{
                  "value":"[variables('configuration').adBDCPreparationModulesURL]"
               }
            }
         }
      },
      {
         "name":"ConfiguringBackupADDomainController",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/ProvisioningBackupADDomainController",
            "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').configuringBackupDCURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "adBDCVMName":{
                  "value":"[variables('vmSettings').adBDCVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "domainName":{
                  "value":"[parameters('domainName')]"
               },
               "adBDCConfigurationFunction":{
                  "value":"[variables('configuration').adBDCConfigurationFunction]"
               },
               "adBDCConfigurationModulesURL":{
                  "value":"[variables('configuration').adBDCConfigurationModulesURL]"
               }
            }
         }
      },
      {
         "name":"UpdatingDNSwithBackupADVM",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/ConfiguringBackupADDomainController"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').vnetwithDNSTemplateURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "virtualNetworkName":{
                  "value":"[parameters('virtualNetworkName')]"
               },
               "virtualNetworkAddressRange":{
                  "value":"[parameters('virtualNetworkAddressRange')]"
               },
               "subnets":{
                  "value":"[variables('subnets')]"
               },
               "DNSServerAddress":{
                  "value":[
                     "[parameters('adPDCNICIPAddress')]",
                     "[parameters('adBDCNICIPAddress')]"
                  ]
               }
            }
         }
      },
      {
         "name":"ProvisioningSQLVirtualMachines",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingStorageAccounts",
            "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
            "Microsoft.Resources/deployments/CreatingAvailabilitySets"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').provisioningSQLVMsURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "sqlVMName":{
                  "value":"[variables('vmSettings').sqlVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "availabilitySet":{
                  "value":"[variables('ids').sqlAvailabilitySetName]"
               },
               "sqlVMSize":{
                  "value":"[parameters('sqlVMSize')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "windowsImagePublisher":{
                  "value":"[variables('vmSettings').windowsImagePublisher]"
               },
               "windowsImageOffer":{
                  "value":"[variables('vmSettings').windowsImageOffer]"
               },
               "windowsImageSKU":{
                  "value":"[variables('vmSettings').windowsImageSKU]"
               },
               "vmContainerName":{
                  "value":"[variables('vmSettings').vmContainerName]"
               },
               "sqlImagePublisher":{
                  "value":"[variables('vmSettings').sqlImagePublisher]"
               },
               "sqlImageOffer":{
                  "value":"[variables('vmSettings').sqlImageOffer]"
               },
               "sqlImageSKU":{
                  "value":"[variables('vmSettings').sqlImageSKU]"
               },
               "domainName":{
                  "value":"[parameters('domainName')]"
               },
               "sqlAOPrepareModulesURL":{
                  "value":"[variables('configuration').sqlAOPrepareModulesURL]"
               },
               "sqlAOPrepareFunction":{
                  "value":"[variables('configuration').sqlAOPrepareFunction]"
               },
               "prepareClusterModulesURL":{
                  "value":"[variables('configuration').prepareClusterModulesURL]"
               },
               "prepareClusterConfigurationFunction":{
                  "value":"[variables('configuration').prepareClusterConfigurationFunction]"
               },
               "sharePath":{
                  "value":"[variables('sharePath')]"
               },
               "witnessVMSize":{
                  "value":"[parameters('witnessVMSize')]"
               },
               "sqlwVMName":{
                  "value":"[variables('vmSettings').sqlwVMName]"
               },
               "sqlwNicName":{
                  "value":"[variables('sqlwNicName')]"
               },
               "fswPreparationModulesURL":{
                  "value":"[variables('configuration').fswPreparationModulesURL]"
               },
               "fswPreparationFunction":{
                  "value":"[variables('configuration').fswPreparationFunction]"
               },
               "DNSServer":{
                  "value":"[parameters('adPDCNICIPAddress')]"
               }
            }
         }
      },
      {
         "name":"ConfiguringSQLAlwaysOnCluster",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/UpdatingDNSwithBackupADVM",
            "Microsoft.Resources/deployments/ProvisioningSQLVirtualMachines"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').configuringSQLAlwaysOnClusterUrl]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "sqlVMName":{
                  "value":"[variables('vmSettings').sqlVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "domainName":{
                  "value":"[parameters('domainName')]"
               },
               "sqlAOConfigurationModulesURL":{
                  "value":"[variables('configuration').sqlAOConfigurationModulesURL]"
               },
               "sqlAOConfigurationFunction":{
                  "value":"[variables('configuration').sqlAOConfigurationFunction]"
               },
               "sqlAOEPName":{
                  "value":"[variables('sqlAOEPName')]"
               },
               "sqlServerServiceAccountUserName":{
                  "value":"[parameters('sqlServerServiceAccountUserName')]"
               },
               "sharePointSetupUserAccountUserName":{
                  "value":"[parameters('sharePointSetupUserAccountUserName')]"
               },
               "sqlServerServiceAccountPassword":{
                  "value":"[parameters('sqlServerServiceAccountPassword')]"
               },
               "sharePointSetupUserAccountPassword":{
                  "value":"[parameters('sharePointSetupUserAccountPassword')]"
               },
               "configureClusterModulesURL":{
                  "value":"[variables('configuration').configureClusterModulesURL]"
               },
               "configureClusterConfigurationFunction":{
                  "value":"[variables('configuration').configureClusterConfigurationFunction]"
               },
               "clusterName":{
                  "value":"[variables('clusterName')]"
               },
               "sharePath":{
                  "value":"[variables('sharePath')]"
               },
               "sqlAOAGName":{
                  "value":"[variables('sqlAOAGName')]"
               },
               "sqlAOListenerName":{
                  "value":"[variables('sqlAOListenerName')]"
               },
               "sqlLBName":{
                  "value":"[variables('lbSettings').sqlLBName]"
               },
               "sqlLBIPAddress":{
                  "value":"[parameters('sqlLBIPAddress')]"
               },
               "adPDCVMName":{
                  "value":"[variables('vmSettings').adPDCVMName]"
               },
               "sqlwVMName":{
                  "value":"[variables('vmSettings').sqlwVMName]"
               },
               "fswConfigurationModulesURL":{
                  "value":"[variables('configuration').fswConfigurationModulesURL]"
               },
               "fswConfigurationFunction":{
                  "value":"[variables('configuration').fswConfigurationFunction]"
               }
            }
         }
      },
      {
         "name":"CreatingSharepointVirtualMachines",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingStorageAccounts",
            "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
            "Microsoft.Resources/deployments/CreatingAvailabilitySets"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').provisioningSharepointVMsURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "spappVMName":{
                  "value":"[variables('vmSettings').spappVMName]"
               },
               "spwebVMName":{
                  "value":"[variables('vmSettings').spwebVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "spVMSize":{
                  "value":"[parameters('spVMSize')]"
               },
               "spWebAvailabilitySet":{
                  "value":"[variables('ids').spWebAvailabilitySetName]"
               },
               "spAppAvailabilitySet":{
                  "value":"[variables('ids').spAppAvailabilitySetName]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "spImagePublisher":{
                  "value":"[variables('vmSettings').spImagePublisher]"
               },
               "spImageOffer":{
                  "value":"[variables('vmSettings').spImageOffer]"
               },
               "spImageSKU":{
                  "value":"[variables('vmSettings').spImageSKU]"
               },
               "vmContainerName":{
                  "value":"[variables('vmSettings').vmContainerName]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "spPreparationModulesURL":{
                  "value":"[variables('configuration').spPreparationModulesURL]"
               },
               "spPreparationFunction":{
                  "value":"[variables('configuration').spPreparationFunction]"
               },
               "domainName":{
                  "value":"[parameters('domainName')]"
               },
               "DNSServer":{
                  "value":"[parameters('adPDCNICIPAddress')]"
               }
            }
         }
      },
      {
         "name":"ConfiguringSharepoint",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/ConfiguringSQLAlwaysOnCluster",
            "Microsoft.Resources/deployments/CreatingSharepointVirtualMachines"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').configuringSharepointUrl]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "spappVMName":{
                  "value":"[variables('vmSettings').spappVMName]"
               },
               "sqlVMName":{
                  "value":"[variables('vmSettings').sqlVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "spConfigurationModulesURL":{
                  "value":"[variables('configuration').spConfigurationModulesURL]"
               },
               "spConfigurationFunction":{
                  "value":"[variables('configuration').spConfigurationFunction]"
               },
               "domainName":{
                  "value":"[parameters('domainName')]"
               },
               "adminUserName":{
                  "value":"[parameters('adminUserName')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "sharePointSetupUserAccountUserName":{
                  "value":"[parameters('sharePointSetupUserAccountUserName')]"
               },
               "sharePointFarmAccountUserName":{
                  "value":"[parameters('sharePointFarmAccountUserName')]"
               },
               "sqlServerServiceAccountUserName":{
                  "value":"[parameters('sqlServerServiceAccountUserName')]"
               },
               "sqlAOAGName":{
                  "value":"[variables('sqlAOAGName')]"
               },
               "administrationContentDatabaseName":{
                  "value":"[variables('administrationContentDatabaseName')]"
               },
               "configDatabaseName":{
                  "value":"[variables('configDatabaseName')]"
               },
               "contentDatabaseName":{
                  "value":"[variables('contentDatabaseName')]"
               },
               "sharepointCAfqdn":{
                  "value":"[variables('sharepointCAfqdn')]"
               },
               "sharePointSetupUserAccountPassword":{
                  "value":"[parameters('sharePointSetupUserAccountPassword')]"
               },
               "sharePointFarmAccountPassword":{
                  "value":"[parameters('sharePointFarmAccountPassword')]"
               },
               "sharePointFarmPassphrasePassword":{
                  "value":"[parameters('sharePointFarmPassphrasePassword')]"
               },
               "sqlServerServiceAccountPassword":{
                  "value":"[parameters('sqlServerServiceAccountPassword')]"
               },
               "spwebVMName":{
                  "value":"[variables('vmSettings').spwebVMName]"
               },
               "sharepointFarmName":{
                  "value":"[parameters('sharepointFarmName')]"
               },
               "sharepointWebfqdn":{
                  "value":"[variables('sharepointWebfqdn')]"
               },
               "spSiteTemplateName":{
                  "value":"[parameters('spSiteTemplateName')]"
               }
            }
         }
      }
   ],
   "outputs": {
     "fqdn": {
       "value": "[variables('sharepointWebfqdn')]",
       "type": "string"
     },
     "cafqdn":{
        "value":"[variables('sharepointCAfqdn')]",
        "type": "string"
     }
   }
}
