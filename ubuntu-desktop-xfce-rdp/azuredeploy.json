{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Name for the publicly accessible node. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "osdiskforlinuxsimple": {
      "type": "string",
      "metadata": {
        "description": "osdiskforlinuxsimple"
      }
    },
    "virtualMachineNic": {
      "type": "string",
      "metadata": {
        "description": "virtualMachineNic"
      }
    },
    "addressPrefix": {
      "type": "string",
      "metadata": {
        "description": "addressPrefix"
      }
    },
    "virtualSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual subnet name."
      }
    },
    "virtualSubnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual subnet prefix."
      }
    },
    "virtualStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual storage account name."
      }
    },
    "virtualStorageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual storage account type."
      }
    },
    "virtualPublicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual public ipAddress name."
      }
    },
    "virtualPublicIPAddressType": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual public ipAddress type."
      }
    },
    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual machine name."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Enter virtual network name."
      }
    },
	"vmSize": {
      "type": "string",
      "defaultValue": "Standard_D3",
      "allowedValues": [
	    "Standard_A1",
		  "Standard_A2",
		  "Standard_A3",
      "Standard_D1",
      "Standard_D3",
		  "Standard_D4"
      ],
      "metadata": {
        "description": "The size of the virtual machines used when provisioning"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.2-LTS",
        "15.10",
        "16.04.0-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.10."
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "OSDiskName": "[parameters('osdiskforlinuxsimple')]",
    "nicName": "[parameters('virtualMachineNic')]",
    "addressPrefix": "[parameters('addressPrefix')]",
    "subnetName": "[parameters('virtualSubnetName')]",
    "subnetPrefix": "[parameters('virtualSubnetPrefix')]",
	  "storageAccountName": "[parameters('virtualStorageAccountName')]",
	  "apiVersion": "2015-06-15",
    "storageAccountType": "[parameters('virtualStorageAccountType')]",
    "publicIPAddressName": "[parameters('virtualPublicIPAddressName')]",
    "publicIPAddressType": "[parameters('virtualPublicIPAddressType')]",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[parameters('virtualMachineName')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('virtualSubnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('virtualSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/newuserscript')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "autoUpgradeMinorVersion": true,
          "fileUris": [
            "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/ubuntu-desktop-xfce-rdp/install_xrdp.sh"
          ],
          "commandToExecute": "bash install_xrdp.sh"
        }
      }
    }
  ]
}

