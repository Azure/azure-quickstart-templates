{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2019-03-01-hybrid",
    "parameters": {
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "rancherServerName": {
            "type": "String",
            "metadata": {
                "description": "The prefix you want to use as hostname"
            }
        },
        "rancherVmSize": {
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_A2_v2",
                "Standard_A4_v2",
                "Standard_A8_v2",
                "Standard_D2_v3",
                "Standard_D4_v3",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "type": "String",
            "metadata": {
                "description": "The size of the virtual machine used for the Server"
            }
        },
        "osImageSKU": {
            "defaultValue": "16.04-LTS",
            "allowedValues": [
                "16.04-LTS",
                "18.04-LTS"
            ],
            "type": "String",
            "metadata": {
                "description": "Set the OS Image SKU"
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Set the Virtual Machine Disk type"
            }
        }
    },
    "variables": {
        "availabilitySetName": "[toLower(concat(parameters('rancherServerName'), '-avset'))]",
        "vmSize": "[parameters('rancherVmSize')]",
        "osImagePublisher": "Canonical",
        "osImageOffer": "UbuntuServer",
        "osImageVersion": "latest",
        "virtualNetworkName": "[toLower(concat(parameters('rancherServerName'), '-vnet'))]",
        "addressPrefix": "192.168.254.0/24",
        "subnetName": "[toLower(concat(parameters('rancherServerName'), '-subnet'))]",
        "subnetPrefix": "192.168.254.0/24",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "NICPrefix": "-nic",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressName1": "[toLower(concat(parameters('rancherServerName'), '-pip1'))]",
        "networkSecurityGroupName": "[toLower(concat(parameters('rancherServerName'), '-nsg'))]",
        "extensionName": "DockerExtension"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-10-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "SSH",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Rancher",
                        "properties": {
                            "description": "RancherHTTPS",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Docker",
                        "properties": {
                            "description": "Docker",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "2375",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2017-03-30",
            "name": "[variables('availabilitySetName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": "3",
                "platformUpdateDomainCount": "3"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-10-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "name": "[variables('publicIPAddressName1')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('rancherServerName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('rancherServerName'), variables('NICPrefix'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName1'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName1'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "name": "[concat(parameters('rancherServerName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('rancherServerName'), '-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('rancherServerName'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[parameters('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('rancherServerName'),'_Os_Disk_1')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('storageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('rancherServerName'), variables('NICPrefix')))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('rancherServerName'),'/', variables('extensionName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('rancherServerName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "DockerExtension",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "docker": {
                        "port": "2375"
                    },
                    "compose": {
                        "rancheragent": {
                            "image": "rancher/rancher:stable",
                            "restart": "always",
                            "ports": [
                                "8443:443"
                            ]
                        }
                    }
                }
            }
        }
    ]
}
