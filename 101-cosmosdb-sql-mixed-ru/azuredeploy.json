{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"accountName": {
			"type": "string",
			"defaultValue": "[concat('sql-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "Cosmos DB account name"
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for the Cosmos DB account."
			}
		},
		"primaryRegion":{
			"type":"string",
			"metadata": {
				"description": "The primary replica region for the Cosmos DB account."
			}
		},
		"secondaryRegion":{
			"type":"string",
			"metadata": {
			  "description": "The secondary replica region for the Cosmos DB account."
		  }
		},
		"defaultConsistencyLevel": {
			"type": "string",
			"defaultValue": "Session",
			"allowedValues": [ "Eventual", "ConsistentPrefix", "Session", "BoundedStaleness", "Strong" ],
			"metadata": {
				"description": "The default consistency level of the Cosmos DB account."
			}
		},
		"maxStalenessPrefix": {
			"type": "int",
			"minValue": 10,
			"defaultValue": 100000,
			"maxValue": 2147483647,
			"metadata": {
				"description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
			}
		},
		"maxIntervalInSeconds": {
			"type": "int",
			"minValue": 5,
			"defaultValue": 300,
			"maxValue": 86400,
			"metadata": {
				"description": "Max lag time (seconds). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
			}
		},	
		"multipleWriteLocations": {
			"type": "bool",
			"defaultValue": true,
			"allowedValues": [ true, false ],
			"metadata": {
				"description": "Enable multi-master to make all regions writable."
			}
		},
		"automaticFailover": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [ true, false ],
			"metadata": {
				"description": "Enable automatic failover for regions. Ignored when Multi-Master is enabled"
			}
		},
		"databaseName": {
			"type": "string",
			"metadata": {
				"description": "The name for the SQL database"
			}
		},
		"sharedThroughput": {
			"type": "int",
			"minValue": 400,
			"maxValue": 1000000,
			"metadata": {
				"description": "The shared throughput for the database"
			}			
		},
		"sharedContainer1Name": {
			"type": "string",
			"metadata": {
				"description": "The name for the first SQL container with shared throughput"
			}
		},
		"sharedContainer2Name": {
			"type": "string",
			"metadata": {
				"description": "The name for the second SQL container with shared throughput"
			}
		},
		"dedicatedThroughput": {
			"type": "int",
			"minValue": 400,
			"maxValue": 1000000,
			"metadata": {
				"description": "The throughput for the dedicated container"
			}			
		},
		"dedicatedContainer1Name": {
			"type": "string",
			"metadata": {
				"description": "The name for the SQL container with dedicated throughput"
			}
		}
	},
	"variables": {
		"accountName": "[toLower(parameters('accountName'))]",
		"consistencyPolicy": {
			"Eventual": {
				"defaultConsistencyLevel": "Eventual"
			},
			"ConsistentPrefix": {
				"defaultConsistencyLevel": "ConsistentPrefix"
			},
			"Session": {
				"defaultConsistencyLevel": "Session"
			},
			"BoundedStaleness": {
				"defaultConsistencyLevel": "BoundedStaleness",
				"maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
				"maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
			},
			"Strong": {
				"defaultConsistencyLevel": "Strong"
			}
		},
		"locations": 
		[ 
			{
				"locationName": "[parameters('primaryRegion')]",
				"failoverPriority": 0
			}, 
			{
				"locationName": "[parameters('secondaryRegion')]",
				"failoverPriority": 1
			}
		]
	},
	"resources": 
	[
		{
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"name": "[variables('accountName')]",
			"apiVersion": "2016-03-31",
			"location": "[parameters('location')]",
			"kind": "GlobalDocumentDB",
			"properties": {
				"consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
				"locations": "[variables('locations')]",
				"databaseAccountOfferType": "Standard",
				"enableAutomaticFailover": "[parameters('automaticFailover')]",
				"enableMultipleWriteLocations": "[parameters('multipleWriteLocations')]"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
			"name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'))]",
			"apiVersion": "2016-03-31",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]" ],
			"properties":{
				"resource":{
					"id": "[parameters('databaseName')]"
				},
				"options": { "throughput": "[parameters('sharedThroughput')]" }
			}
		},
		{
			"type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
			"name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'), '/', parameters('sharedContainer1Name'))]",
			"apiVersion": "2016-03-31",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'sql', parameters('databaseName'))]" ],
			"properties":
			{
				"resource":{
					"id":  "[parameters('sharedContainer1Name')]",
					"partitionKey": {
						"paths": [
						"/MyPartitionKey1"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*",
								"indexes": [
									{
										"kind": "Range",
										"dataType": "number",
										"precision": -1
									},
									{
										"kind": "Range",
										"dataType": "string",
										"precision": -1
									}
								]
							}
						],
						"excludedPaths": [{
								"path": "/MyPathToNotIndex/*"
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
			"name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'), '/', parameters('sharedContainer2Name'))]",
			"apiVersion": "2016-03-31",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'sql', parameters('databaseName'))]" ],
			"properties":
			{
				"resource":{
					"id":  "[parameters('sharedContainer2Name')]",
					"partitionKey": {
						"paths": [
						"/MyPartitionKey2"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*",
								"indexes": [
									{
										"kind": "Range",
										"dataType": "number",
										"precision": -1
									},
									{
										"kind": "Range",
										"dataType": "string",
										"precision": -1
									}
								]
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
			"name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'), '/', parameters('dedicatedContainer1Name'))]",
			"apiVersion": "2016-03-31",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'sql', parameters('databaseName'))]" ],
			"properties":
			{
				"resource":{
					"id":  "[parameters('dedicatedContainer1Name')]",
					"partitionKey": {
						"paths": [
						"/MyPartitionKey2"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*",
								"indexes": [
									{
										"kind": "Range",
										"dataType": "number",
										"precision": -1
									},
									{
										"kind": "Range",
										"dataType": "string",
										"precision": -1
									}
								]
							}
						]
					}
				},
				"options": { "throughput": "[parameters('dedicatedThroughput')]" }
			}
		}
	]
}
