{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only."
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Remote desktop user Id"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Remote desktop user password. Must be a strong password"
            }
        },
        "vmExtensionVersion": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "A version bump placeholder for vm extensions so they will be forced to run."
            }
        },
        "loadBalancedAppPort1": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "Input endpoint1 for the application to use. Replace it with what your application uses."
            }
        },
        "loadBalancedAppPort2": {
            "type": "int",
            "defaultValue": 8081,
            "metadata": {
                "description": "Input endpoint2 for the application to use. Replace it with what your application uses"
            }
        },
        "clusterProtectionLevel": {
            "type": "string",
            "allowedValues": [
                "None",
                "Sign",
                "EncryptAndSign"
            ],
            "defaultValue": "None",
            "metadata": {
                "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
            }
        },
        "clusterReliabilityLevel": {
            "type": "string",
            "defaultValue": "Silver",
            "allowedValues": [
                "Silver",
                "Platinum"
            ],
            "metadata": {
                "description": "Reliability level for the Service Fabric cluster."
            }
        },
        "nt0InstanceCount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Instance count for node type"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vm-custom-script-windows/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "clusterLocation": "[resourceGroup().location]",
        "computeLocation": "[resourceGroup().location]",
        "dnsName": "[parameters('clusterName')]",
        "vmName": "vm",
        "publicIPAddressName": "PublicIP-VM",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "virtualNetworkName": "VNet",
        "addressPrefix": "10.0.0.0/16",
        "nicName": "NIC",
        "lbName": "LoadBalancer",
        "lbIPName": "PublicIP-LB-FE",
        "availSetName": "AvailabilitySet",
        "maxPercentUpgradeDomainDeltaUnhealthyNodes": "100",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "overProvision": "false",
        "nt0applicationStartPort": "20000",
        "nt0applicationEndPort": "30000",
        "nt0ephemeralStartPort": "49152",
        "nt0ephemeralEndPort": "65534",
        "nt0fabricTcpGatewayPort": "19000",
        "nt0fabricHttpGatewayPort": "19080",
        "subnet0Name": "Subnet-0",
        "subnet0Prefix": "10.0.0.0/24",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
        "lbID0": "[resourceId('Microsoft.Network/loadBalancers',concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]",
        "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
        "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
        "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
        "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
        "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
        "vmNodeType0Name": "[toLower(concat('NT1', variables('vmName')))]",
        "vmNodeType0Size": "Standard_DS2_v2",
        "autoScaleSettingsName": "[concat(variables('vmNodeType0Name'), 'AutoScaleSettings')]",
        "scriptFolder": "scripts",
        "scriptFileName": "setup-docker.ps1"
    },
    "resources": [{
        "apiVersion": "2017-06-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('computeLocation')]",
        "comments": "The virtual network that service fabric will use.",
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[variables('addressPrefix')]"
                ]
            },
            "subnets": [{
                "name": "[variables('subnet0Name')]",
                "properties": {
                    "addressPrefix": "[variables('subnet0Prefix')]"
                }
            }]
        },
        "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[parameters('clusterName')]"
        }
    }, {
        "apiVersion": "2017-06-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(variables('lbIPName'),'-','0')]",
        "location": "[variables('computeLocation')]",
        "comments": "The public ip address that service fabric will use.",
        "properties": {
            "dnsSettings": {
                "domainNameLabel": "[variables('dnsName')]"
            },
            "publicIPAllocationMethod": "Dynamic"
        },
        "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[parameters('clusterName')]"
        }
    }, {
        "apiVersion": "2017-06-01",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name'))]",
        "location": "[variables('computeLocation')]",
        "comments": "Load balancer for the service fabric cluster.",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','0'))]"
        ],
        "properties": {
            "frontendIPConfigurations": [{
                "name": "LoadBalancerIPConfig",
                "properties": {
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','0'))]"
                    }
                }
            }],
            "backendAddressPools": [{
                "name": "LoadBalancerBEAddressPool",
                "properties": {}
            }],
            "loadBalancingRules": [{
                "name": "LBRule",
                "properties": {
                    "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
                    "enableFloatingIP": false,
                    "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                        "id": "[variables('lbProbeID0')]"
                    },
                    "protocol": "Tcp"
                }
            }, {
                "name": "LBHttpRule",
                "properties": {
                    "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
                    "enableFloatingIP": false,
                    "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                        "id": "[variables('lbHttpProbeID0')]"
                    },
                    "protocol": "Tcp"
                }
            }, {
                "name": "AppPortLBRule1",
                "properties": {
                    "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort1')]",
                    "enableFloatingIP": false,
                    "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort1')]",
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                        "id": "[concat(variables('lbID0'),'/probes/AppPortProbe1')]"
                    },
                    "protocol": "Tcp"
                }
            }, {
                "name": "AppPortLBRule2",
                "properties": {
                    "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort2')]",
                    "enableFloatingIP": false,
                    "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort2')]",
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                        "id": "[concat(variables('lbID0'),'/probes/AppPortProbe2')]"
                    },
                    "protocol": "Tcp"
                }
            }],
            "probes": [{
                "name": "FabricGatewayProbe",
                "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[variables('nt0fabricTcpGatewayPort')]",
                    "protocol": "Tcp"
                }
            }, {
                "name": "FabricHttpGatewayProbe",
                "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[variables('nt0fabricHttpGatewayPort')]",
                    "protocol": "Tcp"
                }
            }, {
                "name": "AppPortProbe1",
                "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort1')]",
                    "protocol": "Tcp"
                }
            }, {
                "name": "AppPortProbe2",
                "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort2')]",
                    "protocol": "Tcp"
                }
            }],
            "inboundNatPools": [{
                "name": "LoadBalancerBEAddressNatPool",
                "properties": {
                    "backendPort": 3389,
                    "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPortRangeEnd": 4500,
                    "frontendPortRangeStart": 3389,
                    "protocol": "Tcp"
                }
            }]
        },
        "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[parameters('clusterName')]"
        }
    }, {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[variables('vmNodeType0Name')]",
        "location": "[variables('computeLocation')]",
        "comments": "VM Scale Set definition for the cluster.",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]"
        ],
        "properties": {
            "overprovision": "[variables('overProvision')]",
            "upgradePolicy": {
                "mode": "Automatic"
            },
            "virtualMachineProfile": {
                "extensionProfile": {
                    "extensions": [{
                        "properties": {
                            "publisher": "Microsoft.Compute",
                            "type": "CustomScriptExtension",
                            "typeHandlerVersion": "1.7",
                            "autoUpgradeMinorVersion": false,
                            "settings": {
                                "fileUris": ["[concat(parameters('_artifactsLocation'), '/', variables('scriptFolder'), '/', variables('scriptFileName'), parameters('_artifactsLocationSasToken'))]"],
                                "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File setup-docker.ps1"
                            },
                            "forceUpdateTag": "[parameters('vmExtensionVersion')]"
                        },
                        "name": "CustomScriptExtensionSetupDocker"
                    }, {
                        "name": "[concat('ServiceFabricNodeVmExt','_vmNodeType0Name')]",
                        "properties": {
                            "type": "ServiceFabricNode",
                            "autoUpgradeMinorVersion": true,
                            "publisher": "Microsoft.Azure.ServiceFabric",
                            "settings": {
                                "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                "nodeTypeRef": "[variables('vmNodeType0Name')]",
                                "dataPath": "D:\\\\SvcFab",
                                "durabilityLevel": "Bronze",
                                "nicPrefixOverride": "[variables('subnet0Prefix')]"
                            },
                            "typeHandlerVersion": "1.0"
                        }
                    }]
                },
                "networkProfile": {
                    "networkInterfaceConfigurations": [{
                        "name": "[concat(variables('nicName'), '-0')]",
                        "properties": {
                            "ipConfigurations": [{
                                "name": "[concat(variables('nicName'),'-',0)]",
                                "properties": {
                                    "loadBalancerBackendAddressPools": [{
                                        "id": "[variables('lbPoolID0')]"
                                    }],
                                    "loadBalancerInboundNatPools": [{
                                        "id": "[variables('lbNatPoolID0')]"
                                    }],
                                    "subnet": {
                                        "id": "[variables('subnet0Ref')]"
                                    }
                                }
                            }],
                            "primary": true
                        }
                    }]
                },
                "osProfile": {
                    "adminPassword": "[parameters('adminPassword')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "computernamePrefix": "[variables('vmNodeType0Name')]",
                    "secrets": []
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter-with-Containers",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [{
                        "lun": 1,
                        "createOption": "Empty",
                        "diskSizeGB": 512,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }]
                }
            }
        },
        "sku": {
            "name": "[variables('vmNodeType0Size')]",
            "capacity": "[parameters('nt0InstanceCount')]",
            "tier": "Standard"
        },
        "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[parameters('clusterName')]"
        }
    }, {
        "type": "Microsoft.Insights/autoscalesettings",
        "name": "[variables('autoScaleSettingsName')]",
        "apiVersion": "2014-04-01",
        "location": "[variables('computeLocation')]",
        "comments": "Autoscale settings for the VM Scale Set.",
        "tags": {
            "[concat('hidden-link:', resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name')))]": "Resource"
        },
        "properties": {
            "profiles": [{
                "name": "Auto created scale condition",
                "capacity": {
                    "minimum": "[parameters('nt0InstanceCount')]",
                    "maximum": 35,
                    "default": "[parameters('nt0InstanceCount')]"
                },
                "rules": [{
                    "metricTrigger": {
                        "metricName": "Percentage CPU",
                        "metricNamespace": "",
                        "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name'))]",
                        "timeGrain": "PT1M",
                        "statistic": "Average",
                        "timeWindow": "PT10M",
                        "timeAggregation": "Average",
                        "operator": "GreaterThan",
                        "threshold": 50
                    },
                    "scaleAction": {
                        "direction": "Increase",
                        "type": "ChangeCount",
                        "value": 1,
                        "cooldown": "PT5M"
                    }
                }, {
                    "metricTrigger": {
                        "metricName": "Percentage CPU",
                        "metricNamespace": "",
                        "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name'))]",
                        "timeGrain": "PT1M",
                        "statistic": "Average",
                        "timeWindow": "PT10M",
                        "timeAggregation": "Average",
                        "operator": "LessThan",
                        "threshold": 10
                    },
                    "scaleAction": {
                        "direction": "Decrease",
                        "type": "ChangeCount",
                        "value": 1,
                        "cooldown": "PT5M"
                    }
                }]
            }],
            "enabled": true,
            "name": "[variables('autoScaleSettingsName')]",
            "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name'))]"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name'))]"
        ]
    }, {
        "apiVersion": "2017-07-01-preview",
        "type": "Microsoft.ServiceFabric/clusters",
        "name": "[parameters('clusterName')]",
        "location": "[variables('clusterLocation')]",
        "comments": "Service Fabric cluster instance.",
        "dependsOn": [],
        "properties": {
            "clusterCodeVersion": "255.255.5718.255",
            "clientCertificateCommonNames": [],
            "clientCertificateThumbprints": [],
            "clusterState": "Default",
            "fabricSettings": [],
            "upgradeDescription": {
                "upgradeReplicaSetCheckTimeout": "10675199.02:48:05.4775807",
                "healthCheckWaitDuration": "00:05:00",
                "healthCheckStableDuration": "00:05:00",
                "healthCheckRetryTimeout": "00:45:00",
                "upgradeTimeout": "12:00:00",
                "upgradeDomainTimeout": "02:00:00",
                "healthPolicy": {
                    "maxPercentUnhealthyNodes": 100,
                    "maxPercentUnhealthyApplications": 100
                },
                "deltaHealthPolicy": {
                    "maxPercentDeltaUnhealthyNodes": 0,
                    "maxPercentUpgradeDomainDeltaUnhealthyNodes": 0,
                    "maxPercentDeltaUnhealthyApplications": 0
                }
            },
            "addonFeatures": [
                "DnsService"
            ],
            "managementEndpoint": "[concat('http://',reference(concat(variables('lbIPName'),'-','0')).dnsSettings.fqdn,':',variables('nt0fabricHttpGatewayPort'))]",
            "nodeTypes": [{
                "name": "[variables('vmNodeType0Name')]",
                "applicationPorts": {
                    "endPort": "[variables('nt0applicationEndPort')]",
                    "startPort": "[variables('nt0applicationStartPort')]"
                },
                "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
                "durabilityLevel": "Bronze",
                "ephemeralPorts": {
                    "endPort": "[variables('nt0ephemeralEndPort')]",
                    "startPort": "[variables('nt0ephemeralStartPort')]"
                },
                "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
                "isPrimary": true,
                "vmInstanceCount": "[parameters('nt0InstanceCount')]"
            }],
            "provisioningState": "Default",
            "reliabilityLevel": "[parameters('clusterReliabilityLevel')]",
            "upgradeMode": "Manual",
            "vmImage": "Windows"
        },
        "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[parameters('clusterName')]"
        }
    }],
    "outputs": {
        "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('lbIPName'),'-','0')), '2016-10-01').dnsSettings.fqdn]",
            "type": "string"
        },
        "ipaddress": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('lbIPName'),'-','0')), '2016-10-01').dnsSettings.fqdn]",
            "type": "string"
        }
    }
}