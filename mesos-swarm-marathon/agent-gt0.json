{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name Prefix for the Storage Account where the Virtual Machine's disks will be placed.  StorageAccounts may contain at most variables('vmsPerStorageAccount')"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "agentVMSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size of the agent node(s)"
      }
    },
    "agentCount": {
      "type": "int",
      "metadata": {
        "description": "The count of agent nodes"
      }
    },
    "masterCount": {
      "type": "int",
      "metadata": {
        "description": "The count of master nodes"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The network subnet"
      }
    },
    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "The network subnet reference"
      }
    },
    "agentFirstAddr": {
      "type": "int",
      "metadata": {
        "description": "The value of the 4th IPv4 octet of the first agent within the subnet"
      }
    },
    "masterVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The vm name prefix of the master"
      }
    },
    "agentVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The vm name prefix of the agent"
      }
    },
    "osImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The publisher name to identify the OS image."
      }
    },
    "osImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer name to identify the OS image."
      }
    },
    "osImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The sku to identify the OS image."
      }
    },
    "osImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The version to identify the OS image."
      }
    }
  },
  "variables": {
    "availabilitySet": "agentAvailabilitySet",
    "vmsPerStorageAccount": 15,
    "storageAccountsCount": "[add(div(parameters('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(parameters('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(parameters('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "storageAccountType": "Standard_GRS",
    "commandPrefix": "/bin/bash -c 'wget --tries 20 --retry-connrefused --waitretry=15 -qO- https://raw.githubusercontent.com/anhowe/mesos-scalable-cluster/master/configure-mesos-cluster.sh | nohup /bin/bash -s ",
    "commandPostfix":  " > /var/log/azure/firstinstall.log 2>&1 &'"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('newStorageAccountNamePrefix'),copyIndex(1))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('storageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('agentVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('agentCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(parameters('subnetPrefix'),'0/24')[0], copyIndex(parameters('agentFirstAddr')))]",
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('agentVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountNamePrefix'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('agentVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('agentVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('agentVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('osImagePublisher')]",
            "offer": "[parameters('osImageOffer')]",
            "sku": "[parameters('osImageSKU')]",
            "version": "[parameters('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('agentVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', parameters('newStorageAccountNamePrefix'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', parameters('masterVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('agentVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('agentVMNamePrefix'), copyIndex(1), '/configureagent')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('agentVMNamePrefix'), copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[concat(variables('commandPrefix'), parameters('masterCount'), ' slaveconfiguration ', parameters('masterVMNamePrefix'), variables('commandPostfix'))]"
        }
      }
    }
  ]
}
