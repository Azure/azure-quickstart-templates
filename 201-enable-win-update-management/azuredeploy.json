{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccountName": {
      "type": "string",
      "defaultValue": "azureupdate3442",
      "metadata": {
        "description": "Storage Account Name"
      }
    },
    "VMName": {
      "type": "string",
      "defaultValue": "Update-Win"
    },
    "AdminUserName": {
      "type": "string",
      "defaultValue": "localadmin"
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_B1s"
    },
    "omsWorkspaceName": {
      "type": "string"
    },
    "omsServiceTier": {
      "type": "string",
      "defaultValue": "Free",
      "allowedValues": [
        "Free",
        "Standalone",
        "PerNode"
      ],
      "metadata": {
        "description": "OMS log analytics service tier: Free, Standalone, or PerNode"
      }
    },
    "omsDataRetention": {
      "type": "int",
      "defaultValue": 7,
      "minValue": 7,
      "maxValue": 730,
      "metadata": {
        "description": "OMS log analytics number of days of retention. Free plans can only have 7 days, Standalone and OMS plans include 30 days for free"
      }
    },
    "automationAccountName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Automation account name"
      }
    }
  },
  "variables": {
    "VNetName": "[concat(parameters('VMName'), '-vnet')]",
    "ServerSubnet": "[concat('server','-subnet')]",
    "PIPName": "[concat(parameters('VMName'),'-pip')]",
    "VMName": "[concat(parameters('VMName'),'-vm')]",
    "NICName": "[concat(parameters('VMName'),'-nic')]",
    "apiVersion": {
      "oms": "2017-03-15-preview",
      "omssolutions": "2015-11-01-preview",
      "automation": "2015-10-31"
    },
    "updates": {
      "name": "[concat('Updates', '(', parameters('omsWorkspaceName'), ')')]",
      "galleryName": "Updates"
    },

    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
    "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>"

  },
  "resources": [
    {
      "name": "[toLower(parameters('StorageAccountName'))]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[toLower(parameters('StorageAccountName'))]"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[variables('PIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[concat(parameters('VMName'),'-pip')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('VMName'),'3245'))]"
        }
      }
    },
    {
      "name": "[concat(variables('VNetName'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[concat(variables('VNetName'))]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('ServerSubnet')]",
            "properties": {
              "addressPrefix": "10.10.1.0/24"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('NICName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('PIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]"
      ],
      "tags": {
        "displayName": "[concat(parameters('VMName'),'-nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PIPName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNetName'), variables('ServerSubnet'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('StorageAccountName')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('NICName'))]"
      ],
      "tags": {
        "displayName": "[variables('VMName')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "osProfile": {
          "computerName": "windowsVM1",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": false
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "windowsVM1OSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NICName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "windowsVM1AzureDiagnostics",
          "type": "extensions",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "windowsVM1AzureDiagnostics"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), variables('vmName'), variables('wadcfgxend')))]",
              "storageAccount": "[toLower(parameters('StorageAccountName'))]"
            },
            "protectedSettings": {
              "storageAccountName": "[toLower(parameters('StorageAccountName'))]",
              "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('StorageAccountName'))), '2015-06-15').key1]",
              "storageAccountEndPoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('StorageAccountName'))), '2015-06-15').primaryEndpoints.blob]"
            }
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.EnterpriseCloud.Monitoring",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName')), '2015-03-20').customerId]"
            },
            "protectedSettings": {
              "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName')), '2015-03-20').primarySharedKey]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('apiVersion').oms]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('omsWorkspaceName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "Name": "[parameters('omsServiceTier')]"
        },
        "retention": "[parameters('omsDataRetention')]"
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion').omssolutions]",
          "location": "[resourceGroup().location]",
          "name": "[variables('updates').name]",
          "type": "Microsoft.OperationsManagement/solutions",
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/', variables('updates').name)]",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]"
          ],
          "properties": {
            "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]"
          },
          "plan": {
            "name": "[variables('updates').name]",
            "publisher": "Microsoft",
            "promotionCode": "",
            "product": "[concat('OMSGallery/', variables('updates').galleryName)]"
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('apiVersion').automation]",
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Basic"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion').omssolutions]",
      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
      "name": "[concat(parameters('omsWorkspaceName'), '/' , 'Automation')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName'))]",
        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
      ],
      "properties": {
        "resourceId": "[resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
      }
    }
  ],
  "outputs": {
  }
}
