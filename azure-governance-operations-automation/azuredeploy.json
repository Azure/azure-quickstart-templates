{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "defaultValue": "cloudwiseuser",
      "metadata": {
        "description": "The account name to use for the database server administrator."
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password to use for the database server administrator."
      }
    },
    "omsWorkspaceName": {
      "type": "string",
      "defaultValue": "CloudWiseOMSWorkspace",
      "metadata": {
        "description": "Provide the OMS Workspace Name."
      }
    },
    "automationAccountName": {
      "type": "string",
      "metadata": {
        "description": "Provide the name of an existing Automation Account with SPN."
      }
    },
    "automationRegion": {
      "type": "string",
      "defaultValue": "East US 2",
      "allowedValues": [
        "Japan East",
        "East US 2",
        "Southeast Asia",
        "South Central US",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of the existing Automation Account."
      }
    },
    "omsRegion": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "Australia Southeast",
        "East US",
        "Southeast Asia",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of the OMS regions."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/azure-governance-operations-automation",
      "metadata": {
        "description": "Publicly accessible location of all deployment artifacts."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Reserved for deploying using Visual Studio. Please keep it as an empty string"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "packageURI": "https://msignite2016stg.blob.core.windows.net/cloudwise/package.zip",

    "hostingPlanName": "[concat('CloudWiseHostingplan-', uniqueString(resourceGroup().id))]",
    "webSiteName": "[concat('CloudWise', uniqueString(resourceGroup().id))]",
    "sqlserverName": "[concat('sqlcloudwise', uniqueString(resourceGroup().id))]",
    "sqlDatabaseName": "cloudwisedb",
    "sqlCollation": "SQL_Latin1_General_CP1_CI_AS",
    "sqlMaxSizeBytes": "1073741824",
    "sqlEdition": "Basic",
    "sqlRequestedServiceObjectiveName": "Basic",
    "insightsName": "[concat(variables('webSiteName'),'insights')]",
    "omsWorkspaceName": "[concat(parameters('omsWorkspaceName'), uniqueString(resourceGroup().id, deployment().name))]",
    "OMSWebAppsRunBookAndDashboardTemplateFolder": "nested/AutomationRunbooksOMSDashboard",
    "OMSWebAppsRunBookAndDashboardTemplateFileName": "OMSAutomationRunbooksDashboard.json",
    "OMSCommonTemplateFolder": "nested/OMSCommon",
    "OMSCommonTemplateFileName": "OMSCommon.json",
    "quickstartTags": {
      "type": "object",
      "name": "azure-governance-operations-automation"
    }
  },
  "resources": [
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "SqlServer",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]"
      },
      "resources": [
        {
          "name": "[variables('sqlDatabaseName')]",
          "type": "databases",
          "location": "[parameters('location')]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ],
          "properties": {
            "edition": "[variables('sqlEdition')]",
            "collation": "[variables('sqlCollation')]",
            "maxSizeBytes": "[variables('sqlMaxSizeBytes')]",
            "requestedServiceObjectiveName": "[variables('sqlRequestedServiceObjectiveName')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "HostingPlan",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
        "displayName": "Website",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webSiteName'))]",
            "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "WebAppConfig",
            "quickstartName": "[variables('quickstartTags').name]"
          },
          "properties": {
            "netFrameworkVersion": "v4.6"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[variables('webSiteName')]",
            "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
          ],
          "properties": {
            "DefaultConnection": {
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', variables('sqlserverName'), ';Password=', parameters('sqlAdministratorLoginPassword'), ';', 'MultipleActiveResultSets=True;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
              "type": "SQLServer"
            },
            "SQLCONNSTR_DefaultConnection": {
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', variables('sqlserverName'), ';Password=', parameters('sqlAdministratorLoginPassword'), ';', 'MultipleActiveResultSets=True;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
              "type": "SQLServer"
            }
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[parameters('location')]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('Websitename'))]"
          ],
          "tags": {
            "displayName": "WebAppMSDeploy",
            "quickstartName": "[variables('quickstartTags').name]"
          },
          "properties": {
            "packageUri": "[variables('packageURI')]"
          }
        }
      ]
    },
    {
      "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "[concat(variables('insightsName'), ' AutoScale')]",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": 1,
              "maximum": 2,
              "default": 1
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": false,
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      }
    },
    {
      "name": "[concat('CPUHigh ', variables('hostingPlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "[concat('CPUHigh', variables('insightsName'))]",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "name": "[concat('CPUHigh ', variables('hostingPlanName'))]",
        "description": "[concat('The average CPU is high across all the instances of ', variables('hostingPlanName'))]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
            "metricName": "CpuPercentage"
          },
          "operator": "GreaterThan",
          "threshold": 90,
          "windowSize": "PT15M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "name": "[concat('LongHttpQueue ', variables('hostingPlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "[concat('LongHttpQueue', variables('insightsName'))]",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "name": "[concat('LongHttpQueue ', variables('hostingPlanName'))]",
        "description": "[concat('The HTTP queue for the instances of ', variables('hostingPlanName'), ' has a large number of pending requests.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
            "metricName": "HttpQueueLength"
          },
          "operator": "GreaterThan",
          "threshold": 100,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "name": "[concat('ServerErrors ', variables('insightsName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
        "displayName": "[concat('ServerErrors ', variables('insightsName'))]",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "name": "[concat('ServerErrors ', variables('webSiteName'))]",
        "description": "[concat(variables('webSiteName'), ' has some server errors, status code 5xx.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]",
            "metricName": "Http5xx"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "name": "[concat('ForbiddenRequests ', variables('insightsName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
      ],
      "tags": {
        "displayName": "[concat('ForbiddenRequests', variables('insightsName'))]",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "name": "[concat('ForbiddenRequests ', variables('webSiteName'))]",
        "description": "[concat(variables('webSiteName'), ' has some requests that are forbidden, status code 403.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]",
            "metricName": "Http403"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "name": "[variables('insightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
      ],
      "tags": {
        "displayName": "[concat('Component', variables('insightsName'))]",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
        "quickstartName": "[variables('quickstartTags').name]"
      },
      "properties": {
        "applicationId": "[variables('webSiteName')]"
      }
    },
    {
      "name": "omsWorkspace",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('OMSCommonTemplateFolder'), '/', variables('OMSCommonTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[variables('omsWorkspaceName')]"
          },
          "location": {
            "value": "[parameters('omsRegion')]"
          },
          "serviceTier": {
            "value": "Free"
          },
          "quickstartTags": {
            "value": "[variables('quickstartTags')]"
          }
        }
      }
    },
    {
      "name": "OMSAutomationRunBooksAndDashboard",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "['Microsoft.Resources/deployments/omsWorkspace']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('OMSWebAppsRunBookAndDashboardTemplateFolder'), '/', variables('OMSWebAppsRunBookAndDashboardTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "omsId": {
            "value": "[reference('omsWorkspace').outputs.workspaceIdOutput.value]"
          },
          "omsKey": {
            "value": "[reference('omsWorkspace').outputs.sharedKeyOutput.value]"
          },
          "omsWorkspaceName": {
            "value": "[variables('omsWorkspaceName')]"
          },
          "automationAccountName": {
            "value": "[parameters('automationAccountName')]"
          },
          "automationRegion": {
            "value": "[parameters('automationRegion')]"
          },
          "omsworkspaceRegion": {
            "value": "[parameters('omsRegion')]"
          },
          "_artifactsLocation": {
            "value": "[concat(parameters('_artifactsLocation'), '/', variables('OMSWebAppsRunBookAndDashboardTemplateFolder'))]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "quickstartTags": {
            "value": "[variables('quickstartTags')]"
          }
        }
      }
    }
  ]
}
