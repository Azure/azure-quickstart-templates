{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "existingLabName": {
      "type": "string",
      "metadata": {
        "description": "Name of an existing lab where the VM template will be created or updated."
      }
    },
    "imagePublisher": {
      "type": "string",
      "metadata": {
        "description": "Name of the vm image publisher."
      }
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "Specifies the vm image offer type (e.g. 'Oracle_Database_12c', 'WindowsServer' etc)."
      }
    },
    "imageSku": {
      "type": "string",
      "metadata": {
        "description": "Specifies the vm image sku."
      }
    },
    "imageVersion": {
      "type": "string",
      "metadata": {
        "description": "Specifies the vm image version."
      }
    },
    "templateName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM template being created or updated."
      }
    },
    "templateDescription": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Details about the VM template being created or updated."
      }
    }
  },
  "variables": {
    "resourceName": "[concat(parameters('existingLabName'), '/', parameters('templateName'))]",
    "resourceType": "Microsoft.DevTestLab/labs/vmtemplates"
  },
  "resources": [
    {
      "apiVersion": "2015-05-21-preview",
      "name": "[variables('resourceName')]",
      "type": "Microsoft.DevTestLab/labs/vmtemplates",
      "properties": {
        "gallery": {
          "imagePublisher": "[parameters('imagePublisher')]",
          "imageOffer": "[parameters('imageOffer')]",
          "imageSku": "[parameters('imageSku')]",
          "imageVersion": "[parameters('imageVersion')]"
        },
        "description": "[parameters('templateDescription')]"
      }
    }
  ],
  "outputs": {
    "vmTemplateId": {
      "type": "string",
      "value": "[resourceId(variables('resourceType'), parameters('existingLabName'), parameters('templateName'))]"
    }
  }
}
