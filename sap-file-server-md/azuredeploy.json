{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourcePrefix": {
      "type": "string",
      "maxLength": 6,
      "minLength": 3,
      "metadata": {
        "description": "The prefix that should be used to create the resource names."
      }
    },
    "sapSystemCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of SAP systems that will use this file server"
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows Server 2016 Datacenter",
        "SLES 12",
        "SLES 12 BYOS"
      ],
      "defaultValue": "Windows Server 2016 Datacenter",
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "subnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The id of the subnet you want to use."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sap-file-server-md/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "images": {
      "Windows Server 2016 Datacenter": {
        "sku": "2016-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows"
      },
      "SLES 12": {
        "sku": "12-SP2",
        "offer": "SLES-SAP",
        "publisher": "SUSE",
        "version": "latest",
        "OSType": "Linux"
      },
      "SLES 12 BYOS": {
        "sku": "12-SP2",
        "offer": "SLES-SAP-BYOS",
        "publisher": "SUSE",
        "OSType": "Linux",
        "version": "latest"
      }
    },
    "internalOSType": "[variables('images')[parameters('osType')].OSType]",
    "csExtension": {
      "Windows": {
        "script": "[concat(parameters('_artifactsLocation'), '/scripts/noop.ps1', parameters('_artifactsLocationSasToken'))]",
        "scriptCall": "powershell.exe -ExecutionPolicy bypass -File noop.ps1"
      },
      "Linux": {
        "script": "[concat(parameters('_artifactsLocation'), '/scripts/noop.sh', parameters('_artifactsLocationSasToken'))]",
        "scriptCall": "sh noop.sh"
      }
    },
    "vmSizes": {
      "fsserversize": "Standard_DS2_v2",
      "fsservercount": 2,
      "fsserverdisksSize": 128
    },
    "fsvmCount": "[variables('vmSizes').fsservercount]",
    "fsvmDataDisksOptions": {
      "Linux": "[parameters('sapSystemCount')]",
      "Windows": "[mul(parameters('sapSystemCount'), 2)]"
    },
    "fsvmDataDisks": "[variables('fsvmDataDisksOptions')[variables('internalOSType')]]",
    "sidlower": "[toLower(parameters('resourcePrefix'))]",
    "vmName": "[variables('sidlower')]",
    "vnetName": "[concat(variables('sidlower'), '-vnet')]",
    "subnetName": "Subnet",
    "nestedDeploymentName": "nestedTemplate",
    "nestedDeploymentNameVNet": "[concat(variables('nestedDeploymentName'), 'vnet')]",
    "nestedDeploymentNamePIP": "[concat(variables('nestedDeploymentName'), 'pip')]",
    "nestedDeploymentNameCL": "[concat(variables('nestedDeploymentName'), 'fs')]",
    "nestedDeploymentNameProf": "[concat(variables('nestedDeploymentName'), 'prof')]",
    "nestedDeploymentNameNIC": "[concat(variables('nestedDeploymentName'), 'nic')]",
    "nestedDeploymentNameNICCL": "[concat(variables('nestedDeploymentNameNIC'), 'fs')]",
    "nestedDeploymentNameLBCL": "[concat(variables('nestedDeploymentName'), 'lbfs')]",
    "publicIpNameCL": "[concat(variables('sidlower'), '-pip-fs')]",
    "avSetNameCL": "[concat(variables('sidlower'), '-avset-fs')]",
    "nsgNameCL": "[concat(variables('sidlower'), '-nsg')]",
    "internalStorageTypeCL": "Premium_LRS",
    "loadBalancerNameCL": "[concat(variables('sidlower'), '-lb-fs')]",
    "vmNameCL": "[concat(variables('vmName'), '-fs')]",
    "nicNameCL": "[concat(variables('sidlower'), '-nic-fs')]",
    "osDiskType": "image",
    "osSecurityAllowAll": [
      {
        "name": "ALLOW_ALL",
        "properties": {
          "description": "Allow all",
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "*",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 150,
          "direction": "Inbound"
        }
      }
    ],
    "osSecurityRules": {
      "Windows": [
        {
          "name": "RDP",
          "properties": {
            "description": "Allow RDP Subnet",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 150,
            "direction": "Inbound"
          }
        }
      ],
      "Linux": [
        {
          "name": "SSH",
          "properties": {
            "description": "Allow SSH Subnet",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "22",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 150,
            "direction": "Inbound"
          }
        }
      ]
    },
    "selectedSecurityRules": "[variables('osSecurityRules')[variables('internalOSType')]]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgNameCL')]",
      "apiVersion": "2018-04-01",
      "location": "[parameters('location')]",
      "condition": "[equals(length(parameters('subnetId')), 0)]",
      "properties": {
        "securityRules": "[variables('selectedSecurityRules')]"
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('nestedDeploymentNameVnet')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgNameCL'))]"
      ],
      "condition": "[equals(length(parameters('subnetId')), 0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/newvnetnsg.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "addressPrefix": {
            "value": "10.0.0.0/16"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetPrefix": {
            "value": "10.0.0.0/24"
          },
          "nsgName": {
            "value": "[variables('nsgNameCL')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avSetNameCL')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 20
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat(variables('nestedDeploymentNamePIP'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "pipLoop",
        "count": "[variables('fsvmCount')]"
      },
      "condition": "[equals(length(parameters('subnetId')), 0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/newpip.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "publicIpName": {
            "value": "[concat(variables('publicIpNameCL'), '-', copyIndex())]"
          },
          "publicIPAddressType": {
            "value": "Dynamic"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat(variables('nestedDeploymentNameNICCL'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "nicConfigCLLoop",
        "count": "[variables('fsvmCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/nic-config.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "publicIpName": {
            "value": "[concat(variables('publicIpNameCL'), '-', copyIndex())]"
          },
          "nsgName": {
            "value": ""
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('nestedDeploymentNameLBCL')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameVnet'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameNICCL'), '-0')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/loadbalancer.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "loadBalancerName": {
            "value": "[variables('loadBalancerNameCL')]"
          },
          "sapSystemCount": {
            "value": "[parameters('sapSystemCount')]"
          },
          "osType": {
            "value": "[variables('internalOSType')]"
          },
          "subnetId": {
            "value": "[reference(concat(variables('nestedDeploymentNameNICCL'), '-0')).outputs.selectedConfiguration.value.subnet.id]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNameCL'), '-', copyIndex())]",
      "apiVersion": "2018-04-01",
      "copy": {
        "name": "nicCLLoop",
        "count": "[variables('fsvmCount')]"
      },
      "dependsOn": [
        "pipLoop",
        "nicConfigCLLoop",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameVnet'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameLBCL'))]"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": "[reference(concat(variables('nestedDeploymentNameNICCL'), '-', copyIndex())).outputs.selectedConfiguration.value.publicIPAddress]",
              "subnet": "[reference(concat(variables('nestedDeploymentNameNICCL'), '-', copyIndex())).outputs.selectedConfiguration.value.subnet]",
              "loadBalancerBackendAddressPools": "[reference(variables('nestedDeploymentNameLBCL')).outputs.nicBackAddressPools.value]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat(variables('nestedDeploymentNameProf'), '-fs-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "osDiskPartsCLLoop",
        "count": "[variables('fsvmCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/os-disk-parts-md.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "imageSku": {
            "value": "[variables('images')[parameters('osType')].sku]"
          },
          "imagePublisher": {
            "value": "[variables('images')[parameters('osType')].publisher]"
          },
          "imageOffer": {
            "value": "[variables('images')[parameters('osType')].offer]"
          },
          "imageVersion": {
            "value": "[variables('images')[parameters('osType')].version]"
          },
          "osDiskType": {
            "value": "[variables('osDiskType')]"
          },
          "osType": {
            "value": "[variables('internalOSType')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNameCL'), '-', copyIndex())]"
          },
          "storageType": {
            "value": "[variables('internalStorageTypeCL')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat(variables('nestedDeploymentNameCL'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "vmCLLoop",
        "count": "[variables('fsvmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameCL'), '-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('avSetNameCL'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameProf'), '-fs-', copyIndex())]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/server-md.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "imageReference": {
            "value": "[reference(concat(variables('nestedDeploymentNameProf'), '-fs-', copyIndex())).outputs.imageReference.value]"
          },
          "osDisk": {
            "value": "[reference(concat(variables('nestedDeploymentNameProf'), '-fs-', copyIndex())).outputs.osDisk.value]"
          },
          "osDiskType": {
            "value": "[variables('osDiskType')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNameCL'), '-', copyIndex())]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').fsserversize]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "csExtensionScript": {
            "value": "[variables('csExtension')[variables('internalOSType')].script]"
          },
          "csExtensionscriptCall": {
            "value": "[variables('csExtension')[variables('internalOSType')].scriptCall]"
          },
          "csExtensionscriptArgs": {
            "value": ""
          },
          "avSetObj": {
            "value": {
              "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetNameCL'))]"
            }
          },
          "useAVSet": {
            "value": true
          },
          "nicName": {
            "value": "[concat(variables('nicNameCL'), '-', copyIndex())]"
          },
          "dataDisksObj": {
            "value": {
              "copy": [
                {
                  "name": "dataDisks",
                  "count": "[variables('fsvmDataDisks')]",
                  "input": {
                    "lun": "[copyIndex('dataDisks')]",
                    "createOption": "Empty",
                    "diskSizeGB": "[variables('vmSizes').fsserverdisksSize]"
                  }
                }
              ]
            }
          },
          "osType": {
            "value": "[variables('internalOSType')]"
          }
        }
      }
    }
  ]
}
