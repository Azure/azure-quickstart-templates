{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/glassfish-on-suse/"
    },
    "glassfishVersion": {
      "type": "int",
      "minValue": 3,
      "allowedValues": [
        3,
        4
      ],
      "metadata": {
        "description": "Release number for the GlassFish package to be deployed"
      }
    },
    "glassfishRelease": {
      "type": "string",
      "allowedValues": [
        "3.1.1",
        "3.1.2",
        "3.1.2.2",
        "3.2",
        "4.0",
        "4.1"
      ],
      "metadata": {
        "description": "Version of GlassFish to deploy"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of VMs"
      }
    },
    "dnsNameforLBIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "DNS for Load Balancer IP"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "VM(s) size"
      }
    },
    "osImage": {
      "type": "string",
      "allowedValues": [
        "opensuse",
        "sles"
      ],
      "defaultValue": "opensuse",
      "metadata": {
        "description": "Operating System to use for VM image(s)"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "glassfishAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "GlassFish admin user password"
      }
    },
    "sshPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key on all VMs"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "location": "[parameters('location')]",
    "namePrefix": "gf-",
    "storageAccountName": "[concat(uniqueString(resourceGroup().id), 'sa')]",
    "availabilitySetName": "[concat(variables('namePrefix'), 'nodes')]",
    "publicIPAddressName": "[concat(variables('namePrefix'), 'ip')]",
    "vnetName": "[concat(variables('namePrefix'), 'vnet')]",
    "subnetName": "[concat(variables('namePrefix'), 'subnet')]",
    "nsgName": "[concat(variables('subnetName'), '-nsg')]",
    "lbName": "[concat(variables('namePrefix'), 'lb')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolName": "lbBackend",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('lbPoolName'))]",
    "lbProbeName": "[concat(variables('namePrefix'), 'tcp-probe')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/', variables('lbProbeName'))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
    "opensuse": {
      "publisher": "SUSE",
      "offer": "openSUSE-Leap",
      "sku": "42.3",
      "version": "latest"
    },
    "sles": {
      "publisher": "SUSE",
      "offer": "SLES",
      "sku": "12-SP3",
      "version": "latest"
    },
    "vmStorageAccountContainerName": "vhd",
    "osDiskName": "osdisk",
    "imageReference": "[variables(parameters('osImage'))]",
    "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
    "nestedTemplateFolder": "nestedtemplates/",
    "nestedTemplateFileName": "azuredeploy.json",
    "nestedTemplateUrl": "[concat(parameters('_artifactsLocation'), variables('nestedTemplateFolder'), variables('nestedTemplateFileName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "name": "[variables('storageAccountName')]",
      "properties": {
        "accountType": "Standard_LRS"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2017-12-01",
      "location": "[variables('location')]",
      "name": "[variables('availabilitySetName')]",
      "sku": {
        "name": "Aligned"
          },
        "properties": { 
            "platformFaultDomainCount": 2,
            "platformUpdateDomainCount": 5
            },
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "name": "[variables('publicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameforLBIP')]"
        }
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh-rule",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "web-rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "name": "[variables('vnetName')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "backendPort": 8080,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 80,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbProbeName')]",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": 8080,
              "protocol": "Tcp"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('lbName'), '/ssh-', variables('namePrefix'), copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "lbSSHNatLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "Tcp",
        "frontendPort": "[copyIndex(5000)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('lbName'), '/admin-', variables('namePrefix'), copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "lbAdminNatLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "Tcp",
        "frontendPort": "[copyIndex(4800)]",
        "backendPort": 4848,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('namePrefix'), 'nic-', copyindex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatRules/', 'ssh-', variables('namePrefix'), copyIndex())]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatRules/', 'admin-', variables('namePrefix'), copyIndex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('lbPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/ssh-', variables('namePrefix'), copyindex())]"
                },
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/admin-', variables('namePrefix'), copyindex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('namePrefix'), 'vm-', copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('namePrefix'), 'nic-', copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('namePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat(variables('namePrefix'), 'vm-', copyindex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('namePrefix'), 'nic-', copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "name": "GlassFishDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nestedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "vmPrefix": {
            "value": "[concat(variables('namePrefix'), 'vm-')]"
          },
          "numberOfInstances": {
            "value": "[parameters('numberOfInstances')]"
          },
          "glassfishVersion": {
            "value": "[parameters('glassfishVersion')]"
          },
          "glassfishRelease": {
            "value": "[parameters('glassfishRelease')]"
          },
          "glassfishAdminPassword": {
            "value": "[parameters('glassfishAdminPassword')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "LoadBalancedApplicationServerURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    }
  }
}
