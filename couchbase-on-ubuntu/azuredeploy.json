{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines and administering Couchbase Server"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used when provisioning virtual machines and administering Couchbase Server"
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "defaultValue": "cbstorage",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "cbVNet",
      "metadata": {
        "description": "Virtual Network"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "couchbaseCluster",
      "metadata": {
        "description": "The name of the Couchbase cluster"
      }
    },
    "tshirtSize": {
      "type": "string",
      "defaultValue": "Small",
      "allowedValues": [
        "Small",
        "Medium",
        "Large"
      ],
      "metadata": {
        "description": "T-shirt size of the Couchbase Server cluster - Small is 3 x Standard_A2 nodes, Medium is 4 x Standard_A6 nodes and Large is 5 x Standard_D14."
      }
    },
    "cbPackageDownloadBase": {
      "type": "string",
      "defaultValue": "http://packages.couchbase.com/releases/4.5.0/",
      "metadata": {
        "description": "Couchbase package download location"
      }
    },
    "cbPackage": {
      "type": "string",
      "defaultValue": "couchbase-server-enterprise_4.5.0-ubuntu12.04_amd64.deb",
      "metadata": {
        "description": "Couchbase package to install"
      }
    },
    "jumpbox": {
      "type": "string",
      "defaultValue": "jumpbox-windows",
      "allowedValues": [
        "jumpbox-windows",
        "jumpbox-ubuntu",
        "disabled"
      ],
      "metadata": {
        "description": "The flag allowing to enable or disable provisioning of the Ubuntu Linux or Windows Server jumpbox VM that can be used to access the nodes"
      }
    }
  },
  "variables": {
    "commonSettings": {
      "availabilitySet": "cbClusterAvailabilitySet",
       "region": "[resourceGroup().location]"
    },
    "networkSettings": {
      "virtualNetworkName": "['cbVNet']",
      "addressPrefix": "10.0.0.0/16",
      "subnet": {
        "name": "couchSubnet",
        "prefix": "10.0.0.0/24"
      },
      "nodesIpPrefix": "10.0.0.1"
    },
    "machineSettings": {
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "machineNamePrefix": "['cbnode']",
      "imageReference": "[variables('imageReference')]",
      "dataDiskSize": 1023
    },
    "imageReference": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "12.04.5-LTS",
      "version": "latest"
    },
    "sourceImageName": "b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-12_04_5_LTS-amd64-server-20150413-en-us-30GB",
    "sourceImage": "[concat('/',subscription().subscriptionId,'/services/images/',variables('sourceImageName'))]",
    "templateBaseUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/couchbase-on-ubuntu/",
    "sharedBaseUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/",
    "storageAccountSuffixForNodeSmall0": "0",
    "storageAccountSuffixForNodeSmall1": "0",
    "storageAccountSuffixForNodeSmall2": "0",
    "storageAccountSuffixForNodeMedium0": "0",
    "storageAccountSuffixForNodeMedium1": "0",
    "storageAccountSuffixForNodeMedium2": "0",
    "storageAccountSuffixForNodeMedium3": "0",
    "storageAccountSuffixForNodeLarge0": "0",
    "storageAccountSuffixForNodeLarge1": "1",
    "storageAccountSuffixForNodeLarge2": "2",
    "storageAccountSuffixForNodeLarge3": "3",
    "storageAccountSuffixForNodeLarge4": "4",
    "tshirtSizeSmall": {
      "storageAccountCount": 1,
      "clusterSizeMinusOne": 2,
      "lastNodeId": 2,
      "clusterSize": 3,
      "couchbaseRamQuota": 1200,
      "vmSize": "Standard_A2",
      "maxNumberOfDataDisksForVmSizeNotUsedButHereForReference": 4,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'nested/cluster-nodes-',parameters('jumpbox'),'A2.json')]",
      "backendIPConfigurations": [
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic0'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic1'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic2'),'/ipConfigurations/ipconfig1')]"
        }
      ]
    },
    "tshirtSizeMedium": {
      "storageAccountCount": 1,
      "clusterSizeMinusOne": 3,
      "lastNodeId": 3,
      "clusterSize": 4,
      "couchbaseRamQuota": 10000,
      "vmSize": "Standard_A6",
      "maxNumberOfDataDisksForVmSizeNotUsedButHereForReference": 8,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'nested/cluster-nodes-A6.json')]",
      "backendIPConfigurations": [
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic0'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic1'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic2'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic3'),'/ipConfigurations/ipconfig1')]"
        }
      ]
    },
    "tshirtSizeLarge": {
      "storageAccountCount": 5,
      "clusterSizeMinusOne": 4,
      "lastNodeId": 4,
      "clusterSize": 5,
      "couchbaseRamQuota": 44000,
      "vmSize": "Standard_D14",
      "maxNumberOfDataDisksForVmSizeNotUsedButHereForReference": 32,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'nested/cluster-nodes-D14.json')]",
      "backendIPConfigurations": [
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic0'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic1'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic2'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic3'),'/ipConfigurations/ipconfig1')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',  'nic4'),'/ipConfigurations/ipconfig1')]"
        }
      ]
    },
    "vmScripts": {
      "scriptsToDownload": [
        "[concat(variables('templateBaseUrl'), 'scripts/couchbase-azure-install.sh')]",
        "[concat(parameters('cbPackageDownloadBase'), parameters('cbPackage'))]",
        "[concat(variables('sharedBaseUrl'), 'vm-disk-utils-0.1.sh')]"
      ],
      "installCommand": "[concat('bash couchbase-azure-install.sh -d ', parameters('cbPackage'), ' -n ', 'couchbaseCluster', ' -i ', concat(variables('networkSettings').nodesIpPrefix, '-', variables('clusterSpec').clusterSize), ' -a ', variables('machineSettings').adminUsername, ' -p ', variables('machineSettings').adminPassword, ' -r ', variables('clusterSpec').couchbaseRamQuota)]",
      "setupCommand": "[concat('bash couchbase-azure-install.sh -d ', parameters('cbPackage'), ' -n ', 'couchbaseCluster', ' -i ', concat(variables('networkSettings').nodesIpPrefix, '-', variables('clusterSpec').clusterSize), ' -a ', variables('machineSettings').adminUsername, ' -p ', variables('machineSettings').adminPassword, ' -r ', variables('clusterSpec').couchbaseRamQuota, ' -l')]"
    },
    "clusterSpec": "[variables(concat('tshirtSize', parameters('tshirtSize')))]"
    
    
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "location": "[resourceGroup().location]",
      "name": "[concat('cbstorage', copyindex())]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared-resources')]"
      ],
      "copy": {
        "name": "storageAccountsLoop",
        "count": "[variables('clusterSpec').storageAccountCount]"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[concat('cluster-node', copyindex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "storageAccountsLoop"
      ],
      "copy": {
        "name": "clusterNodesLoop",
        "count": "[variables('clusterSpec').clusterSizeMinusOne]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('clusterSpec').vmTemplate]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "machineSettings": {
            "value": "[variables('machineSettings')]"
          },
          "storageAccountName": {
            "value": "[concat('cbstorage', variables(concat('storageAccountSuffixForNode', parameters('tshirtSize'), copyindex())))]"
          },
          "nodeId": {
            "value": "[copyindex()]"
          },
          "vmSize": {
            "value": "[variables('clusterSpec').vmSize]"
          },
          "vmScripts": {
            "value": "[variables('vmScripts')]"
          },
          "commandToExecute": {
            "value": "[variables('vmScripts').installCommand]"
          }
        }
      }
    },
    {
      "name": "last-cluster-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "clusterNodesLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('clusterSpec').vmTemplate]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "machineSettings": {
            "value": "[variables('machineSettings')]"
          },
          "storageAccountName": {
            "value": "[concat('cbstorage', variables(concat('storageAccountSuffixForNode', parameters('tshirtSize'), variables('clusterSpec').lastNodeId)))]"
          },
          "nodeId": {
            "value": "[variables('clusterSpec').lastNodeId]"
          },
          "vmSize": {
            "value": "[variables('clusterSpec').vmSize]"
          },
          "vmScripts": {
            "value": "[variables('vmScripts')]"
          },
          "commandToExecute": {
            "value": "[variables('vmScripts').setupCommand]"
          }
        }
      }
    },
    {
      "name": "jumpbox-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared-resources')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), 'nested/jumpbox-resources-', parameters('jumpbox'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "machineSettings": {
            "value": "[variables('machineSettings')]"
          }
        }
      }
    }
  ]
}