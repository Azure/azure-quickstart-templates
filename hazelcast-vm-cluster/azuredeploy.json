{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for Hazelcast VMs"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Hazelcast VMs."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "Password or ssh key for the Hazelcast VMs."
      }
    },
    "hazelcastVersion": {
      "defaultValue": "3.12",
      "type": "String",
      "metadata": {
          "description": "Hazelcast Version"
      },
      "allowedValues": [
          "3.12",
          "3.11.3"
        ]
    },
    "clusterName": {
      "defaultValue": "[concat(parameters('adminUsername'),uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "Cluster Name for hazelcast grid"
      }
    },
    "dnsPrefix": {
      "defaultValue": "hazelcast",
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "instanceCount": {
      "defaultValue": 2,
      "type": "int",
      "metadata": {
        "description": "The number of hazelcast nodes in the grid"
      }
    },
    "clusterTag": {
      "type": "string",
      "metadata": {
        "description": "The tag used to identify this cluster"
      }
    },
    "clusterPort": {
      "defaultValue": "5701",
      "type": "string",
      "metadata": {
        "description": "The cluster port to identify this cluster"
      }
    },
    "aadClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory Service Principal client ID"
      }
    },
    "aadClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory Service Principal client secret"
      }
    },
    "aadTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory Service Principal tenant ID"
      }
    },
    "vmSize": {
      "defaultValue": "Standard_DS2",
      "type": "string",
      "metadata": {
        "description": "The size of each instance VM"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "The Ubuntu OS version for the Hazelcast VM. This will pick a fully patched image of this given Ubuntu version."
      },
      "allowedValues": [
        "15.10",
        "16.04-LTS",
        "18.04-LTS"
      ]
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URL for the bootstrap files"
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/hazelcast-vm-cluster/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.1.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "hazelcastPubIp",
    "publicIPAddressType": "Dynamic",
    "vmName": "hazelcast",
    "virtualNetworkName": "hazelcastVNet",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "scriptParameters": "[concat(parameters('clusterName'), ' ', parameters('hazelcastVersion'), ' ', subscription().subscriptionId, ' ', parameters('aadClientId'), ' ',  parameters('aadClientSecret'), ' ',  parameters('aadTenantId'), ' ', resourceGroup().name, ' ', parameters('clusterTag'), ' ', parameters('clusterPort'))]",
    "bootstrapFiles": [
      "[concat(parameters('_artifactsLocation'), 'scripts/bootstrap_hazelcast')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/hazelcast.service')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/hazelcast.conf')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/hazelcast.xml')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/install_hazelcast')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/logging.properties')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/modify_configuration')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/modify_version')]",
      "[concat(parameters('_artifactsLocation'), 'scripts/pom.xml')]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyIndex(1))]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
              "domainNameLabel": "[concat(parameters('dnsPrefix'),copyIndex(1),uniqueString(resourceGroup().id))]"
          }
      },
      "copy": {
        "name": "createPubIps",
        "count": "[parameters('instanceCount')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex(1))]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "copy": {
          "name": "createNics",
          "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "createPubIps"
      ],
      "properties": {
          "ipConfigurations": [
              {
                  "name": "[concat('ipconfig', copyIndex(1))]",
                  "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex(1)))]"
                      },
                      "subnet": {
                          "id": "[variables('subnetRef')]"
                      }
                  }
              }
          ]
        }
      },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex(1))]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "copy": {
          "name": "createVms",
          "count": "[parameters('instanceCount')]"
      },
      "tags": {
          "[parameters('clusterTag')]": "[parameters('clusterPort')]"
      },
      "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex(1))]",
          "createNics"
      ],
      "properties": {
          "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[if(equals(parameters('authenticationType'), 'sshPublicKey'), json('null'), parameters('adminPasswordOrKey'))]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
              "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[parameters('ubuntuOSVersion')]",
                  "version": "latest"
              },
              "osDisk": {
                  "name": "[concat(variables('vmName'), copyIndex(1),'_OSDisk')]",
                  "caching": "ReadWrite",
                  "createOption": "FromImage"
              }
          },
          "networkProfile": {
              "networkInterfaces": [
                  {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex(1)))]"
                  }
              ]
          }
      }
  },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(1),'/initHazelcast')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "createExtensions",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "createVms"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('bootstrapFiles')]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('sh bootstrap_hazelcast ', variables('scriptParameters'))]"
        }
      }
    }
  ]
}
