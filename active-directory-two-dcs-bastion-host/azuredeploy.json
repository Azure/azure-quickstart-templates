{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the VM, only certain regions support zones during preview."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      }
    },
    "dnsPrefix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "The DNS prefix for the public IP address used by the Load Balancer"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Size of the VM for the controller"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules that the script is dependent"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "bastionHostsName": "usw-bastion01",
    "bastionSubnetName": "usw-bastion-subnet",
    "bastionSubnet": "10.10.30.0/24",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "imageSKU": "2019-Datacenter",
    "virtualNetworkName": "usw-forza-net01",
    "virtualNetworkAddressRange": "10.10.0.0/16",
     "bastionVirtualNetworkAddressRange": "10.10.0.0/16",
    "adSubnetName": "usw-infrastructure",
    "adSubnet": "10.10.10.0/24",
    "adSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('adSubnetName'))]",
    "publicIPSKU": "Standard",
    "dcPublicIPAddressName": "usw-dc01-pip",
    "bastionPublicIPAddressName": "usw-bastion-pip",
    "publicIPAddressType": "Static",
    "dcpublicIpAddressId": {
      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('dcpublicIPAddressName'))]"
    },
    "vnetTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
    "nicTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/nic.json', parameters('_artifactsLocationSasToken')))]",
    "vmName": [
      "usw-dc01",
      "usw-dc02"
    ],
    "nicName": [
      "usw-dc01-nic",
      "usw-dc02-nic"
    ],
    "ipAddress": [
      "10.10.10.10",
      "10.10.10.15"
    ],
    "configureADBDCTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/configureADBDC.json', parameters('_artifactsLocationSasToken')))]",
    "adBDCConfigurationModulesURL": "[uri(parameters('_artifactsLocation'), 'DSC/ConfigureADBDC.ps1.zip')]",
    "adBDCConfigurationScript": "ConfigureADBDC.ps1",
    "adBDCConfigurationFunction": "ConfigureADBDC"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-04-01",
      "name": "[variables('dcPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('publicIPSKU')]"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-08-01",
      "name": "[variables('bastionPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('publicIPSKU')]"
      },
      "zones": [
        "1",
        "2",
        "3"
      ],
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
        "domainNameLabel": "[parameters('dnsPrefix')]",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "CreateVNet",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[variables('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[variables('adSubnet')]"
          },
          "bastionVirtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "bastionsubnetName": {
            "value": "[variables('bastionSubnetName')]"
          },
          "bastionsubnetRange": {
            "value": "[variables('bastionSubnet')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-08-01",
      "name": "[variables('nicName')[copyIndex()]]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": 2
      },
      "dependsOn": [
        "CreateVNet",
        "[resourceId('Microsoft.Network/publicIpAddresses', variables('dcPublicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('iPAddress')[copyIndex()]]",
              "publicIPAddress": "[if(equals(copyIndex(), 0), variables('dcpublicIpAddressId'), json('null'))]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              }
            }
          }
        ]
      }
    },   
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[variables('vmName')[copyIndex()]]",
      "location": "[parameters('location')]",
      "zones": [
        "[copyIndex(1)]"
      ],
      "dependsOn": [
        "nicLoop"
      ],
      "copy": {
        "name": "vmLoop",
        "count": 2
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 64,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName')[copyIndex()])]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[concat(variables('vmName')[0], '/CreateAdForest')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "vmLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.24",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[uri(parameters('_artifactsLocation'), 'DSC/CreateADPDC.ps1.zip')]",
            "script": "CreateADPDC.ps1",
            "function": "CreateADPDC"
          },
          "configurationArguments": {
            "domainName": "[parameters('domainName')]"
          }
        },
        "protectedSettings": {
          "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
          "configurationArguments": {
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "[parameters('adminPassword')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[concat(variables('vmName')[1], '/PepareBDC')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "vmLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.24",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[uri(parameters('_artifactsLocation'), 'DSC/PrepareADBDC.ps1.zip')]",
            "script": "PrepareADBDC.ps1",
            "function": "PrepareADBDC"
          },
          "configurationArguments": {
            "DNSServer": "[variables('iPAddress')[0]]"
          }
        },
        "protectedSettings": {
          "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "UpdateVNetDNS1",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[0], 'CreateAdForest')]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[1], 'PepareBDC')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[variables('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[variables('adSubnet')]"
          },
          "bastionSubnetName": {
            "value": "[variables('bastionSubnetName')]"
          },
          "bastionSubnetRange": {
            "value": "[variables('bastionSubnet')]"
          },
          "DNSServerAddress": {
            "value": [
              "[variables('ipAddress')[0]]"
            ]
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "UpdateBDCNIC",
      "dependsOn": [
        "UpdateVNetDNS1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('nicName')[1]]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[variables('ipAddress')[1]]",
                  "subnet": {
                    "id": "[variables('adSubnetRef')]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[variables('ipAddress')[0]]"
            ]
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "ConfiguringBackupADDomainController",
      "dependsOn": [
        "UpdateBDCNIC"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configureADBDCTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "extName": {
            "value": "[concat(variables('vmName')[1], '/PepareBDC')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adBDCConfigurationScript": {
            "value": "[variables('adBDCConfigurationScript')]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('adBDCConfigurationFunction')]"
          },
          "adBDCConfigurationModulesURL": {
            "value": "[variables('adBDCConfigurationModulesURL')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "UpdateVNetDNS2",
      "dependsOn": [
        "ConfiguringBackupADDomainController"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[variables('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[variables('adSubnet')]"
          },
          "bastionSubnetName": {
            "value": "[variables('bastionSubnetName')]"
          },
          "bastionSubnetRange": {
            "value": "[variables('bastionSubnet')]"
          },
          "DNSServerAddress": {
            "value": "[variables('ipAddress')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-08-01",
            "name": "[concat(variables ('bastionSubnetName'), '/usw-infrastructure')]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', variables ('bastionSubnetName'))]"
            ],
         "properties": {
         "addressPrefix": "10.30.10.0/24",
         "privateEndpointNetworkPolicies": "Enabled",
         "privateLinkServiceNetworkPolicies": "Enabled"
       }
    },
    {
        "type": "Microsoft.Network/bastionHosts",
        "apiVersion": "2020-08-01",
       "name": "[variables ('bastionHostsName')]",
        "location": "westus2",
        "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables ('dcPublicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
            {
              "name": "IpConf",
              "properties": {
				"privateIPAllocationMethod": "Dynamic",
				"publicIPAddress": {
					"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'bastionSubnetName')]"
              }
            }
          }
        ]
      }
    }
  ]
}
