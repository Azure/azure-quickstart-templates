{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostOs": {
      "type": "string",
      "defaultValue": "Centos",
      "allowedValues": [
        "Centos",
        "Ubuntu"
      ],
      "metadata": {
        "description": "OS to install on the host system"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Prefix of storage account name, each node lives in its own storage account"
      }
    },
    "scaleNumber": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        4,
        6,
        8
      ],
      "metadata": {
        "description": "Number of nodes in the gluster file system"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "virtual network the nodes will be created in"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "ssh user name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "ssh password"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "VM size for the nodes"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "VM name prefix, a number will be appended for each node"
      }
    },
    "vmIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.1",
      "metadata": {
        "description": "VM IP prefix, a number will be appened for each node"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "virtual network CIDR in which the cluster will be created"
      }
    },
    "gfsSubnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "name of the subnet for the Gluster nodes"
      }
    },
    "gfsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "CIDR of the subnet for the Gluster nodes"
      }
    },
    "customScriptFilePath": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/gluster-file-system/azuregfs.sh",
      "metadata": {
        "description": "GitHub location of the custom script that configures Gluster"
      }
    },
    "customScriptCommandToExecute": {
      "type": "string",
      "defaultValue": "bash azuregfs.sh",
      "metadata": {
        "description": "command to run the custom script"
      }
    },
    "volumeName": {
      "type": "string",
      "defaultValue": "gfsvol",
      "metadata": {
        "description": "Gluster file system volume name"
      }
    }
  },
  "variables": {
    "pipName": "pip",
    "nicName": "nic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "gfsSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('gfsSubnetName'))]",
    "osImageUbuntuPublisher": "Canonical",
    "osImageUbuntuOffer": "UbuntuServer",
    "osImageUbuntuSKU": "14.04.3-LTS",
    "osImageUbuntuVersion": "latest",
    "osImageCentosPublisher": "OpenLogic",
    "osImageCentosOffer": "CentOS",
    "osImageCentosSKU": "6.5",
    "osImageCentosVersion": "latest",
    "osImagePublisher": "[variables(concat('osImage', parameters('hostOs'), 'Publisher'))]",
    "osImageOffer": "[variables(concat('osImage', parameters('hostOs'), 'Offer'))]",
    "osImageSKU": "[variables(concat('osImage', parameters('hostOs'), 'SKU'))]",
    "osImageVersion": "[variables(concat('osImage', parameters('hostOs'), 'version'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('storageAccountName'), copyIndex())]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "gfs",
        "count": "[parameters('scaleNumber')]"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('gfsSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('gfsSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('pipName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('scaleNumber')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "gfs",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'), copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('pipName'), copyindex()))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(parameters('vmIPPrefix'), copyindex())]",
              "subnet": {
                "id": "[variables('gfsSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "gfs",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyindex())]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'), copyindex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'), copyindex(), '.blob.core.windows.net/vhds/', parameters('vmNamePrefix'), copyIndex(), 'osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "1000",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', parameters('storageAccountName'), copyindex(),'.blob.core.windows.net/vhds/', parameters('vmNamePrefix'), copyIndex(), 'datadisk1.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "1000",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', parameters('storageAccountName'), copyindex(),'.blob.core.windows.net/vhds/', parameters('vmNamePrefix'), copyIndex(), 'datadisk2.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNamePrefix'), copyindex(), '/extension')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "gfs",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'), copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('customScriptFilePath')]"
          ],
          "commandToExecute": "[concat(parameters('customScriptCommandToExecute'), ' ', parameters('vmNamePrefix'), ' ', parameters('vmIPPrefix'), ' ', parameters('volumeName'), ' ', copyindex(), ' ', parameters('scaleNumber'))]"
        }
      }
    }
  ]
}
