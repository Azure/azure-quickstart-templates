{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[concat('rds-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
            }
        },
        "adDomainName": {
            "type": "string",
            "metadata": {
                "description": "The name of the AD domain. For example contoso.com"
            }
        },
        "adVnetName": {
            "type": "string",
            "metadata": {
                "description": "The vnet name of AD domain. For example johnvnet1"
            }
        },
        "adVnetRG": {
            "type": "string",
            "metadata": {
                "description": "The Resource Group containing the existing Virtual Network resource"
            }
        },
        "adVnetSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "The subscription containing the existing Virtual Network resource"
            }
        },
        "adSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet name of AD domain"
            }
        },
        "dnsServerPrivateIp": {
            "type": "string",
            "metadata": {
                "description": "The private IP address of the ad dns server"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and the domain"
            }
        },
        "imageSKU": {
            "type": "string",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "Windows server SKU"
            },
            "defaultValue": "2019-Datacenter"
        },
        "numberOfRdshInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of RemoteDesktopSessionHosts"
            }
        },
        "rdshVmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the RDSH VMs"
            },
            "defaultValue": "Standard_D4s_v3"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "gwdnsLabelPrefix": "[concat('gwd-', uniqueString(resourceGroup().id))]",
        "cbdnsLabelPrefix": "[concat('cbd-', uniqueString(resourceGroup().id))]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "subnet-id": "[resourceId(parameters('adVnetSubscriptionId'), parameters('adVnetRG'),'Microsoft.Network/virtualNetworks/subnets', parameters('adVnetName'), parameters('adSubnetName'))]",
        "publicIpRef": "publicIp",
        "brokerIpRef": "brokerpublicIp",
        "gatewayIpRef": "gatewaypublicIp"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpRef')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gatewayIpRef')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('gwdnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('brokerIpRef')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('cbdnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "gw-availabilityset",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "cb-availabilityset",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "rdsh-availabilityset",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/loadBalancers",
            "name": "loadBalancer",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpRef'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LBFE",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpRef'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LBBAP"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule01",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'loadbalancer', 'LBFE')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools/', 'loadbalancer', 'LBBAP')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "SourceIPProtocol",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'loadbalancer', 'tcpProbe')]"
                            }
                        }
                    },
                    {
                        "name": "LBRule02",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'loadbalancer', 'LBFE')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'loadbalancer', 'LBBAP')]"
                            },
                            "protocol": "Udp",
                            "frontendPort": 3391,
                            "backendPort": 3391,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "SourceIPProtocol",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'loadbalancer', 'tcpProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "tcpProbe01",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 3391,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "rdp",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations','loadBalancer','LBFE')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "gw-nic",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'loadBalancer')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayIpRef'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools','loadBalancer', 'LBBAP')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules','loadBalancer', 'rdp')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[parameters('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "cb-nic",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'loadBalancer')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('brokerIpRef'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[parameters('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('rdsh-', copyindex(), '-nic')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "rdsh-nic-loop",
                "count": "[parameters('numberOfRdshInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'loadBalancer')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[parameters('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "gw-vm",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
                "[resourceId('Microsoft.Network/networkInterfaces', 'gw-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
                },
                "osProfile": {
                    "computerName": "gateway",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "gw_OSDisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','gw-nic')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2020-06-01",
                    "type": "extensions",
                    "name": "gateway",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', 'gw-vm')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[uri(parameters('_artifactsLocation'),concat('Configuration.zip', parameters('_artifactsLocationSasToken')))]",
                            "ConfigurationFunction": "Configuration.ps1\\Gateway",
                            "Properties": {
                                "DomainName": "[parameters('adDomainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('rdsh-', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "rdsh-vm-loop",
                "count": "[parameters('numberOfRdshInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]",
                "[resourceId('Microsoft.Network/networkInterfaces/', concat('rdsh-', copyindex(), '-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]"
                },
                "osProfile": {
                    "computerName": "[concat('rdsh-', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat('rdsh-', copyIndex(),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('rdsh-', copyindex(), '-nic'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2020-06-01",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat('rdsh-', copyindex(),'/sessionhost')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat('rdsh-', copyindex()))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[uri(parameters('_artifactsLocation'),concat('Configuration.zip', parameters('_artifactsLocationSasToken')))]",
                            "ConfigurationFunction": "Configuration.ps1\\SessionHost",
                            "Properties": {
                                "DomainName": "[parameters('adDomainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "cb-vm",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]",
                "[resourceId('Microsoft.Network/networkInterfaces', 'cb-nic')]",
                "rdsh-vm-loop"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
                },
                "osProfile": {
                    "computerName": "broker",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "cb_OSDisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','cb-nic')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "cb-vm/rdsdeployment",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', 'cb-vm')]",
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'gw-vm', 'gateway')]",
                "rdsh-vm-loop"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.11",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ModulesUrl": "[uri(parameters('_artifactsLocation'),concat('Configuration.zip', parameters('_artifactsLocationSasToken')))]",
                    "configurationFunction": "Configuration.ps1\\RDSDeployment",
                    "properties": {
                        "adminCreds": {
                            "UserName": "[parameters('adminUsername')]",
                            "Password": "PrivateSettingsRef:adminPassword"
                        },
                        "connectionBroker": "[concat('broker.',parameters('adDomainName'))]",
                        "domainName": "[parameters('adDomainName')]",
                        "externalfqdn": "[reference(variables('gatewayIpRef')).dnsSettings.fqdn]",
                        "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
                        "sessionHostNamingPrefix": "rdsh-",
                        "webAccessServer": "[concat('gateway.',parameters('adDomainName'))]"
                    }
                },
                "protectedSettings": {
                    "Items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        }
    ]
}
