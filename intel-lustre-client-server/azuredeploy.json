{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"artifactsBaseUrl": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/intel-lustre-client-server",
			"metadata": {
				"description": "Base URL of the solution template gallery package",
				"artifactsBaseUrl": ""
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for the Lustre nodes"
			}
		},
		"storageAccountCount": {
			"type": "int",
			"defaultValue": 1,
			"metadata": {
				"description": "Number of storage accounts that will be created for the Lustre nodes to spread the VHDs evenly"
			}
		},
		"existingStorageAccountResourceGroup": {
			"type": "string",
			"metadata": {
				"description": "Storage account resource group for future cases when existing storage account is used"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Premium_LRS",
			"metadata": {
				"description": "Storage account type (e.g. Premium_LRS or Standard_LRS)"
			}
		},
		"vmNamePrefix": {
			"type": "string",
			"defaultValue": "lustre",
			"metadata": {
				"description": "Prefix that will be used for all virtual machines in this Lustre cluster (e.g. lustre)"
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "azureuser",
			"metadata": {
				"description": "Admin username for the virtual machines"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"defaultValue": "",
			"metadata": {
				"description": "Admin password for the virtual machines"
			}
		},
		"sshPublicKey": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "SSH public key that will be included on all nodes in the Lustre cluster. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
			}
		},
		"authenticationType": {
			"type": "string",
			"defaultValue": "password",
			"allowedValues": [
				"password",
				"sshPublicKey"
			],
			"metadata": {
				"description": "Authentication type for the virtual machines"
			}
		},
		"dnsNamePrefix": {
			"type": "string",
			"metadata": {
				"description": "Globally unique DNS name prefix name must be between 3 and 50 characters long and can contain only dashes, numbers, and lowercase letters. The domain name suffix (e.g. westus.cloudapp.zure.com) will be automatically updated based on the selected location."
			}
		},
		"mgsVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2",
			"metadata": {
				"description": "Size of the Management Server (MGS) that stores configuration information for all Lustre filesystems in a cluster."
			},
			"allowedValues": [
				"Standard_DS1",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_D1",
				"Standard_D2",
				"Standard_D3",
				"Standard_D4",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_G1",
				"Standard_G2",
				"Standard_G3",
				"Standard_G4",
				"Standard_G5",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS5",
				"Standard_A1",
				"Standard_A2",
				"Standard_A3",
				"Standard_A4",
				"Standard_A5",
				"Standard_A6",
				"Standard_A7",
				"Standard_A8",
				"Standard_A9",
				"Standard_A10",
				"Standard_A11"
			]
		},
		"mdsVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2",
			"metadata": {
				"description": "Size of the Metadata Server (MDS) that makes metadata (e.g. files, directories, permissions) available to Lustre clients"
			},
			"allowedValues": [
				"Standard_DS1",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_D1",
				"Standard_D2",
				"Standard_D3",
				"Standard_D4",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_G1",
				"Standard_G2",
				"Standard_G3",
				"Standard_G4",
				"Standard_G5",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS5",
				"Standard_A1",
				"Standard_A2",
				"Standard_A3",
				"Standard_A4",
				"Standard_A5",
				"Standard_A6",
				"Standard_A7",
				"Standard_A8",
				"Standard_A9",
				"Standard_A10",
				"Standard_A11"
			]
		},
		"ossVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS3",
			"metadata": {
				"description": "Size of the Object Storage Server (OSS) that provides file I/O service and network request handling for one or more attached disks referred to as Object Storage Target (OST)"
			},
			"allowedValues": [
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_D2",
				"Standard_D3",
				"Standard_D4",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_G1",
				"Standard_G2",
				"Standard_G3",
				"Standard_G4",
				"Standard_G5",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS5",
				"Standard_A2",
				"Standard_A3",
				"Standard_A4",
				"Standard_A5",
				"Standard_A6",
				"Standard_A7",
				"Standard_A8",
				"Standard_A9",
				"Standard_A10",
				"Standard_A11"
			]
		},
		"ossCount": {
			"type": "int",
			"defaultValue": 2,
			"metadata": {
				"description": "The number of virtual machines instances to provision for OSS servers"
			}
		},
		"ossDiskSize": {
			"type": "int",
			"defaultValue": 128,
			"metadata": {
				"description": "Size of the data disks to use for the OSTs. All OSS instances have 3 data disks attached."
			}
		},
		"filesystemName": {
			"type": "string",
			"defaultValue": "scratch",
			"metadata": {
				"description": "Name of the Lustre filesytem (e.g. scratch, lustre, shared_data) that will be mounted from clients as mgsip@tcp0:/filesystemname"
			}
		},
		"existingVnetResourceGroup": {
			"type": "string",
			"metadata": {
				"description": "Virtual Network Resource Group for cases when Lustre nodes are deployed into an existing VNet"
			}
		},
		"existingVnetName": {
			"type": "string",
			"metadata": {
				"description": "Virtual Network name (e.g. vnet-lustre)"
			}
		},
		"vnetNewOrExisting": {
			"type": "string",
			"defaultValue": "existing",
			"allowedValues": [
				"new",
				"existing"
			],
			"metadata": {
				"description": "Parameter that specifies if an new or an existing virtual network should be used for deploying Lustre nodes"
			}
		},
		"vnetAddressPrefix": {
			"type": "string",
			"defaultValue": "10.1.0.0/16",
			"metadata": {
				"description": "Virtual Network Address Prefix (i.e. CIDR)"
			}
		},
		"subnetServersName": {
			"type": "string",
			"defaultValue": "subnet-lustre-servers",
			"metadata": {
				"description": "Lustre servers will be deployed into this subnet within the Virtual Network"
			}
		},
		"subnetServersAddressPrefix": {
			"type": "string",
			"defaultValue": "10.1.0.0/24",
			"metadata": {
				"description": "Virtual Network Lustre Servers subnet Address Prefix (i.e. CIDR)"
			}
		},
		"subnetClientsName": {
			"type": "string",
			"defaultValue": "subnet-lustre-clients",
			"metadata": {
				"description": "Lustre clients can be deployed into this subnet within the Virtual Network"
			}
		},
		"subnetClientsAddressPrefix": {
			"type": "string",
			"defaultValue": "10.1.1.0/24",
			"metadata": {
				"description": "Virtual Network Lustre Clients subnet Address Prefix (i.e. CIDR)"
			}
		},
		"image": {
			"type": "string",
			"defaultValue": "OpenLogic:CentOS-HPC:7.1",
			"allowedValues": [
				"OpenLogic:CentOS-HPC:7.1",
				"OpenLogic:CentOS-HPC:6.5",
				"OpenLogic:CentOS:6.6",
				"OpenLogic:CentOS:7.0"
			],
			"metadata": {
				"description": "OpenLogic CentOS version to use. CentOS-HPC includes RDMA drivers for compute-to-compute MPI InfiniBand on A8 and A9 VM sizes."
			}
		},
		"clientadminUsername": {
			"type": "string",
			"metadata": {
				"description": "Admin username for the virtual machines"
			}
		},
		"clientAuthenticationType": {
			"type": "string",
			"defaultValue": "password",
			"allowedValues": [
				"password",
				"sshPublicKey"
			],
			"metadata": {
				"description": "Authentication type for the virtual machines"
			}
		},
		"clientAdminPassword": {
			"type": "securestring",
			"defaultValue": "",
			"metadata": {
				"description": "Admin password for the virtual machines"
			}
		},
		"sshPublicKeyForClient": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
			}
		},
		"dnsNamePrefixForClient": {
			"type": "string",
			"metadata": {
				"description": "Globally unique DNS name prefix name must be between 3 and 50 characters long and can contain only dashes, numbers, and lowercase letters. The domain name suffix (e.g. westus.cloudapp.zure.com) will be automatically updated based on the selected location."
			}
		},
		"clientAvailabilitySetName": {
			"type": "string",
			"defaultValue": "availset-lustre-clients",
			"metadata": {
				"description": "Lustre clients availability set name is important for grouping clients into deployments that can communicate with each other via RDMA"
			}
		},
		"clientVmNamePrefix": {
			"type": "string",
			"defaultValue": "lustre",
			"metadata": {
				"description": "Prefix for the virtual machine names"
			}
		},
		"clientVmSize": {
			"type": "string",
			"defaultValue": "Standard_D2_v2",
			"metadata": {
				"description": "Size of the Lustre client VM"
			},
			"allowedValues": [
				"Standard_D2",
				"Standard_D3",
				"Standard_D4",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_D15_v2",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_G1",
				"Standard_G2",
				"Standard_G3",
				"Standard_G4",
				"Standard_G5",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS5",
				"Standard_A2",
				"Standard_A3",
				"Standard_A4",
				"Standard_A5",
				"Standard_A6",
				"Standard_A7",
				"Standard_A8",
				"Standard_A9",
				"Standard_A10",
				"Standard_A11",
				"Standard_A1",
				"Standard_D1",
				"Standard_D1_v2",
				"Standard_DS1",
				"Standard_DS1_v2"
			]
		},
		"clientCount": {
			"type": "int",
			"defaultValue": 2,
			"allowedValues": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],
			"metadata": {
				"description": "Number of Lustre clients"
			}
		},
		"clientFilesystemName": {
			"type": "string",
			"defaultValue": "scratch",
			"metadata": {
				"description": "Name of the Lustre filesystem exposed by the Lustre MGS node"
			}
		},
		"mgsIpAddress": {
			"type": "string",
			"defaultValue": "10.1.0.4",
			"metadata": {
				"description": "IP address of the Lustre MGS node"
			}
		},
		"clientStorageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Storage account type (e.g. Premium_LRS or Standard_LRS). Make sure to select Premium_LRS only when using DS-series or GS-series Virtual Machines."
			}
		},
		"existingVnetNameForClient": {
			"type": "string",
			"defaultValue": "vnet-lustre",
			"metadata": {
				"description": "Existing Virtual Network name (e.g. vnet-lustre)"
			}
		},
		"existingSubnetClientsName": {
			"type": "string",
			"defaultValue": "subnet-lustre-clients",
			"metadata": {
				"description": "Lustre clients will be deployed into this subnet within the existing Virtual Network"
			}
		}
	},
	"variables": {
		"imageReferenceLustre": {
			"publisher": "intel",
			"offer": "lustre-cloud-edition-cv-image",
			"sku": "eval-lustre-2-7",
			"version": "latest"
		},
		"ossAvailabilitySetSettings": {
			"name": "[concat(parameters('vmNamePrefix'),'oss')]",
			"faultDomainCount": "3",
			"updateDomainCount": "5"
		},
		"baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
		"scriptUrlLustre": "[concat(variables('baseUrl'),'scripts/lustre.sh')]",
		"scriptUrlMonitoring": "[concat(variables('baseUrl'),'scripts/monitoring.sh')]",
		"templateUrlVnet": "[concat(variables('baseUrl'),'vnet-',parameters('vnetNewOrExisting'),'.json')]",
		"templateUrlMonitoring": "[concat(variables('baseUrl'),'monitoring.json')]",
		"sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
		"linuxConfiguration_sshPublicKey": {
			"disablePasswordAuthentication": "true",
			"ssh": {
				"publicKeys": [{
					"path": "[variables('sshKeyPath')]",
					"keyData": "[parameters('sshPublicKey')]"
				}]
			}
		},
		"imageReference_OpenLogic:CentOS-HPC:7.1": {
			"publisher": "OpenLogic",
			"offer": "CentOS-HPC",
			"sku": "7.1",
			"version": "latest"
		},
		"imageReference_OpenLogic:CentOS-HPC:6.5": {
			"publisher": "OpenLogic",
			"offer": "CentOS-HPC",
			"sku": "6.5",
			"version": "latest"
		},
		"imageReference_OpenLogic:CentOS:7.0": {
			"publisher": "OpenLogic",
			"offer": "CentOS",
			"sku": "7.0",
			"version": "latest"
		},
		"imageReference_OpenLogic:CentOS:6.6": {
			"publisher": "OpenLogic",
			"offer": "CentOS",
			"sku": "6.6",
			"version": "latest"
		},
		"imageReference": "[variables(concat('imageReference_',parameters('image')))]",
		"clientAvailabilitySetSettings": {
			"name": "[concat(parameters('clientAvailabilitySetName'))]",
			"faultDomainCount": "3",
			"updateDomainCount": "5"
		},
		"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'server')]",
		"clientStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'client')]",
		"linuxConfiguration_password": {},
		"linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]",
		"vnetID": "[resourceId(parameters('existingVnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
		"subnetServersID": "[concat(variables('vnetID'), '/subnets/', parameters('subnetServersName'))]",
		"subnetClientsID": "[concat(variables('vnetID'), '/subnets/', parameters('subnetClientsName'))]",
		"mgsStorageAccountNumber": "1",
		"mdsStorageAccountNumber": "1",
		"mgsDiskCount": "2",
		"mdsDiskCount": "1",
		"ossDiskCount": "3",
		"baseUrl1": "[concat(parameters('artifactsBaseUrl'),'/')]",
		"vnetID1": "[resourceId(parameters('existingVnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetNameForClient'))]",
		"subnetClientsID1": "[concat(variables('vnetID1'), '/subnets/', parameters('existingSubnetClientsName'))]",
		"scriptUrlLustreClient": "[concat(variables('baseUrl1'),'scripts/lustre_client.sh')]",
		"sshKeyPathClient": "[concat('/home/',parameters('clientadminUsername'),'/.ssh/authorized_keys')]",
		"linuxConfiguration_sshPublicKey": {
			"disablePasswordAuthentication": "true",
			"ssh": {
				"publicKeys": [{
					"path": "[variables('sshKeyPathClient')]",
					"keyData": "[parameters('sshPublicKeyForClient')]"
				}]
			}
		},
		"linuxConfiguration_password": {},
		"linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('clientAuthenticationType')))]"
	},
	"resources": [{
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[concat(variables('storageAccountName'),copyIndex(1))]",
		"location": "[parameters('location')]",
		"copy": {
			"name": "storageAccountsCopy",
			"count": "[parameters('storageAccountCount')]"
		},
		"properties": {
			"accountType": "[parameters('storageAccountType')]"
		}
	}, {
		"apiVersion": "2015-01-01",
		"type": "Microsoft.Resources/deployments",
		"name": "vnet",
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[variables('templateUrlVnet')]",
				"contentVersion": "1.0.0.0"
			},
			"parameters": {
				"location": {
					"value": "[parameters('location')]"
				},
				"vnetName": {
					"value": "[parameters('existingVnetName')]"
				},
				"vnetResourceGroup": {
					"value": "[parameters('existingVnetResourceGroup')]"
				},
				"vnetAddressPrefix": {
					"value": "[parameters('vnetAddressPrefix')]"
				},
				"subnetServersName": {
					"value": "[parameters('subnetServersName')]"
				},
				"subnetServersAddressPrefix": {
					"value": "[parameters('subnetServersAddressPrefix')]"
				},
				"subnetClientsName": {
					"value": "[parameters('subnetClientsName')]"
				},
				"subnetClientsAddressPrefix": {
					"value": "[parameters('subnetClientsAddressPrefix')]"
				}
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/availabilitySets",
		"name": "[variables('ossAvailabilitySetSettings').name]",
		"location": "[parameters('location')]",
		"properties": {
			"platformFaultDomainCount": "[variables('ossAvailabilitySetSettings').faultDomainCount]",
			"platformUpdateDomainCount": "[variables('ossAvailabilitySetSettings').updateDomainCount]"
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[concat(parameters('vmNamePrefix'),'mgs')]",
		"location": "[parameters('location')]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic",
			"idleTimeoutInMinutes": 4,
			"dnsSettings": {
				"domainNameLabel": "[concat(parameters('dnsNamePrefix'),'')]"
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('vmNamePrefix'),'mgs')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Resources/deployments/', 'vnet')]",
			"[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('vmNamePrefix'),'mgs'))]"
		],
		"properties": {
			"ipConfigurations": [{
				"name": "ip1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), 'mgs'))]"
					},
					"subnet": {
						"id": "[variables('subnetServersID')]"
					}
				}
			}]
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[concat(parameters('vmNamePrefix'),'mgs')]",
		"plan": {
			"publisher": "intel",
			"product": "lustre-cloud-edition-cv-image",
			"name": "eval-lustre-2-7"
		},
		"location": "[parameters('location')]",
		"dependsOn": [
			"storageAccountsCopy",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'mgs')]"
		],
		"tags": {
			"LustreType": "mgt"
		},
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('mgsVmSize')]"
			},
			"osProfile": {
				"computerName": "[concat(parameters('vmNamePrefix'),'mgs')]",
				"adminUserName": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]",
				"linuxConfiguration": "[variables('linuxConfiguration')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('imageReferenceLustre').publisher]",
					"offer": "[variables('imageReferenceLustre').offer]",
					"sku": "[variables('imageReferenceLustre').sku]",
					"version": "latest"
				},
				"osDisk": {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://', variables('storageAccountName'), variables('mgsStorageAccountNumber'), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'mgs'), '-osdisk.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				},
				"dataDisks": [{
					"name": "datadisk0",
					"diskSizeGB": 5,
					"lun": 0,
					"vhd": {
						"Uri": "[concat('http://', variables('storageAccountName'), variables('mgsStorageAccountNumber'), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'mgs'), '-datadisk0.vhd')]"
					},
					"caching": "None",
					"createOption": "Empty"
				}, {
					"name": "datadisk1",
					"diskSizeGB": 16,
					"lun": 1,
					"vhd": {
						"Uri": "[concat('http://', variables('storageAccountName'), variables('mgsStorageAccountNumber'), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'mgs'), '-datadisk1.vhd')]"
					},
					"caching": "None",
					"createOption": "Empty"
				}]
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'),'mgs'))]"
				}]
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(parameters('vmNamePrefix'), 'mgs', '/init')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), 'mgs'))]"
		],
		"properties": {
			"publisher": "Microsoft.OSTCExtensions",
			"type": "CustomScriptForLinux",
			"typeHandlerVersion": "1.5",
			"autoUpgradeMinorVersion":true,
			"settings": {
				"fileUris": [
					"[variables('scriptUrlLustre')]"
				],
				"commandToExecute": "[concat('sh lustre.sh', ' -n MGS', ' -i 0', ' -d ', variables('mgsDiskCount'), ' -m ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress, ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('vmNamePrefix'),'mds')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Resources/deployments/', 'vnet')]",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'mgs')]"
		],
		"properties": {
			"ipConfigurations": [{
				"name": "ip1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"subnet": {
						"id": "[variables('subnetServersID')]"
					}
				}
			}]
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[concat(parameters('vmNamePrefix'),'mds')]",
		"plan": {
			"publisher": "intel",
			"product": "lustre-cloud-edition-cv-image",
			"name": "eval-lustre-2-7"
		},
		"location": "[parameters('location')]",
		"dependsOn": [
			"storageAccountsCopy",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'mds')]"
		],
		"tags": {
			"LustreType": "mdt"
		},
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('mdsVmSize')]"
			},
			"osProfile": {
				"computerName": "[concat(parameters('vmNamePrefix'),'mds')]",
				"adminUserName": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]",
				"linuxConfiguration": "[variables('linuxConfiguration')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('imageReferenceLustre').publisher]",
					"offer": "[variables('imageReferenceLustre').offer]",
					"sku": "[variables('imageReferenceLustre').sku]",
					"version": "latest"
				},
				"osDisk": {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://', variables('storageAccountName'), variables('mdsStorageAccountNumber'), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'mds'), '-osdisk.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				},
				"dataDisks": [{
					"name": "datadisk0",
					"diskSizeGB": 128,
					"lun": 0,
					"vhd": {
						"uri": "[concat('http://', variables('storageAccountName'), variables('mdsStorageAccountNumber'), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'mds'), '-datadisk0.vhd')]"
					},
					"caching": "None",
					"createOption": "Empty"
				}]
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'),'mds'))]"
				}]
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(parameters('vmNamePrefix'), 'mds', '/init')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), 'mds'))]",
			"[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'), 'mgs', '/extensions/init')]"
		],
		"properties": {
			"publisher": "Microsoft.OSTCExtensions",
			"type": "CustomScriptForLinux",
			"typeHandlerVersion": "1.5",
			"autoUpgradeMinorVersion":true,
			"settings": {
				"fileUris": [
					"[variables('scriptUrlLustre')]"
				],
				"commandToExecute": "[concat('sh lustre.sh', ' -n MDS', ' -i 0', ' -d ', variables('mdsDiskCount'), ' -m ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress, ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mds'))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('vmNamePrefix'), 'oss', copyIndex())]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Resources/deployments/', 'vnet')]",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'mds')]"
		],
		"copy": {
			"name": "ossNicCopy",
			"count": "[parameters('ossCount')]"
		},
		"properties": {
			"ipConfigurations": [{
				"name": "ip1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"subnet": {
						"id": "[variables('subnetServersID')]"
					}
				}
			}]
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[concat(parameters('vmNamePrefix'), 'oss', copyIndex())]",
		"plan": {
			"publisher": "intel",
			"product": "lustre-cloud-edition-cv-image",
			"name": "eval-lustre-2-7"
		},
		"location": "[parameters('location')]",
		"dependsOn": [
			"storageAccountsCopy",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'oss', copyIndex())]"
		],
		"copy": {
			"name": "ossVmCopy",
			"count": "[parameters('ossCount')]"
		},
		"tags": {
			"LustreType": "ost"
		},
		"properties": {
			"availabilitySet": {
				"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('ossAvailabilitySetSettings').name)]"
			},
			"hardwareProfile": {
				"vmSize": "[parameters('ossVmSize')]"
			},
			"osProfile": {
				"computerName": "[concat(parameters('vmNamePrefix'), 'oss', copyIndex())]",
				"adminUserName": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]",
				"linuxConfiguration": "[variables('linuxConfiguration')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('imageReferenceLustre').publisher]",
					"offer": "[variables('imageReferenceLustre').offer]",
					"sku": "[variables('imageReferenceLustre').sku]",
					"version": "latest"
				},
				"osDisk": {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://', variables('storageAccountName'), add(mod(copyIndex(),parameters('storageAccountCount')),1), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'oss',copyIndex()), '-osdisk.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				},
				"dataDisks": [{
					"name": "datadisk0",
					"diskSizeGB": "[parameters('ossDiskSize')]",
					"lun": 0,
					"vhd": {
						"Uri": "[concat('http://', variables('storageAccountName'), add(mod(copyIndex(),parameters('storageAccountCount')),1), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'oss',copyIndex()), '-datadisk0.vhd')]"
					},
					"caching": "None",
					"createOption": "Empty"
				}, {
					"name": "datadisk1",
					"diskSizeGB": "[parameters('ossDiskSize')]",
					"lun": 1,
					"vhd": {
						"Uri": "[concat('http://', variables('storageAccountName'), add(mod(copyIndex(),parameters('storageAccountCount')),1), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'oss',copyIndex()), '-datadisk1.vhd')]"
					},
					"caching": "None",
					"createOption": "Empty"
				}, {
					"name": "datadisk2",
					"diskSizeGB": "[parameters('ossDiskSize')]",
					"lun": 2,
					"vhd": {
						"Uri": "[concat('http://', variables('storageAccountName'), add(mod(copyIndex(),parameters('storageAccountCount')),1), '.blob.core.windows.net/vhds/', concat(parameters('vmNamePrefix'),'oss',copyIndex()), '-datadisk2.vhd')]"
					},
					"caching": "None",
					"createOption": "Empty"
				}]
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'), 'oss', copyIndex()))]"
				}]
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(parameters('vmNamePrefix'), 'oss', copyIndex(), '/init')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), 'oss', copyIndex()))]",
			"[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'), 'mds', '/extensions/init')]"
		],
		"copy": {
			"name": "ossExtensionsCopy",
			"count": "[parameters('ossCount')]"
		},
		"properties": {
			"publisher": "Microsoft.OSTCExtensions",
			"type": "CustomScriptForLinux",
			"typeHandlerVersion": "1.5",
			"autoUpgradeMinorVersion":true,
			"settings": {
				"fileUris": [
					"[variables('scriptUrlLustre')]"
				],
				"commandToExecute": "[concat('sh lustre.sh', ' -n OSS', ' -i ', copyIndex(), ' -d ', variables('ossDiskCount'), ' -m ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress, ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'oss', copyIndex()))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
			}
		}
	}, {
		"apiVersion": "2015-01-01",
		"type": "Microsoft.Resources/deployments",
		"name": "monitoring",
		"dependsOn": [
			"[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), 'oss0', '/extensions/init'))]"
		],
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"contentVersion": "1.0.0.0",
				"uri": "[variables('templateUrlMonitoring')]"
			},
			"parameters": {
				"location": {
					"value": "[parameters('location')]"
				},
				"vmNamePrefix": {
					"value": "[parameters('vmNamePrefix')]"
				},
				"ossCount": {
					"value": "[parameters('ossCount')]"
				},
				"filesystemName": {
					"value": "[parameters('filesystemName')]"
				},
				"scriptUrlMonitoring": {
					"value": "[variables('scriptUrlMonitoring')]"
				},
				"mgsip": {
					"value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress]"
				},
				"mdsip0": {
					"value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mds'))).ipConfigurations[0].properties.privateIPAddress]"
				},
				"ossip0": {
					"value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'oss0'))).ipConfigurations[0].properties.privateIPAddress]"
				}
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[variables('clientStorageAccountName')]",
		"location": "[parameters('location')]",
		"properties": {
			"accountType": "[parameters('clientStorageAccountType')]"
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/availabilitySets",
		"name": "[variables('clientAvailabilitySetSettings').name]",
		"location": "[parameters('location')]",
		"properties": {
			"platformFaultDomainCount": "[variables('clientAvailabilitySetSettings').faultDomainCount]",
			"platformUpdateDomainCount": "[variables('clientAvailabilitySetSettings').updateDomainCount]"
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[concat(parameters('clientVmNamePrefix'),'client0')]",
		"location": "[parameters('location')]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic",
			"idleTimeoutInMinutes": 4,
			"dnsSettings": {
				"domainNameLabel": "[concat(parameters('dnsNamePrefixForClient'),'')]"
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('clientVmNamePrefix'), 'client0')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/', parameters('clientVmNamePrefix'), 'client0')]"
		],
		"properties": {
			"ipConfigurations": [{
				"name": "ip1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('clientVmNamePrefix'), 'client0'))]"
					},
					"subnet": {
						"id": "[variables('subnetClientsID1')]"
					}
				}
			}]
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('clientVmNamePrefix'), 'client', copyIndex(1))]",
		"location": "[parameters('location')]",
		"copy": {
			"name": "clientNicCopy",
			"count": "[sub(parameters('clientCount'),1)]"
		},
		"properties": {
			"ipConfigurations": [{
				"name": "ip1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"subnet": {
						"id": "[variables('subnetClientsID1')]"
					}
				}
			}]
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[concat(parameters('clientVmNamePrefix'), 'client', copyIndex())]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', variables('clientStorageAccountName'))]",
			"[concat('Microsoft.Compute/availabilitySets/', variables('clientAvailabilitySetSettings').name)]",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('clientVmNamePrefix'), 'client', copyIndex())]"
		],
		"copy": {
			"name": "clientVmCopy",
			"count": "[parameters('clientCount')]"
		},
		"tags": {
			"LustreType": "client"
		},
		"properties": {
			"availabilitySet": {
				"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('clientAvailabilitySetSettings').name)]"
			},
			"hardwareProfile": {
				"vmSize": "[parameters('clientVmSize')]"
			},
			"osProfile": {
				"computerName": "[concat(parameters('clientVmNamePrefix'), 'client', copyIndex())]",
				"adminUsername": "[parameters('clientadminUsername')]",
				"adminPassword": "[parameters('clientAdminPassword')]",
				"linuxConfiguration": "[variables('linuxConfiguration')]"
			},
			"storageProfile": {
				"imageReference": "[variables('imageReference')]",
				"osDisk": {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://', variables('clientStorageAccountName'), '.blob.core.windows.net/vhds-client/', concat(parameters('clientVmNamePrefix'),'client',copyIndex()), '-osdisk.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('clientVmNamePrefix'), 'client', copyIndex()))]"
				}]
			}
		}
	}, {
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(parameters('clientVmNamePrefix'), 'client', copyIndex(), '/init')]",
		"location": "[parameters('location')]",
		"dependsOn": [
			"[concat('Microsoft.Compute/virtualMachines/', concat(parameters('clientVmNamePrefix'),'client',copyIndex()))]"
		],
		"copy": {
			"name": "clientExtensionsCopy",
			"count": "[parameters('clientCount')]"
		},
		"properties": {
			"publisher": "Microsoft.OSTCExtensions",
			"type": "CustomScriptForLinux",
			"typeHandlerVersion": "1.5",
			"autoUpgradeMinorVersion":true,
			"settings": {
				"fileUris": [
					"[variables('scriptUrlLustreClient')]"
				],
				"commandToExecute": "[concat('bash lustre_client.sh', ' -n ', parameters('image'), ' -i ', copyIndex(), ' -d 0', ' -m ', parameters('mgsIpAddress'), ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('clientVmNamePrefix'), 'client', copyIndex()))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('clientFilesystemName'))]"
			}
		}
	}],
	"outputs": {
		"mgsNID": {
			"type": "string",
			"value": "[concat('',reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress)]",
			"metadata": {
				"description": "MGS node private IP address and NID."
			}
		},
		"mgsDomainName": {
			"type": "string",
			"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'),'mgs'))).dnsSettings.fqdn]",
			"metadata": {
				"description": "SSH to the MGS node using this public IP address and run command 'ltop' to view Lustre Monitoring Tool"
			}
		},
		"gangliaUrl": {
			"type": "string",
			"value": "[concat('http://',reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'),'mgs'))).dnsSettings.fqdn,'/ganglia/')]",
			"metadata": {
				"description": "URL to access Ganglia Monitoring System on the MGS node"
			}
		},
		"mountCommand": {
			"type": "string",
			"value": "[concat('mount -t lustre ',reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'mgs'))).ipConfigurations[0].properties.privateIPAddress,'@tcp:/',parameters('filesystemName'),' /your_mount_point_directory')]",
			"metadata": {
				"description": "Command to execute on the Lustre clients to mount the filesystem"
			}
		},
		"client0DomainName": {
			"type": "string",
			"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('clientVmNamePrefix'),'client0'))).dnsSettings.fqdn]",
			"metadata": {
				"description": "SSH to the client0 node using this public IP address and run command mount to see all mount points"
			}
		}
	}
}