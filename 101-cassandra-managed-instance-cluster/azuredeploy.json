{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "metadata": {
                "description": "The name for the Cassandra cluster to be created."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Region to create the cluster in."
            }
        },
        "initialCassandraAdminPassword": {
            "type": "string",
            "metadata": {
                "description": "Initial password to set on the cluster for the admin account."
            }
        },
        "delegatedSubnetId": {
            "type": "string",
            "metadata": {
                "description": "ARM resource id of a subnet that this cluster's NICs should be attached to."
            }
        },
        "nodeCount": {
            "type": "int",
            "metadata": {
                "description": "The number of nodes to create in this cluster."
            }
        }
    },
    "variables": {
        "dcName": "[concat(parameters('name'), '-dc')]"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/cassandraClusters",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "apiVersion": "2020-06-01-preview",
            "properties": {
                "initialCassandraAdminPassword": "[parameters('initialCassandraAdminPassword')]",
                "delegatedManagementSubnetId": "[parameters('delegatedSubnetId')]"
            }
        },
        {
            "type": "Microsoft.DocumentDB/cassandraClusters/dataCenters",
            "name": "[concat(parameters('name'), '/', variables('dcName'))]",
            "location": "[parameters('location')]",
            "apiVersion": "2020-06-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/cassandraClusters', parameters('name'))]"
            ],
            "properties": {
                "dataCenterLocation": "[parameters('location')]",
                "delegatedSubnetId": "[parameters('delegatedSubnetId')]",
                "nodeCount": "[parameters('nodeCount')]"
            }
        }
    ],
    "outputs": {}
}