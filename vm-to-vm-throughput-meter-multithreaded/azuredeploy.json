{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "probeVmSize": {
      "type": "string",
      "defaultValue": "Standard_A8m_v2",
      "metadata": {
        "description": "Size of the VM that runs the test."
      }
    },
    "targetVmSize": {
      "type": "string",
      "defaultValue": "Standard_A8m_v2",
      "metadata": {
        "description": "Size of the target VM."
      }
    },
    "testDataTransferMode": {
      "type": "string",
      "allowedValues": [
        "Async",
        "Sync"
      ],
      "defaultValue": "Async",
      "metadata": {
        "description": "Data transfer mode for NTttcp tool."
      }
    },
    "testSendBufferSize": {
      "type": "string",
      "allowedValues": [
        "8k",
        "16k",
        "32k",
        "64k",
        "128k",
        "256k",
        "512k",
        "1m"
      ],
      "defaultValue": "128k",
      "metadata": {
        "description": "Size of the send buffer for NTttcp tool."
      }
    },
    "testReceiveBufferSize": {
      "type": "string",
      "allowedValues": [
        "8k",
        "16k",
        "32k",
        "64k",
        "128k",
        "256k",
        "512k",
        "1m"
      ],
      "defaultValue": "64k",
      "metadata": {
        "description": "Size of the receive buffer for NTttcp tool."
      }
    },
    "testSendOverlappedBuffers": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of posted send overlapped buffers for NTttcp tool."
      }
    },
    "testReceiveOverlappedBuffers": {
      "type": "int",
      "defaultValue": 16,
      "metadata": {
        "description": "Number of posted receive overlapped buffers for NTttcp tool."
      }
    },
    "testSenderThreadNumber": {
      "type": "int",
      "defaultValue": 8,
      "metadata": {
        "description": "Number of the sender threads for NTttcp tool."
      }
    },
    "testReceiverThreadNumber": {
      "type": "int",
      "defaultValue": 8,
      "metadata": {
        "description": "Number of the receiver threads for NTttcp tool."
      }
    },
    "testDurationSeconds": {
      "type": "int",
      "defaultValue": 15,
      "metadata": {
        "description": "Number of seconds for NTttcp tool test run."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the probe and target VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the probe and target VMs."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/vm-to-vm-throughput-meter-multithreaded"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "OSDiskName": "osdiskforwindowssimple",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "publicIP",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "virtualNetworkName": "testVNET",
    "scriptFolder": "scripts",
    "scriptFileName": "tptest.ps1",
    "vhdStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'storage')]",
    "osVersion": "2012-R2-Datacenter",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "vmName": [
      "probeVM",
      "targetVM"
    ],
    "testMode": [
      "Sender",
      "Receiver"
    ],
    "testBufferSize": [
      "[parameters('testSendBufferSize')]",
      "[parameters('testReceiveBufferSize')]"
    ],
    "testOverlappedBuffers": [
      "[parameters('testSendOverlappedBuffers')]",
      "[parameters('testReceiveOverlappedBuffers')]"
    ],
    "testThreadNumber": [
      "[parameters('testSenderThreadNumber')]",
      "[parameters('testReceiverThreadNumber')]"
    ],
    "vmSize": [
      "[parameters('probeVmSize')]",
      "[parameters('targetVmSize')]"
    ],
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('vhdStorageAccountName'),copyIndex(1))]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "storageCopy",
        "count": 2
      },
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyIndex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "publicIPCopy",
        "count": 2
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicCopy",
        "count": 2
      },
      "dependsOn": [
        "[concat(variables('publicIPAddressName'), copyIndex(1))]",
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), copyIndex(1)))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')[copyIndex(0)]]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmCopy",
        "count": 2
      },
      "dependsOn": [
        "[concat(variables('vhdStorageAccountName'), copyIndex(1))]",
        "nicCopy"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')[copyIndex(0)]]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')[copyIndex(0)]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('osVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName')[copyIndex(0)],'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex(1)))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[concat('CustomScriptExtension', copyIndex(1))]",
          "apiVersion": "2015-06-15",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('vmName')[copyIndex(0)]]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[uri(parameters('_artifactsLocation'), concat(variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken')))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('ScriptFileName'), ' -ReceiverIP ', reference(concat(variables('nicName'), '2')).ipConfigurations[0].properties.privateIPAddress, ' -Mode ', variables('testMode')[copyIndex(0)], ' -BufferSize ', variables('testBufferSize')[copyIndex(0)], ' -OverlappedBuffers ', variables('testOverlappedBuffers')[copyIndex(0)], ' -DataTransferMode ', parameters('testDataTransferMode'), ' -ThreadNumber ', variables('testThreadNumber')[copyIndex(0)], ' -Duration ', parameters('testDurationSeconds'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "Throughput MB/s": {
      "type": "string",
      "value": "[split(reference('CustomScriptExtension1').instanceView.substatuses[0].message, ' ')[0]]"
    },
    "Throughput mbps": {
      "type": "string",
      "value": "[split(reference('CustomScriptExtension1').instanceView.substatuses[0].message, ' ')[1]]"
    },
    "Throughput buffers/s": {
      "type": "string",
      "value": "[split(reference('CustomScriptExtension1').instanceView.substatuses[0].message, ' ')[2]]"
    }
  }
}
