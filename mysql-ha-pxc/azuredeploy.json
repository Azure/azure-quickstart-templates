{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccount": {
      "type": "string",
      "metadata": {
        "description": "Storage account name for the cluster"
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "Connect to your cluster using dnsName.cloudapp.net"
      }
    },
    "userName": {
      "type": "string",
      "metadata": {
        "description": "user name to ssh to the VMs"
      }
    },
    "password": {
      "type": "securestring",
      "metadata": {
        "description": "password to ssh to the VMs"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "size for the VMs"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account type for the cluster"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "pxcvnet",
      "metadata": {
        "description": "Virtual network name for the cluster"
      }
    },
    "dbSubnetName": {
      "type": "string",
      "defaultValue": "dbsubnet",
      "metadata": {
        "description": "subnet name for the MySQL nodes"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "IP address in CIDR for virtual network"
      }
    },
    "dbSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "IP address in CIDR for db subnet"
      }
    },
    "vmIP1": {
      "type": "string",
      "defaultValue": "10.0.1.4",
      "metadata": {
        "description": "IP address for VM1 must be available in db subnet"
      }
    },
    "vmIP2": {
      "type": "string",
      "defaultValue": "10.0.1.5",
      "metadata": {
        "description": "IP address for VM2 must be available in db subnet"
      }
    },
    "vmIP3": {
      "type": "string",
      "defaultValue": "10.0.1.6",
      "metadata": {
        "description": "IP address for VM3 must be available in db subnet"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "pxcnd",
      "metadata": {
        "description": "host name prefix for the VMs"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "OpenLogic",
      "allowedValues": [
        "OpenLogic",
        "Canonical"
      ],
      "metadata": {
        "description": "publisher for the VM OS image"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "CentOS",
      "allowedValues": [
        "CentOS",
        "UbuntuServer"
      ],
      "metadata": {
        "description": "VM OS name"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "6.5",
      "allowedValues": [
        "6.5",
        "12.04.5-LTS"
      ],
      "metadata": {
        "description": "VM OS version"
      }
    },
    "mysqlFrontEndPort": {
      "type": "int",
      "defaultValue": 3306,
      "metadata": {
        "description": "MySQL public port"
      }
    },
    "mysqlBackEndPort": {
      "type": "int",
      "defaultValue": 3306,
      "metadata": {
        "description": "MySQL private port"
      }
    },
    "idleTimeoutInMinutesforILBRule": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "idel timeout for load balancer"
      }
    },
    "probePort": {
      "type": "int",
      "defaultValue": 9200,
      "metadata": {
        "description": "cluster health check probe port exposed to load balancer"
      }
    },
    "probeRequestPath": {
      "type": "string",
      "defaultValue": "/",
      "metadata": {
        "description": "cluster health check probe path"
      }
    },
    "probeIntervalInSeconds": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "health check probe interval"
      }
    },
    "numberOfProbes": {
      "type": "int",
      "defaultValue": 20,
      "metadata": {
        "description": "number of health check probes to consider failure"
      }
    },
    "sshNatRuleFrontEndPort1": {
      "type": "int",
      "defaultValue": 64001,
      "metadata": {
        "description": "public ssh port for VM1"
      }
    },
    "sshNatRuleFrontEndPort2": {
      "type": "int",
      "defaultValue": 64002,
      "metadata": {
        "description": "public ssh port for VM2"
      }
    },
    "sshNatRuleFrontEndPort3": {
      "type": "int",
      "defaultValue": 64003,
      "metadata": {
        "description": "public ssh port for VM3"
      }
    },
    "sshNatRuleBackEndPort": {
      "type": "int",
      "defaultValue": 22,
      "metadata": {
        "description": "private ssh port for the VMs"
      }
    },
    "customScriptFilePath": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mysql-ha-pxc/azurepxc.sh",
      "metadata": {
        "description": "bash file location to configure the cluster"
      }
    },
    "mysqlConfigFilePath": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mysql-ha-pxc/my.cnf.template",
      "metadata": {
        "description": "my.cnf file location"
      }
    },
    "customScriptCommandToExecute": {
      "type": "string",
      "defaultValue": "bash azurepxc.sh",
      "metadata": {
        "description": "bash script command line"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "dbSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('dbSubnetName'))]",
    "lbPublicIPName": "[concat(variables('lbName'), '-publicIP')]",
    "lbPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName'))]",
    "lbName": "[concat(parameters('vmNamePrefix'), '-lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "ilbBackendAddressPoolName": "[concat(parameters('vmNamePrefix'), '-ilbBackendPool')]",
    "ilbBackendAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('ilbBackendAddressPoolName'))]",
    "ilbRuleName": "[concat(parameters('vmNamePrefix'), '-ilbRule')]",
    "ilbRuleID": "[concat(variables('lbID'),'/loadBalancingRules/',variables('ilbRuleName'))]",
    "probeName": "[concat(parameters('vmNamePrefix'), '-probe')]",
    "probeID": "[concat(variables('lbID'),'/probes/',variables('probeName'))]",
    "sshIPConfigName": "[concat(parameters('vmNamePrefix'), '-sshIPCfg')]",
    "sshIPConfig": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('sshIPConfigName'))]",
    "sshNatRuleName": "[concat(parameters('vmNamePrefix'), '-natRule')]",
    "sshNatRuleName1": "[concat(variables('sshNatRuleName'), '-1')]",
    "sshNatRuleName2": "[concat(variables('sshNatRuleName'), '-2')]",
    "sshNatRuleName3": "[concat(variables('sshNatRuleName'), '-3')]",
    "sshNatRuleID1": "[concat(variables('lbID'),'/inboundNatRules/',variables('sshNatRuleName1'))]",
    "sshNatRuleID2": "[concat(variables('lbID'),'/inboundNatRules/',variables('sshNatRuleName2'))]",
    "sshNatRuleID3": "[concat(variables('lbID'),'/inboundNatRules/',variables('sshNatRuleName3'))]",
    "nicName": "[concat(parameters('vmNamePrefix'), '-nic')]",
    "nicName1": "[concat(variables('nicName'),'-1')]",
    "nicName2": "[concat(variables('nicName'),'-2')]",
    "nicName3": "[concat(variables('nicName'),'-3')]",
    "nicId1": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName1'))]",
    "nicId2": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]",
    "nicId3": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName3'))]",
    "backEndIPConfigNic1": "[concat(variables('nicId1'),'/ipConfigurations/ipconfig1')]",
    "backEndIPConfigNic2": "[concat(variables('nicId2'),'/ipConfigurations/ipconfig1')]",
    "backEndIPConfigNic3": "[concat(variables('nicId3'),'/ipConfigurations/ipconfig1')]",
    "vmName1": "[concat('a-', parameters('vmNamePrefix'))]",
    "vmName2": "[concat('k-', parameters('vmNamePrefix'))]",
    "vmName3": "[concat('z-', parameters('vmNamePrefix'))]",
    "availabilitySetName": "[concat(parameters('vmNamePrefix'), '-set')]",
    "vmExtensionName": "[concat(parameters('vmNamePrefix'), '-ext')]",
    "pxcClusterAddress": "[concat(parameters('vmIP1'), ',', parameters('vmIP2'), ',', parameters('vmIP3'))]",
    "customScriptCommandCommon": "[concat(parameters('customScriptCommandToExecute'), ' ', variables('pxcClusterAddress'), ' ')]",
    "vhdContainer1": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/avhds/')]",
    "dataDisk1VhdName1": "[concat(variables('vhdContainer1'),variables('vmName1'),'dataDisk1.vhd')]",
    "dataDisk2VhdName1": "[concat(variables('vhdContainer1'),variables('vmName1'),'dataDisk2.vhd')]",
    "customScriptParamVm1": "[concat(parameters('vmIP1'), ' bootstrap-pxc ', parameters('mysqlConfigFilePath'))]",
    "vmExtensionName1": "[concat(variables('vmName1'),'/', variables('vmExtensionName'))]",
    "vhdContainer2": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/kvhds/')]",
    "dataDisk1VhdName2": "[concat(variables('vhdContainer2'),variables('vmName2'),'dataDisk1.vhd')]",
    "dataDisk2VhdName2": "[concat(variables('vhdContainer2'),variables('vmName2'),'dataDisk2.vhd')]",
    "customScriptParamVm2": "[concat(parameters('vmIP2'), ' start ', parameters('mysqlConfigFilePath'))]",
    "vhdContainer3": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/zvhds/')]",
    "dataDisk1VhdName3": "[concat(variables('vhdContainer3'),variables('vmName3'),'dataDisk1.vhd')]",
    "dataDisk2VhdName3": "[concat(variables('vhdContainer3'),variables('vmName3'),'dataDisk2.vhd')]",
    "customScriptParamVm3": "[concat(parameters('vmIP3'), ' start ', parameters('mysqlConfigFilePath'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccount')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('dbSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('dbSubnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName1')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('vmIP1')]",
              "subnet": {
                "id": "[variables('dbSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ilbBackendAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('sshNatRuleID1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName2')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('vmIP2')]",
              "subnet": {
                "id": "[variables('dbSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ilbBackendAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('sshNatRuleID2')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName3')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('vmIP3')]",
              "subnet": {
                "id": "[variables('dbSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ilbBackendAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('sshNatRuleID3')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmName1')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName1'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName1')]",
          "adminUsername": "[parameters('userName')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(variables('vhdContainer1'), 'osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "1000",
              "lun": 0,
              "vhd": {
                "uri": "[variables('dataDisk1VhdName1')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "1000",
              "lun": 1,
              "vhd": {
                "uri": "[variables('dataDisk2VhdName1')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('nicId1')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[variables('vmExtensionName1')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[parameters('customScriptFilePath')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('customScriptCommandCommon'), variables('customScriptParamVm1'))]"
        }
      }
    },
    {
      "name": "[variables('vmName2')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName2')]",
          "adminUsername": "[parameters('userName')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(variables('vhdContainer2'), 'osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "1000",
              "lun": 0,
              "vhd": {
                "uri": "[variables('dataDisk1VhdName2')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "1000",
              "lun": 1,
              "vhd": {
                "uri": "[variables('dataDisk2VhdName2')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('nicId2')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName2'),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName2'))]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName1'),'/extensions/',variables('vmExtensionName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[parameters('customScriptFilePath')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('customScriptCommandCommon'), variables('customScriptParamVm2'))]"
        }
      }
    },
    {
      "name": "[variables('vmName3')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName3'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName3')]",
          "adminUsername": "[parameters('userName')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(variables('vhdContainer3'), 'osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "1000",
              "lun": 0,
              "vhd": {
                "uri": "[variables('dataDisk1VhdName3')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "1000",
              "lun": 1,
              "vhd": {
                "uri": "[variables('dataDisk2VhdName3')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('nicId3')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName3'),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName3'))]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName1'),'/extensions/',variables('vmExtensionName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[parameters('customScriptFilePath')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('customScriptCommandCommon'), variables('customScriptParamVm3'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPublicIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('sshIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('lbPublicIPRef')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('ilbBackendAddressPoolName')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('sshNatRuleName1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('sshNatRuleFrontEndPort1')]",
              "backendPort": "[parameters('sshNatRuleBackEndPort')]",
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('sshNatRuleName2')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('sshNatRuleFrontEndPort2')]",
              "backendPort": "[parameters('sshNatRuleBackEndPort')]",
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('sshNatRuleName3')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('sshNatRuleFrontEndPort3')]",
              "backendPort": "[parameters('sshNatRuleBackEndPort')]",
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('ilbRuleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "backendAddressPool": {
                "id": "[variables('ilbBackendAddressPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('mysqlFrontEndPort')]",
              "backendPort": "[parameters('mysqlBackEndPort')]",
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutesforILBRule')]",
              "probe": {
                "id": "[variables('probeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('probeName')]",
            "properties": {
              "protocol": "Http",
              "port": "[parameters('probePort')]",
              "intervalInSeconds": "[parameters('probeIntervalInSeconds')]",
              "numberOfProbes": "[parameters('numberOfProbes')]",
              "requestPath": "[parameters('probeRequestPath')]"
            }
          }
        ]
      }
    }
  ]
}
