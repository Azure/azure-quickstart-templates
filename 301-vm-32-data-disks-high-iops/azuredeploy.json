{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The username of the initial account to be created"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the initial account to be created"
      }
    },
    "sizeOfEachDataDiskInGB": {
      "type": "int",
      "defaultValue": 1024,
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4095
      ],
      "metadata": {
        "description": "The size of the datadisks to be striped. The total capacity will be this size multiplied by the number of data disks you specify."
      }
    },
    "numberOfDisks": {
      "type": "int",
      "defaultValue": 32,
      "allowedValues": [
        8,
        16,
        32
      ],
      "metadata": {
        "description": "The number of data disks to include in the storage pool."
      }
    },
    "dnsName": {
      "type": "string",
      "defaultValue": "[concat('vm-data-disks-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "DNS name for the Public IP"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D16s_v3",
      "allowedValues": [
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3"
      ],
      "metadata": {
        "description": "VM Size, the list of sizes here all support premium and standard storage up to 32 data disks."
      }
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS"
      ],
      "metadata": {
        "description": "Storage SKU type"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/301-vm-32-data-disks-high-iops/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "vmName": "vm-high-iops",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "imageSKU": "2016-Datacenter",
    "virtualNetworkName": "highIopsVNET",
    "nicName": "highIopsNIC",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressName": "highIopsPubIP",
    "publicIPAddressType": "Dynamic",
    "configurationFunction": "StoragePool.ps1\\StoragePool",
    "modulesUrl": "[uri(parameters('_artifactsLocation'), 'DSC/StoragePool.zip')]",
    "DscExtensionName": "DscExtension",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),variables('subnet1Name'))]",
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('publicIPAddressName')]",
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('nicName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageType')]"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('numberOfDisks')]",
              "input": {
                "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
                "lun": "[copyIndex('dataDisks')]",
                "name": "[concat(variables('vmName'), '_DataDisk', copyIndex('dataDisks'))]",
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "[parameters('storageType')]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', variables('DscExtensionName'))]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vmName')]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('modulesUrl')]",
          "SasToken": "[parameters('_artifactsLocationSasToken')]",
          "ConfigurationFunction": "[variables('configurationFunction')]",
          "Properties": {
            "MachineName": "[variables('vmName')]"
          }
        },
        "protectedSettings": null
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    }
  }
}
