{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Event Hub Namespace": {
            "type": "String",
            "defaultValue": "pn-eventhub-1fba54e9"
        },
        "Azure Webjob Name": {
            "type": "String",
            "defaultValue": "pn-webjob-80fd73b7"
        },
        "Azure Datacenter Location": {
            "type": "String",
            "defaultValue": "westus"
        },
        "PubNub Ingress Channel": {
            "type": "String",
            "defaultValue": "pnInput"
        },
        "PubNub Egress Channel": {
            "type": "String",
            "defaultValue": "pnOutput"
        },
        "PubNub Announce Channel": {
            "type": "String",
            "defaultValue": "pnAnnounce"
        },
        "PubNub Publish Key": {
            "type": "String",
            "defaultValue": "demo-36"
        },
        "PubNub Subscribe Key": {
            "type": "String",
            "defaultValue": "demo-36"
        },
        "Azure Service Plan": {
            "defaultValue": "USWestBasic",
            "type": "String"
        },
        "Azure Ingress Event Hub Name": {
            "defaultValue": "infromsubscriberhub",
            "type": "String"
        },
        "Azure Egress Event Hub Name": {
            "defaultValue": "outtopnpublisher",
            "type": "String"
        },
        "Azure Ingress SAS Policy Name": {
            "defaultValue": "infromsubscriberhub",
            "type": "String"
        },
        "Azure Egress SAS Policy Name": {
            "defaultValue": "outtopublisherhub",
            "type": "String"
        },
        "apiVersion": {
            "defaultValue": "2015-08-01",
            "type": "string",
            "metadata": {
                "description": "Service Bus ApiVersion used by the template"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "sbVersion": "[parameters('apiVersion')]",
        "ehInAuthorizationRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('Event Hub Namespace'), parameters('Azure Ingress Event Hub Name'), parameters('Azure Ingress SAS Policy Name'))]",
        "ehOutAuthorizationRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('Event Hub Namespace'), parameters('Azure Egress Event Hub Name'), parameters('Azure Egress SAS Policy Name'))]"
    },
    "resources": [
        {
            "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourcegroups/AutoNub/providers/Microsoft.EventHub/namespaces/AutoNubEventHub'.",
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "name": "[parameters('Event Hub Namespace')]",
            "apiVersion": "[parameters('apiVersion')]",
            "location": "[parameters('Azure Datacenter Location')]",
            "tags": {},
            "properties": {},
            "resources": [
                {
                    "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourcegroups/AutoNub/providers/Microsoft.EventHub/namespaces/AutoNubEventHub/eventhubs/infrompnsubscriber'.",
                    "type": "eventhubs",
                    "name": "[parameters('Azure Ingress Event Hub Name')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', parameters('Event Hub Namespace'))]"
                    ],
                    "apiVersion": "[parameters('apiVersion')]",
                    "location": "[parameters('Azure Datacenter Location')]",
                    "properties": {
                        "messageRetentionInDays": 1,
                        "partitionCount": 2
                    },
                    "resources": [
                        {
                            "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourcegroups/AutoNub/providers/Microsoft.EventHub/namespaces/AutoNubEventHub/eventhubs/infrompnsubscriber/authorizationRules/infromsubscriberhub'.",
                            "type": "authorizationRules",
                            "dependsOn": [
                                "[concat('Microsoft.EventHub/namespaces/', parameters('Event Hub Namespace'),'/eventhubs/',parameters('Azure Ingress Event Hub Name'))]"
                            ],
                            "name": "[parameters('Azure Ingress SAS Policy Name')]",
                            "apiVersion": "[parameters('apiVersion')]",
                            "location": "[variables('location')]",
                            "properties": {
                                "rights": [
                                    "Send",
                                    "Listen"
                                ]
                            }
                        }
                    ]
                },
                {
                    "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourcegroups/AutoNub/providers/Microsoft.EventHub/namespaces/AutoNubEventHub/eventhubs/outtopnpublisher'.",
                    "type": "eventhubs",
                    "name": "[parameters('Azure Egress Event Hub Name')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', parameters('Event Hub Namespace'))]",
                        "[concat('Microsoft.EventHub/namespaces/', parameters('Event Hub Namespace'),'/eventhubs/',parameters('Azure Ingress Event Hub Name'))]"
                    ],
                    "apiVersion": "[parameters('apiVersion')]",
                    "location": "[variables('location')]",
                    "properties": {
                        "messageRetentionInDays": 1,
                        "partitionCount": 2
                    },
                    "resources": [
                        {
                            "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourcegroups/AutoNub/providers/Microsoft.EventHub/namespaces/AutoNubEventHub/eventhubs/outtopnpublisher/authorizationRules/outtopublisherhub'.",
                            "type": "authorizationRules",
                            "dependsOn": [
                                "[concat('Microsoft.EventHub/namespaces/', parameters('Event Hub Namespace'),'/eventhubs/',parameters('Azure Egress Event Hub Name'))]"
                            ],
                            "name": "[parameters('Azure Egress SAS Policy Name')]",
                            "apiVersion": "[parameters('apiVersion')]",
                            "location": "[variables('location')]",
                            "properties": {
                                "rights": [
                                    "Send",
                                    "Listen"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourceGroups/AutoNub/providers/Microsoft.Web/serverfarms/USWestBasic'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "name": "[parameters('Azure Service Plan')]",
            "apiVersion": "[parameters('apiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "name": "[parameters('Azure Service Plan')]",
                "numberOfWorkers": 1
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/38ccde7a-8dbd-46b4-a0c6-71201ffab311/resourceGroups/AutoNub/providers/Microsoft.Web/sites/pnwebjob'.",
            "type": "Microsoft.Web/sites",
            "name": "[parameters('Azure Webjob Name')]",
            "apiVersion": "[parameters('apiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "name": "[parameters('Azure Webjob Name')]",
                "hostNames": [
                    "[concat(parameters('Azure Webjob Name'),'.azurewebsites.net')]"
                ],
                "enabledHostNames": [
                    "[concat(parameters('Azure Webjob Name'),'.azurewebsites.net')]",
                    "[concat(parameters('Azure Webjob Name'),'.scm.azurewebsites.net')]"
                ],
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('Azure Webjob Name'),'.azurewebsites.net')]",
                        "sslState": 0,
                        "thumbprint": null,
                        "ipBasedSslState": 0
                    },
                    {
                        "name": "[concat(parameters('Azure Webjob Name'),'.scm.azurewebsites.net')]",
                        "sslState": 0,
                        "thumbprint": null,
                        "ipBasedSslState": 0
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('Azure Service Plan'))]"
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('Azure Webjob Name'))]"
                    ],
                    "properties": {
                        "alwaysOn": true
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('Azure Webjob Name'))]"
                    ],
                    "properties": {
                        "RepoUrl": "https://github.com/pubnub/azureEventHubBridge.git",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                },
                {
                    "apiVersion": "[parameters('apiVersion')]",
                    "name": "connectionstrings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('Azure Webjob Name'))]",
                        "[resourceId('Microsoft.Web/Sites/sourcecontrols', parameters('Azure Webjob Name'), 'web')]"
                    ],
                    "properties": {
                        "PNSubChannel": {
                            "value": "[parameters('PubNub Ingress Channel')]",
                            "type": "custom"
                        },
                        "PNPubChannel": {
                            "value": "[parameters('PubNub Egress Channel')]",
                            "type": "custom"
                        },
                        "PNAnnounceChannel": {
                            "value": "[parameters('PubNub Announce Channel')]",
                            "type": "custom"
                        },
                        "PNPublishKey": {
                            "value": "[parameters('PubNub Publish Key')]",
                            "type": "custom"
                        },
                        "PNSubscribeKey": {
                            "value": "[parameters('PubNub Subscribe Key')]",
                            "type": "custom"
                        },
                        "EHInConnectionString": {
                            "value": "[listkeys(variables('ehInAuthorizationRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
                            "type": "custom"
                        },
                        "EHOutConnectionString": {
                            "value": "[listkeys(variables('ehOutAuthorizationRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
                            "type": "custom"
                        }
                    }

                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('Azure Service Plan'))]"
            ]
        }
    ]
}