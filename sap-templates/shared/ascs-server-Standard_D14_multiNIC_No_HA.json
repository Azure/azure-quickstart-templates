{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "imageSku": {
      "type": "string",
      "metadata": {
        "description": "SKU of the image that should be used to deploy the virtual machine."
      }
    },
    "imagePublisher": {
      "type": "string",
      "metadata": {
        "description": "Publisher of the image that should be used to deploy the virtual machine."
      }
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "Offer of the image that should be used to deploy the virtual machine."
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [ "Windows", "Linux" ],
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where the template should be deployed."
      }
    },
    "sidlower": {
      "type": "string",
      "metadata": {
        "description": "SAP System ID in lower case."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Prefix of the virtual machine name."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "subnetRef1": {
      "type": "string",
      "metadata": {
        "description": "ID of the first subnet that should be used."
      }
    },
    "subnetRef2": {
      "type": "string",
      "metadata": {
        "description": "ID of the second subnet that should be used."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "Count of virtual machines that should be deployed."
      }
    },
    "cseExtPublisher": {
      "type": "string",
      "metadata": {
        "description": "Publisher of the CustomScriptExtension."
      }
    },
    "cseExtName": {
      "type": "string",
      "metadata": {
        "description": "Name of the CustomScriptExtension."
      }
    },
    "cseExtVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of the CustomScriptExtension."
      }
    },
    "csExtensionScript": {
      "type": "string",
      "metadata": {
        "description": "Script that should be passed to the CustomScriptExtension."
      }
    },
    "csExtensionscriptCall": {
      "type": "string",
      "metadata": {
        "description": "Script call that should be passed to the CustomScriptExtension."
      }
    },
    "github": {
      "type": "string",
      "metadata": {
        "description": "Address of the github repository that contains the required templates."
      }
    }
  },
  "variables": {
    "osDiskName": "[concat(parameters('sidlower'),'-os.vhd')]",
    "osDiskCaching": "ReadWrite",
    "nicName1": "[concat(parameters('sidlower'), '-nic-ascs')]",
    "publicIpName": "[concat(parameters('sidlower'), '-pip-ascs')]",
    "publicIPAddressType": "Dynamic",
    "internalStorageType": "Standard_LRS",
    "storageAccountName": "[concat('ascs', parameters('sidlower'), uniqueString(parameters('sidlower'), resourceGroup().id))]",
    "dbDataLUNs": "0,1,2,3,4,5,6,7,8,9,10,11,12,13",
    "dbLogLUNs": "14,15",
    "vmNameASCS": "[concat(parameters('vmName'), '-ascs')]",
    "avSetName": "[concat(parameters('sidlower'), '-avset-ascs')]",
    "nsgName": "[concat(parameters('sidlower'), '-nsg-ascs')]",
    "loadBalancerName": "[concat(parameters('sidlower'), '-lb-ascs')]",
    "lbProbePortInternal": 62300,
    "nestedDeploymentName": "nestedTemplateascs",
    "nestedDeploymentNameNSG": "[concat(variables('nestedDeploymentName'), 'nsg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avSetName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 20
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIpName'), '-', copyIndex())]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },

    {
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('nestedDeploymentNameNSG'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('github'), '/shared/nsg-', parameters('osType'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nsgName": { "value": "[concat(variables('nsgName'), '-', copyIndex())]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountName'), copyIndex())]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('internalStorageType')]"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[parameters('subnetRef1')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 445,
              "backendPort": 445,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule445"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3200,
              "backendPort": 3200,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule3200"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3300,
              "backendPort": 3300,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule3300"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3600,
              "backendPort": 3600,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule3600"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3900,
              "backendPort": 3900,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule3900"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 50013,
              "backendPort": 50013,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule50013"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 50014,
              "backendPort": 50014,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule50014"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 50016,
              "backendPort": 50016,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule50016"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 51013,
              "backendPort": 51013,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule51013"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 51014,
              "backendPort": 51014,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule51014"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": "[variables('lbProbePortInternal')]",
              "intervalInSeconds": 10,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName1'), '-', copyIndex())]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'), '-', copyIndex())]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameNSG'), '-', copyIndex())]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpName'), '-', copyIndex()))]"
              },
              "subnet": {
                "id": "[parameters('subnetRef1')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                }
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'), '-', copyIndex()))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNameASCS'), '-', copyIndex())]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName1'), '-', copyIndex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
        },

        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        
        "osProfile": {
          "computerName": "[concat(variables('vmNameASCS'), '-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/', variables('osDiskName'))]"
            },
            "caching": "[variables('osDiskCaching')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "dbdisk1",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk1.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk2",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk2.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk3",
              "lun": 2,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk3.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk4",
              "lun": 3,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk4.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk5",
              "lun": 4,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk5.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk6",
              "lun": 5,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk6.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk7",
              "lun": 6,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk7.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk8",
              "lun": 7,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk8.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk9",
              "lun": 8,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk9.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk10",
              "lun": 9,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk10.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk11",
              "lun": 10,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk11.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk12",
              "lun": 11,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk12.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk13",
              "lun": 12,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk13.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk14",
              "lun": 13,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk14.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk15",
              "lun": 14,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk15.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            },
            {
              "name": "dbdisk16",
              "lun": 15,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/',parameters('sidlower'),'-dbdisk16.vhd')]"
              },
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "1023"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName1'), '-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNameASCS'), '-', copyIndex(), '/', parameters('cseExtName'))]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNameASCS'), '-', copyIndex())]"
      ],
      "properties": {
        "publisher": "[parameters('cseExtPublisher')]",
        "type": "[parameters('cseExtName')]",
        "typeHandlerVersion": "[parameters('cseExtVersion')]",
        "settings": {
          "fileUris": [ "[parameters('csExtensionScript')]" ],
          "commandToExecute": "[concat(parameters('csExtensionscriptCall'), ' -DBDataLUNS \"', variables('dbDataLUNs'), '\" -DBLogLUNS \"', variables('dbLogLUNs'), '\"')]"
        }
      }
    }
  ]
}
