{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
  "VSTSAccountName": {
      "type": "string",
      "metadata": {"description": "Please enter the VSTS account name without .visualstudio.com, e.g., 'xyz' is VSTS account name for 'xyz.visualstudio.com'"}
    },
    "PATToken": {
      "type": "securestring",
      "metadata": { "description": "PATToken (under all scope) for the VSTS account. Please refer 'https://www.visualstudio.com/en-us/get-started/setup/use-personal-access-tokens-to-authenticate' for more details." }
    },
    "vmCount": {
      "type": "int",
      "metadata": { "description": "Number of virtual machines" },
	    "defaultValue": 1
    },
    "adminUsername": {
      "type": "string",
      "metadata": { "description": "User name for an administrator account on virtual machines." },
	  "defaultValue": "cltuser"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": { "description": "Password for the adminstrator account on Virtual Machines." }
    }    
  },
  "variables": {
    "sizeOfDiskInGB": "100",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "addressPrefix": "10.0.0.0/16",
	"sequenceVersion": "[uniqueString(resourceGroup().id)]",
	"uniqueStringValue":"[substring(variables('sequenceVersion'), 3, 7)]",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "vmName": "[concat('vm', variables('uniqueStringValue'))]",
    "vmSize": "Standard_D4_v2",
	"storageAccountName": "[concat('storage', variables('uniqueStringValue'))]",
    "vmStorageAccountContainerName": "vhd",
    "virtualNetworkName": "clttemplatelocalagentvnet",
    "publicIPAddressName": "[concat('publicip', variables('uniqueStringValue'))]",
    "publicIPAddressType": "Dynamic",
    "nicName": "[concat('nic', variables('uniqueStringValue'))]",
    "dataDisk1VhdName": "datadisk",
	"windowsOSVersion":"2012-R2-Datacenter",
    "OSDiskName": "osdisk",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "apiVersion": "2015-06-15"   
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageAccountName')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "publicAddressCopy",
        "count": "[parameters('vmCount')]"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),'i', copyIndex())]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('vmCount')]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), 'i', copyIndex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'),'i', copyIndex()))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),'i', copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('vmCount')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), 'i',copyIndex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), 'i', copyIndex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), 'i',copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',concat(variables('vmName'), copyIndex(), variables('OSDiskName')),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk",
              "diskSizeGB": "[variables('sizeOfDiskInGB')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', concat(variables('vmName'), copyIndex(), variables('dataDisk1VhdName')),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'i', copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat(variables('vmName'), 'i', copyIndex(), '/StartupScript')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',concat(variables('vmName'), 'i', copyIndex()))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "forceUpdateTag": "[variables('sequenceVersion')]",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://elsprodch2su1.blob.core.windows.net/ets-containerfor-loadagentresources/bootstrap/ConfigureUserLoadAgent.ps1"
          ],
		  "commandToExecute":"[concat('powershell.exe -ExecutionPolicy Unrestricted -File .\\bootstrap\\ConfigureUserLoadAgent.ps1 -TeamServicesAccountUrl https://', parameters('VSTSAccountName'), '.vsclt.visualstudio.com', ' -PATToken ', parameters('PATToken'))]"
		  }
	  }
  }
  ]
}
