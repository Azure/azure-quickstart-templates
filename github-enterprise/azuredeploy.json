{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "about": "GitHub Enterprise is the self-hosted version of GitHub.com. Collaborate, track issues & review code - all on your own servers.",
    "website": "http://enterprise.github.com",
    "description": "This template deploys the lastest version of GitHub Enterprise on a single, Premium Storage-backed Azure VM."
  },
  
  "parameters" : {
    "accountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique prefix for your Storage Account and VM name. Must be all lower case letters or numbers. No spaces or special characters."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Deployment region. Choose a region with Premium Storage support and IaaS ARM support."
      },
      "defaultValue" : "West US",
      "allowedValues": [
        "West US"
      ]
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "VM Size. Select a DS Series VM with at least 14 GB of RAM. Default value: Standard_DS3"
      },
      "defaultValue": "Standard_DS3",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14"
      ]
    },
    "storageDiskSizeGB": {
      "type": "string",
      "metadata": {
        "description": "Select a Premium Storage disk capacity for your source code, in GB. Default value: 512."
      },
      "defaultValue": "512"
    }
  },
  
  "variables": {
    "storageAccountType": "Premium_LRS",
    "storageAccountName": "[concat(parameters('accountPrefix'),'ghestore')]",
    "vnetName": "ghe-vnet",
    "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "vnetAddressPrefix":"10.0.0.0/16",
    "subnetName": "ghe-subnet",
    "subnetAddressPrefix": "10.0.0.0/24",
    "publicIPAddressName": "ghe-ip",
    "publicIPAddressType": "Dynamic",
    "dnsNameForPublicIP": "[concat(parameters('accountPrefix'), '-ghe')]",
    "nicName": "ghe-nic",
    "vmName": "[concat(parameters('accountPrefix'), '-ghe-vm')]",
    "dataDiskName": "ghe-data",
    "dataDiskVHDName":"[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/','data-disks','/',variables('dataDiskName'),'.vhd')]",
    "osDiskVHDName":"[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/','vhds','/',variables('vmName'),'-os-disk.vhd')]"
  },
  
  "resources": [

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties" : {
                "addressPrefix": "[variables('subnetAddressPrefix')]"
            }
          }
        ]
      }
    },
      
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ghe-ipconf",
            "properties": {
              "privateIPAllocationMethod": "[variables('publicIPAddressType')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "octocatwashere",
          "adminPassword": "p!aceHolderPa55"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "GitHub",
            "offer": "GitHub-Enterprise",
            "sku": "GitHub-Enterprise",
            "version": "latest"
          },
          "osDisk" : {
            "name" : "[concat(variables('vmName'),'-osDisk')]",
            "caching" : "ReadWrite",
            "createOption": "FromImage",
            "vhd" : {
              "uri" : "[variables('osDiskVhdName')]"
            }
          },
          "dataDisks" : [
            {
              "name" : "[variables('dataDiskName')]",
              "diskSizeGB" : "[parameters('storageDiskSizeGB')]",
              "createOption": "empty",
              "lun" : 0,
              "vhd":{
                "uri" : "[variables('dataDiskVHDName')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces" : [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    }
  ]
}
