{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "allowedValues":[
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_B1s",
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_B4ms",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s"
      ],
      "metadata": {
        "description": "VM size, please choose a size which allow 2 NICs."
      }
    },
    "vmResourceName": {
      "type": "string",
      "defaultValue": "opnsense-vm",
      "metadata": {
        "description": "Resource name of VM. This will not be the VM hostname."
      }
    },
    "vmStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of VM storage account."
      }
    },
    "networkPrefix": {
      "type": "string",
      "defaultValue": "opnsense",
      "metadata": {
        "description": "Network resource prefix. Network resources will be named with this, i.e opnsense-routetable."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/23",
      "metadata": {
        "description": "Address prefix for VNET."
      }
    },
    "publicSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address prefix for public subnet."
      }
    },
    "privateSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address prefix for private subnet."
      }
    },
    "publicNicIP": {
      "type": "string",
      "defaultValue": "10.0.0.5",
      "metadata": {
        "description": "Frontend private IP address which resides in public subnet."
      }
    },
    "privateNicIP": {
      "type": "string",
      "defaultValue": "10.0.1.5",
      "metadata": {
        "description": "Backend private IP address which resides in private subnet."
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address."
      }
    },
    "domainNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/opnsense-freebsd/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    }
  },
  "variables": {
    "vmName": "[parameters('vmResourceName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "adminUsername": "azureuser",
    "adminPassword": "Password1234",
    "publicSubnet": "[concat(parameters('networkPrefix'), '-subnet-public')]",
    "privateSubnet": "[concat(parameters('networkPrefix'), '-subnet-private')]",
    "subnetPublicID": "[concat(variables('vnetID'),'/subnets/', variables('publicSubnet'))]",
    "subnetPrivateID": "[concat(variables('vnetID'),'/subnets/', variables('privateSubnet'))]",
    "publicNic": "[concat(variables('vmName'),'-publicnic')]",
    "privateNic": "[concat(variables('vmName'),'-privatenic')]",
    "vnetName": "[concat(parameters('networkPrefix'),'-vnet')]",
    "baseUriAzureCloud": "[parameters('_artifactsLocation')]",
    "storageAccountName": "[concat('opnsense', uniquestring(resourceGroup().id))]",
    "routeTableName": "[concat(parameters('networkPrefix'), '-routetable')]",
    "nsgName": "[concat(parameters('networkPrefix'), '-nsg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('vmStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "RouteToInternet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('privateNicIP')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "subnet-public",
            "properties": {
              "addressPrefix": "[parameters('publicSubnetAddressPrefix')]"
            }
          },
          {
            "name": "subnet-private",
            "properties": {
              "addressPrefix": "[parameters('privateSubnetAddressPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('vmName'),'-publicip')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('domainNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('publicNic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('publicNicIP')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vmName'),'-publicip'))]"
              },
              "subnet": {
                "id": "[variables('subnetPublicID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('privateNic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateNicIP')]",
              "subnet": {
                "id": "[variables('subnetPrivateID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-https",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('publicNic'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('privateNic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftOSTC",
            "offer": "FreeBSD",
            "sku": "11.1",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),'-osdisk')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, 'vhds/' ,variables('vmName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('publicNic'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('privateNic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/configureopnsense')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(variables('baseUriAzureCloud'), 'scripts/configureopnsense.sh')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('sh configureopnsense.sh ', reference(concat(variables('vmName'),'-publicip')).dnsSettings.fqdn)]"
        }
      }
    }
  ]
}