{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "artifactsBaseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/intel-lustre-clients-on-centos",
            "metadata": {
                "description": "Base URL of the solution template gallery package",
                "artifactsBaseUrl": ""
            }
        },
        "location": {
            "type": "string",
            "allowedValues": [
                "West US",
                "East US 2",
                "East US",
                "Central US",
                "South Central US",
                "North Central US",
                "West Europe",
                "North Europe",
                "East Asia",
                "Southeast Asia",
                "Japan West",
                "Japan East",
                "Brazil South",
                "Australia East",
                "Australia Southeast",
                "Central India",
                "West India",
                "South India"
            ],
            "metadata": {
                "description": "Location for the Lustre nodes"
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "6.6",
            "allowedValues": [
                "6.6",
                "7.0"
            ],
            "metadata": {
                "description": "OpenLogic CentOS version to use"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for the virtual machines"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication type for the virtual machines"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Admin password for the virtual machines"
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
            }
        },
        "dnsNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name prefix name must be between 3 and 50 characters long and can contain only dashes, numbers, and lowercase letters. The domain name suffix (e.g. westus.cloudapp.zure.com) will be automatically updated based on the selected location."
            }
        },
        "clientAvailabilitySetName": {
            "type": "string",
            "defaultValue": "availset-lustre-clients",
            "metadata": {
                "description": "Lustre clients availability set name is important for grouping clients into deployments that can communicate with each other via RDMA"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "lustre",
            "metadata": {
                "description": "Prefix for the virtual machine names"
            }
        },
        "clientVmSize": {
            "type": "string",
            "defaultValue": "Standard_D2",
            "metadata": {
                "description": "Size of the Lustre client VM"
            },
            "allowedValues": [
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A1",
                "Standard_D1",
                "Standard_DS1"
            ]
        },
        "clientCount": {
            "type": "int",
            "defaultValue": 2,
            "allowedValues": [ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 ],
            "metadata": {
                "description": "Number of Lustre clients"
            }
        },
        "filesystemName": {
            "type": "string",
            "defaultValue": "scratch",
            "metadata": {
                "description": "Name of the Lustre filesystem exposed by the Lustre MGS node"
            }
        },
        "mgsIpAddress": {
            "type": "string",
            "defaultValue": "10.1.0.4",
            "metadata": {
                "description": "IP address of the Lustre MGS node"
            }
        },
        "storageAccountPrefix": {
            "type": "string",
            "metadata": {
                "description": "Storage account prefix that will be used to create storage accounts for Lustre nodes"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage account type (e.g. Premium_LRS or Standard_LRS)"
            }
        },
        "existingVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Existing Virtual Network Resource Group where Lustre servers are deployed"
            }
        },
        "existingVnetName": {
            "type": "string",
            "defaultValue": "vnet-lustre",
            "metadata": {
                "description": "Existing Virtual Network name (e.g. vnet-lustre)"
            }
        },
        "existingSubnetClientsName": {
            "type": "string",
            "defaultValue": "subnet-lustre-clients",
            "metadata": {
                "description": "Lustre clients will be deployed into this subnet within the existing Virtual Network"
            }
        }
    },
    "variables": {
        "imagePublisher": "openlogic",
        "imageOffer": "CentOS",
        "clientAvailabilitySetSettings": {
            "name": "[concat(parameters('clientAvailabilitySetName'))]",
            "faultDomainCount": "3",
            "updateDomainCount": "5"
        },
        "baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
        "vnetID": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
        "subnetClientsID": "[concat(variables('vnetID'), '/subnets/', parameters('existingSubnetClientsName'))]",
        "scriptUrlLustreClient": "[concat(variables('baseUrl'),'lustre_client.sh')]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "linuxConfiguration_sshPublicKey": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[parameters('sshPublicKey')]"
                    }
                ]
            }
        },
        "linuxConfiguration_password": { },
        "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]"
    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(parameters('storageAccountPrefix'))]",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('clientAvailabilitySetSettings').name]",
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": "[variables('clientAvailabilitySetSettings').faultDomainCount]",
                "platformUpdateDomainCount": "[variables('clientAvailabilitySetSettings').updateDomainCount]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('vmNamePrefix'),'client0')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsNamePrefix'),'')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmNamePrefix'), 'client0')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmNamePrefix'), 'client0')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ip1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), 'client0'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetClientsID')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex(1))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "clientNicCopy",
                "count": "[sub(parameters('clientCount'),1)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ip1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetClientsID')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountPrefix'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('clientAvailabilitySetSettings').name)]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'client', copyIndex())]"
            ],
            "copy": {
                "name": "clientVmCopy",
                "count": "[parameters('clientCount')]"
            },
            "tags": {
                "LustreType": "client"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('clientAvailabilitySetSettings').name)]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('clientVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), 'client', copyIndex())]",
                    "adminUserName": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://', parameters('storageAccountPrefix'), '.blob.core.windows.net/vhds-client/', concat(parameters('vmNamePrefix'),'client',copyIndex()), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'), 'client', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex(), '/init')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'),'client',copyIndex()))]"
            ],
            "copy": {
                "name": "clientExtensionsCopy",
                "count": "[parameters('clientCount')]"
            },
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [
                        "[variables('scriptUrlLustreClient')]"
                    ],
                    "commandToExecute": "[concat('bash lustre_client.sh', ' -n CLIENTCENTOS', parameters('imageSku'), ' -i ', copyIndex(), ' -d 0', ' -m ', parameters('mgsIpAddress'), ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'client', copyIndex()))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
                }
            }
        }
    ],
    "outputs": {
        "client0DomainName": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'),'client0'))).dnsSettings.fqdn]",
            "metadata": {
                "description": "SSH to the client0 node using this public IP address and run command mount to see all mount points"
            }
        }
    }
}
