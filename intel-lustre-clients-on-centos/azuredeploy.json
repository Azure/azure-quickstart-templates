{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/intel-lustre-clients-on-centos",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    },
    "image": {
      "type": "string",
      "defaultValue": "OpenLogic:CentOS-HPC:7.1",
      "allowedValues": [
        "OpenLogic:CentOS-HPC:7.1",
        "OpenLogic:CentOS-HPC:6.5",
        "OpenLogic:CentOS:6.6",
        "OpenLogic:CentOS:7.0"
      ],
      "metadata": {
        "description": "OpenLogic CentOS version to use. CentOS-HPC includes RDMA drivers for compute-to-compute MPI InfiniBand on A8 and A9 VM sizes."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the virtual machines"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin password for the virtual machines"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Globally unique DNS name prefix name must be between 3 and 50 characters long and can contain only dashes, numbers, and lowercase letters. The domain name suffix (e.g. westus.cloudapp.zure.com) will be automatically updated based on the selected location."
      }
    },
    "clientAvailabilitySetName": {
      "type": "string",
      "defaultValue": "availset-lustre-clients",
      "metadata": {
        "description": "Lustre clients availability set name is important for grouping clients into deployments that can communicate with each other via RDMA"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "lustre",
      "metadata": {
        "description": "Prefix for the virtual machine names"
      }
    },
    "clientVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Size of the Lustre client VM"
      },
      "allowedValues": [
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1",
        "Standard_D1",
        "Standard_D1_v2",
        "Standard_DS1",
        "Standard_DS1_v2"
      ]
    },
    "clientCount": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 ],
      "metadata": {
        "description": "Number of Lustre clients"
      }
    },
    "filesystemName": {
      "type": "string",
      "defaultValue": "scratch",
      "metadata": {
        "description": "Name of the Lustre filesystem exposed by the Lustre MGS node"
      }
    },
    "mgsIpAddress": {
      "type": "string",
      "defaultValue": "10.1.0.4",
      "metadata": {
        "description": "IP address of the Lustre MGS node"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account type (e.g. Premium_LRS or Standard_LRS). Make sure to select Premium_LRS only when using DS-series or GS-series Virtual Machines."
      }
    },
    "existingVnetResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Existing Virtual Network Resource Group where Lustre servers are deployed"
      }
    },
    "existingVnetName": {
      "type": "string",
      "defaultValue": "vnet-lustre",
      "metadata": {
        "description": "Existing Virtual Network name (e.g. vnet-lustre)"
      }
    },
    "existingSubnetClientsName": {
      "type": "string",
      "defaultValue": "subnet-lustre-clients",
      "metadata": {
        "description": "Lustre clients will be deployed into this subnet within the existing Virtual Network"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
    "imageReference_OpenLogic:CentOS-HPC:7.1": {
      "publisher": "OpenLogic",
      "offer": "CentOS-HPC",
      "sku": "7.1",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS-HPC:6.5": {
      "publisher": "OpenLogic",
      "offer": "CentOS-HPC",
      "sku": "6.5",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS:7.0": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "7.0",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS:6.6": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "6.6",
      "version": "latest"
    },
    "imageReference": "[variables(concat('imageReference_',parameters('image')))]",
    "clientAvailabilitySetSettings": {
      "name": "[concat(parameters('clientAvailabilitySetName'))]",
      "faultDomainCount": "3",
      "updateDomainCount": "5"
    },
    "baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
    "vnetID": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
    "subnetClientsID": "[concat(variables('vnetID'), '/subnets/', parameters('existingSubnetClientsName'))]",
    "scriptUrlLustreClient": "[concat(variables('baseUrl'),'lustre_client.sh')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('clientAvailabilitySetSettings').name]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
        },
      "properties": {
        "platformFaultDomainCount": "[variables('clientAvailabilitySetSettings').faultDomainCount]",
        "platformUpdateDomainCount": "[variables('clientAvailabilitySetSettings').updateDomainCount]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmNamePrefix'),'client0')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNamePrefix'),'')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), 'client0')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmNamePrefix'), 'client0')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), 'client0'))]"
              },
              "subnet": {
                "id": "[variables('subnetClientsID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "clientNicCopy",
        "count": "[sub(parameters('clientCount'),1)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetClientsID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('clientAvailabilitySetSettings').name)]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), 'client', copyIndex())]"
      ],
      "copy": {
        "name": "clientVmCopy",
        "count": "[parameters('clientCount')]"
      },
      "tags": {
        "LustreType": "client"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('clientAvailabilitySetSettings').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('clientVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), 'client', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'), 'client', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex(), '/init')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'),'client',copyIndex()))]"
      ],
      "copy": {
        "name": "clientExtensionsCopy",
        "count": "[parameters('clientCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
		"type": "CustomScript",
		"typeHandlerVersion": "2.0",
		"autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('scriptUrlLustreClient')]"
          ],
          "commandToExecute": "[concat('bash lustre_client.sh', ' -n ', parameters('image'), ' -i ', copyIndex(), ' -d 0', ' -m ', parameters('mgsIpAddress'), ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'client', copyIndex()))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
        }
      }
    }
  ],
  "outputs": {
    "client0DomainName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'),'client0'))).dnsSettings.fqdn]"
    }
  }
}
