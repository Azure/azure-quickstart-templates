[ClassVersion("1.0.0.0"), FriendlyName("xSQLAOGroupEnsure")]
class MSFT_xSQLAOGroupEnsure : OMI_BaseResource
{
    [Key, Description("Determines whether the availability group should be added or removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Key, Description("Name for availability group.")] String AvailabilityGroupName;
    [Write, Description("Listener name for availability group.")] String AvailabilityGroupNameListener;
    [Write, Description("List of IP addresses associated with listener.")] String AvailabilityGroupNameIP[];
    [Write, Description("Network subnetmask for listener.")] String AvailabilityGroupSubMask[];
    [Write, Description("Port availability group should listen on.")] Uint32 AvailabilityGroupPort;
    [Write, Description("Mode secondaries should operate under (None, ReadOnly, ReadIntent)."), ValueMap{"None","ReadOnly","ReadIntent"}, Values{"None","ReadOnly","ReadIntent"}] String ReadableSecondary;
    [Write, Description("Where backups should be backed up from (Primary, Secondary)."), ValueMap{"Primary","Secondary"}, Values{"Primary","Secondary"}] String AutoBackupPreference;
    [Write, Description("The percentage weight for backup prority (default 50).")] Uint32 BackupPriority;
    [Write, Description("he TCP port for the SQL AG Endpoint (default 5022).")] Uint32 EndPointPort;
    [Write, Description("The SQL Server for the database.")] String SQLServer;
    [Write, Description("The SQL instance for the database.")] String SQLInstanceName;
    [Required, EmbeddedInstance("MSFT_Credential"), Description("Credential to be used to Grant Permissions on SQL Server, set this to $null to use Windows Authentication.")] String SetupCredential;
};
