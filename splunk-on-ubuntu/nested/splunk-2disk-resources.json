{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "storageSettings": {
      "type": "object"
    },
    "machineSettings": {
      "type": "object"
    },
    "osSettings": {
      "type": "object"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "splunkAdminPassword": {
      "type": "securestring"
    },
    "clusterSecret": {
      "type": "securestring",
      "defaultValue": "NA"
    },
    "namespace": {
      "type": "string"
    },
    "subnet": {
      "type": "string"
    },
    "splunkServerRole": {
      "type": "string",
      "defaultValue": "splunk_server"
    },
    "securityGroupName": {
      "type": "string"
    },
    "providerGuid": {
      "type": "string"
    }
  },
  "variables": {
    "singleQuote": "'",
    "vmName": "[concat(parameters('namespace'), '-vm')]",
    "nicName": "[concat(parameters('namespace'), '-nic')]",
    "publicIpName": "[parameters('machineSettings').publicIPName]",
    "clusterMasterIp": "[parameters('machineSettings').clusterMasterIp]",
    "securityGroupRef": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]",
    "storageReferenceName": "[concat('Microsoft.Storage/storageAccounts/', parameters('storageSettings').name, parameters('storageSettings').map[0])]",
    "storageApiVersion": "2016-01-01"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "tags": {
        "provider": "[parameters('providerGuid')]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('securityGroupRef')]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('machineSettings').staticIp]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
              },
              "subnet": {
                "id": "[parameters('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "tags": {
        "provider": "[parameters('providerGuid')]"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('osSettings').imageReference.sku]",
        "publisher": "[parameters('osSettings').imageReference.publisher]",
        "product": "[parameters('osSettings').imageReference.offer]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('machineSettings').availabilitySet)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('machineSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "[concat(variables('vmName'),'_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmName'),'_DataDisk1')]", 
              "diskSizeGB": "[parameters('machineSettings').diskSize]",
              "lun": 0,             
              "caching": "ReadOnly",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('vmName'),'_DataDisk2')]", 
              "diskSizeGB": "[parameters('machineSettings').diskSize]",
              "lun": 1,             
              "caching": "ReadOnly",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/node-setup')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash node-setup.sh', ' -r ', parameters('splunkServerRole'), ' -c ', variables('clusterMasterIp'), ' -p ', variables('singleQuote'), parameters('splunkAdminPassword'), variables('singleQuote'), ' -s ', variables('singleQuote'), parameters('clusterSecret'), variables('singleQuote'))]"
        }
      }
    }
  ],
  "outputs": {
    "storageReferenceName": {
      "type": "string",
      "value": "[variables('storageReferenceName')]"
    },
    "storageApiVersion": {
      "type": "string",
      "value": "[variables('storageApiVersion')]"
    },
    "blobEndpoint": {
      "type": "string",
      "value": "[reference(variables('storageReferenceName'), variables('storageApiVersion')).primaryEndpoints.blob]"
    }
  }
}
