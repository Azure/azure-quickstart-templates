{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "existingVNETName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET to inject Cloud Shell into."
            }
        },
        "relayNamespaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Relay Namespace."
            }
        },
        "azureContainerInstanceOID": {
            "type": "string",
            "metadata": {
                "description": "Object Id of Azure Container Instance Service Principal. We have to grant this permission to create hybrid connections in the Azure Relay you specify. To get it - Get-AzADServicePrincipal -DisplayNameBeginsWith 'Azure Container Instance'"
            }
        },
        "containerSubnetName": {
            "type": "string",
            "defaultValue": "cloudshellsubnet",
            "metadata": {
                "description": "Name of the subnet to use for cloud shell containers."
            }
        },
        "containerSubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Address space of the subnet to add for cloud shell. e.g. 10.0.1.0/26"
            }
        },
        "relaySubnetName": {
            "type": "string",
            "defaultValue": "relaysubnet",
            "metadata": {
                "description": "Name of the subnet to use for private link of relay namespace."
            }
        },        
        "relaySubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Address space of the subnet to add for relay. e.g. 10.0.2.0/26"
            }
        },
        "storageSubnetName": {
            "type": "string",
            "defaultValue": "storagesubnet",
            "metadata": {
                "description": "Name of the subnet to use for storage account."
            }
        },
        "storageSubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Address space of the subnet to add for storage. e.g. 10.0.3.0/26"
            }
        },
        "privateEndpointName": {
            "defaultValue": "cloudshellRelayEndpoint",
            "type": "string",
            "metadata": {
                "description": "Name of Private Endpoint for Azure Relay."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "networkProfileName": "[concat('aci-networkProfile-', parameters('location'))]",
        "networkProfileRef": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]",
        "containerSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVNETName'), parameters('containerSubnetName'))]",
        "relayNamespaceRef": "[resourceId('Microsoft.Relay/namespaces/', parameters('relayNamespaceName'))]",
        "relaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVNETName'), parameters('relaySubnetName'))]",
        "contributorRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "networkRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]"
    },
    "resources": [
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('existingVNETName'), '/', parameters('containerSubnetName'))]",
            "location": "[parameters('location')]",
            "properties": {
                "addressPrefix": "[parameters('containerSubnetAddressPrefix')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "[parameters('location')]"
                        ]
                    }
                ],
                "delegations": [
                    {
                        "name": "CloudShellDelegation",
                        "properties": {
                            "serviceName": "Microsoft.ContainerInstance/containerGroups"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkProfiles",
            "name": "[variables('networkProfileName')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('containerSubnetRef')]"
            ],
            "properties": {
                "containerNetworkInterfaceConfigurations": [
                    {
                        "name": "[concat('eth-', parameters('containerSubnetName'))]",
                        "properties": {
                            "ipConfigurations": [
                                {
                                    "name": "[concat('ipconfig-', parameters('containerSubnetName'))]",
                                    "properties": {
                                        "subnet": {
                                            "id": "[variables('containerSubnetRef')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkProfiles/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('networkProfileName'), '/Microsoft.Authorization/', guid(variables('networkRoleDefinitionId'), parameters('azureContainerInstanceOID'), variables('networkProfileName')))]",
            "dependsOn": [
                "[variables('networkProfileRef')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('networkRoleDefinitionId')]",
                "principalId": "[parameters('azureContainerInstanceOID')]",
                "scope": "[variables('networkProfileRef')]"
            }
        },
        {
            "type": "Microsoft.Relay/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('relayNamespaceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Relay/namespaces/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(parameters('relayNamespaceName'), '/Microsoft.Authorization/', guid(variables('contributorRoleDefinitionId'), parameters('azureContainerInstanceOID'), parameters('relayNamespaceName')))]",
            "dependsOn": [
                "[variables('relayNamespaceRef')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                "principalId": "[parameters('azureContainerInstanceOID')]",
                "scope": "[variables('relayNamespaceRef')]"
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('existingVNETName'), '/', parameters('relaySubnetName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('containerSubnetRef')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('relaySubnetAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }            
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-04-01",
            "name": "[parameters('privateEndpointName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('relaySubnetRef')]",
                "[variables('relayNamespaceRef')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[variables('relayNamespaceRef')]",
                            "groupIds": [
                                "namespace"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[variables('relaySubnetRef')]"
                }
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('existingVNETName'), '/', parameters('storageSubnetName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('relaySubnetRef')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('storageSubnetAddressPrefix')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "[parameters('location')]"
                        ]
                    }
                ]
            }
        }
    ],
    "outputs": {
        "vnetName": {
            "type": "string",
            "value": "[parameters('existingVNETName')]"
        },
        "containerSubnetName": {
            "type": "string",
            "value": "[parameters('containerSubnetName')]"
        },
        "storageSubnetName": {
            "type": "string",
            "value": "[parameters('storageSubnetName')]"
        }
    }
}