{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionId": {
            "type": "string",
            "metadata": {
                "Description": "This is your subscriptionId"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "Description": "This is the name of the Availability Set"
            }

        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "Description": "This is the name of a storage account"
            }

        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "metadata": {
                "Description": "This is the name of the storage account type (local or geo)"
            }

        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "Description": "This is the name of the Virtual Network"
            }

        },
        "networkInterfaceName": {
            "type": "string",
            "metadata": {
                "Description": "This is the prefix name of the Network interfaces"
            }

        },
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "Description": "This is the name of the load balancer"
            }

        },

        "vmStorageAccountContainerName": {
            "type": "string",
            "defaultValue": "vhds",
            "metadata": {
                "Description": "This is the storage account container name"
            }

        },
        "vmName": {
            "type": "string",
            "metadata": {
                "Description": "This is the prefix name for the virtual machines"
            }

        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A0",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "Description": "This is the allowed list of VM sizes"
            }

        },
        "vmSourceImageName": {
            "type": "string",
            "defaultValue": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-Datacenter-201411.01-en.us-127GB.vhd",
            "metadata": {
                "Description": "This is the virtual machine image name"
            }

        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "Description": "This is the vms administrator name"
            }

        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "Description": "This is the vms password for the administartor account"
            }

        }
    },
    "variables": {
        "sourceImageName": "[concat('/',parameters('subscriptionId'),'/services/images/',parameters('vmSourceImageName'))]",
        "vm1Name": "[concat(parameters('vmName'),'1')]",
        "vm2Name": "[concat(parameters('vmName'),'2')]",
        "vm1NicName": "[concat(parameters('networkInterfaceName'),'1')]",
        "vm2NicName": "[concat(parameters('networkInterfaceName'),'2')]"
    },
    "resources": [{
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        }, {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "location": "[resourceGroup().location]"
        }, {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [{
                    "name": "backendSubnet",
                    "properties": {
                        "addressPrefix": "10.0.2.0/24"
                    }
                }]
            }
        }, {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1NicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "IpConfigurations": [{
                    "Properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "Subnet": {
                            "Id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName')), '/subnets/backendSubnet')]"
                        }
                    },
                    "Name": "ipconfig",
                    "loadBalancerBackendAddressPools": [{
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName')),'/backendAddressPools/LBBE')]"
                    }]
                }]
            }
        }, {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2NicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "IpConfigurations": [{
                    "Properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "Subnet": {
                            "Id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName')), '/subnets/backendSubnet')]"
                        }
                    },
                    "Name": "ipconfig",
                    "loadBalancerBackendAddressPools": [{
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName')),'/backendAddressPools/LBBE')]"
                    }]
                }]
            }
        },

        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[parameters('loadBalancerName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "FrontendIpConfigurations": [{

                    "Properties": {
                        "subnet": {
                            "Id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName')), '/subnets/backendSubnet')]"
                        },
                        "privateIPAddress": "10.0.2.6",
                        "privateIPAllocationMethod": "Static"
                    },
                    "Name": "ilbfrontend"
                }],
                "BackendAddressPools": [{
                    "Name": "lbbackendpool"
                }],
                "LoadBalancingRules": [{
                    "Properties": {
                        "FrontendIPConfiguration": {
                            "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/ilbfrontend')]"
                        },
                        "BackendAddressPool": {
                            "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/lbbackendpool')]"
                        },
                        "Probe": {
                            "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
                        },
                        "Protocol": "Tcp",
                        "FrontendPort": 80,
                        "BackendPort": 80,
                        "IdleTimeoutInMinutes": 15

                    },
                    "Name": "lbrule"
                }],
                "Probes": [{
                    "Properties": {
                        "Protocol": "Tcp",
                        "Port": 80,
                        "IntervalInSeconds": 15,
                        "NumberOfProbes": 2
                    },
                    "Name": "lbprobe"
                }],
            }
        }, {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('vm1NicName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[variables('vm1Name')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsProfile": {
                        "provisionVMAgent": "true"
                    }
                },
                "storageProfile": {
                    "sourceImage": {
                        "id": "[variables('sourceImageName')]"
                    },
                    "destinationVhdsContainer": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/')]"
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
                    }]
                }
            }
        }, {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm2Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('vm2NicName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[variables('vm2Name')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsProfile": {
                        "provisionVMAgent": "true"
                    }
                },
                "storageProfile": {
                    "sourceImage": {
                        "id": "[variables('sourceImageName')]"
                    },
                    "destinationVhdsContainer": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/')]"
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
                    }]
                }
            }
        }
    ]
}