{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters" : {
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "This is the name of the your storage account"
            }
        },
        "dnsNameForPublicIP" : {
            "type" : "string",
            "metadata": {
                "description": "This is the unique DNS name of the for the public IP for your VM"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "This is the the username you wish to assign to your VMs admin account"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "This is the the password you wish to assign to your VMs admin account"
            }
        },
        "customData" : {
            "type" : "string",
            "metadata": {
                "description": "This is custom data (base-64 encoded) that you want to associate with your VM"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "This is the size of your VM"
            }
        }
    },
    "variables": {
        "addressPrefix":"10.0.0.0/16",
        "imagePublisher": "RightScaleLinux",
        "imageVersion": "latest",
        "imageSKU": "12.04",
        "imageOffer": "RightImage-Ubuntu",
        "location": "West US",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix" : "10.0.0.0/24",
        "vmStorageAccountContainerName": "vhds",
        "publicIPAddressType" : "Dynamic",
        "publicIPAddressName": "myPublicIP",
        "vmName": "myVM",
        "virtualNetworkName": "myVNET",
        "nicName": "myNIC",
        "storageAccountType": "Standard_LRS",
        "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnet1Ref" : "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]"
    },
    "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[variables('location')]",
        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
                "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
            }
        }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties" : {
                "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[variables('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
            "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                    },
                    "subnet": {
                        "id": "[variables('subnet1Ref')]"
                    }
                }
            }
            ]
        }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[variables('location')]",
        "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
                "computername": "[variables('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]",
                "customData" : "[parameters('customData')]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": "false"
                }
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku" : "[variables('imageSKU')]",
                    "version":"[variables('imageVersion')]"
                },
                "osDisk" : {
                    "name": "osdisk1",
                    "vhd": {
                       "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/','osdisk1.vhd')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces" : [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                }
                ]
            }
        }
    }
    ]
}
