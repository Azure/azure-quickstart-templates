{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {


        "location": {
            "type": "string",
            "allowedValues": [
              "West US",
              "West Europe",
              "East US",
              "East Asia",
              "Southeast Asia"],
                  "metadata":
                  {
                  "description": "Region for all resources to be created"
                  }
                },

        "newStorageAccountName":
        {
            "type": "string",
            "metadata":
                  {
                  "description": "Storage account name, this will be used for all resources, specifically the VM that you are creating"
                  }
        },

        "storageAccountType":
        {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Premium_LRS"],

                "metadata":
                {
    				    "description": "Storage account Type. Consider if you need Standard_LRS/GRS or Premium_LRS"
                }
        },

        "publicIPAddressName":
        {
            "type": "string",

                "metadata":
                {
                  "description": "Name of Public IP Address Resource that you use to get external access to the VM"
                }
        },


        "publicIPAddressType": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic"],

                "metadata":
                {
				         "description": "Public IP Address Allocation type, set to Dynamic"
                }
        },


        "vmStorageAccountContainerName": {
            "type": "string",
            "defaultValue": "vhds",

                "metadata":
                {
    				     "description": "Container Name for VM storage"
                }
        },


        "vmName": {
            "type": "string",

                "metadata":
                {
    				    "description": "Virtual Machine Name"
                }
        },


        "loadBalancerName": {
            "type": "string",
            "defaultValue": "myLoadBalancer",

                "metadata":
                {
				        "description": "Load Balancer Name"
                }
        },


        "dnsNameforLBIP": {
            "type": "string",
            "defaultValue": "uniqueDNSName",

                "metadata":
                {
    				    "description": "DNS name for referencing VM externally"
                }
        },


        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_D1",
        				"Standard_DS1",
        				"Standard_D2",
        				"Standard_DS2",
        				"Standard_D3",
        				"Standard_DS3",
        				"Standard_D4",
        				"Standard_DS4",
        				"Standard_D11",
        				"Standard_DS11",
        				"Standard_D12",
        				"Standard_DS12",
        				"Standard_D13",
        				"Standard_DS13",
        				"Standard_D14",
        				"Standard_DS14"
            ],
            "metadata":
                  {
    				      "description": "VM role size"
                  }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
				            "description": "Admin user name"

        }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
				            "description": "Admin Password, always ensure it is set to a 'securestring type'"

        }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
				            "description": "Virtual Network Name"

        }
        },
        "nicName": {
            "type": "string",
            "metadata": {
				            "description": "NIC name"

        }
        },
        "rdpNatRuleFrontEndPort": {
            "type": "int",
            "defaultValue": 53383,
            "metadata": {
                "description": "RDP Nat frontend port range RDP"
            }
        },
        "rdpNatRuleBackEndPort": {
            "type": "int",
            "defaultValue": 3389,
            "metadata": {
                "description": "RDP Private port RDP"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
				            "description": "Availability Set Name"
        }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "Network Security Group 1",
            "metadata": {
                    "description": "Network Security Group Name"
        }
        },

        "windowsOSVersion": {
           "type": "string",
           "defaultValue": "2012-R2-Datacenter",
           "allowedValues": [
               "2008-R2-SP1",
               "2012-Datacenter",
               "2012-R2-Datacenter",
               "Windows-Server-Technical-Preview"
           ],
           "metadata": {
               "description": "The Windows version for the VM, OS's 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter, Windows-Server-Technical-Preview."
           }
       },

       "sizeOfDiskInGB" : {
           "type" : "string",
           "defaultValue": "20",
           "metadata" : {
               "description" : "Data disk in GB, empty"
                      }
         }


        },

    "variables": {
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "addressPrefix":"10.0.0.0/16",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",

        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
        "nicId": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]",

        "loadBalancerRef": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
        "lbRuleName": "lbRuleCbAdmin",
        "lbRuleRef": "[concat(variables('loadBalancerRef'),'/loadBalancingRules/',variables('lbRuleName'))]",
        "lbFEConfig": "PLBcbaFrontConfg",
        "lbFEConfigRef": "[concat(variables('loadBalancerRef'),'/frontendIPConfigurations/',variables('lbFEConfig'))]",
        "lbBEConfig": "[concat('LBBEcbaFrontConfg')]",
        "lbBEConfigRef": "[concat(variables('loadBalancerRef'),'/backendAddressPools/' ,variables('lbBEConfig'))]",
        "lbcbaProbe": "cbaLBProbe",
        "lbcbaProbeRef": "[concat(variables('loadBalancerRef'),'/probes/',variables('lbcbaProbe'))]",

        "faultDomainNumber":"3",
		    "updateDomainNumber":"5",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "OsDiskName": "[concat(parameters('vmName'))]",
        "apiVersion": "2015-05-01-preview"



    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiversion": "[variables('apiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"

            }
        },
        {
            "apiversion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {

                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameforLBIP')]"
                }
            }
        },
        {
          "apiversion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[parameters('loadBalancerName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('publicIPAddressName')]"
            ],
            "properties": {

                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFEConfig')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressID')]"
                            }
                        }

                    }
                ],
                "backendAddressPools": [
                    { "name": "[variables('lbBEConfig')]" }
                ],


                "inboundNatRules": [
                    {
                        "name": "rdpNatRule",
                        "properties": {
                            "frontendIPConfiguration": { "id": "[variables('lbFEConfigRef')]" },
                            "protocol": "tcp",
                            "frontendPort": "[parameters('rdpNatRuleFrontEndPort')]",
                            "backendPort": "[parameters('rdpNatRuleBackEndPort')]",
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "apiversion": "[variables('apiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
            "PlatformFaultDomainCount":"[variables('faultDomainNumber')]",
            "PlatformUpdateDomainCount":"[variables('updateDomainNumber')]"
            }
        },


        {
            "apiversion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
              ],

            "tags": {
                "displayName": "VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]",
                            "networkSecurityGroup" : {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                                                    }
                        }
                    }

                ]
            }
        },
        {
          "apiversion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('nicName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "NetworkInterface"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[variables('loadBalancerRef')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerInboundNatRules": [
                                { "id": "[concat(variables('loadBalancerRef'),'/inboundNatRules/rdpNatRule')]" }
                            ]


                        }
                    }
                ]
            }
        },
        {
          "apiversion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "rdp_rule",
                        "properties": {
                            "description": "Rule One Baby",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }

        },

            {
              "apiversion": "[variables('apiVersion')]",
                "type": "Microsoft.Compute/virtualMachines",
                "name": "[parameters('vmName')]",
                "location": "[parameters('location')]",
                "tags": {
                    "displayName": "VirtualMachine"
                        },

                "dependsOn": [
                    "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                    "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]",
                    "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"],

                "properties":
                          {
                    "hardwareProfile":
                            {
                              "vmSize": "[parameters('vmSize')]"
                            },

                    "availabilitySet":
                            {
					                "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
				                    },

                    "osProfile":
                            {
                        "computername": "[parameters('vmName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                                            },

                      "storageProfile": {

                                "imageReference":
                                            {
                                    "publisher": "[variables('imagePublisher')]",
                                    "offer": "[variables('imageOffer')]",
                                    "sku" : "[parameters('windowsOSVersion')]",
                                    "version":"latest"
                                            },

                               "osDisk" :
                                            {
                                            "name": "[concat(parameters('vmName'),'-osdisk1')]",
                                              "vhd": {
                                                      "uri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/',parameters('vmName'),'-osdisk.vhd')]"
                                                      },
                                                      "caching": "ReadWrite",
                                                      "createOption": "FromImage"
                                              },

                                "dataDisks" : [
                                            {
                                                "name" : "[concat(parameters('vmName'),'-datadisk1')]",
                                                "diskSizeGB" : "[parameters('sizeOfDiskInGB')]",
                                                "lun" : 0,
                                                "vhd":{
                                                    "uri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/',parameters('vmName'),'-datadisk1.vhd')]"
                                                      },
                                                "caching": "ReadOnly",
                                                "createOption":"Empty"
                                            },
                                            {
                                                "name" : "[concat(parameters('vmName'),'-logdisk1')]",
                                                "diskSizeGB" : "[parameters('sizeOfDiskInGB')]",
                                                "lun" : 1,
                                                "vhd":{
                                                  "uri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/',parameters('vmName'),'-logdisk1.vhd')]"
                                                },
                                                "caching": "None",
                                                "createOption":"Empty"
                                            }
                                            ]
                                },

                    "networkProfile":
                              {
                        "networkInterfaces":
                                    [
                                  {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
                                  }
                                    ]
                              }
              }
            }



            ]
        }
