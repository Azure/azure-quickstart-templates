{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This is the unique DNS name of the for the public IP for your VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "gethAdmin",
      "metadata": {
        "description": "This is the the username you wish to assign to your VMs admin account"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "This is the the password you wish to assign to your VMs admin account"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5"
      ],
      "metadata": {
        "description": "Size of VM     Ref: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes"
      }
    }
  },
  "variables": {
    "ethereumClassic-nicName": "VMNic",
    "ethereumClassic-addressPrefix": "10.0.0.0/16",
    "ethereumClassic-imagePublisher": "Canonical",
    "ethereumClassic-imageVersion": "latest",
    "ethereumClassic-imageSKU": "16.04-LTS",
    "ethereumClassic-imageOffer": "UbuntuServer",
    "ethereumClassic-subnetName": "Subnet-1",
    "ethereumClassic-subnetPrefix": "10.0.0.0/24",
    "ethereumClassic-storageAccountType": "Standard_LRS",
    "ethereumClassic-publicIPAddressName": "publicIP",
    "ethereumClassic-publicIPAddressType": "Dynamic",
    "ethereumClassic-vmStorageAccountContainerName": "vhds",
    "ethereumClassic-vmName": "[parameters('vmDnsPrefix')]",
    "ethereumClassic-virtualNetworkName": "WPVNET",
    "ethereumClassic-apiVersion": "2015-06-15",
    "ethereumClassic-vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('ethereumClassic-virtualNetworkName'))]",
    "ethereumClassic-subnetRef": "[concat(variables('ethereumClassic-vnetID'),'/subnets/',variables('ethereumClassic-subnetName'))]",
    "ethereumClassic-storageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('ethereumClassicStorage-accountName')]",
      "apiVersion": "[variables('ethereumClassic-apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('ethereumClassic-storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('ethereumClassic-apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('ethereumClassic-publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('ethereumClassic-publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmDnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('ethereumClassic-apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('ethereumClassic-virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('ethereumClassic-addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('ethereumClassic-subnetName')]",
            "properties": {
              "addressPrefix": "[variables('ethereumClassic-subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('ethereumClassic-apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('ethereumClassic-nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('ethereumClassic-publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('ethereumClassic-virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ethereumClassic-publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('ethereumClassic-subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('ethereumClassic-apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('ethereumClassic-vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('ethereumClassic-storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('ethereumClassic-nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('ethereumClassic-vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ethereumClassic-imagePublisher')]",
            "offer": "[variables('ethereumClassic-imageOffer')]",
            "sku": "[variables('ethereumClassic-imageSKU')]",
            "version": "[variables('ethereumClassic-imageVersion')]"
          },
          "osDisk": {
            "name": "osDisk1",
            "vhd": {
              "uri": "[concat('http://',variables('ethereumClassic-storageAccountName'),'.blob.core.windows.net/',variables('ethereumClassic-vmStorageAccountContainerName'),'/','osDisk1.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('ethereumClassic-nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('ethereumClassic-vmName'),'/newuserscript')]",
      "apiVersion": "[variables('ethereumClassic-apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('ethereumClassic-vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/ethereumclassic-go-ubuntu/configure-etc-geth.sh"
          ],
          "commandToExecute": "[concat('sh configure-etc-geth.sh ', parameters('adminUsername'))]"
        }
      }
    }
  ]
}
