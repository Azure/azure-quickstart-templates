name: Build Bicep
# This action can be run on-demand against a branch.
# TODO asdf It attempts to build the main.bicep update the baseline files, and commits and pushes changes if there are any.

on:
  workflow_dispatch:

jobs:
  main:
    name: Build Bicep
    runs-on: ubuntu-latest

    env:
      # don't print dotnet logo
      DOTNET_NOLOGO: true

      # disable telemetry (reduces dotnet tool output in logs)
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.8.0
      
      - name: Install Bicep
        # See https://github.com/Azure/bicep/blob/main/docs/installing.md#windows-installer
        run: |
          # Create the install folder
          INSTALLPATH="$RUNNER_TEMP/bicep"
          mkdir -pv $INSTALLPATH
          BICEPPATH=$INSTALLPATH/bicep
          echo $BICEPPATH

          # Fetch the latest Bicep CLI binary
          pwd
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-osx-x64
          # Mark it as executable
          chmod +x ./bicep
          # Add Gatekeeper exception (requires admin)
          sudo spctl --add ./bicep
          # Add bicep to your PATH (requires admin)
          #sudo mv ./bicep /usr/local/bin/bicep
          # Verify you can now access the 'bicep' command
          $BICEPPATH --help
          # Done!
          #           (New-Object Net.WebClient).DownloadFile($bicepUri, $bicepPath)
          #           if (!(Test-Path $bicepPath)) {
          #               Write-Error "Couldn't find downloaded file $bicepPath"
          #           }

          # Write-Host "Using bicep at: $bicepPath"
          # Write-Host "##vso[task.setvariable variable=bicep.path]$bicepPath"

          # # Display and save bicep version
          # & $bicepPath --version | Tee-Object -variable fullVersionString
          # $fullVersionString | select-string -Pattern "(?<version>[0-9]+\.[-0-9a-z.]+)" | ForEach-Object { $_.matches.groups[1].value } | Tee-Object -variable bicepVersion

          # Write-Host "Using bicep version: $bicepVersion"
          # Write-Host "##vso[task.setvariable variable=bicep.version]$bicepVersion"

          # - name: Test
          #   continue-on-error: true
          #   run: dotnet test --filter "TestCategory=Baseline" -- 'TestRunParameters.Parameter(name="SetBaseLine", value="true")'
          
          # - name: Commit baselines
          #   run: |
          #     git config --global user.email "bicep@noreply.github.com"
          #     git config --global user.name "Bicep Automation"

          #     git add .

          #     if ! git diff-index --quiet HEAD --; then
          #       git commit -m "Update test baselines"
          #       git push
          #     fi