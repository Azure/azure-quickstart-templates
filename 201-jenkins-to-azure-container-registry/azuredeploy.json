{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "jenkinsDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Jenkins Virtual Machine."
      }
    },
    "pushToACRPipeline": {
      "type": "string",
      "allowedValues": [
        "Include",
        "Exclude"
      ],
      "defaultValue": "Include",
      "metadata": {
        "description": "If enabled the provisioned Jenkins instance will include a pipeline that builds and deploys a Docker image to an Azure Container Registry. The fields below are required only when Include is selected."
      }
    },
    "servicePrincipalClientId": {
      "type": "string",
      "metadata": {
        "description": "Required when including the 'Push to ACR Pipeline'. Service Principal Client ID (also called App ID) used by Jenkins to push the docker image to Azure Container Registry."
      },
      "defaultValue": ""
    },
    "servicePrincipalClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Required when including the 'Push to ACR Pipeline'. Service Principal secret used by Jenkins to push the docker image to Azure Container Registry."
      },
      "defaultValue": ""
    },
    "gitRepository": {
      "type": "string",
      "metadata": {
        "description": "Required when including the 'Push to ACR Pipeline'. URL to a public git repository that includes a Dockerfile."
      },
      "defaultValue": "https://github.com/lwander/spin-kub-demo.git"
    }
  },
  "variables": {
    "resourcePrefix": "jenkins",
    "storageAccountName": "[concat(variables('resourcePrefix'), uniquestring(resourceGroup().id))]",
    "acrStorageAccountName": "[concat('registry', uniqueString(resourceGroup().id))]",
    "acrName": "[uniqueString(resourceGroup().id)]",
    "OSDiskName": "[concat(variables('resourcePrefix'), 'OSDisk')]",
    "nicName": "[concat(variables('resourcePrefix'), 'VMNic')]",
    "subnetName": "[concat(variables('resourcePrefix'), 'Subnet')]",
    "publicIPAddressName": "[concat(variables('resourcePrefix'), 'PublicIP')]",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat(variables('resourcePrefix'), 'VM')]",
    "virtualNetworkName": "[concat(variables('resourcePrefix'), 'VNET')]",
    "vmExtensionName": "initializeJenkins",
    "_artifactsLocation": "https://raw.githubusercontent.com/Azure/azure-devops-utils/master/jenkins/",
    "_extensionScript": "install-jenkins-and-docker-build-pipeline.sh",
    "_artifactsLocationSasToken": ""
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('acrStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "name": "[variables('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-27-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('acrStorageAccountName'))]"
      ],
      "properties": {
        "adminUserEnabled": false,
        "storageAccount": {
          "name": "[variables('acrStorageAccountName')]",
          "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('acrStorageAccountName')), '2016-01-01').keys[0].value]"
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('jenkinsDnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),'/subnets/',variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "14.04.5-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('_artifactsLocation'), '/', variables('_extensionScript'), variables('_artifactsLocationSasToken'))]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('./' , variables('_extensionScript'),' \"', parameters('adminUsername') , '\" \"', parameters('gitRepository') , '\" \"https://',reference(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))).loginServer, '\" \"', parameters('servicePrincipalClientId'), '\" \"', parameters('servicePrincipalClientSecret'), '\" $(expr \"',parameters('pushToACRPipeline'),'\" == \"Include\") \"', variables('_artifactsLocationSasToken'), '\"' )]"
        }
      }
    }
  ],
  "outputs": {
    "Jenkins Dashboard": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn,':8080')]"
    },
    "SSH": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "Azure Container Registry URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))).loginServer]"
    }
  }
}