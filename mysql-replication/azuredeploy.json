{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "Connect to your cluster using dnsName.location.cloudapp.azure.com"
      }
    },
    "vmUserName": {
      "type": "string",
      "metadata": {
        "description": "user name to ssh to the VMs"
      }
    },
    "mysqlRootPassword": {
      "type": "securestring",
      "metadata": {
        "description": "mysql root user password single quote not allowed"
      }
    },
    "mysqlReplicationPassword": {
      "type": "securestring",
      "metadata": {
        "description": "mysql replication user password single quote not allowed"
      }
    },
    "mysqlProbePassword": {
      "type": "securestring",
      "metadata": {
        "description": "mysql probe password single quote not allowed"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "size for the VMs"
      }
    },
    "diskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account type for the cluster"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "mysqlvnet",
      "metadata": {
        "description": "Virtual network name for the cluster"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If using existing VNet, specifies the resource group for the existing VNet"
      }
    },
    "dbSubnetName": {
      "type": "string",
      "defaultValue": "dbsubnet",
      "metadata": {
        "description": "subnet name for the MySQL nodes"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "IP address in CIDR for virtual network"
      }
    },
    "dbSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "IP address in CIDR for db subnetq"
      }
    },
    "dbSubnetStartAddress": {
      "type": "string",
      "defaultValue": "10.0.1.4",
      "metadata": {
        "description": "Start IP address in the subnet for the VMs"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "OpenLogic",
      "allowedValues": [
        "OpenLogic",
        "Canonical"
      ],
      "metadata": {
        "description": "publisher for the VM OS image"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "CentOS",
      "allowedValues": [
        "CentOS",
        "UbuntuServer"
      ],
      "metadata": {
        "description": "VM OS name"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "6.6",
      "allowedValues": [
        "6.5",
        "6.6",
        "14.04.5-LTS"
      ],
      "metadata": {
        "description": "VM OS version"
      }
    },
    "mysqlFrontEndPort0": {
      "type": "int",
      "defaultValue": 3306,
      "metadata": {
        "description": "MySQL public port master"
      }
    },
    "mysqlFrontEndPort1": {
      "type": "int",
      "defaultValue": 3307,
      "metadata": {
        "description": "MySQL public port slave"
      }
    },
    "sshNatRuleFrontEndPort0": {
      "type": "int",
      "defaultValue": 64001,
      "metadata": {
        "description": "public ssh port for VM1"
      }
    },
    "sshNatRuleFrontEndPort1": {
      "type": "int",
      "defaultValue": 64002,
      "metadata": {
        "description": "public ssh port for VM2"
      }
    },
    "mysqlProbePort0": {
      "type": "int",
      "defaultValue": 9200,
      "metadata": {
        "description": "MySQL public port master"
      }
    },
    "mysqlProbePort1": {
      "type": "int",
      "defaultValue": 9201,
      "metadata": {
        "description": "MySQL public port slave"
      }
    },
    "artifactsPath": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/mysql-replication",
      "metadata": {
        "description": "template and script file location",
        "artifactsBaseUrl": "Base URL of the Publisher Template gallery package"
      }
    },
    "customScriptCommandToExecute": {
      "type": "string",
      "defaultValue": "bash azuremysql.sh",
      "metadata": {
        "description": "bash script command line"
      }
    },
    "publicIPName": {
      "type": "string",
      "defaultValue": "mysqlIP01",
      "metadata": {
        "description": "public IP name for MySQL loadbalancer"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    }
  },
  "variables": {
    "nodeCount": 2,
    "lbPublicIPName": "[parameters('publicIPName')]",
    "lbPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName'))]",
    "lbName": "[concat(parameters('dnsName'), '-lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "ilbBackendAddressPoolName": "[concat(parameters('dnsName'), '-ilbBackendPool')]",
    "ilbBackendAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('ilbBackendAddressPoolName'))]",
    "sshIPConfigName": "[concat(parameters('dnsName'), '-sshIPCfg')]",
    "sshIPConfig": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('sshIPConfigName'))]",
    "nicName": "[concat(parameters('dnsName'), '-nic')]",
    "availabilitySetName": "[concat(parameters('dnsName'), '-set')]",
    "customScriptFilePath": "[concat(parameters('artifactsPath'), '/azuremysql.sh')]",
    "mysqlConfigFilePath": "[concat(parameters('artifactsPath'), '/my.cnf.template')]",
    "singleQuote": "",
    "virtualNetworkSetupURL": "[concat(parameters('artifactsPath'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "sa": "[parameters('dbSubnetStartAddress')]",
    "ipOctet01": "[concat(split(variables('sa'), '.')[0], '.', split(variables('sa'), '.')[1], '.')]",
    "ipOctet2": "[int(split(variables('sa'), '.')[2])]",
    "ipOctet3": "[int(split(variables('sa'), '.')[3])]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('vmUserName'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "dbSubnetName": {
            "value": "[parameters('dbSubnetName')]"
          },
          "dbSubnetAddressPrefix": {
            "value": "[parameters('dbSubnetAddressPrefix')]"
          },
          "virtualNetworkExistingRGName": {
            "value": "[parameters('virtualNetworkExistingRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPublicIPName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('location')]",
      "name": "[variables('availabilitySetName')]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('ipOctet01'), add(variables('ipOctet2'), div(copyIndex(variables('ipOctet3')), 255)), '.', mod(copyIndex(variables('ipOctet3')), 255))]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.dbSubnetRef.value]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ilbBackendAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/',parameters('dnsName'), 'NatRule', copyIndex())]"
                },
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/',parameters('dnsName'), 'ProbeNatRule', copyIndex())]"
                },
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/',parameters('dnsName'), 'MySQLNatRule', copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('dnsName'), copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[variables('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('dnsName'), copyIndex())]",
          "adminUsername": "[parameters('vmUserName')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('dnsName'), copyIndex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('diskType')]"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('dnsName'), copyIndex(),'_DataDisk1')]",
              "diskSizeGB": 1024,
              "lun": 0,
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "[parameters('diskType')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "[concat(parameters('dnsName'), copyIndex(),'_DataDisk2')]",
              "diskSizeGB": 1024,
              "lun": 1,
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "[parameters('diskType')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nicName')), copyIndex())]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsName'), copyIndex(), '/setupMySQL')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "copy": {
        "name": "extLoop",
        "count": "[variables('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('customScriptFilePath')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(parameters('customScriptCommandToExecute'), ' ', copyIndex(1), ' ', variables('ipOctet01'), add(variables('ipOctet2'), div(copyIndex(variables('ipOctet3')), 255)), '.', mod(copyIndex(variables('ipOctet3')), 255), ' ', variables('mysqlConfigFilePath'), ' ', variables('singleQuote'), parameters('mysqlReplicationPassword'), variables('singleQuote'), ' ', variables('singleQuote'), parameters('mysqlRootPassword'), variables('singleQuote'), ' ', variables('singleQuote'), parameters('mysqlProbePassword'), variables('singleQuote'), ' ', parameters('dbSubnetStartAddress'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPublicIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('sshIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('lbPublicIPRef')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('ilbBackendAddressPoolName')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[concat(parameters('dnsName'),'NatRule0')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('sshNatRuleFrontEndPort0')]",
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat(parameters('dnsName'),'NatRule1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('sshNatRuleFrontEndPort1')]",
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat(parameters('dnsName'),'MySQLNatRule0')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('mysqlFrontEndPort0')]",
              "backendPort": 3306,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat(parameters('dnsName'),'MySQLNatRule1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('mysqlFrontEndPort1')]",
              "backendPort": 3306,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat(parameters('dnsName'),'ProbeNatRule0')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('mysqlProbePort0')]",
              "backendPort": 9200,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat(parameters('dnsName'),'ProbeNatRule1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('sshIPConfig')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('mysqlProbePort1')]",
              "backendPort": 9200,
              "enableFloatingIP": false
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    },
    "ipaddress": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName')),'2015-06-15').ipAddress]",
      "type": "string"
    }
  }
}
