{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The Prefix of the VM Name"
      },
      "defaultValue": "SqlVM"
    },
    "AvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The Available Set Name"
      },
      "defaultValue": "SqlAvailableSet"
    },

    "WindowsImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The Publisher of Windows Image"
      },
      "defaultValue": "MicrosoftSQLServer"
    },
    "WindowsImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer of Windows Image"
      },
      "defaultValue": "SQL2014-WS2012R2"
    },
    "WindowsImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The SKU Name of Windows Image"
      },
      "defaultValue": "Enterprise"
    },

    "WindowsImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The Version of Windows Image"
      },
      "defaultValue": "latest"
    },

    "storageAccount": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account Name"
      }
    },

    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "sqlAdministrator"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },

    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "East US 2"
      ],
      "metadata": {
        "description": "The region to deploy the resources into"
      }
    },

    "VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_D1"
    },
    "NicSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "the reference to the subnet of nics"
      }
    },

    "LBSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "the reference to the subnet for load balancer"
      }
    },

    "sqlDiskSize": {
      "type": "int",
      "metadata": {
        "description": "The address of Primary AD"
      },
      "defaultValue": 1000
    },

    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The address of secondary AD"
      },
      "defaultValue" : "10.0.0.200"
    }
  },
  "variables": {
    "publicLBName": "sqlLoadBalancer",
    "sqlAOListener":"SQLAlwaysOnEndPointListener",
    "publicIPAddressName": "[concat(parameters('AvailabilitySetName'), 'PublicIp')]",
    "lbFE": "SqlLBFE",
    "lbBE": "SqlLBBE",
    "SqlNicName": "SqlMachine-Nic-",
    "vmContainerName": "vhds",
    "sqllbID":"[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "sqllbFEConfigID": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "sqlBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbBE'))]",
    "sqlAOProbe":"SQLAlwaysOnEndPointProbe",
    "sqllbProbeID":"[concat(variables('sqllbID'),'/probes/',variables('sqlAOProbe'))]"
  },
  "resources": [
    {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(parameters('storageAccount'), copyindex())]",
      "apiVersion": "2015-05-01-preview",
      "copy": {
				"name": "storageAccountLoop",
				"count": 2
			},
			"location": "[parameters('location')]",
			"properties": {
			"accountType": "[parameters('storageAccountType')]"
			}
		},
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('AvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]"
    },
    {
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('publicLBName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbFE')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('sqlLBIPAddress')]",
							"subnet": {
								"id": "[parameters('LBSubnetUri')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbBE')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('sqlAOListener')]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('sqllbFEConfigID')]"
						},
						"backendAddressPool": {
							"id": "[variables('sqlBEAddressPoolID')]"
						},
						"probe": {
							"id": "[variables('sqllbProbeID')]"
						},
						"protocol": "tcp",
						"frontendPort": 1433,
						"backendPort": 1433,
						"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('sqlAOProbe')]",
						"properties": {
							"protocol": "tcp",
							"port": 59999,
							"intervalInSeconds": "5",
							"numberOfProbes": "2"
						}
					}
				]
			}
		},

    {
			"name": "[concat(variables('SqlNicName'), copyindex())]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"apiVersion": "2015-05-01-preview",
			"copy": {
				"name": "nicLoop",
				"count": 2
			},
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/',variables('publicLBName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('NicSubnetUri')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('sqlBEAddressPoolID')]"
								}
							]
						}
					}
				]
			}
		},
    {
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('VMNamePrefix'), copyindex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": 2
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccount'),  copyindex()))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('SqlNicName'), copyindex()))]",
				"[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('VMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[concat(parameters('VMNamePrefix'), copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('WindowsImagePublisher')]",
						"offer": "[parameters('WindowsImageOffer')]",
						"sku": "[parameters('WindowsImageSKU')]",
						"version": "[parameters('WindowsImageVersion')]"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccount'),copyindex(), '.blob.core.windows.net/',variables('vmContainerName'),'/', parameters('VMNamePrefix'), copyindex(),'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccount'),copyindex(), '.blob.core.windows.net/',variables('vmContainerName'),'/', parameters('VMNamePrefix'), copyindex(),'data-1.vhd')]"
							},
							"name":"[concat(parameters('VMNamePrefix'), copyindex(),'data-1.vhd')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[parameters('sqlDiskSize')]",
							"lun": 0
						},
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccount'), copyindex(), '.blob.core.windows.net/',variables('vmContainerName'),'/', parameters('VMNamePrefix'), copyindex(),'log-1.vhd')]"
							},
							"name":"[concat(parameters('VMNamePrefix'), copyindex(),'log-1.vhd')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[parameters('sqlDiskSize')]",
							"lun": 1
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('SqlNicName'), copyindex()))]"
						}
					]
				}
			}
		}
  ],
    "outputs": {
    }
}
