{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VmNetworkSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "VMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The Prefix of the VM Name"
      },
      "defaultValue": "ADVM"
    },
    "AvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The Available Set Name"
      },
      "defaultValue": "ADAvailableSet"
    },

    "WindowsImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The Publisher of Windows Image"
      },
      "defaultValue": "MicrosoftWindowsServer"
    },
    "WindowsImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer of Windows Image"
      },
      "defaultValue": "WindowsServer"
    },
    "WindowsImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The SKU Name of Windows Image"
      },
      "defaultValue": "2012-R2-Datacenter"
    },

    "WindowsImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The Version of Windows Image"
      },
      "defaultValue": "latest"
    },

    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account Name"
      }
    },

    "DomainName": {
      "type": "string",
      "metadata": {
        "description": "The Domain Name"
      }
    },

    "DomainBIOSName": {
      "type": "string",
      "metadata": {
        "description": "The Domain BIOS Name"
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "sqlAdministrator"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },

    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "West Europe",
        "East Asia",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "The region to deploy the resources into"
      }
    },

    "VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_DS1"
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address"
      }
    }
  },
  "variables": {
    
    "staticSubnetName": "ADStaticSubnet",
    "subnets": [
      {
        "name": "[variables('staticSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('VmNetworkSubnet')]"
        }
      }
    ],
    "publicLBName" : "ADPublicLoadBalancer",
    "virtualNetworkName": "ADVNET",
    "publicIPAddressName": "[concat(parameters('AvailabilitySetName'), 'PublicIp')]",
    "lbFE": "ADLBFE",
    "lbBE": "ADLBBE",
    "rpdNAT": "ADRDPNAT",
    "publiclbID":"[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "publiclbFEConfigID": "[concat(variables('publiclbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "rdpPort": 3389,
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
		"staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('staticSubnetName'))]",
    "publicBEAddressPoolID": "[concat(variables('publiclbID'),'/backendAddressPools/',variables('lbBE'))]",
    "adRDPNATRuleID": "[concat(variables('publiclbID'),'/inboundNatRules/',variables('rpdNAT'))]",
    "ADNicName": "ADMachine-Nic-",

    "vmContainerName": "vhds"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('AvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]"
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressRange')]"
          ]
        },
        "subnets": "[variables('subnets')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('publiclbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBE')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('rpdNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('publiclbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[variables('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('ADNicName'), copyindex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('virtualNetworkName')]",
        "[concat('Microsoft.Network/loadBalancers/',variables('publicLBName'))]"
      ],
      "copy": {
        "name": "ADNicLoop",
        "count": 2
      },
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adPDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('staticSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('publicBEAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('adRDPNATRuleID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('VMNamePrefix'), copyindex())]",
			"location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('StorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('ADNicName'), copyindex()))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]"
      ],
      "copy": {
        "name": "ADMachineLoop",
        "count": 2
      },
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
				},
				"osProfile": {
					"computername": "[concat(parameters('VMNamePrefix'), copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('WindowsImagePublisher')]",
						"offer": "[parameters('WindowsImageOffer')]",
						"sku": "[parameters('WindowsImageSKU')]",
						"version": "[parameters('WindowsImageVersion')]"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/',variables('vmContainerName'),'/', parameters('VMNamePrefix'), copyindex(),'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/',variables('vmContainerName'),'/', parameters('VMNamePrefix'), copyindex(),'data-1.vhd')]"
								},
							"name":"[concat(parameters('VMNamePrefix'), copyindex(),'-data-disk1')]",
							"createOption": "empty",
							"caching" : "None",
							"diskSizeGB": "[variables('windowsDiskSize')]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('ADNicName'), copyindex()))]"
						}
					]
				}
			}
		}
  ],
    "outputs": {
    }
}
