{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "Public key for admin user."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Ubuntu version for deploying the Docker containers."
      },
      "defaultValue": "16.04.0-LTS"
    },
    "storageAccountName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the storage account."
      }
    },
    "storageAccountType": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Type of the storage account."
      },
      "defaultValue": "Premium_LRS"
    },
    "publicIpName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the public IP address."
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Size of the virtual machine."
      },
      "defaultValue": "Standard_DS1_v2"
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for SQL Server."
      }
    },
    "sqlDbName": {
      "type": "string",
      "metadata": {
        "description": "Name of SQL Database for SonarQube."
      },
      "defaultValue": "sonarqube-db"
    }
  },
  "variables": {
    "vnetName": "[concat(parameters('publicIpName'), '-vnet')]",
    "nsgName": "[concat(parameters('publicIpName'), '-nsg')]",
    "subnetName": "[concat(parameters('publicIpName'), '-subnet')]",
    "nicName": "[concat(parameters('publicIpName'), '-nic')]",
    "vmName": "[concat(parameters('publicIpName'), '-vm')]",
    "sqlServerName": "[concat(parameters('publicIpName'), '-sql')]",
    "dataDiskSizeGB": "120",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "OSDiskName": "[concat(parameters('publicIpName'), '-osdisk1')]",
    "DataDiskName": "[concat(parameters('publicIpName'), '-datadisk1')]",
    "publicIPAddressType": "Dynamic",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "vhdStorageContainerName": "vhds",
    "dockerHubImage": "sonarqube",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "scriptUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "tags": {
        "Purpose": "Docker"
      },
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "tags": {
        "Purpose": "Docker"
      },
      "name": "[parameters('publicIpName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIpName')]"
        }
      }
    },
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "SonarQube2",
            "properties": {
              "priority": 1030,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "9000",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "SonarQube1",
            "properties": {
              "priority": 1020,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "9092",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "tags": {
        "Purpose": "Docker"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "tags": {
        "Purpose": "Docker"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "tags": {
        "Purpose": "Docker"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('vmName')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('dataDiskSizeGB')]",
              "lun": 0,
              "caching": "None",
              "vhd": {
                "uri": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('DataDiskName'), '.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/azureVmUtils')]",
      "apiVersion": "2015-06-15",
      "tags": {
        "Purpose": "Docker"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('scriptUrl')]"
          ],
          "commandToExecute": "bash vm-disk-utils-0.1.sh"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('vmName'), '/DockerExtension')]",
      "tags": {
        "Purpose": "Docker"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "compose": {
            "sonarqube": {
              "image": "[variables('dockerHubImage')]",
              "restart": "always",
              "ports": [ "9000:9000", "9092:9092" ],
              "volumes": [
                "/datadisks/disk1/sonarqube/data:/opt/sonarqube/data",
                "/datadisks/disk1/sonarqube/extensions:/opt/sonarqube/extensions"
              ],
              "environment": {
                "SONARQUBE_JDBC_USERNAME": "[parameters('adminUsername')]",
                "SONARQUBE_JDBC_PASSWORD": "[parameters('sqlAdminPassword')]",
                "SONARQUBE_JDBC_URL": "[concat('jdbc:sqlserver://', variables('sqlServerName'), '.database.windows.net:1433;database=', parameters('sqlDbName'), ';encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;')]"
              }
            }
          },
          "installonly": "true"
        }
      }
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "Purpose": "Docker"
      },
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('adminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[parameters('sqlDbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "Purpose": "Docker"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "properties": {
            "collation": "SQL_Latin1_General_CP1_CS_AS"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "All",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    }
  ]
}
