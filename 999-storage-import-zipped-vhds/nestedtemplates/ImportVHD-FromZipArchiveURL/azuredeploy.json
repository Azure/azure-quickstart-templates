{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.210504",
    "parameters": {
      "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "The base URI where artifacts required by this template are located including a trailing '/'"
          },
          "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
          },
          "defaultValue": ""
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location in which the resources should be deployed."
        }
      },
      "Source": {
          "type": "string",
          "metadata": {
              "description": "URL of a ZIP archive containing VHD images files. For example: https://provider.com/bin/support/azure-vhd.zip"
          }
      },
      "Destination": {
        "type": "string",
        "metadata": {
          "description": "URI of a Storage Account container with a writable SAS Token. For example: https://blob-storage-name.blob.core.windows.net/container-name?sp=racwl&st=2021-01-01T12:00:00&se=2021-02-01T12:00:00&spr=https&sv=2021-01-01&sig=123412341234"
        }
      },
      "deploymentScriptName" : {
          "type": "string",
          "defaultValue": "ImportVHD-FromZipArchiveURL",
          "metadata": {
              "description": "Name of the deployment script"
          }
      },
      "forceUpdateTag": {
          "type": "string",
          "defaultValue": "[newGuid()]",
          "metadata": {
              "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
          }
      }
    },
    "functions": [],
    "variables": {
      "deploymentScriptFileUri": "[uri(parameters('_artifactsLocation'), concat('ImportVHD-FromZipArchiveURL.ps1', parameters('_artifactsLocationSasToken')))]",
      "urlVHDZipArchive" : "[parameters('Source')]",
      "uriWritableStorageAccountBlobContainerSasToken": "[parameters('Destination')]",
      "userAssignedIdentityName": "[concat('ImportVHD-FromZipArchiveURL-worker-',uniqueString(resourceGroup().id))]",
      "roleAssignmentName": "[guid(concat(variables('userAssignedIdentityName'),resourceGroup().id, 'contributor'))]",
      "forceUpdateTag" : "[parameters('forceUpdateTag')]"
    },
    "resources": [
      {
          "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
          "apiVersion": "2018-11-30",
          "name": "[variables('userAssignedIdentityName')]",
          "location": "[parameters('location')]"
      },
      {
          "type": "Microsoft.Authorization/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "name": "[variables('roleAssignmentName')]",
          "dependsOn": [ "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]" ],
          "properties": {
              "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2015-08-31-preview').principalId]",
              "scope": "[resourceGroup().id]",
              "principalType": "ServicePrincipal"
          }
      },
      {
        "type": "Microsoft.Resources/deploymentScripts",
        "apiVersion": "2020-10-01",
        "name": "[parameters('deploymentScriptName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignmentName'))]"
        ],
        "identity": {
            "type": "UserAssigned",
            "userAssignedIdentities": {
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('userAssignedIdentityName'))]": {}
            }
        },        
        "kind": "AzurePowerShell",
        "properties": {
          "azPowerShellVersion": "5.5", // 7.1 is not supported
          "cleanupPreference": "OnSuccess",
          "arguments": "[concat('-Source \\\"',variables('urlVHDZipArchive'),'\\\"',' ','-Destination \\\"',variables('uriWritableStorageAccountBlobContainerSasToken'),'\\\"')]",
          "environmentVariables": [
              {
                  "name": "ResourceGroupName",
                  "value": "[resourceGroup().name]"
              }
          ],
          "primaryScriptUri" : "[variables('deploymentScriptFileUri')]",
          "forceUpdateTag": "[variables('forceUpdateTag')]",
          "retentionInterval": "PT4H"
        }
      }
    ],
    "outputs": {
      "vhdBlobUriList": {
          "type": "object",
          "value": "[reference(parameters('deploymentScriptName')).outputs.vhdBlobUriList]"
      },
      "vhdBlobSHA256List": {
          "type": "object",
          "value": "[reference(parameters('deploymentScriptName')).outputs.vhdBlobSHA256List]"
      }
    }
}