{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageaccountname": {
            "defaultValue": "demostorage",
            "type": "String"
        },
        "logicAppName": {
            "defaultValue": "containerApp",
            "type": "String"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "HTTP_Request_To_create_Container_in_provided_storage_account": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://@{coalesce(triggerBody()?['properties']?['storageAccountName'], parameters('storagename'))}.blob.core.windows.net",
                                    "type": "ManagedServiceIdentity"
                                },
                                "headers": {
                                    "x-ms-version": "2017-11-09"
                                },
                                "method": "PUT",
                                "uri": "https://@{coalesce(triggerBody()?['properties']?['storageAccountName'],parameters('storagename'))}.blob.core.windows.net/@{triggerBody()?['properties']?['containerName']}?restype=container"
                            },
                            "runAfter": {},
                            "type": "Http"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Emptyjson",
                                        "type": "string",
                                        "value": "\"{}\""
                                    }
                                ]
                            },
                            "runAfter": {
                                "HTTP_Request_To_create_Container_in_provided_storage_account": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Response": {
                            "inputs": {
                                "body": "@json(coalesce(body('HTTP_Request_To_create_Container_in_provided_storage_account'), variables('Emptyjson')))",
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "statusCode": "@outputs('HTTP_Request_To_create_Container_in_provided_storage_account')['statusCode']"
                            },
                            "kind": "Http",
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "storagename": {
                            "defaultValue": "[parameters('storageaccountname')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "CustomProviderWebhook": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "properties": {
                                            "properties": {
                                                "containerName": {
                                                    "type": "string"
                                                },
                                                "storageAccountName": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {}
            }
        }
    ],
    "outputs": {
        "appprincipalid" : {
            "type": "string",
            "value": "[reference(parameters('logicAppName'), '2017-07-01', 'Full').identity.principalId]"
        },
        "appprincipalid" : {
            "type": "string",
            "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/CustomProviderWebhook'), '2017-07-01').value]"
        }        
    }
}