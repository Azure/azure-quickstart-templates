{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the load balancer to create"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of subnet to create"
      }
    },
    "loadBalancerBackendName": {
      "type": "string",
      "metadata": {
        "description": "The name of load balancer backend to create"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set to create"
      }
    },
    "dnsServers": {
      "type": "array",
      "metadata": {
        "description": "List of DNS servers in the network"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "publicIpName": "publicIp",
    "lbFrontEndName": "LoadBalancerFrontEnd",
    "publicIpID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpName'))]",
    "loadBalancerID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
    "frontEndIPConfigID": "[concat(variables('loadBalancerID'),'/frontendIPConfigurations/', variables('lbFrontEndName'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ],
        "dhcpOptions": {
          "dnsServers": "[parameters('dnsServers')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "PlatformUpdateDomainCount": 5,
        "PlatformFaultDomainCount": 2
      }
    },
    {
      "apiVersion": "2017-09-01",
      "name": "[parameters('loadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIpID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('loadBalancerBackendName')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "dc-rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 5000,
              "backendPort": 3389,
              "protocol": "Tcp"
            }
          },
          {
            "name": "sql-rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 5001,
              "backendPort": 3389,
              "protocol": "Tcp"
            }
          },
          {
            "name": "tfs-rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 5002,
              "backendPort": 3389,
              "protocol": "Tcp"
            }
          }
        ]
      }
    }
  ]
}
