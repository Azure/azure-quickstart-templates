{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "spappVMName": {
      "type": "string"
    },
    "spwebVMName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "spVMSize": {
      "type": "string"
    },
    "spWebAvailabilitySet": {
      "type": "string"
    },
    "spAppAvailabilitySet": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "spImagePublisher": {
      "type": "string"
    },
    "spImageOffer": {
      "type": "string"
    },
    "spImageSKU": {
      "type": "string"
    },
    "vmContainerName": {
      "type": "string"
    },
    "storageAccountNamePrefix": {
      "type": "string"
    },
    "spPreparationModulesURL": {
      "type": "string"
    },
    "spPreparationFunction": {
      "type": "string"
    },
    "domainName": {
      "type": "string"
    },
    "DNSServer": {
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('spappVMName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "spAppVMLoop",
        "count": 2
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('spVMSize')]"
        },
        "availabilitySet": {
          "id": "[parameters('spAppAvailabilitySet')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('spappVMName'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('spImagePublisher')]",
            "offer": "[parameters('spImageOffer')]",
            "sku": "[parameters('spImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), '3')), '2016-01-01').primaryEndpoints.blob, parameters('vmContainerName'),'/',parameters('spappVMName'), copyIndex(),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), '3')), '2016-01-01').primaryEndpoints.blob, parameters('vmContainerName'),'/', parameters('spappVMName'), copyIndex(), '-Data-1.vhd')]"
              },
              "name": "[concat(parameters('spappVMName'), copyIndex(),'-data-disk1')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "128",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId(resourceGroup().name,'Microsoft.Network/networkInterfaces',concat(parameters('spappVMName'), copyIndex(),'-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), '4')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('spappVMName'), copyIndex(),'/ConfigureSPAppServer')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('spappVMName'),copyIndex()))]"
      ],
      "copy": {
        "name": "spAppPrepareLoop",
        "count": 2
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.17",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesURL": "[parameters('spPreparationModulesURL')]",
          "wmfVersion": "4.0",
          "configurationFunction": "[parameters('spPreparationFunction')]",
          "properties": {
            "DNSServer": "[parameters('DNSServer')]",
            "DomainName": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('spwebVMName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "spWebVMLoop",
        "count": 2
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('spVMSize')]"
        },
        "availabilitySet": {
          "id": "[parameters('spWebAvailabilitySet')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('spwebVMName'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('spImagePublisher')]",
            "offer": "[parameters('spImageOffer')]",
            "sku": "[parameters('spImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), '3')), '2016-01-01').primaryEndpoints.blob, parameters('vmContainerName'),'/',parameters('spwebVMName'), copyIndex(),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), '3')), '2016-01-01').primaryEndpoints.blob, parameters('vmContainerName'),'/', parameters('spwebVMName'), copyIndex(), '-Data-1.vhd')]"
              },
              "name": "[concat(parameters('spwebVMName'), copyIndex(),'-data-disk1')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "128",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId(resourceGroup().name,'Microsoft.Network/networkInterfaces',concat(parameters('spwebVMName'), copyIndex(),'-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', concat(parameters('storageAccountNamePrefix'), '4')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('spwebVMName'), copyIndex(),'/ConfigureSPWebServer')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('spwebVMName'),copyIndex()))]"
      ],
      "copy": {
        "name": "spWebPrepareLoop",
        "count": 2
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.17",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesURL": "[parameters('spPreparationModulesURL')]",
          "wmfVersion": "4.0",
          "configurationFunction": "[parameters('spPreparationFunction')]",
          "properties": {
            "DNSServer": "[parameters('DNSServer')]",
            "DomainName": "[parameters('domainName')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}