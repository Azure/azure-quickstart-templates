{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "namePrefix": {
      "type": "string"
    },
    "vmSize": {
      "type": "string"
    },
    "osSettings": {
      "type": "object"
    },
    "subnet": {
      "type": "object"
    },
    "nodeCount": {
      "type": "int"
    },
    "availabilitySetName" : {
      "type" : "string"
    },
    "sshKeyData" : {
      "type" : "string"
    },
    "nodeListSettings" : {
      "type" : "object"
    }
  },
  "variables": {
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "vmName": "[concat(parameters('namePrefix'), 'vm')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('namePrefix'), 'nic', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "[concat(parameters('namePrefix'), 'nicLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(parameters('subnet').statics.clusterRange.base, copyindex(parameters('subnet').statics.clusterRange.start))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('namePrefix'), 'vm', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "[concat(parameters('namePrefix'), 'vmLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namePrefix'), 'nic', copyindex())]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('namePrefix'), 'vm', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration" : {
            "disablePasswordAuthentication" : "true",
            "ssh" : {
              "publicKeys" : [
                {
                  "path" : "[variables('sshKeyPath')]",
                  "keyData" : "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', variables('vmName'), copyindex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": 1023,
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/','vhds/', variables('vmName'), copyindex(), 'DataDisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namePrefix'), 'nic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('namePrefix'), 'vm', copyindex(), '/installdsenode')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('region')]",
      "copy": {
        "name": "[concat(parameters('namePrefix'), 'vmLoop')]",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('namePrefix'), 'vm', copyindex())]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namePrefix'), 'nic', copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]",
          "commandToExecute": "[concat('bash dsenode.sh', ' -e ', parameters('nodeListSettings').nodeList, ' -c ', parameters('nodeListSettings').subnetCount)]"
        }
      }
    }
  ],
  "outputs": {}
}
