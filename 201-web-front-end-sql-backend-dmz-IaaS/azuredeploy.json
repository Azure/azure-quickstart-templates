{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "stdStorageName": {
      "type": "string",
      "defaultValue": "testvnetstoragestd",
      "metadata": {
        "description": "Name for simple storage account."
      }
    },
    "stdStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Type for simple storage account."
      }
    },
    "prmStorageName": {
      "type": "string",
      "defaultValue": "testvnetstorageprm",
      "metadata": {
        "description": "Name for simple storage account."
      }
    },
    "prmStorageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_GRS",
        "Premium_ZRS"
      ],
      "metadata": {
        "description": "Type for simple storage account."
      }
    },
      "vnetName": {
      "type": "string",
      "defaultValue": "TestVNet",
      "metadata": {
        "description": "Name for the new VNet."
      }
    },
    "vnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "CIDR prefix for the VNet address space."
      }
    },
    "frontEndSubnetName": {
      "type": "string",
      "defaultValue": "FrontEnd",
      "metadata": {
        "description": "Name for the front end subnet."
      }
    },
    "frontEndSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "CIDR address prefix for the front end subnet."
      }
    },
    "backEndSubnetName": {
      "type": "string",
      "defaultValue": "BackEnd",
      "metadata": {
        "description": "Name for the back end subnet."
      }
    },
    "backEndSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.2.0/24",
      "metadata": {
        "description": "CIDR address prefix for the back end subnet."
      }
    },
    "webCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs to be deployed to the front end subnet."
      }
    },
    "sqlCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs to be deployed to the back end subnet."
      }
    },
    "frontEndNSGName": {
      "type": "string",
      "defaultValue": "NSG-BackEnd",
      "metadata": {
        "description": "Name for the NSG used to allow remote RDP"
      }
    },
    "backEndNSGName": {
      "type": "string",
      "defaultValue": "NSG-FrontEnd",
      "metadata": {
        "description": "Name for the NSG used to allow access to web servers on port 80"
      }
    }
  },
"variables": {
    "webVMSettings": {
      "vmSize": "Standard_A1",
      "adminUsername": "adminuser",
      "adminPassword": "adminP@ssw0rd",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2012-R2-Datacenter",
      "version": "latest",
      "vmName": "Web",
      "osdisk": "osdiskweb",
      "nicName": "TestNICWeb",
      "pipName": "TestPIPWeb",
      "avsetName": "webAvSet"
    },
    "sqlVMSettings": {
      "vmSize": "Standard_DS1",
      "adminUsername": "adminuser",
      "adminPassword": "adminP@ssw0rd",
      "publisher": "MicrosoftSQLServer",
      "offer": "SQL2014SP1-WS2012R2",
      "sku": "Standard",
      "version": "latest",
      "vmName": "SQL",
      "osdisk": "osdisksql",
      "datadisk": "datadisksql",
      "nicName": "TestNICSQL",
      "pipName": "TestPIPSQL",
      "avsetName": "sqlAvSet"
    },
    "location": "[resourceGroup().location]",
    "vmStorageAccountContainerName": "vhds"
  },
  "resources": [
  {
    "name": "[parameters('stdStorageName')]",
    "type": "Microsoft.Storage/storageAccounts",
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-05-01-preview",
    "dependsOn": [ ],
    "tags": {
        "displayName": "Storage Account - Simple"
    },
    "properties": {
      "accountType": "[parameters('stdStorageType')]"
    }
  },
    {
      "name": "[parameters('prmStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "Storage Account - Premium"
      },
      "properties": {
        "accountType": "[parameters('prmStorageType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('backEndNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Remote Access"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-frontend",
            "properties": {
              "description": "Allow FE Subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "[parameters('frontEndSubnetPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "block-internet",
            "properties": {
              "description": "Block Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 200,
              "direction": "Outbound"
            }
          }

        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('frontEndNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Front End"
      },
      "properties": {
        "securityRules": [
          {
            "name": "rdp-rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "web-rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('frontEndNSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('backEndNSGName'))]"
      ],
      "tags": {
        "displayName": "VNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('frontEndSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('frontEndSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('frontEndNSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('backEndSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('backEndSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('backEndNSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[variables('location')]",
      "name": "[concat(variables('webVMSettings').pipName, copyindex(1))]",
      "properties": {
        "publicIPAllocationMethod": "dynamic"
      },
      "tags": {
        "displayName": "PublicIPAddresses - Web"
      },
      "copy": {
        "name": "webpipcount",
        "count": "[parameters('webCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[variables('location')]",
      "name": "[concat(variables('sqlVMSettings').pipName, copyindex(1))]",
      "properties": {
        "publicIPAllocationMethod": "dynamic"
      },
      "tags": {
        "displayName": "PublicIPAddresses - SQL"
      },
      "copy": {
        "name": "sqlpipcount",
        "count": "[parameters('sqlCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterfaces - Web"
      },
      "name": "[concat(variables('webVMSettings').nicName, copyindex(1))]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('webVMSettings').pipName, copyindex(1))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('webVMSettings').pipName, copyindex(1)))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName')),'/subnets/',parameters('frontEndSubnetName'))]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "webniccount",
        "count": "[parameters('webCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterfaces - SQL"
      },
      "name": "[concat(variables('sqlVMSettings').nicName, copyindex(1))]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('sqlVMSettings').pipName, copyindex(1))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('sqlVMSettings').pipName, copyindex(1)))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName')),'/subnets/',parameters('backEndSubnetName'))]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "webniccount",
        "count": "[parameters('sqlCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webVMSettings').avsetName]",
      "location": "[variables('location')]",
      "dependsOn": [ ],
      "tags": {
        "displayName": "AvailabilitySet - Web"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlVMSettings').avsetName]",
      "location": "[variables('location')]",
      "dependsOn": [ ],
      "tags": {
        "displayName": "AvailabilitySet - SQL"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "copy": {
        "name": "webvmcount",
        "count": "[parameters('webCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSettings').nicName, copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webVMSettings').avsetName)]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('stdStorageName'))]"
      ],
      "tags": {
        "displayName": "VMs - Web"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('webVMSettings').avsetName)]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('webVMSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
          "adminUsername": "[variables('webVMSettings').adminUsername]",
          "adminPassword": "[variables('webVMSettings').adminPassword]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('webVMSettings').publisher]",
            "offer": "[variables('webVMSettings').offer]",
            "sku": "[variables('webVMSettings').sku]",
            "version": "[variables('webVMSettings').version]"
          },
          "osDisk": {
            "name": "[concat(variables('webVMSettings').osdisk,copyindex(1))]",
            "vhd": {
              "uri": "[concat('http://', parameters('stdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('webVMSettings').osdisk, copyindex(1),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webVMSettings').nicName,copyindex(1)))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(variables('sqlVMSettings').vmName,copyindex(1))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "copy": {
        "name": "sqlvmcount",
        "count": "[parameters('sqlCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('sqlVMSettings').nicName, copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('sqlVMSettings').avsetName)]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('prmStorageName'))]"
      ],
      "tags": {
        "displayName": "VMs - SQL"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlVMSettings').avsetName)]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('sqlVMSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('sqlVMSettings').vmName,copyindex(1))]",
          "adminUsername": "[variables('sqlVMSettings').adminUsername]",
          "adminPassword": "[variables('sqlVMSettings').adminPassword]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlVMSettings').publisher]",
            "offer": "[variables('sqlVMSettings').offer]",
            "sku": "[variables('sqlVMSettings').sku]",
            "version": "[variables('sqlVMSettings').version]"
          },
          "osDisk": {
            "name": "[concat(variables('sqlVMSettings').osdisk,copyindex(1))]",
            "vhd": {
              "uri": "[concat('http://', parameters('prmStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('sqlVMSettings').osdisk, copyindex(1),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://', parameters('prmStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('sqlVMSettings').datadisk, copyindex(1),'-1','.vhd')]"
              },
              "name": "[concat(variables('sqlVMSettings').datadisk,copyindex(1),'-data-disk1')]",
              "diskSizeGB": "127",
              "createOption": "Empty",
              "lun": 0
            },
           {
              "vhd": {
                "uri": "[concat('http://', parameters('prmStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('sqlVMSettings').datadisk, copyindex(1),'-2','.vhd')]"
              },
              "name": "[concat(variables('sqlVMSettings').datadisk,copyindex(1),'-data-disk2')]",
              "diskSizeGB": "127",
              "createOption": "Empty",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sqlVMSettings').nicName,copyindex(1)))]"
            }
          ]
        }
      }
    }
  ]
}
