{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "workspaceName":{
         "type":"string",
         "metadata":{
            "description":"Specifies the name of the Azure Machine Learning workspace."
         }
      },
      "clusterName":{
         "type":"string",
         "metadata":{
            "description":"The name of the Managed Cluster resource."
         }
      },
      "osDiskSizeGB":{
         "type":"int",
         "defaultValue":100,
         "metadata":{
            "description":"Disk size (in GB) to provision for each of the agent pool nodes. This value minimun 30 to 1023. Specifying 100 is the default value required to be attached to Azure ML."
         },
         "minValue":30,
         "maxValue":1023
      },
      "agentCount":{
         "type":"int",
         "defaultValue":6,
         "metadata":{
            "description":"The number of nodes for the cluster."
         },
         "minValue":1,
         "maxValue":50
      },
      "podCidr":{
         "type":"string",
         "defaultValue":"10.244.0.0/16",
         "metadata":{
            "description":"A CIDR notation IP range from which to assign pod IPs when kubenet is used"
         }
      },
      "serviceCidr":{
         "type":"string",
         "defaultValue":"10.0.0.0/16",
         "metadata":{
            "description":"A CIDR notation IP range from which to assign service cluster IPs."
         }
      },
      "dnsServiceIP":{
         "type":"string",
         "defaultValue":"10.0.0.10",
         "metadata":{
            "description":"An IP address assigned to the Kubernetes DNS service"
         }
      },
      "dockerBridgeCidr":{
         "type":"string",
         "defaultValue":"172.17.0.1/16",
         "metadata":{
            "description":"A specific IP address and netmask for the Docker bridge, using standard CIDR notation."
         }
      },
      "agentVMSize":{
         "type":"string",
         "defaultValue":"Standard_D3_v2",
         "metadata":{
            "description":"The size of the VM instances."
         }
      },
      "kuberneteVersion":{
         "type":"string",
         "defaultValue":"1.16.9",
         "metadata":{
            "description":"Supported Azure Kubernetes version"
         }
      },
      "clientId":{
         "type":"string",
         "defaultValue":"msi",
         "metadata":{
            "description":"The client id to use for this aks cluster"
         }
      },
      "linuxAdminUsername":{
         "type":"string",
         "metadata":{
            "description":"User name for the Linux Virtual Machines."
         }
      },
      "sshRSAPublicKey":{
         "type":"string",
         "metadata":{
            "description":"Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"Specifies the location for all resources."
         }
      },
      "storageAccountName":{
         "type":"string",
         "defaultValue":"[concat('sa',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the storage account to be created and associated with the workspace."
         }
      },
      "keyVaultName":{
         "type":"string",
         "defaultValue":"[concat('kv',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the key vault to be created and associated with the workspace."
         }
      },
      "tenantId":{
         "type":"string",
         "defaultValue":"[subscription().tenantId]",
         "metadata":{
            "description":"Specifies the tenant ID of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API."
         }
      },
      "applicationInsightsName":{
         "type":"string",
         "defaultValue":"[concat('ai',uniqueString(resourceGroup().id))]",
         "metadata":{
            "description":"The name for the application insights to be created and associated with the workspace."
         }
      }
   },
   "resources":[
      {
         "type":"Microsoft.ContainerService/managedClusters",
         "apiVersion":"2020-03-01",
         "name":"[parameters('clusterName')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Basic",
            "tier":"Free"
         },
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "kubernetesVersion":"[parameters('kuberneteVersion')]",
            "dnsPrefix":"[parameters('clusterName')]",
            "agentPoolProfiles":[
               {
                  "name":"agentpool",
                  "count":"[parameters('agentCount')]",
                  "vmSize":"[parameters('agentVMSize')]",
                  "osDiskSizeGB":"[parameters('osDiskSizeGB')]",
                  "maxPods":110,
                  "type":"VirtualMachineScaleSets",
                  "orchestratorVersion":"[parameters('kuberneteVersion')]",
                  "mode":"System",
                  "osType":"Linux"
               }
            ],
            "linuxProfile":{
               "adminUsername":"[parameters('linuxAdminUsername')]",
               "ssh":{
                  "publicKeys":[
                     {
                        "keyData":"[parameters('sshRSAPublicKey')]"
                     }
                  ]
               }
            },
            "servicePrincipalProfile":{
               "clientId":"[parameters('clientId')]"
            },
            "nodeResourceGroup":"[concat('MC_', resourceGroup().name,'_', parameters('clusterName'), '_',parameters('location'))]",
            "enableRBAC":true,
            "networkProfile":{
               "networkPlugin":"kubenet",
               "loadBalancerSku":"Basic",
               "podCidr":"[parameters('podCidr')]",
               "serviceCidr":"[parameters('serviceCidr')]",
               "dnsServiceIP":"[parameters('dnsServiceIP')]",
               "dockerBridgeCidr":"[parameters('dockerBridgeCidr')]",
               "outboundType":"loadBalancer"
            }
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "name":"[parameters('storageAccountName')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "encryption":{
               "services":{
                  "blob":{
                     "enabled":true
                  },
                  "file":{
                     "enabled":true
                  }
               },
               "keySource":"Microsoft.Storage"
            },
            "supportsHttpsTrafficOnly":true
         }
      },
      {
         "type":"Microsoft.KeyVault/vaults",
         "apiVersion":"2019-09-01",
         "name":"[parameters('keyVaultName')]",
         "location":"[parameters('location')]",
         "properties":{
            "tenantId":"[parameters('tenantId')]",
            "sku":{
               "name":"standard",
               "family":"A"
            },
            "accessPolicies":[

            ]
         }
      },
      {
         "type":"Microsoft.Insights/components",
         "apiVersion":"2018-05-01-preview",
         "name":"[parameters('applicationInsightsName')]",
         "location":"[parameters('location')]",
         "kind":"web",
         "properties":{
            "Application_Type":"web"
         }
      },
      {
         "type":"Microsoft.MachineLearningServices/workspaces",
         "apiVersion":"2020-03-01",
         "name":"[parameters('workspaceName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
         ],
         "identity":{
            "type":"systemAssigned"
         },
         "properties":{
            "friendlyName":"[parameters('workspaceName')]",
            "storageAccount":"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
            "keyVault":"[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "applicationInsights":"[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
         }
      }
   ],
   "outputs":{
      "clusterName":{
         "type":"string",
         "value":"[parameters('clusterName')]"
      },
      "workspaceName":{
         "type":"string",
         "value":"[parameters('workspaceName')]"
      }
   }
}