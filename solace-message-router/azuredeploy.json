{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Label for the Storage Account where the disks of the Virtual Machine(s) will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine(s). Do not use special characters."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine(s) and for the 'admin' SolOS CLI user."
      }
    },
    "securityGroupName": {
      "type": "string",
      "defaultValue": "vmr-security",
      "metadata": {
        "description": "Security group defined to support VMR system level and default message vpn ports."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Unique OMS Workspace Name for Log Analytics. Leave this field empty to not deploy an OMS Workspace."
      }
    },
    "workspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "OMS Workspace Region for Log Analytics. Not used if Workspace Name is empty."
      },
      "allowedValues": [
        "East US",
        "West Europe",
        "Southeast Asia",
        "Australia Southeast",
        "Japan East",
        "UK South",
        "Central India",
        "Canada Central"
      ]
    },
    "dnsLabelForLbIp": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Label for the Public IP used to access the Load Balancer."
      }
    },
    "dnsLabelForVmIp": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Label for the Public IP used to access the Virtual Machine(s)."
      }
    },
    "centosVersion": {
      "type": "string",
      "defaultValue": "7.4",
      "metadata": {
        "description": "The CentOS version for deploying the Docker containers. This will pick a fully patched image of this given CentOS version. Allowed values: 7.2, 7.3, 7.4"
      },
      "allowedValues": [
        "7.2",
        "7.3",
        "7.4"
      ]
    },
    "messageRoutingVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Solace Message Routing Node VM. Requires at least 2 cores and 4GB of memory. Allowed values: D2_v2, DS2_v2, D2_v3, D2s_v3"
      },
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D2_v3",
        "Standard_D2s_v3"
      ]
    },
    "monitorVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Solace Monitor Node VM. Requires at least 2 cores and 4GB of memory. Allowed values: D2_v2, DS2_v2, D2_v3, D2s_v3"
      },
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D2_v3",
        "Standard_D2s_v3"
      ]
    },
    "dataDiskSize": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "The size of the data disk in GB for diagnostics and message spooling on the Solace Message Routing Nodes. Allowed values: 0, 20, 40, 80, 160"
      },
      "allowedValues": [
        "0",
        "20",
        "40",
        "80",
        "160"
      ]
    },
    "solaceVmrUri": {
        "type": "string",
        "metadata": {
            "description": "The URI location of the Solace VMR Docker container tarball"
        }
    },
    "deploymentModel": {
      "type": "string",
      "metadata": {
          "description": "Deploy three node HA cluster or single node"
      },
      "allowedValues": [
        "HighAvailability",
        "SingleNode"
      ]
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/solace-message-router/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
          "description": "The sasToken required to access _artifactsLocation, which should be left empty if the default _artifactsLocation is used. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "availabilitySetName": "SolaceHACluster",
    "platformFaultDomainCount": "3",
    "platformUpdateDomainCount": "3",
    "imagePublisher": "OpenLogic",
    "imageOffer": "Centos",
    "OSDiskName": "osdiskfordockersimple",
    "dataDiskName": "datadiskfordockersimple",
    "nicName": "myVMNicD",
    "nestedUrl": "[concat(parameters('_artifactsLocation'), 'nested/')]",
    "scriptsUrl": "[concat(parameters('_artifactsLocation'), 'scripts/')]",
    "solaceSecurityName": "SolaceSecurity.Template",
    "securitySharedTemplateName": "security-shared-resources.json",
    "solaceLoadBalancerName": "SolaceLoadBalancer.Template",
    "loadBalancerSharedTemplateName": "loadbalancer-shared-resources.json",
    "solaceWorkspaceName": "SolaceWorkspace.Template",
    "workspaceEnabledSharedTemplateName": "workspace-enabled-shared-resources.json",
    "workspaceDisabledSharedTemplateName": "workspace-disabled-shared-resources.json",
    "solaceInstallScriptName": "deploy_vmr.sh",
    "sempQueryScriptName": "semp_query.sh",
    "publicIPAddressName": "myPublicIPD",
    "publicIPAddressNameLB": "myLBPublicIPD",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountVHDsName": "vhds",
    "vmStorageAccountContainersName": "containers",
    "vmName": "SolaceVMR",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "nodeAddressPrefix": "10.0.0.10",
    "storageAccountType": "Standard_LRS",
    "subnetName": "Subnet",
    "virtualNetworkName": "MyVNETD",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "deploymentModelHighAvailability": { "numberOfNodes": 3 },
    "deploymentModelSingleNode": { "numberOfNodes": 1 },
    "numberOfInstances": "[variables(concat('deploymentModel', parameters('deploymentModel'))).numberOfNodes]",
    "monitorNodeIndex": 2,
    "lbName" : "myLB",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbPoolName": "vmr-ha-group",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbPoolName'))]",
    "dataDisksChoices": {
      "0": [
        {
          "name": "[concat(variables('vmName'), 0, '-datadisk1')]",
          "diskSizeGB": "[parameters('dataDiskSize')]",
          "lun": 0,
          "vhd": {
            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountVHDsName'),'/',variables('dataDiskName'),0,'.vhd')]"
          },
          "caching": "ReadWrite",
          "createOption": "Empty"
        }
      ],
      "1": [
        {
          "name": "[concat(variables('vmName'), 1, '-datadisk1')]",
          "diskSizeGB": "[parameters('dataDiskSize')]",
          "lun": 0,
          "vhd": {
            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountVHDsName'),'/',variables('dataDiskName'),1,'.vhd')]"
          },
          "caching": "ReadWrite",
          "createOption": "Empty"
        }
      ],
      "2": [ ]
    },
    "adminPasswordDir" : "/mnt/resource/secrets",
    "adminPasswordFile" : "[concat(variables('adminPasswordDir'),'/solOSpasswd')]"
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceSecurityName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('nestedUrl'), variables('securitySharedTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "securityGroupName": {
            "value": "[parameters('securityGroupName')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceLoadBalancerName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('nestedUrl'), variables('loadBalancerSharedTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsLabelForLbIp": {
            "value": "[parameters('dnsLabelForLbIp')]"
          },
          "publicIPAddressNameLB": {
            "value": "[variables('publicIPAddressNameLB')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "lbName": {
            "value": "[variables('lbName')]"
          },
          "lbPoolName": {
            "value": "[variables('lbPoolName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceWorkspaceName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[if(empty(parameters('workspaceName')), concat(variables('nestedUrl'), variables('workspaceDisabledSharedTemplateName'), parameters('_artifactsLocationSasToken')), concat(variables('nestedUrl'), variables('workspaceEnabledSharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "workspaceRegion": {
            "value": "[parameters('workspaceRegion')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "interfaceLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabelForVmIp'), copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('solaceSecurityName'))]"
      ],
      "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
                }
              }
            }
          ]
        } 
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyindex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Resources/deployments/', variables('solaceLoadBalancerName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('nodeAddressPrefix'), copyindex())]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbPoolID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
          "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
          "platformUpdateDomainCount": "[variables('platformUpdateDomainCount')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), copyindex()))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[if(equals(copyindex(), variables('monitorNodeIndex')), parameters('monitorVmSize'), parameters('messageRoutingVmSize'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('centosVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'), copyindex(), '-osdisk1')]",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountVHDsName'),'/',variables('OSDiskName'),copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[variables('dataDisksChoices')[if(or(equals(parameters('dataDiskSize'), '0'), equals(copyindex(), variables('monitorNodeIndex'))), '2', string(copyindex()))]]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyindex(), '/DockerExtension')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "DockerLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": { }
      }
    },
    {
      "condition": "[not(empty(parameters('workspaceName')))]",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyindex(), '/OmsAgentExtension')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "OmsAgentLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex(), '/extensions/DockerExtension')]",
        "[concat('Microsoft.Resources/deployments/', variables('solaceWorkspaceName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "OmsAgentForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "workspaceId": "[reference(variables('solaceWorkspaceName')).outputs.workspaceId.value]"
        },
        "protectedSettings": {
          "workspaceKey": "[reference(variables('solaceWorkspaceName')).outputs.workspaceKey.value]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyindex(), '/configureVMRContainer')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "SolaceLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[if(empty(parameters('workspaceName')), concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex(), '/extensions/DockerExtension'), concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex(), '/extensions/OmsAgentExtension'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('solaceVmrUri')]",
            "[concat(variables('scriptsUrl'), variables('solaceInstallScriptName'), parameters('_artifactsLocationSasToken'))]",
            "[concat(variables('scriptsUrl'), variables('sempQueryScriptName'), parameters('_artifactsLocationSasToken'))]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('mkdir -p -m 600 ', variables('adminPasswordDir'), '; echo ', parameters('adminPassword'), ' > ', variables('adminPasswordFile'), '; bash ', variables('solaceInstallScriptName'), ' -c ', copyindex(), ' -i ', variables('nodeAddressPrefix'), ' -n ', variables('numberOfInstances'), ' -p ', variables('adminPasswordFile'), ' -s ', if(equals(copyindex(), variables('monitorNodeIndex')), '0', parameters('dataDiskSize')), if(empty(parameters('workspaceName')), '', concat(' -w ', reference(variables('solaceWorkspaceName')).outputs.workspaceId.value)), ' -u ', parameters('solaceVmrUri'))]"
        }
      }
    }
  ]
}