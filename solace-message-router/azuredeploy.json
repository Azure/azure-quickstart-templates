{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the virtual Machine(s) hosting the Solace message router instance(s). Do not use special characters."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine(s) and for the 'admin' SolOS CLI user."
      }
    },
    "securityGroupName": {
      "type": "string",
      "defaultValue": "solace-security",
      "metadata": {
        "description": "Security group defined to support PubSub+ message broker system level and default message vpn ports."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Unique OMS Workspace Name for Log Analytics. Leave this field empty to not deploy an OMS Workspace."
      }
    },
    "workspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "OMS Workspace Region for Log Analytics. Not used if Workspace Name is empty."
      },
      "allowedValues": [
        "East US",
        "West Europe",
        "Southeast Asia",
        "Australia Southeast",
        "Japan East",
        "UK South",
        "Central India",
        "Canada Central"
      ]
    },
    "dnsLabelForLbIp": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Label for the Public IP used to access the Load Balancer."
      }
    },
    "dnsLabelForVmIp": {
      "type": "string",
      "defaultValue": "[concat('vm', uniqueString(resourceGroup().id, deployment().name))]",
      "metadata": {
        "description": "Unique DNS Label for the Public IP used to access the Virtual Machine(s). Do not use '-'. Default will generate a unique string."
      }
    },
    "centosVersion": {
      "type": "string",
      "defaultValue": "7.4",
      "metadata": {
        "description": "The CentOS version for deploying the Docker containers. This will pick a fully patched image of this given CentOS version. Allowed values: 7.2, 7.3, 7.4"
      },
      "allowedValues": [
        "7.2",
        "7.3",
        "7.4"
      ]
    },
    "messageRoutingVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Solace Message Routing Node VM. Requires at least 2 cores and 4GB of memory. Allowed values: D2_v2, DS2_v2, D2_v3, D2s_v3"
      },
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3"
      ]
    },
    "monitorVmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "The size of the Solace Monitor Node VM. Requires at least 1 core and 1GB of memory. Allowed values: D1_v2, DS1_v2, D2_v2, DS2_v2, D2_v3, D2s_v3"
      },
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D2_v3",
        "Standard_D2s_v3"
      ]
    },
    "dataDiskSize": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "The size of the data disk in GB for diagnostics and message spooling on the Solace Message Routing Nodes. Allowed values: 0, 20, 40, 80, 160"
      },
      "allowedValues": [
        "0",
        "20",
        "40",
        "80",
        "160"
      ]
    },
    "solaceMessageBrokerDockerImageReference": {
      "type": "string",
      "defaultValue": "solace/solace-pubsub-standard:latest",
      "metadata": {
          "description": "Solace PubSub+ message broker docker image reference: a docker registry name with optional tag or a download URL. The download URL can be obtained from http://dev.solace.com/downloads/ or it can be a url to a remotely hosted load version. Default will use the latest image available from Docker Hub."
      }
    },
    "deploymentModel": {
      "type": "string",
      "metadata": {
        "description": "Deploy three node HA cluster or single node"
      },
      "allowedValues": [
        "HighAvailability",
        "SingleNode"
      ]
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Only used if deploying into an existing virtual network and subnet. Specify the Existing Virtual Network Name together with the Existing Subnet Name, otherwise leave it at default blank."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Only used if deploying into an existing virtual network and subnet. Specify the Existing Virtual Network Name together with the Existing Subnet Name, otherwise leave it at default blank."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The virtual network's address range in CIDR notation where the Solace message broker will be deployed."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet's address range in CIDR notation where the Solace message broker will be deployed. It must be contained by the address space of the virtual network. The address range of a subnet which is in use can't be edited."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources. Default will use the same location as the Resource Group."
      }
    },
    "numberOfFaultDomains": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of fault domains to be used for the deployment. For the maximum number fault domains available to your location refer to https://github.com/MicrosoftDocs/azure-docs/blob/master/includes/managed-disks-common-fault-domain-region-list.md"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/solace-message-router/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Optional: The Shared Access Signatures (SAS) token if required for the artifacts location, otherwise leave it at default blank."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "availabilitySetName": "solace-ha-cluster",
    "platformFaultDomainCount": "[parameters('numberOfFaultDomains')]",
    "platformUpdateDomainCount": 3,
    "imagePublisher": "OpenLogic",
    "imageOffer": "Centos",
    "OSDiskName": "osdiskfordockersimple",
    "dataDiskName": "datadiskfordockersimple",
    "nestedTemplatesLocation": "nestedtemplates/",
    "solaceSecurityName": "SolaceSecurity.Template",
    "securitySharedTemplateName": "security-shared-resources.json",
    "securitySharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('securitySharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "solaceLoadBalancerName": "SolaceLoadBalancer.Template",
    "loadBalancerSharedTemplateName": "loadbalancer-shared-resources.json",
    "loadBalancerSharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('loadBalancerSharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "solaceUpdateSubnetName": "SolaceUpdateSubnet.Template",
    "updateSubnetSharedTemplateName": "update-subnet-shared-resources.json",
    "updateSubnetSharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('updateSubnetSharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "solaceWorkspaceName": "SolaceWorkspace.Template",
    "workspaceEnabledSharedTemplateName": "workspace-enabled-shared-resources.json",
    "workspaceEnabledSharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('workspaceEnabledSharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "scriptsLocation": "scripts/",
    "solaceInstallScriptName": "deploy_solace.sh",
    "solaceInstallScriptFileUri": "[uri(parameters('_artifactsLocation'), concat(variables('scriptsLocation'), variables('solaceInstallScriptName'), parameters('_artifactsLocationSasToken')))]",
    "sempQueryScriptName": "semp_query.sh",
    "sempQueryScriptFileUri": "[uri(parameters('_artifactsLocation'), concat(variables('scriptsLocation'), variables('sempQueryScriptName'), parameters('_artifactsLocationSasToken')))]",
    "publicIPAddressName": "myPublicIPD",
    "publicIPAddressNameLB": "myLBPublicIPD",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[if(not(empty(parameters('existingVirtualNetworkName'))), parameters('existingVirtualNetworkName'), 'solace-vnet')]",
    "subnetName": "[if(not(empty(parameters('existingSubnetName'))), parameters('existingSubnetName'), 'solace-subnet')]",
    "nicName": "nicd",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "deploymentModelHighAvailability": { "numberOfNodes": 3 },
    "deploymentModelSingleNode": {
      "numberOfNodes": 1
    },
    "numberOfInstances": "[variables(concat('deploymentModel', parameters('deploymentModel'))).numberOfNodes]",
    "monitorNodeIndex": 2,
    "lbName" : "solace-ha-group-loadbalancer",
    "lbPoolName": "solace-ha-group",
    "lbPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbPoolName'))]",
    "dataDisksChoices": {
      "0": [
        {
          "name": "[concat(parameters('dnsLabelForVmIp'), 0, '_DataDisk')]",
          "diskSizeGB": "[parameters('dataDiskSize')]",
          "lun": 0,
          "caching": "ReadWrite",
          "createOption": "Empty"
        }
      ],
      "1": [
        {
          "name": "[concat(parameters('dnsLabelForVmIp'), 1, '_DataDisk')]",
          "diskSizeGB": "[parameters('dataDiskSize')]",
          "lun": 0,
          "caching": "ReadWrite",
          "createOption": "Empty"
        }
      ],
      "2": [ ]
    },
    "adminPasswordDir" : "/mnt/resource/secrets",
    "adminPasswordFile" : "[concat(variables('adminPasswordDir'),'/solOSpasswd')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceSecurityName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('securitySharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "securityGroupName": {
            "value": "[parameters('securityGroupName')]"
          },
          "subnetPrefix": {
            "value": "[parameters('subnetPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceLoadBalancerName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('loadBalancerSharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsLabelForLbIp": {
            "value": "[parameters('dnsLabelForLbIp')]"
          },
          "publicIPAddressNameLB": {
            "value": "[variables('publicIPAddressNameLB')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "lbName": {
            "value": "[variables('lbName')]"
          },
          "lbPoolName": {
            "value": "[variables('lbPoolName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "condition": "[not(empty(parameters('workspaceName')))]",
      "apiVersion": "2017-05-10",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceWorkspaceName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('workspaceEnabledSharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "workspaceRegion": {
            "value": "[parameters('workspaceRegion')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "interfaceLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabelForVmIp'), copyindex())]"
        }
      }
    },
    {
      "condition": "[empty(parameters('existingSubnetName'))]",
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "[variables('solaceUpdateSubnetName')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('solaceSecurityName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateSubnetSharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetAddressPrefix": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName')), '2018-03-01').addressPrefix]"
          },
          "nsgId": {
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyindex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Resources/deployments/', variables('solaceLoadBalancerName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbPoolID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
        },
      "properties": {
        "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('platformUpdateDomainCount')]"
      }
    },
    {
      "apiVersion":"2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), copyindex()))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[if(equals(copyindex(), variables('monitorNodeIndex')), parameters('monitorVmSize'), parameters('messageRoutingVmSize'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('dnsLabelForVmIp'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('centosVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[variables('dataDisksChoices')[if(or(equals(parameters('dataDiskSize'), '0'), equals(copyindex(), variables('monitorNodeIndex'))), '2', string(copyindex()))]]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '/DockerExtension')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "DockerLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {}
      }
    },
    {
      "condition": "[not(empty(parameters('workspaceName')))]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '/OmsAgentExtension')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "OmsAgentLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex(), '/extensions/DockerExtension')]",
        "[concat('Microsoft.Resources/deployments/', variables('solaceWorkspaceName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "OmsAgentForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "workspaceId": "[if(empty(parameters('workspaceName')),  '', reference(variables('solaceWorkspaceName')).outputs.workspaceId.value)]"
        },
        "protectedSettings": {
          "workspaceKey": "[if(empty(parameters('workspaceName')),  '', reference(variables('solaceWorkspaceName')).outputs.workspaceKey.value)]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '/configureSolaceContainer')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "SolaceLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[if(empty(parameters('workspaceName')), concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex(), '/extensions/DockerExtension'), concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex(), '/extensions/OmsAgentExtension'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('solaceInstallScriptFileUri')]",
            "[variables('sempQueryScriptFileUri')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('mkdir -p -m 600 ', variables('adminPasswordDir'), '; echo ', parameters('adminPassword'), ' > ', variables('adminPasswordFile'), '; bash ', variables('solaceInstallScriptName'), ' -c ', copyindex(), ' -d ', parameters('dnsLabelForVmIp'), ' -n ', variables('numberOfInstances'), ' -p ', variables('adminPasswordFile'), ' -s ', if(equals(copyindex(), variables('monitorNodeIndex')), '0', parameters('dataDiskSize')), if(empty(parameters('workspaceName')), '', concat(' -w ', reference(variables('solaceWorkspaceName')).outputs.workspaceId.value)), ' -u ', parameters('solaceMessageBrokerDockerImageReference'))]"
         }
      }
    }
  ]
}
