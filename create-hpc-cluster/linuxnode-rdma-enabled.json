{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "The API version"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location in which the resources are created"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The network interface name for the VM"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The Id of the subnet in which the node is created"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account name to store the VHD of the VM"
      }
    },
    "imgPublisher": {
      "type": "string",
      "metadata": {
        "description": "The publisher of the VM image"
      }
    },
    "imgOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer of the VM image"
      }
    },
    "imgSku": {
      "type": "string",
      "metadata": {
        "description": "The sku of the VM image"
      }
    },
    "imgVersion": {
      "type": "string",
      "metadata": {
        "description": "The version of the VM image"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name of the administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The availability set name"
      }
    },
    "customData": {
      "type": "string",
      "metadata": {
        "description": "The custom data in base64 format"
      }
    },
    "scriptBaseUri": {
      "type": "string",
      "metadata": {
        "description": "The base URI of the script"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The HPC cluster name"
      }
    },
    "privateDomainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the private domain forest which will be created by this template, for example 'hpc.local'."
      }
    }
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[parameters('customData')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imgPublisher')]",
            "offer": "[parameters('imgOffer')]",
            "sku": "[parameters('imgSku')]",
            "version": "[parameters('imgVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', toLower(parameters('vmName')), '-osdisk.vhd')]"
            },
            "caching": "ReadOnly",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/updateDNSRecord')]",
          "apiVersion": "[parameters('apiVersion')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.4",
            "settings": {
              "fileUris": [
                "[concat(parameters('scriptBaseUri'), 'updatednsrecord.sh')]"
              ],
              "commandToExecute": "[concat('bash updatednsrecord.sh ', parameters('privateDomainName'), ' ', reference(parameters('nicName')).ipConfigurations[0].properties.privateIPAddress)]"
            }
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/installHPCNodeAgent')]",
          "apiVersion": "[parameters('apiVersion')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/updateDNSRecord')]"
          ],
          "properties": {
            "publisher": "Microsoft.HpcPack",
            "type": "LinuxNodeAgent",
            "typeHandlerVersion": "1.5",
            "protectedSettings": {
              "ClusterName": "[concat(parameters('clusterName'), '.', parameters('privateDomainName'))]"
            }
          }
        }
      ]
    }
  ]
}