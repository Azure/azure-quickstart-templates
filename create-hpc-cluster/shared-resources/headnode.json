{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "The API version"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [ "Standard_LRS", "Premium_LRS" ],
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The network interface name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name of the administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The availability set name to join if specified"
      }
    },
    "enableAutomaticUpdates": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether the VM is enabled for automatic updates"
      }
    },
    "installRDMADriver": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify whether to install RDMA driver"
      }
    },
    "scriptBaseUri": {
      "type": "string",
      "metadata": {
        "description": "The base URI of the script"
      }
    },
    "newOrExistingDomainForest": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [ "new", "existing" ],
      "metadata": {
        "description": "Specify whether to promote the head node as DC or join the head node to an existing domain forest"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the domain forest in which the head node will join, for example 'hpc.local'."
      }
    }
  },
  "variables": {
    "availabilitySet": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
    },
    "dscScriptName": "[if(equals(parameters('newOrExistingDomainForest'), 'new'), 'CreateADPDC', 'JoinADDomain')]"
  },
  "resources": [
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "availabilitySet": "[if(empty(parameters('availabilitySetName')), json('null'), variables('availabilitySet'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServerHPCPack",
            "offer": "WindowsServerHPCPack",
            "sku": "2012R2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmName'), '-datadisk')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": 500,
              "managedDisk": {
                "storageAccountType": "[parameters('storageAccountType')]"
              },
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "condition": "[parameters('installRDMADriver')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/installRDMADriver')]",
          "apiVersion": "[parameters('apiVersion')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.HpcCompute",
            "type": "HpcVmDrivers",
            "typeHandlerVersion": "1.1",
            "autoUpgradeMinorVersion": true
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/', variables('dscScriptName'))]",
          "apiVersion": "[parameters('apiVersion')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),'/extensions/installRDMADriver')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.26",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('scriptBaseUri'),'/', variables('dscScriptName'), '.ps1.zip')]",
                "script": "[concat(variables('dscScriptName'),'.ps1')]",
                "function": "[variables('dscScriptName')]"
              },
              "configurationArguments": {
                "DomainName": "[parameters('domainName')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            }
          }
        }
      ]
    }
  ]
}