{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public dns prefix where the master node will be exposed"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine. Pick a valid username otherwise there will be a BadRequest error."
      }
    },
    "hpcUserName": {
      "type": "string",
      "defaultValue": "hpc",
      "metadata": {
        "description": "User for running HPC applications with shared home directory and SSH public key authentication setup.  This user cannot login from outside the cluster. Pick a valid username otherwise there will be a BadRequest error."
      }
    },
    "headNodeSize": {
      "type": "string",
      "defaultValue": "Standard_A4_v2",
      "metadata": {
        "description": "Size of the head node."
      }
    },
    "workerNodeSize": {
      "type": "string",
      "defaultValue": "Standard_A8_v2",
      "metadata": {
        "description": "Size of the worker nodes."
      }
    },
    "workerNodeCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "This template creates N worker node. Use workerNodeCount to specify that N."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    }
  },
  "variables": {
    "imagePublisher": "SUSE",
    "imageOffer": "SLES-HPC",
    "slesOSVersion": "12-SP3",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressName": "publicips",
    "masterVMName": "master",
    "workerVMName": "worker",
    "nicName": "nic",
    "networkSettings": {
      "virtualNetworkName": "virtualnetwork",
      "addressPrefix": "10.0.0.0/16",
      "subnet": {
        "dse": {
          "name": "dse",
          "prefix": "10.0.0.0/24",
          "vnet": "virtualnetwork"
        }
      },
      "statics": {
        "workerRange": {
          "base": "10.0.0.",
          "start": 5
        },
        "master": "10.0.0.254"
      }
    },
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').virtualNetworkName, variables('networkSettings').subnet.dse.name)]",
    "templateBaseUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/slurm-on-sles12-hpc/",
    "installationCLI": "[concat('bash azuredeploy.sh ', variables('masterVMName'), ' ', variables('workerVMName'), ' ', parameters('workerNodeCount'), ' ', parameters('hpcUserName'), ' ', variables('templateBaseUrl'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('networkSettings').virtualNetworkName]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkSettings').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('networkSettings').subnet.dse.name]",
            "properties": {
              "addressPrefix": "[variables('networkSettings').subnet.dse.prefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('networkSettings').statics.master]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('masterVMName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('headNodeSize')]"
        },
        "osProfile": {
          "computerName": "[variables('masterVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('slesOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk1')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk2')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 1,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk3')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 2,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk4')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 3,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk5')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 4,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk6')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 5,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk7')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 6,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk8')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 7,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk9')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 8,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk10')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 9,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk11')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 10,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk12')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 11,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk13')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 12,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk14')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 13,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk15')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 14,
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('masterVMName'),'_DataDisk16')]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 15,
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMName'), '/Installation')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
          ],
          "commandToExecute": "[variables('installationCLI')]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('workerVMName'), copyindex(), '/Installation')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'),'/extensions/Installation')]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('workerVMName'), copyindex())]"
      ],
      "copy": {
        "name": "foo",
        "count": "[parameters('workerNodeCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
          ],
          "commandToExecute": "[variables('installationCLI')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), 'worker', copyindex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
      ],
      "copy": {
        "name": "foo",
        "count": "[parameters('workerNodeCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('networkSettings').statics.workerRange.base, copyindex(variables('networkSettings').statics.workerRange.start))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('workerVMName'), copyindex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), 'worker', copyindex())]"
      ],
      "copy": {
        "name": "foo",
        "count": "[parameters('workerNodeCount')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('workerNodeSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('workerVMName'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('slesOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('workerVMName'), copyindex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'worker', copyindex()))]"
            }
          ]
        }
      }
    }
  ]
}
