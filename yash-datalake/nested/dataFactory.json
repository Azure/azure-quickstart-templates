{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "SecureString",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      }
    },
    "dataFactoryName": {
      "type": "string",
      "metadata": {
        "description": "Name of the data factory. It Must be globally unique."
      }
    },
    "servicePrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The ID of the service principal that has permissions to create HDInsight clusters in your subscription."
      }
    },
    "servicePrincipalKey": {
      "type": "securestring",
      "metadata": {
        "description": "The access key of the service principal that has permissions to create HDInsight clusters in your subscription."
      }
    },
    "KibanaESDeployedVMIP": {
      "type": "string",
      "metadata": {
        "description": "Name of the data factory. Must be globally unique."
      }
    },
    "dataFactoryLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of the data factory. Currently, only East US and East US 2 are supported. "
      }
    },
    "blobContainer": {
      "type": "string",
      "metadata": {
        "description": "Name of the blob container in the Azure Storage account."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "storage account name"
      }
    }
  },
  "variables": {
    "yashAzureStorageLinkedServiceName": "LinkedServiceToYashAzureStorage",
    "clientAzureStorageLinkedServiceName": "LinkedServiceToClientAzureStorage",
    "onDemandHDInsightLinkedServiceName": "LinkedServiceToOnDemandHDInsight",
    "inputDatasetName": "DatasetIn",
    "outputDatasetName": "DatasetOut",
    "pipeline_name_1": "pipelineForDataMovement",
    "pipeline_name_2": "pipelineForDataTransformation",
    "pipeline_name_3": "pipelineForDataTransformation2",
    "entryFilePath": "Neo4JSparkTransformation-0.0.1-SNAPSHOT-jar-with-dependencies.jar"
  },
  "resources": [
    {
      "type": "Microsoft.DataFactory/factories",
      "name": "[parameters('dataFactoryName')]",
      "apiVersion": "2018-06-01",
      "properties": {},
      "location": "[parameters('dataFactoryLocation')]",
      "resources": [
        {
          "apiVersion": "2018-06-01",
          "name": "[variables('yashAzureStorageLinkedServiceName')]",
          "type": "linkedservices",
          "dependsOn": [
            "[parameters('dataFactoryName')]"
          ],
          "properties": {
            "type": "AzureStorage",
            "description": "Azure Storage linked service",
            "typeProperties": {
              "sasUri": {
                "type": "SecureString",
                "value": "[uri(parameters('_artifactsLocation'),concat(parameters('_artifactsLocationSasToken')))]"
              }
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('clientAzureStorageLinkedServiceName')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "type": "AzureStorage",
            "description": "Azure Storage linked service",
            "typeProperties": {
              "connectionString": {
                "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2018-07-01').keys[0].value)]",
                "type": "SecureString"
              }
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('onDemandHDInsightLinkedServiceName')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]",
            "[variables('clientAzureStorageLinkedServiceName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "type": "HDInsightOnDemand",
            "typeProperties": {
              "clusterType": "spark",
              "clusterSize": 1,
              "version": "3.6",
              "timeToLive": "01:35:00",
              "hostSubscriptionId": "[subscription().subscriptionId]",
              "clusterResourceGroup": "[resourceGroup().name]",
              "tenant": "[subscription().tenantId]",
              "servicePrincipalId": "[parameters('servicePrincipalId')]",
              "servicePrincipalKey": {
                "type": "SecureString",
                "value": "[parameters('servicePrincipalKey')]"
              },
              "linkedServiceName": {
                "referenceName": "[variables('clientAzureStorageLinkedServiceName')]",
                "type": "LinkedServiceReference"
              }
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('inputDatasetName')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]",
            "[variables('yashAzureStorageLinkedServiceName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "type": "AzureBlob",
            "typeProperties": {
              "folderPath": "yash-datalake-resource",
              "fileName": "*"
            },
            "linkedServiceName": {
              "referenceName": "[variables('yashAzureStorageLinkedServiceName')]",
              "type": "LinkedServiceReference"
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('outputDatasetName')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]",
            "[variables('clientAzureStorageLinkedServiceName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "type": "AzureBlob",
            "typeProperties": {
              "folderPath": "[parameters('blobContainer')]"
            },
            "linkedServiceName": {
              "referenceName": "[variables('clientAzureStorageLinkedServiceName')]",
              "type": "LinkedServiceReference"
            }
          }
        },
        {
          "type": "pipelines",
          "name": "[variables('pipeline_name_1')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]",
            "[variables('clientAzureStorageLinkedServiceName')]",
            "[variables('inputDatasetName')]",
            "[variables('outputDatasetName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "activities": [
              {
                "type": "Copy",
                "typeProperties": {
                  "source": {
                    "type": "BlobSource"
                  },
                  "sink": {
                    "type": "BlobSink"
                  }
                },
                "name": "MyCopyActivity",
                "inputs": [
                  {
                    "referenceName": "[variables('inputDatasetName')]",
                    "type": "DatasetReference"
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('outputDatasetName')]",
                    "type": "DatasetReference"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "pipelines",
          "name": "[variables('pipeline_name_2')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]",
            "[variables('clientAzureStorageLinkedServiceName')]",
            "[variables('onDemandHDInsightLinkedServiceName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "activities": [
              {
                "name": "MySparkActivity",
                "type": "HDInsightSpark",
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30
                },
                "typeProperties": {
                  "rootPath": "[concat(parameters('blobContainer'), '/scripts')]",
                  "entryFilePath": "[variables('entryFilePath')]",
                  "arguments": [
                    "[parameters('storageAccountName')]",
                    "[parameters('KibanaESDeployedVMIP')]"
                  ],
                  "className": "com.neo4j.AzureNeo4J",
                  "sparkJobLinkedService": {
                    "referenceName": "[variables('clientAzureStorageLinkedServiceName')]",
                    "type": "LinkedServiceReference"
                  }
                },
                "linkedServiceName": {
                  "referenceName": "[variables('onDemandHDInsightLinkedServiceName')]",
                  "type": "LinkedServiceReference"
                }
              }
            ]
          }
        },
        {
          "type": "pipelines",
          "name": "[variables('pipeline_name_3')]",
          "dependsOn": [
            "[parameters('dataFactoryName')]",
            "[variables('clientAzureStorageLinkedServiceName')]",
            "[variables('onDemandHDInsightLinkedServiceName')]"
          ],
          "apiVersion": "2018-06-01",
          "properties": {
            "activities": [
              {
                "name": "MySparkActivity",
                "type": "HDInsightSpark",
                "policy": {
                  "timeout": "7.00:00:00",
                  "retry": 0,
                  "retryIntervalInSeconds": 30
                },
                "typeProperties": {
                  "rootPath": "[concat(parameters('blobContainer'), '/jars')]",
                  "entryFilePath": "[variables('entryFilePath')]",
                  "arguments": [
                    "[parameters('storageAccountName')]",
                    "[parameters('KibanaESDeployedVMIP')]"
                  ],
                  "className": "com.neo4j.AzureNeo4J",
                  "sparkJobLinkedService": {
                    "referenceName": "[variables('clientAzureStorageLinkedServiceName')]",
                    "type": "LinkedServiceReference"
                  }
                },
                "linkedServiceName": {
                  "referenceName": "[variables('onDemandHDInsightLinkedServiceName')]",
                  "type": "LinkedServiceReference"
                }
              }
            ]
          }
        }
      ]
    }
  ]
}
