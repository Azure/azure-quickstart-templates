{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "lcoation for the EventHub namespace"
      }
    },
    "eventHubNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the EventHub namespace"
      }
    },
    "captureTime": {
      "type": "int",
      "minValue": 60,
      "maxValue": 900,
      "metadata": {
        "description": "the time window in seconds for the archival"
      }
    },
    "captureSize": {
      "type": "int",
      "minValue": 10485760,
      "maxValue": 524288000,
      "metadata": {
        "description": "the size window in bytes for evetn hub capture"
      }
    },
    "eventhubSku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      }
    },
    "skuCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        4
      ],
      "metadata": {
        "description": "MessagingUnits for premium namespace"
      }
    },
    "isAutoInflateEnabled": {
      "type": "string",
      "allowedValues": [
        "True",
        "False"
      ],
      "metadata": {
        "description": "Enable or disable AutoInflate"
      }
    },
    "messageRetentionInDays": {
      "type": "int",
      "minValue": 1,
      "maxValue": 7,
      "metadata": {
        "description": "How long to retain the data in Event Hub"
      }
    },
    "partitionCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of partitions chosen"
      }
    },
    "captureEncodingFormat": {
      "type": "string",
      "allowedValues": [
        "Avro"
      ],
      "metadata": {
        "description": "The encoding format Eventhub capture serializes the EventData when archiving to your storage"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Your existing storage account name where you want the blobs be archived"
      }
    },
    "maximumThroughputUnits": {
      "type": "int",
      "minValue": 0,
      "maxValue": 20,
      "metadata": {
        "description": "Upper limit of throughput units when AutoInflate is enabled, vaule should be within 0 to 20 throughput units."
      }
    },
    "DataCleaningInputStream": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "DataCleaningOutputStream": {
      "type": "string",
      "metadata": {
        "description": "Name of the second Event Hub"
      }
    },
    "captureNameFormat": {
      "type": "string",
      "allowedValues": [
        "{Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}",
        "{Year}/{Month}/{Day}/{Namespace}/{EventHub}/{PartitionId}/{Hour}/{Minute}/{Second}",
        "{Year}/{Month}/{Day}/{Hour}/{Namespace}/{EventHub}/{PartitionId}/{Minute}/{Second}"
      ],
      "metadata": {
        "description": "A Capture Name Format must contain {Namespace}, {EventHub}, {PartitionId}, {Year}, {Month}, {Day}, {Hour}, {Minute} and {Second} fields. These can be arranged in any order with or without delimeters. E.g.  Prod_{EventHub}/{Namespace}\\{PartitionId}_{Year}_{Month}/{Day}/{Hour}/{Minute}/{Second}"
      }
    }
  },
  "variables": {
    "RawOrderOutputContainerName": "raw",
    "DataCleaningOutputContainerName": "transformed",
    "defaultSASKeyName": "RootManageSharedAccessKey"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/Namespaces",
      "name": "[parameters('eventHubNamespaceName')]",
      "apiVersion": "2018-01-01-preview",
      "properties": {
        "isAutoInflateEnabled": "[parameters('isAutoInflateEnabled')]",
        "maximumThroughputUnits": "[parameters('maximumThroughputUnits')]"
      },
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('eventhubSku')]",
        "tier": "[parameters('eventhubSku')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('DataCleaningInputStream')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('eventHubNamespaceName'))]"
          ],
          "properties": {
            "messageRetentionInDays": "[parameters('messageRetentionInDays')]",
            "partitionCount": "[parameters('partitionCount')]",
            "captureDescription": {
              "enabled": "true",
              "encoding": "[parameters('captureEncodingFormat')]",
              "intervalInSeconds": "[parameters('captureTime')]",
              "sizeLimitInBytes": "[parameters('captureSize')]",
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
                  "blobContainer": "[variables('RawOrderOutputContainerName')]",
                  "archiveNameFormat": "[parameters('captureNameFormat')]"
                }
              }
            }
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('DataCleaningOutputStream')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('eventHubNamespaceName'))]"
          ],
          "properties": {
            "messageRetentionInDays": "[parameters('messageRetentionInDays')]",
            "partitionCount": "[parameters('partitionCount')]",
            "captureDescription": {
              "enabled": "true",
              "encoding": "[parameters('captureEncodingFormat')]",
              "intervalInSeconds": "[parameters('captureTime')]",
              "sizeLimitInBytes": "[parameters('captureSize')]",
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
                  "blobContainer": "[variables('DataCleaningOutputContainerName')]",
                  "archiveNameFormat": "[parameters('captureNameFormat')]"
                }
              }
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "authRuleResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventHubNamespaceName'), variables('defaultSASKeyName'))]"
    }
  }
}
