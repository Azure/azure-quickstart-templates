{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources (6 alphanumeric characters or less).  A unique hash is prepended to the string for some resources, while resource-specific information is appended."
      },
      "maxLength": 6
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "gethadmin",
      "metadata": {
        "description": "Administrator username of each deployed VM (alphanumeric characters only)"
      },
      "minLength": 1,
      "maxLength": 64
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for each deployed VM"
      },
      "minLength": 12,
      "maxLength": 72
    },
    "ethereumAccountPsswd": {
      "type": "securestring",
      "metadata": {
        "description": "Password used to secure the default Ethereum account that will be generated"
      },
      "minLength": 12
    },
    "ethereumAccountPassphrase": {
      "type": "securestring",
      "metadata": {
        "description": "Password used to generate the private key associated with the default Ethereum account that is generated.  Consider a password with sufficient randomness to ensure a strong private key"
      },
      "minLength": 12
    },
    "ethereumNetworkID": {
      "type": "int",
      "defaultValue": 72,
      "metadata": {
        "description": "Private Ethereum network ID to which to connect (max 9 digit number)"
      },
      "minValue": 5,
      "maxValue": 2147483647
    },
    "numConsortiumMembers": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of members within the network.  Each member's nodes live in their own subnet."
      },
      "minValue": 2,
      "maxValue": 5
    },
    "numMiningNodesPerMember": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of mining nodes to create for each consortium member."
      },
      "minValue": 1,
      "maxValue": 19
    },
    "mnNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16"
      ],
      "metadata": {
        "description": "Size of the virtual machine used for mining nodes"
      }
    },
    "numTXNodes": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of load balanced transaction nodes"
      },
      "minValue": 1,
      "maxValue": 5
    },
    "txNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16"
      ],
      "metadata": {
        "description": "Size of the virtual machine for transaction nodes"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "artifactsLocationURL": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/ethereum-consortium-blockchain-network",
    "apiVersionDeployments": "2016-09-01",
    "apiVersionStorageAccounts": "2016-01-01",
    "apiVersionAvailabilitySets": "2016-03-30",
    "apiVersionNetworkSecurityGroups": "2016-09-01",
    "apiVersionNetworkInterfaces": "2016-09-01",
    "apiVersionVirtualMachines": "2016-03-30",
    "apiVersionVirtualNetworks": "2016-09-01",
    "authType": "password",
    "storageAccountType": "Standard_LRS",
    "namingInfix": "[toLower(substring(concat(parameters('namePrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
    "availabilitySetName": "[concat(variables('namingInfix'), 'AvSet')]",
    "httpPort": 80,
    "adminSitePort": 3000,
    "sshPort": 22,
    "sshNATFrontEndStartingPort": 3000,
    "gethRPCPort": 8545,
    "gethIPCPort": 30303,
    "loadBalancerName": "[concat(variables('namingInfix'), '-LB')]",
    "loadBalancerBackendAddressPoolName": "LoadBalancerBackend1",
    "loadBalancerInboundNatRuleNamePrefix": "SSH-VM",
    "numMNNodes": "[mul(parameters('numConsortiumMembers'), parameters('numMiningNodesPerMember'))]",
    "maxVMsPerStorageAcct": 20,
    "mnStorageAcctCount": "[add(div(variables('numMNNodes'), variables('maxVMsPerStorageAcct')), 1)]",
    "mnStorageAcctNames": [
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'mn0')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'mn1')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'mn2')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'mn3')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'mn4')]"
    ],
    "mnVMNamePrefix": "[concat(variables('namingInfix'), '-mn')]",
    "mnNICPrefix": "nic-mn",
    "txStorageAcctName": "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'tx')]",
    "txVMNamePrefix": "[concat(variables('namingInfix'), '-tx')]",
    "txSubnetName": "[concat(uniqueString(concat(resourceGroup().id, concat(variables('namingInfix'), 'subnet')), 'tx'))]",
    "txSubnetPrefix": "10.0.10.0/24",
    "txSubnetRef": "[concat(variables('vnetID'),'/subnets/', variables('txSubnetName'))]",
    "txNIPrefix": "nic-tx",
    "virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
    "txNsgName": "[concat(variables('namingInfix'), 'TXNsg')]",
    "mnNsgName": "[concat(variables('namingInfix'), 'MNNsg')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "addressPrefix": "10.0.0.0/20",
    "mnSubnetNameArray": [
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'subnet-mn0')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'subnet-mn1')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'subnet-mn2')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'subnet-mn3')]",
      "[concat(uniqueString(resourceGroup().id, variables('namingInfix')), 'subnet-mn4')]"
    ],
    "mnSubnetPrefixArray": [
      "10.0.0.0/24",
      "10.0.1.0/24",
      "10.0.2.0/24",
      "10.0.3.0/24",
      "10.0.4.0/24"
    ],
    "mnSubnetRefArray": [
      "[concat(variables('vnetID'),'/subnets/', variables('mnSubnetNameArray')[0])]",
      "[concat(variables('vnetID'),'/subnets/', variables('mnSubnetNameArray')[1])]",
      "[concat(variables('vnetID'),'/subnets/', variables('mnSubnetNameArray')[2])]",
      "[concat(variables('vnetID'),'/subnets/', variables('mnSubnetNameArray')[3])]",
      "[concat(variables('vnetID'),'/subnets/', variables('mnSubnetNameArray')[4])]"
    ],
    "numSubnets": "[add(parameters('numConsortiumMembers'), 1)]",
    "subnetPropertiesArray": [
      {
        "name": "[variables('txSubnetName')]",
        "properties": {
          "addressPrefix": "[variables('txSubnetPrefix')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('txNsgName'))]"
          }
        }
      },
      {
        "name": "[variables('mnSubnetNameArray')[0]]",
        "properties": {
          "addressPrefix": "[variables('mnSubnetPrefixArray')[0]]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mnNsgName'))]"
          }
        }
      },
      {
        "name": "[variables('mnSubnetNameArray')[1]]",
        "properties": {
          "addressPrefix": "[variables('mnSubnetPrefixArray')[1]]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mnNsgName'))]"
          }
        }
      },
      {
        "name": "[variables('mnSubnetNameArray')[2]]",
        "properties": {
          "addressPrefix": "[variables('mnSubnetPrefixArray')[2]]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mnNsgName'))]"
          }
        }
      },
      {
        "name": "[variables('mnSubnetNameArray')[3]]",
        "properties": {
          "addressPrefix": "[variables('mnSubnetPrefixArray')[3]]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mnNsgName'))]"
          }
        }
      },
      {
        "name": "[variables('mnSubnetNameArray')[4]]",
        "properties": {
          "addressPrefix": "[variables('mnSubnetPrefixArray')[4]]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mnNsgName'))]"
          }
        }
      }
    ],
    "ubuntuImage": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04.0-LTS",
      "version": "latest"
    }
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[variables('location')]",
      "properties": {}
    },
    {
      "apiVersion": "2016-09-01",
      "name": "loadBalancerLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('artifactsLocationURL'), '/nested/loadBalancer.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "loadBalancerName": {
            "value": "[variables('loadBalancerName')]"
          },
          "dnsHostName": {
            "value": "[variables('namingInfix')]"
          },
          "loadBalancerBackendAddressPoolName": {
            "value": "[variables('loadBalancerBackendAddressPoolName')]"
          },
          "loadBalancerInboundNatRuleNamePrefix": {
            "value": "[variables('loadBalancerInboundNatRuleNamePrefix')]"
          },
          "frontendPort1": {
            "value": "[variables('httpPort')]"
          },
          "backendPort1": {
            "value": "[variables('adminSitePort')]"
          },
          "frontendPort2": {
            "value": "[variables('gethRPCPort')]"
          },
          "backendPort2": {
            "value": "[variables('gethRPCPort')]"
          },
          "numInboundNATRules": {
            "value": "[parameters('numTXNodes')]"
          },
          "inboundNATRuleFrontendStartingPort": {
            "value": "[variables('sshNATFrontEndStartingPort')]"
          },
          "inboundNATRuleBackendPort": {
            "value": "[variables('sshPort')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('mnNsgName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NSG - Mining (MN)"
      },
      "properties": {
        "securityRules": [
          {
            "name": "block-bootnodes",
            "properties": {
              "description": "Block Internet Bootnodes",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "30303",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('txNsgName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NSG - Transaction (TX)"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-geth-rpc",
            "properties": {
              "description": "Allow geth RPC",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "8545",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-etheradmin",
            "properties": {
              "description": "Allow etheradmin web service",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "block-bootnodes",
            "properties": {
              "description": "Block Internet Bootnodes",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "30303",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('txNsgName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('mnNsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": "[take(variables('subnetPropertiesArray'), variables('numSubnets'))]"
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "txVMLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "loadBalancerLinkedTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('artifactsLocationURL'), '/nested/txVMAuth', '-', variables('authType'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersionVirtualMachines": {
            "value": "[variables('apiVersionVirtualMachines')]"
          },
          "apiVersionNetworkInterfaces": {
            "value": "[variables('apiVersionNetworkInterfaces')]"
          },
          "apiVersionStorageAccounts": {
            "value": "[variables('apiVersionStorageAccounts')]"
          },
          "loadBalancerName": {
            "value": "[variables('loadBalancerName')]"
          },
          "loadBalancerBackendAddressPoolName": {
            "value": "[variables('loadBalancerBackendAddressPoolName')]"
          },
          "loadBalancerInboundNatRuleNamePrefix": {
            "value": "[variables('loadBalancerInboundNatRuleNamePrefix')]"
          },
          "txSubnetRef": {
            "value": "[variables('txSubnetRef')]"
          },
          "txVMNamePrefix": {
            "value": "[variables('txVMNamePrefix')]"
          },
          "numTXNodes": {
            "value": "[parameters('numTXNodes')]"
          },
          "txStorageAcctName": {
            "value": "[variables('txStorageAcctName')]"
          },
          "txNIPrefix": {
            "value": "[variables('txNIPrefix')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetName')]"
          },
          "txNodeVMSize": {
            "value": "[parameters('txNodeVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminSSHKey": {
            "value": ""
          },
          "ubuntuImage": {
            "value": "[variables('ubuntuImage')]"
          },
          "namingInfix": {
            "value": "[variables('namingInfix')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "mnVMLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('artifactsLocationURL'), '/nested/mnVMAuth', '-', variables('authType'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersionVirtualMachines": {
            "value": "[variables('apiVersionVirtualMachines')]"
          },
          "apiVersionNetworkInterfaces": {
            "value": "[variables('apiVersionNetworkInterfaces')]"
          },
          "apiVersionStorageAccounts": {
            "value": "[variables('apiVersionStorageAccounts')]"
          },
          "mnVMNamePrefix": {
            "value": "[variables('mnVMNamePrefix')]"
          },
          "numMNNodes": {
            "value": "[variables('numMNNodes')]"
          },
          "mnNICPrefix": {
            "value": "[variables('mnNICPrefix')]"
          },
          "mnStorageAcctNames": {
            "value": "[variables('mnStorageAcctNames')]"
          },
          "mnStorageAcctCount": {
            "value": "[variables('mnStorageAcctCount')]"
          },
          "mnSubnetRefArray": {
            "value": "[variables('mnSubnetRefArray')]"
          },
          "numConsortiumMembers": {
            "value": "[parameters('numConsortiumMembers')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "mnNodeVMSize": {
            "value": "[parameters('mnNodeVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminSSHKey": {
            "value": ""
          },
          "ubuntuImage": {
            "value": "[variables('ubuntuImage')]"
          },
          "namingInfix": {
            "value": "[variables('namingInfix')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "vmExtensionLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "txVMLinkedTemplate",
        "mnVMLinkedTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('artifactsLocationURL'), '/nested/vmExtension.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "numBootNodes": {
            "value": "[parameters('numConsortiumMembers')]"
          },
          "txVMNamePrefix": {
            "value": "[variables('txVMNamePrefix')]"
          },
          "numTXNodes": {
            "value": "[parameters('numTXNodes')]"
          },
          "mnVMNamePrefix": {
            "value": "[variables('mnVMNamePrefix')]"
          },
          "numMNNodes": {
            "value": "[variables('numMNNodes')]"
          },
          "artifactsLocationURL": {
            "value": "[variables('artifactsLocationURL')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "ethereumAccountPsswd": {
            "value": "[parameters('ethereumAccountPsswd')]"
          },
          "ethereumAccountPassphrase": {
            "value": "[parameters('ethereumAccountPassphrase')]"
          },
          "ethereumNetworkID": {
            "value": "[parameters('ethereumNetworkID')]"
          },
          "gethIPCPort": {
            "value": "[variables('gethIPCPort')]"
          },
          "adminSitePort": {
            "value": "[variables('adminSitePort')]"
          },
          "apiVersionStorageAccounts": {
            "value": "[variables('apiVersionStorageAccounts')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "admin-site": {
      "type": "string",
      "value": "[concat('http://', reference('loadBalancerLinkedTemplate').outputs.fqdn.value)]"
    },
    "ethereum-rpc-endpoint": {
      "type": "string",
      "value": "[concat('http://', reference('loadBalancerLinkedTemplate').outputs.fqdn.value, ':', variables('gethRPCPort'))]"
    },
    "ssh-to-first-tx-node": {
      "type": "string",
      "value": "[concat('ssh -p ', variables('sshNATFrontEndStartingPort'), ' ', parameters('adminUsername'), '@', reference('loadBalancerLinkedTemplate').outputs.fqdn.value)]"
    }
  }
}