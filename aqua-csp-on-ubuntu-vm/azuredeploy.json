{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vmName": {
			"type": "String",
			"metadata": {
				"description": "Name of the VM"
			}
		},
		"newStorageAccountName": {
			"defaultValue": "vmsa",
			"type": "String",
			"metadata": {
				"description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
			}
		},
		"adminUsername": {
			"defaultValue": "ubuntu",
			"type": "String",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"sshPublicKey": {
			"type": "SecureString",
			"metadata": {
				"description": "Enter public ssh key"
			}
		},
		"dnsNameForPublicIP": {
			"defaultValue": "vmip",
			"type": "String",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"vmSize": {
			"defaultValue": "Standard_DS2_v2",
			"type": "String",
			"metadata": {
				"description": "Azure VM size"
			}
		},
		"ubuntuOSVersion": {
			"defaultValue": "16.04.0-LTS",
			"allowedValues": ["14.04.2-LTS",
			"15.10",
			"16.04.0-LTS"],
			"type": "String",
			"metadata": {
				"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.10."
			}
		},
		"deployAqua": {
			"defaultValue": "no",
			"allowedValues": ["no",
			"yes"],
			"type": "String",
			"metadata": {
				"description": "Specify if you want to deploy Aqua after installing docker"
			}
		},
		"dockerHubUser": {
			"type": "String",
			"metadata": {
				"description": "User name for Docker Hub registry"
			}
		},
		"dockerHubPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Password for Docker Hub registry"
			}
		},
		"aquaLicenseToken": {
			"type": "SecureString",
			"metadata": {
				"description": "Enter Aqua licnse token"
			}
		},
		"aquaCSPImage": {
			"defaultValue": "aquasec/csp:3.0.0",
			"type": "String",
			"metadata": {
				"description": "The Aqua CSP version to deploy"
			}
		},
		"aquaAdminPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Please select your Aqua administrator password"
			}
		},
		"aquaDBPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Please select the password for PostgreSQL DB that is used during Aqua deployment"
			}
		},
		"addACRReg": {
			"defaultValue": "no",
			"allowedValues": ["no",
			"yes"],
			"type": "String",
			"metadata": {
				"description": "When set to yes, all Azure container registries in the AD will be added to Aqua server"
			}
		},
		"azureADId": {
			"type": "SecureString",
			"metadata": {
				"description": "Azure active directory ID, needs to have contributer role"
			}
		},
		"azureADPassword": {
			"type": "SecureString",
			"defaultValue": "",
			"metadata": {
				"description": "Azure active directory password"
			}
		},
		"azureTenantID": {
			"type": "SecureString",
			"defaultValue": "",
			"metadata": {
				"description": "Azure tenant ID"
			}
		}
	},
	"variables": {
		"dockerRegistryServer": "docker.io",
		"extensionName": "CustomScript",
		"aquaContainerName": "aqua-csp",
		"imagePublisher": "Canonical",
		"imageOffer": "UbuntuServer",
		"sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
		"OSDiskName": "osdiskforlinuxsimple",
		"nicName": "myVMNic",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"storageAccountType": "Standard_LRS",
		"publicIPAddressName": "myPublicIP",
		"publicIPAddressType": "Dynamic",
		"vmStorageAccountContainerName": "vhds",
		"virtualNetworkName": "MyVNET",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"addACRegistries": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/aqua-csp-on-ubuntu-vm/add-acr-registries.json"
	},
	"resources": [{
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[parameters('newStorageAccountName')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"accountType": "[variables('storageAccountType')]"
		}
	},
	{
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('publicIPAddressName')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
			"dnsSettings": {
				"domainNameLabel": "[parameters('dnsNameForPublicIP')]"
			}
		}
	},
	{
		"type": "Microsoft.Network/virtualNetworks",
		"name": "[variables('virtualNetworkName')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"addressSpace": {
				"addressPrefixes": ["[variables('addressPrefix')]"]
			},
			"subnets": [{
				"name": "[variables('subnetName')]",
				"properties": {
					"addressPrefix": "[variables('subnetPrefix')]"
				}
			}]
		}
	},
	{
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('nicName')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"ipConfigurations": [{
				"name": "ipconfig1",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
					},
					"subnet": {
						"id": "[variables('subnetRef')]"
					}
				}
			}]
		},
		"dependsOn": ["[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
		"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"]
	},
	{
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[parameters('vmName')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('vmSize')]"
			},
			"osProfile": {
				"computerName": "[parameters('vmName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"linuxConfiguration": {
					"disablePasswordAuthentication": "true",
					"ssh": {
						"publicKeys": [{
							"path": "[variables('sshKeyPath')]",
							"keyData": "[parameters('sshPublicKey')]"
						}]
					}
				}
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('imagePublisher')]",
					"offer": "[variables('imageOffer')]",
					"sku": "[parameters('ubuntuOSVersion')]",
					"version": "latest"
				},
				"osDisk": {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
				}]
			}
		},
		"dependsOn": ["[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"]
	},
	{
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(parameters('vmName'),'/installcustomscript')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"publisher": "Microsoft.Azure.Extensions",
			"type": "CustomScript",
			"typeHandlerVersion": "2.0",
			"autoUpgradeMinorVersion": true,
			"protectedSettings": {
				"fileUris": ["https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/aqua-csp-on-ubuntu-vm/deployAquaCSP.sh"],
				"commandToExecute": "[concat('./deployAquaCSP.sh',' ',parameters('adminUsername'),' ',parameters('dockerHubUser'),' ',parameters('dockerHubPassword'),' ',variables('dockerRegistryServer'),' ',parameters('aquaCSPImage'),' ',variables('aquaContainerName'),' ',parameters('aquaDBPassword'),' ',parameters('aquaLicenseToken'),' ',parameters('aquaAdminPassword'),' ',parameters('deployAqua'))]"
			}
		},
		"dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"]
	},
	{
		"type": "Microsoft.Resources/deployments",
		"name": "addACRRegistry",
		"apiVersion": "2015-01-01",
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[variables('addACRegistries')]",
				"contentVersion": "1.0.0.0"
			},
			"parameters": {
				"vmName": {
					"value": "[parameters('vmName')]"
				},
				"addACRReg": {
					"value": "[parameters('addACRReg')]"
				},
				"aquaAdminPassword": {
					"value": "[parameters('aquaAdminPassword')]"
				},
				"azureADId": {
					"value": "[parameters('azureADId')]"
				},
				"azureADPassword": {
					"value": "[parameters('azureADPassword')]"
				},
				"azureTenantID": {
					"value": "[parameters('azureTenantID')]"
				}
			}
		},
		"dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),'/extensions/installcustomscript')]"]
	}]
}