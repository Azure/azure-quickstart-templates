{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentName": {
      "type": "string",
      "defaultValue": ""
    },
    "asperaUsername": {
      "type": "string"
    },
    "asperaAdminPassword": {
      "type": "securestring"
    },
    "baseUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/sysgain/azurequickstarts/master/VOD-Aspera-Wowza-AzureMediaServices/"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "virtualMachineName": "[concat(parameters('deploymentName'), 'aspera')]",
    "virtualMachineSize": "Standard_DS1",
    "storageAccountType": "Standard_LRS",
    "virtualNetworkName": "[concat(parameters('deploymentName'), 'vnet')]",
    "networkInterfaceName": "[concat(parameters('deploymentName'), 'nic')]",
    "networkSecurityGroupName": "[concat(parameters('deploymentName'), 'nsg')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "subnet1",
    "subnetPrefix": "10.0.1.0/24",
    "publicIpAddressName": "[concat(parameters('deploymentName'), 'publicIP')]",
    "vmExtensionName": "aspscript",
    "scriptFilePath": "[concat(parameters('baseUri'), 'aspera/configasp.sh')]",
    "executeCmd": "[concat('sh configasp.sh', ' ',parameters('asperaUsername'))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),  variables('subnetName'))]",
    "storageAccName": "[concat(parameters('deploymentName'),uniqueString(resourceGroup().id))]",
    "publicIPdns": "[concat(parameters('deploymentName'),'aspera')]",
    "FQDN": "[concat(variables('publicIPdns'),'.',parameters('location'),'.cloudapp.azure.com')]"
  },
  "resources": [
    {
      "name": "[variables('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('virtualMachineName')]",
          "adminUsername": "[parameters('asperaUsername')]",
          "adminPassword": "[parameters('asperaAdminPassword')]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "aspera",
            "offer": "aspera-faspex-ondemand100",
            "sku": "aspera_fod100",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachineName')]",
            "vhd": {
              "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), variables('virtualMachineName'), '.vhd')]"
            },
            "createOption": "FromImage"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "plan": {
        "name": "aspera_fod100",
        "publisher": "aspera",
        "product": "aspera-faspex-ondemand100"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('scriptFilePath')]"
          ],
          "commandToExecute": "[variables('executeCmd')]"
        }
      }
    },
    {
      "name": "[variables('storageAccName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIPdns')]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "https",
            "properties": {
              "priority": 1010,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "node",
            "properties": {
              "priority": 1020,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "9092",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "ssh",
            "properties": {
              "priority": 1030,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "33001",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "ssh2",
            "properties": {
              "priority": 1040,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "fasp",
            "properties": {
              "priority": 1050,
              "sourceAddressPrefix": "*",
              "protocol": "Udp",
              "destinationPortRange": "33001",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "asperaURL": {
      "type": "string",
      "value": "[ variables('FQDN')]"
    }
  }
}
