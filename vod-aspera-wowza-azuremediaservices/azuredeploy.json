{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentPrefix": {
      "type": "string",
      "metadata": {
        "description": "Deployment Name of the Stack"
      }
    },
    "desktopUsername": {
      "type": "string",
      "metadata": {
        "description": "Desktop Administrator Name"
      }
    },
    "desktopAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Desktop Administrator Password"
      }
    },
    "asperaUsername": {
      "type": "string",
      "metadata": {
        "description": "Aspera Server Administrator Name"
      }
    },
    "asperaAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Aspera Server Administrator Password"
      }
    },
    "wowzaUsername": {
      "type": "string",
      "metadata": {
        "description": "Wowza Streaming Server Administrator Name"
      }
    },
    "automationAccountName": {
      "type": "string",
      "defaultValue": "auto",
      "metadata": {
        "description": "The account name must not be empty, and must not exceed 50 characters in length.  The account name must start with a letter or number.  The account name can contain letters, numbers, and dashes.  The final character must be a letter or a number. "
      }
    },
    "jobId": {
      "type": "string",
      "defaultValue": "24b18f62-aa2c-4528-ac10-1e3602eb4053",
      "metadata": {
        "description": "Generate a Job ID (GUID) from https://www.guidgenerator.com/online-guid-generator.aspx "
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/vod-aspera-wowza-azuremediaservices/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    }
  },
  "variables": {
    "automationAccountName": "[concat(parameters('automationAccountName'),uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "ams",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('ams/ams.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {}
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "automationjob",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "['Microsoft.Resources/deployments/ams']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('ams/automationjob.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "automationAccountName": {
            "value": "[variables('automationAccountName')]"
          },
          "jobId": {
            "value": "[parameters('jobId')]"
          },
          "MediaServices_Name": {
            "value": "[reference('ams').outputs.MediaServices_Name.value]"
          },
          "MediaServices_Keys": {
            "value": "[reference('ams').outputs.MediaServices_Keys.value]"
          },
          "Input_StorageAccounts_Name": {
            "value": "[reference('ams').outputs.Input_StorageAccounts_Name.value]"
          },
          "Input_StorageAccounts_Keys": {
            "value": "[reference('ams').outputs.Input_StorageAccounts_Keys.value]"
          },
          "Ouput_StorageAccounts_Name": {
            "value": "[reference('ams').outputs.Ouput_StorageAccounts_Name.value]"
          },
          "Output_StorageAccounts_Keys": {
            "value": "[reference('ams').outputs.Output_StorageAccounts_Keys.value]"
          },
          "MediaService_StorageAccounts_Name": {
            "value": "[reference('ams').outputs.MediaService_StorageAccounts_Name.value]"
          },
          "MediaService_StorageAccounts_Keys": {
            "value": "[reference('ams').outputs.MediaService_StorageAccounts_Keys.value]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "desktop",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "['Microsoft.Resources/deployments/ams']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('desktop/desktop.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "deploymentPrefix": {
            "value": "[parameters('deploymentPrefix')]"
          },
          "storageAccountName": {
            "value": "[reference('ams').outputs.Input_StorageAccounts_Name.value]"
          },
          "storageAccountKey": {
            "value": "[reference('ams').outputs.Input_StorageAccounts_Keys.value]"
          },
          "containerName": {
            "value": "videos"
          },
          "desktopUsername": {
            "value": "[parameters('desktopUsername')]"
          },
          "desktopAdminPassword": {
            "value": "[parameters('desktopAdminPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "aspera",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "['Microsoft.Resources/deployments/ams']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('aspera/aspera.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "deploymentPrefix": {
            "value": "[parameters('deploymentPrefix')]"
          },
          "asperaUsername": {
            "value": "[parameters('asperaUsername')]"
          },
          "asperaAdminPassword": {
            "value": "[parameters('asperaAdminPassword')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "wowza",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "['Microsoft.Resources/deployments/ams']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('wowza/wowza.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "deploymentPrefix": {
            "value": "[parameters('deploymentPrefix')]"
          },
          "storageAccountName": {
            "value": "[reference('ams').outputs.Ouput_StorageAccounts_Name.value]"
          },
          "storageAccountKey": {
            "value": "[reference('ams').outputs.Output_StorageAccounts_Keys.value]"
          },
          "containerName": {
            "value": "videos"
          },
          "wowzaUsername": {
            "value": "[parameters('wowzaUsername')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "adminPasswordOrKey": {
            "value": "[parameters('adminPasswordOrKey')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "Input_StorageAccounts_Name": {
      "type": "string",
      "value": "[reference('ams').outputs.Input_StorageAccounts_Name.value]"
    },
    "Input_StorageAccounts_Keys": {
      "type": "string",
      "value": "[reference('ams').outputs.Input_StorageAccounts_Keys.value]"
    },
    "Ouput_StorageAccounts_Name": {
      "type": "string",
      "value": "[reference('ams').outputs.Ouput_StorageAccounts_Name.value]"
    },
    "Output_StorageAccounts_Keys": {
      "type": "string",
      "value": "[reference('ams').outputs.Output_StorageAccounts_Keys.value]"
    },
    "desktopURL": {
      "type": "string",
      "value": "[reference('desktop').outputs.desktopURL.value]"
    },
    "desktopUsername": {
      "type": "string",
      "value": "[parameters('desktopUsername')]"
    },
    "desktopAdminPassword": {
      "type": "string",
      "value": "[parameters('desktopAdminPassword')]"
    },
    "asperaURL": {
      "type": "string",
      "value": "[reference('aspera').outputs.asperaURL.value]"
    },
    "asperaUsername": {
      "type": "string",
      "value": "[parameters('asperaUsername')]"
    },
    "asperaAdminPassword": {
      "type": "string",
      "value": "[parameters('asperaAdminPassword')]"
    },
    "wowzaURL": {
      "type": "string",
      "value": "[reference('wowza').outputs.wowzaURL.value]"
    },
    "wowzaUsername": {
      "type": "string",
      "value": "[parameters('wowzaUsername')]"
    }
  }
}
