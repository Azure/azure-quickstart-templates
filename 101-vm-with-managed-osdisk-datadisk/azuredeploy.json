{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dataDiskCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Total number of managed data disks to provision. Limited by VM Size."
      }
    },
    "dataDiskSizeGB": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "SIze of each managed data disk in GB."
      }
    },
    "vmName": {
      "type": "string",
      "maxLength": 12,
      "metadata": {
        "description": "Name of VM & Computer Name with limit of 12 characters that are appended with a hyphen and copyIndex"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_A2m_v2",
        "Standard_A4m_v2",
        "Standard_A8m_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H8",
        "Standard_H16",
        "Standard_H8m",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_NV6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NC6",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r"
      ],
      "metadata": {
        "description":  "Size of the VM, for details visit https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes"
      }
    },
    "vmImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description":  "Microsoft Azure Marketplace Pubisher."
      }
    },
    "vmImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Microsoft Azure Marketplace Offer."
      }
    },
    "vmImageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Microsoft Azure Marketplace SKU."
      }
    },
    "vmImageOSVersion": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "Used to determine which Network Security Group port to apply in rule."
      }
    },
    "vmOSDiskSizeGB": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "Size of VM OS disk."
      }
    },
    "vmOSDiskStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage SKU Name"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of VMs to create."
      }
    },
    "localAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "VM local administrator username."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM local administrator password."
      }
    },
    "vntName": {
      "type": "string",
      "metadata": {
        "description": "Name of existing VNet in same resource group"
      }
    },
    "sntName": {
      "type": "string",
      "metadata": {
        "description": "Name of existing subnet in VNet above in same resource group"
      }
    },
    "nestedTemplateUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/101-vm-with-managed-osdisk-datadisk/101-vm-with-managed-osdisk-datadisk/nested/managed-datadisks-template.json",
      "metadata": {
        "description": "Uri for the managed disk linked template."
      }
    }
  },
  "variables": {
    "vmAPI": "2017-03-30",
    "nicAPI": "2016-03-30",
    "pipAPI": "2016-03-30",
    "nsgAPI": "2016-03-30",
    "deploymentsAPI": "2015-01-01",

    "vntResourceID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vntName'))]",
    "sntResourceID": "[concat(variables('vntResourceID'), '/subnets/', parameters('sntName'))]",

    "nsgRemoteAccessPort": {
      "Windows": "3389",
      "Linux": "22"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('vmAPI')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "nicCopy",
        "managedDataDiskCopy"
      ],
      "tags": {},
      "copy": {
        "count": "[parameters('vmCount')]",
        "name": "vmCopy"
      },
      "name": "[concat(parameters('vmName'),'-',copyIndex(1))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'),'-',copyIndex(1))]",
          "adminUsername": "[parameters('localAdminUserName')]",
          "adminPassword": "[parameters('localAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('vmImagePublisher')]",
            "offer": "[parameters('vmImageOffer')]",
            "sku": "[parameters('vmImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'-',copyIndex(1),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "[parameters('vmOSDiskSizeGB')]",
            "managedDisk": {
              "storageAccountType": "[parameters('vmOSDiskStorageType')]"
            }
          },
          "dataDisks": "[reference(concat('nested-managedDataDisks-template-', copyIndex(1))).outputs.dataDisks.value]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-',copyIndex(1),'-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('nsgAPI')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "copy": {
        "count": "[parameters('vmCount')]",
        "name": "nsgCopy"
      },
      "name": "[concat(parameters('vmName'),'-',copyIndex(1),'-nsg')]",
      "properties": {
        "securityRules": [
          {
            "name": "[concat(parameters('vmName'),'-',copyIndex(1),'-nsg-rule-remote-access')]",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "[variables('nsgRemoteAccessPort')[parameters('vmImageOSVersion')]]",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      },
      "resources": []
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('nicAPI')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat(parameters('vmName'),'-',copyIndex(1),'-pip')]",
        "nsgCopy"
      ],
      "tags": {},
      "copy": {
        "count": "[parameters('vmCount')]",
        "name": "nicCopy"
      },
      "name": "[concat(parameters('vmName'),'-',copyIndex(1),'-nic')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),'-',copyIndex(1),'-pip'))]"
              },
              "subnet": {
                "id": "[variables('sntResourceID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(parameters('vmName'),'-',copyIndex(1),'-nsg'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('pipAPI')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "copy": {
        "count": "[parameters('vmCount')]",
        "name": "pipCopy"
      },
      "name": "[concat(parameters('vmName'),'-',copyIndex(1),'-pip')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentsAPI')]",
      "dependsOn": [
        "nicCopy"
      ],
      "copy": {
        "name": "managedDataDiskCopy",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat('nested-managedDataDisks-template-', copyIndex(1))]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[parameters('nestedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {"value": "[resourceGroup().location]"},
          "vmName": { "value": "[concat(parameters('vmName'),'-',copyIndex(1))]" },
          "dataDiskCount": { "value": "[parameters('dataDiskCount')]" },
          "dataDiskSizeGB": { "value": "[parameters('dataDiskSizeGB')]" }
        }
      }
    }
  ],
  "outputs": {}
}
