{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Size of Cassandra VMs."
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Globally unique dns name for the Cassandra nodes scale set. Must be 3-61 characters in length and globally unique across Azure."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "nodeCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      }
    },
    "cassandraVersion": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      },
      "defaultValue": "3.11.0",
      "allowedValues": [
        "2.1.18",
        "2.1",
        "2.2.10",
        "2.2",
        "3.0.14",
        "3.0",
        "3.11.0",
        "3.11",
        "3"
      ]
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use"
      }
    }
  },
  "variables": {
    "publicIPAddressName": "loadBalancerPublicIP",
    "loadBalancerName": "cassandraLoadBalancer",
    "loadBalancerFrontEndName": "loadBalancerFrontEnd",
    "loadBalancerBackEndName": "loadBalancerBackEnd",
    "loadBalancerProbeName": "loadBalancerHttpProbe",
    "loadBalancerNatPoolName": "loadBalancerNatPool",
    "namingInfix": "[toLower(parameters('clusterName'))]",
    "nicName": "[concat(variables('namingInfix'), '-nic')]",
    "_artifactsLocation": "https://raw.githubusercontent.com/yaron2/azure-quickstart-templates/cassandra-cluster/101-cassandra-existing-vnet/customScripts",
    "_extensionScript": "cassandraSetup.sh",
    "masterVM": "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'), '/virtualMachines/1/networkInterfaces/', variables('nicName'))]",
    "_artifactsLocationSasToken": ""
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "capacity": "[parameters('nodeCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.10",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('existingSubnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('loadBalancerBackEndName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-04-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('clusterName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-04-01",
      "dependsOn": [
        "[variables('publicIPAddressName')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerBackendName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "roundRobinLBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 9042,
              "backendPort": 9042,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/', variables('loadBalancerProbeName'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('loadBalancerProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 9042,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatPools": []
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "VMSSextension",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "http://pastebin.com/raw/GsNTiAMc",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterName": {
            "value": "[variables('namingInfix')]"
          },
          "scriptLocation": {
            "value": "[concat(variables('_artifactsLocation'), '/', variables('_extensionScript'), variables('_artifactsLocationSasToken'))]"
          },
          "scriptName": {
            "value": "[variables('_extensionScript')]"
          },
          "privateIPAddress": {
            "value": "[reference(variables('masterVM'),'2016-09-01').ipConfigurations[0].properties.privateIPAddress]"
          }
        }
      }
    }
  ]
}