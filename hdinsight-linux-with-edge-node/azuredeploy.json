{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterVNetAddressSpace": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "The virtual network's address range in CIDR notion. It must be contained in one of the standard private address spaces: 10.0.0.0/8, 172.160.0.0/12, or 192.168.0.0/16."
            }
        },
        "clusterVNetSubnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "The name of the subnet to create in the virtual network."
            }
        },
        "clusterVNetSubnetAddressRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "The subnet's address range in CIDR notation. It must be contained by the address space of the virtual network."
            }
        },
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the HDInsight cluster to create."
            }
        },
        "clusterType": {
            "type": "string",
            "defaultValue": "hadoop",
            "allowedValues": [
                "hadoop",
                "hbase"
            ],
            "metadata": {
                "description": "The type of HDInsight cluster to create."
            }
        },
        "clusterLoginUserName": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
            "metadata": { 
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sshUserName": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster and the edge node virtual machine."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "metadata": { 
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "clusterStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to be created and be used as the cluster's storage."
            }
        },
        "clusterWorkerNodeCount": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": "The number of nodes in the HDInsight cluster."
            }
        },
        "edgeNodeVhdStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to be created and used to store the vhd of the edge node virtual machine."
            }
        },
        "edgeNodeVirtualMachineName": {
            "type": "string",
            "metadata": {
                "description": "The name of the edge node virtual machine."
            }
        },
        "edgeNodeVirtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4"
            ],
            "metadata": {
                "description": "The size of the edge node virtual machine."
            }
        },
        "edgeNodeSetupScriptUri": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/hdinsight-linux-with-edge-node/connectToWASB.sh",
            "metadata": { 
                "description": "A public http(s) uri that points to a script that will install an app on the edge node."
            }
        }
    },
    "variables": {
        "defaultApiVersion": "2015-05-01-preview",
        "clusterApiVersion": "2015-03-01-preview",
        "clusterVNetName": "[concat(parameters('clusterName'),'-vnet')]",
        "edgeNodeStorageAccountContainerName": "vhds",
        "hadoopZookeeperSize": "Small",
        "hbaseZookeeperSize": "Medium",
        "edgeNodeImagePublisher": "Canonical",
        "edgeNodeImageOffer": "UbuntuServer",
        "edgeNodeImageSku": "12.04.5-LTS",
        "edgeNodeExtensionName": "edgeNodeSetup",
        "edgeNodeOSDiskName": "[concat(parameters('clusterName'), '-', parameters('edgeNodeVirtualMachineName'))]",
        "edgeNodeNicName": "[concat(variables('clusterVNetName'), '-', parameters('edgeNodeVirtualMachineName'), '-nic')]",
        "edgeNodePublicIpName": "[concat(variables('edgeNodeNicName'), '-publicip')]",
        "edgeNodeNicSSHSGName": "[concat(variables('edgeNodeNicName'), '-sshrule')]"
    },
    "resources": [
      {
        "name": "[variables('clusterVNetName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "dependsOn": [ ],
        "tags": { },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('clusterVNetAddressSpace')]"
            ]
          },
          "subnets": [
            {
              "name": "[parameters('clusterVNetSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('clusterVNetSubnetAddressRange')]"
              }
            }
          ]
        }
      },
      {
        "name": "[parameters('clusterStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "dependsOn": [ ],
        "tags": { },
        "properties": {
          "accountType": "Standard_LRS"
        }
      },
      {
        "name": "[parameters('clusterName')]",
        "type": "Microsoft.HDInsight/clusters",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('clusterApiVersion')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/',parameters('clusterStorageAccountName'))]",
          "[concat('Microsoft.Network/virtualNetworks/',variables('clusterVNetName'))]"
        ],
        "tags": { },
        "properties": {
          "clusterVersion": "3.2",
          "osType": "Linux",
          "clusterDefinition": {
            "kind": "[parameters('clusterType')]",

            "configurations": {
              "gateway": {
                "restAuthCredential.isEnabled": true,
                "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
                "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
              }
            }
          },
          "storageProfile": {
            "storageaccounts": [
              {
                "name": "[concat(parameters('clusterStorageAccountName'),'.blob.core.windows.net')]",
                "isDefault": true,
                "container": "[parameters('clusterName')]",
                "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('clusterStorageAccountName')), variables('defaultApiVersion')).key1]"
              }
            ]
          },
          "computeProfile": {
            "roles": [
              {
                "name": "headnode",
                "targetInstanceCount": "2",
                "hardwareProfile": {
                  "vmSize": "Large"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "[parameters('sshUserName')]",
                    "password": "[parameters('sshPassword')]"
                  }
                },
                "virtualNetworkProfile": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                  "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', parameters('clusterVNetSubnetName'))]"
                }
              },
              {
                "name": "workernode",
                "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
                "hardwareProfile": {
                  "vmSize": "Large"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "[parameters('sshUserName')]",
                    "password": "[parameters('sshPassword')]"
                  }
                },
                "virtualNetworkProfile": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                  "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', parameters('clusterVNetSubnetName'))]"
                }
              },
              {
                "name": "zookeepernode",
                "targetInstanceCount": "3",
                "hardwareProfile": {
                  "vmSize": "[variables(concat(parameters('clusterType'),'ZookeeperSize'))]"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "[parameters('sshUserName')]",
                    "password": "[parameters('sshPassword')]"
                  }
                },
                "virtualNetworkProfile": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                  "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', parameters('clusterVNetSubnetName'))]"
                }
              }
            ]
          }
        }
      },
      {
        "name": "[parameters('edgeNodeVhdStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "dependsOn": [ ],
        "tags": { },
        "properties": {
          "accountType": "Standard_LRS"
        }
      },
      {
        "name": "[variables('edgeNodePublicIpName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/',variables('clusterVNetName'))]"
        ],
        "tags": { },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(parameters('clusterName'), '-', parameters('edgeNodeVirtualMachineName'))]"
          }
        }
      },
      {
        "apiVersion": "[variables('defaultApiVersion')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('edgeNodeNicSSHSGName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "description": "Allows SSH traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('edgeNodeNicName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('edgeNodePublicIpName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('edgeNodeNicSSHSGName'))]"
        ],
        "tags": { },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', parameters('clusterVNetSubnetName'))]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('edgeNodePublicIpName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('edgeNodeNicSSHSGName'))]"
          }
        }
      },
      {
        "name": "[parameters('edgeNodeVirtualMachineName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('edgeNodeVhdStorageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('edgeNodeNicName'))]"
        ],
        "tags": { },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('edgeNodeVirtualMachineSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('edgeNodeVirtualMachineName')]",
            "adminUsername": "[parameters('sshUserName')]",
            "adminPassword": "[parameters('sshPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('edgeNodeImagePublisher')]",
              "offer": "[variables('edgeNodeImageOffer')]",
              "sku": "[variables('edgeNodeImageSku')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "edgeNodeOSDisk",
              "vhd": {
                "uri": "[concat('http://', parameters('edgeNodeVhdStorageAccountName'), '.blob.core.windows.net/', variables('edgeNodeStorageAccountContainerName'), '/', variables('edgeNodeOSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('edgeNodeNicName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('edgeNodeVirtualMachineName'),'/',variables('edgeNodeExtensionName'))]",
        "apiVersion": "[variables('defaultApiVersion')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('edgeNodeVirtualMachineName'))]",
          "[concat('Microsoft.HDInsight/clusters/',parameters('clusterName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.2",
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/hdinsight-linux-with-edge-node/edgeNodeSetup.sh",
              "[parameters('edgeNodeSetupScriptUri')]"
            ],
            "commandToExecute": "[concat('sudo -E bash edgeNodeSetup.sh ',parameters('edgeNodeSetupScriptUri'),' ',parameters('clusterName'),' ',parameters('sshUserName'),' ',parameters('sshPassword'),' ',parameters('clusterLoginUserName'),' ',parameters('clusterLoginPassword'))]"
          }
        }
      }

    ],
    "outputs": {
        "vnet": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks',variables('clusterVNetName')))]"
        },
        "cluster":{
            "type" : "object",
            "value" : "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('clusterName')))]"
        },
        "edgeNodePublicIp": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('edgeNodePublicIpName')))]"
        },
        "edgeNode": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Compute/virtualMachines',parameters('edgeNodeVirtualMachineName')))]"
        }
    }
}
