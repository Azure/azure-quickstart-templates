{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator user name used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password used when provisioning virtual machines"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East Asia",
        "Southeast Asia",
        "West Europe"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "myVNET",
      "metadata": {
        "description": "The arbitrary name of the virtual network provisioned for the cluster"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The network address space for the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Domain name of the publicly accessible Apache web server hosting Nagios"
      }
    },
    "tshirtSize": {
      "type": "string",
      "defaultValue": "Medium",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "XLarge",
        "XXLarge"
      ],
      "metadata": {
        "description": "T-shirt size of the Nagios deployment"
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "14.04.2-LTS",
    "vmStorageAccountContainerName": "vhd",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "computerNamePrefix": "NagiosCoreSrv",
    "scriptUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/nagios-on-ubuntu/",
    "tshirtSizeSmall": {
      "numberOfInstances": 1,
      "vmSize": "Standard_A1"
    },
    "tshirtSizeMedium": {
      "numberOfInstances": 1,
      "vmSize": "Standard_D1"
    },
    "tshirtSizeLarge": {
      "numberOfInstances": 1,
      "vmSize": "Standard_D2"
    },
    "tshirtSizeXLarge": {
      "numberOfInstances": 1,
      "vmSize": "Standard_D3"
    },
    "tshirtSizeXXLarge": {
      "numberOfInstances": 1,
      "vmSize": "Standard_D4"
    },
    "numberOfInstances": "[variables(concat('tshirtSize', parameters('tshirtSize'))).numberOfInstances]",
    "vmSize": "[variables(concat('tshirtSize', parameters('tshirtSize'))).vmSize]",
    "securityGroupName": "nagiosNSG",
    "apiVersion": "2015-06-15",
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('publicIP', copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "publicIPLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('domainName')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('nic', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP', copyindex())]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('securityGroupName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('publicIP', copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('nagiosSrv', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'nic', copyindex())]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('computerNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('https://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat('nagiosSrv', copyindex(), '/installnagios')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineExtensionsLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', 'nagiosSrv', copyindex())]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic', copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('scriptUrl'), 'nagios-core-install.sh')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash nagios-core-install.sh -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'))]"
        }
      }
    }
  ]
}