{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newStorageAccountName": {
            "type": "String",
            "metadata": {
                "description": "Unique  Name for the Storage Account where the Virtual Machine's disks will be placed"
            }
        },
        "vmDnsName": {
            "type": "String",
            "metadata": {
                "description": "DNS  name for the VM"
            }
        },
        "nicName": {
            "type": "String",
            "metadata": {
                "description": "Nick Name DNS  name for the VM"
            }
        },
        "publicIPAddressName": {
            "type": "String",
            "metadata": {
                "description": "Public IP Address Name DNS  name for the VM"
            }
        },
        "numberOfInstances": {
            "defaultValue": 2,
            "type": "Int",
            "metadata": {
                "description": "Number of VM instances to create, default is 2"
            }
        },
        "availabilitySetName": {
            "type": "String",
            "metadata": {
                "description": "Availability Set name for the VMs"
            }
        },
        "adminUserName": {
            "type": "String",
            "metadata": {
                "description": "Admin user name for the Virtual Machines"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Admin password for the Virtual Machines"
            }
        },
        "osType": {
            "defaultValue": "Ubuntu-14.04.2-LTS",
            "allowedValues": [
                "Ubuntu-14.04.2-LTS",
                "Ubuntu-12.04.5-LTS",
                "Centos-7.1",
                "Centos-7"
            ],
            "type": "String",
            "metadata": {
                "description": "The type of the operating system you want to deploy."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A0",
            "type": "String",
            "metadata": {
                "description": "VM Size"
            }
        },
        "chef_node_name": {
            "type": "String",
            "metadata": {
                "description": "Unique name for the node (VM) in the Chef Organization"
            }
        },
        "chef_server_url": {
            "type": "String",
            "metadata": {
                "description": "Organization URL for the Chef Server. Example https://ChefServerDnsName.cloudapp.net/organizations/Orgname"
            }
        },
        "validation_client_name": {
            "type": "String",
            "metadata": {
                "description": "Validator key name for the organization. Example : MyOrg-validator"
            }
        },
        "runlist": {
            "defaultValue": "recipe[getting-started]",
            "type": "String",
            "metadata": {
                "description": "Optional Run List to Execute"
            }
        }
    },
    "variables": {
        "images": {
            "Ubuntu-14.04.2-LTS": {
                "sku": "14.04.2-LTS",
                "offer": "UbuntuServer",
                "publisher": "Canonical"
            },
            "Ubuntu-12.04.5-LTS": {
                "sku": "12.04.5-LTS",
                "offer": "UbuntuServer",
                "publisher": "Canonical"
            },
            "Centos-7.1": {
                "sku": "7.1",
                "offer": "CentOS",
                "publisher": "OpenLogic"
            },
            "Centos-7": {
                "sku": "7",
                "offer": "CentOS",
                "publisher": "OpenLogic"
            }
        },
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
        "vmExtensionName": "LinuxChefExtension",
        "vmName": "[parameters('vmDnsName')]",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "virtualNetworkName": "MyVNET",
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "subnet-1",
        "subnet2Name": "subnet-2",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet2Prefix": "10.0.1.0/24",
        "dnsName": "[variables('subnet1Name')]",
        "chef_ssl": "verify_none"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('publicIPAddressName'),copyIndex())]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "publicIPLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmDnsName'),copyIndex())]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('nicName'),copyIndex())]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('publicIPAddressName'),copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'),copyIndex())]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'),copyIndex())]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('images')[parameters('osType')].publisher]",
                        "offer": "[variables('images')[parameters('osType')].offer]",
                        "sku": "[variables('images')[parameters('osType')].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicName'),copyIndex()))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'), copyIndex())]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/', variables('vmExtensionName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "extensionLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "publisher": "Chef.Bootstrap.WindowsAzure",
                "type": "LinuxChefClient",
                "typeHandlerVersion": "1210.12",
                "settings": {
                    "bootstrap_options": {
                        "chef_node_name": "[concat(parameters('chef_node_name'),copyIndex())]",
                        "chef_server_url": "[parameters('chef_server_url')]",
                        "validation_client_name": "[parameters('validation_client_name')]",
                        "node_ssl_verify_mode": "none"
                    },
                    "runlist": "[parameters('runlist')]",
                    "validation_key_format": "plaintext"
                },
                "protectedSettings": {
                    "validation_key": "-----BEGIN RSA PRIVATE KEY-----\nMI-------Rzf0Igf59e6i2yTYnKOyVxJdb2b9zkJtZjpRQbt46fmSQ\nElk9rc---------ntJHc1CQXVfQYQZVGccVAuPqNKJHmb70qJEi\nA1zvZudke3pj0Xkw/xAy1MnQBVTRtf23hIzZK4sraEyt\noQ93GwjpunSFJfI1GZKXDdsp/nRJi0qVU-------------9UOPO4G0PyPr+mcF\nxclZYUJMENgGIBFzhYVft0p7ezRinxkbnEW22FLxDplvBmfaYDTJZ6dmAVh6IHiM\naKtv5kj63-------------------------BAoIBAArCs5nsl6WcLtU2\n8Ci2K-----bghgcheAKBROCZLyDS\nGvNmvCc87jo6i8vGGvYOeic3ns/UraRp04LADQzz4E2vH6XVr/j35NqHK3HgvMtU\n1gpBbGpSrnMu8euTIxlGQSbfyY0+YdMYH29ZECVWtcwwLJE0E4MSTNQfqoGvKilk\nqySrsc9xlTrl7WemfM4jzYle9MlvZiG5enpyEriTY4xmyqHQE3A7q1AW9ry+aX/o\nyhre4Twt/q9Hon2BhBhCofW7J1laku+sLtUt3NEHqFo9W1qluN6zdLYQMeTNdHOn\ndUR7XQECgYEA6jSwp6dRZija45ytFEr7/vglpCG4DsfsX3WQdT8WbStpWK6qtlVI\nglZ4R+vgnupqxfLuy2ZCm+iIhJ8B3dGUVtlM5/HpUkyADCLt5oFbXzaK7NtHROjU\nxbh3NpwD3TmZn/6RRo3Vg39sqSOCr3+TbFtDAOCw3ZrEr7UFo0eblZECgYEA6HXa\nNPR0TPpMC3N5kD9GIwznjXJt8WuEOHp88LsIH3oEhjafb+kO+t2+VWztgCXFObS9\nYoYVoIxTjgXh93f364x7g4Y1F5pjkPqaONZI1Cc+r31BWjN/z6eHq3jK+mGw7vUx\nz3ogMQrMxa+v2wMJOkWGzAaiRCnw5aHUyKk9XiUCgYEA0ldODNSFk5W/uMpe26nY\nlo5w5+7sqkG9taIVgmeNkbB6ZY5BfY4sl/pm/lkHHFJ2YJ+k/YIy8mkuKsXP3FM8\nwZ9ZpbqrDSHtonjAZtPopyOKM91gLbBaX9UjJCWMhuQTaBEukkoR547KnUFqPon6\nckeobqJd1------------KfGMzVfMA91qCv4\nS/oKT3Ke3UgTkGm4mMTkeRtDMcT8UhJUv+SwFSncFzMehB8GvzzCFnLK+U6rrQvc\n/w+ZhU/5sr7n4U/MgeSEQrhBHH0ccHGaJXMsnaVSp23HnNxVaMNEPlestBaDdWsE\nxHVrzQKBgGEgnD9zXroS9thzDH3yYgxXIFnXyG35C9dy/05elWp7VT6ayqW714pB\nEHcpXZCHBdCgHh+D5QDPjmq+CoqBO5f/rv------rt\n5fCZX//M6qom30zFm85------cvmd\n-----END RSA PRIVATE KEY-----
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ]
        }
    ]
}
