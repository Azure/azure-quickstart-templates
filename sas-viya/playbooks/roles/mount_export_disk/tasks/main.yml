---
# tasks file for mountOptDisk

- name: Checking for existing mountpoint on {{ MOUNT_POINT }}
  command: >-
    mountpoint -q {{MOUNT_POINT}}
  register: volume_stat
  failed_when: False
  changed_when: False

- block:

    - name: find the target disk
      set_fact:
        SOURCE_DISK: "/dev/{{ device.key }}"
      with_dict: "{{ ansible_devices }}"
      loop_control:
        loop_var: device
      when: "(device.value.partitions|length) == 0 and device.value.size == SOURCE_DISK_SIZE and device.value.model == 'Virtual Disk'"

    - name: Ensure that the primary partition is present on the new disk
      parted:
        device: "{{ SOURCE_DISK }}"
        number: 1
        state: present
     
    - name: set primary partition device name
      set_fact:
        SOURCE_DISK_PARTITION: "{{ SOURCE_DISK }}1"
    
    - name: check for {{ SOURCE_DISK_PARTITION }} device
      stat:
        path: "{{ SOURCE_DISK_PARTITION }}"
      register: source_disk_stat
    
    - name: format new volume
      filesystem: fstype=xfs dev="{{ SOURCE_DISK_PARTITION }}"
      when: source_disk_stat.stat.exists == true
    
    - name: mount {{ MOUNT_POINT }}
      mount: name={{ MOUNT_POINT }} fstype=xfs state=mounted src="{{ SOURCE_DISK_PARTITION }}"
      when: source_disk_stat.stat.exists == true


    
  when: volume_stat.rc != 0