#############
## this will update the vars.yml

---
- hosts: all
  
  vars:
    ORCHESTRATION_DIRECTORY: "/exports/bastion/setup/orchestration"
    ORCHESTRATION_INVENTORY: "{{ ORCHESTRATION_DIRECTORY }}/sas_viya_playbook/inventory.ini"
    CAS_CONTROLLER_SERVERS_GROUP: CasControllerServers
    STATEFUL_SERVICES_SERVERS_GROUP: StatefulServicesServers
    PROGRAMMING_SERVICES_SERVERS_GROUP: ProgrammingServicesServers
    VISUAL_SERVICES_SERVERS_GROUP: VisualServicesServers
    ORCHESTRATION_VARS: "{{ ORCHESTRATION_DIRECTORY }}/sas_viya_playbook/vars.yml"
    ORCHESTRATION_SITE_DEFAULT_FILE: "{{ ORCHESTRATION_DIRECTORY }}/sas_viya_playbook/roles/consul/files/sitedefault.yml"
    ALL_SERVICES_GROUP: sas-services
  tasks:

  - name: change cas cache location
    lineinfile: 
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp: "CAS_DISK_CACHE:" 
      line: "     CAS_DISK_CACHE: /mnt/resource/sastmp/cascache"
    run_once: true
    delegate_to: localhost

#  - name: add CAS UI path
#    lineinfile:
#      dest: "{{ ORCHESTRATION_VARS }}"
#      insertafter: "CAS_DISK_CACHE:.*"
#      line: "     CAS_VIRTUAL_HOST: {{cas_virtual_host}}"


  - name: change saswork location
    blockinfile:
      dest: "{{ ORCHESTRATION_VARS }}"
      insertafter: EOF
      marker: "# {mark} add saswork location"
      block: |
        SASV9_CONFIGURATION:
          1: '/* this will send the SASWORK to the /mnt/resource/sastmp location */'
          2: 'WORK /mnt/resource/sastmp/saswork'
    run_once: true
    delegate_to: localhost

  - name: set SASStudio folder root (remove if it exists)
    lineinfile:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp: "webdms.showSystemRoot:"
      state: absent
    run_once: true
    delegate_to: localhost

  - name: set SASStudio folder root
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp:  'STUDIO_CONFIGURATION:\n  init:'
      replace: 'STUDIO_CONFIGURATION:\n  init:\n    webdms.showSystemRoot: false'
    run_once: true
    delegate_to: localhost

  - name: set workspaceserver settings
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp: '#FOUNDATION_CONFIGURATION:'
      replace: 'FOUNDATION_CONFIGURATION:'
    run_once: true
    delegate_to: localhost

  - name: set redshift access forwork spaceserver
    blockinfile:
      dest: "{{ ORCHESTRATION_VARS }}"
      marker: '#{mark} add ws access to redshift'
      insertafter: '^FOUNDATION_CONFIGURATION:'
      block: |2
          1: ODBCINI=/opt/sas/spre/home/lib64/accessclients/odbc.ini
          2: ODBCINST=/opt/sas/spre/home/lib64/accessclients/odbcinst.ini
          3: ODBCHOME=/opt/sas/spre/home/lib64/accessclients
          4: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ODBCHOME/lib
    run_once: true
    delegate_to: localhost

  - name: set CAS Settings
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp:  '#CAS_SETTINGS:'
      replace: 'CAS_SETTINGS:'
    run_once: true
    delegate_to: localhost

  - name: set ODBC home directory
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp:  '#1: ODBCHOME=.*'
      replace: '1: ODBCHOME=/opt/sas/viya/home/lib64/accessclients'
    run_once: true
    delegate_to: localhost

  - name: set ODBCINI
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp:  '#2: ODBCINI=.*'
      replace: '2: ODBCINI=$ODBCHOME/odbc.ini'
    run_once: true
    delegate_to: localhost

  - name: set LD_LIBRARY_PATH
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp:  '#5: LD_LIBRARY_PATH=.*'
      replace: '5: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ODBCHOME/lib'
    run_once: true
    delegate_to: localhost

  - name: set pg host
    replace:
      dest: "{{ ORCHESTRATION_VARS }}"
      regexp:  '\ \ deployTarget'
      replace: '  {{ groups[STATEFUL_SERVICES_SERVERS_GROUP][0] }}'
      backup: yes
    run_once: true
    delegate_to: localhost

  - name: add additional pg hosts
    blockinfile:
      dest: "{{ ORCHESTRATION_VARS }}"
      marker: '# {mark} add additional pg hosts'
      insertafter: '^INVOCATION_VARIABLES:'
      block: |
          {%- for target_host in groups[ALL_SERVICES_GROUP]|unique if target_host not in groups[STATEFUL_SERVICES_SERVERS_GROUP] -%}
          {{ "  " -}}{{ target_host }}:
          {{ "    " -}}  sasdatasvrc:
          {{ "      " -}}  - NODE_NUMBER: '{{ loop.index }}'
          {{ "        " -}}    NODE_TYPE: S
          {{ "        " -}}    PG_PORT: '5432'
          {{ "        " -}}    SANMOUNT: '{{ '{{' }} SAS_CONFIG_ROOT {{ '}}' }}/data/sasdatasvrc'
          {{ "        " -}}    SERVICE_NAME: postgres
          {% endfor -%}
    run_once: true
    delegate_to: localhost
          


  - name: Create sitedefault file, if it doesnt exist already
    file:
      path: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      state: touch
    run_once: true
    delegate_to: localhost


  - name: add config header line to sitedefault.yml if needed
    lineinfile:
      dest: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      state: present
      insertbefore: BOF
      line: "config:"
    run_once: true
    delegate_to: localhost

  - name: add applicaton header line to sitedefault.yml if needed
    lineinfile:
      dest: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      state: present
      insertafter: '^config:'
      line: '     application:'
    run_once: true
    delegate_to: localhost

  - name: set sharedVault backup location in sitedefault.yml
    blockinfile:
      dest: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      marker: '# {mark} set sharedVault'
      insertafter: 'application:'
      block: |2
                 sas.deploymentbackup:
                     sharedVault: /backups
    run_once: true
    delegate_to: localhost

  - name: set mail host and enable mail health check in sitedefault.yml
    blockinfile:
      dest: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      marker: '# {mark} set mail'
      insertafter: 'application:'
      block: |2
                 management.health.mail:
                     enabled: true
                 sas.mail:
                     host: localhost
    run_once: true
    delegate_to: localhost

  - name: set renderer baseUrl in sitedefault.yml
    blockinfile:
      dest: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      marker: '# {mark} set renderer baseUrl'
      insertafter: 'application:'
      block: |2
                 sas.reportrenderer.properties:
                     custom:
                         baseUrl: http://{{ hostvars[groups[VISUAL_SERVICES_SERVERS_GROUP][0]].ansible_host }}
    run_once: true
    delegate_to: localhost

  - name: set sasboot password in sitedefault.yml
    blockinfile:
      dest: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      marker: '# {mark} set sasboot pw'
      insertafter: 'application:'
      block: |2
                 sas.logon.initial.password: '{{sasboot_pw | b64decode }}'
    run_once: true
    delegate_to: localhost

  - name: set sitedefault permissions
    file:
      path: "{{ ORCHESTRATION_SITE_DEFAULT_FILE }}"
      mode: 0600
    run_once: true
    delegate_to: localhost
