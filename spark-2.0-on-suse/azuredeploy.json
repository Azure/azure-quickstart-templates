{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "The Linux VM user name"
      }
    },
    "adminPassword": {
	  "type": "securestring",
      "metadata": {
        "description": "The Linux VM password"
      }
    },
    "numberOfSlaves" : {
      "type": "int",
      "metadata": {
      "description": "Number Of Slaves"
      },
      "defaultValue": 1,
	  "minValue": 1,
      "maxValue": 50
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/spark-2.0-on-suse/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "resourceGroupLocation": "[resourceGroup().location]",
    "vmStorageAccountContainerName": "vhd",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id),'storageac')]",
    "virtualMachines_spark01_name": "sparkmaster",
    "sparkSlavesName": "sparkslave",
    "sparkMasterSize": "Basic_A3",
    "sparkSlavesSize": "Basic_A2",
    "sparkMasterPublicIpName": "sparkMasterPublicIp",
    "sparkNetWorkSecurityGroupName": "nsgroup",
    "sparkVirtualNetworkName": "sparkVirtualNetwork",
    "sparkMasterNetworkInterfaceName": "ni_master",
    "sparkSlaveNetworkInterfaceName": "ni_slave",
    "sparkMasterInternalIP": "10.0.0.4",
    "sparkSlaveInternalIP": "10.0.0.5",
    "ScriptFolder" : "scripts",
    "sparkInstallScriptName": "install_spark_environment.sh"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_spark01_name')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
      	"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
      	"[resourceId('Microsoft.Network/networkInterfaces', variables('sparkMasterNetworkInterfaceName'))]"
      ],
      "properties": {
      	"networkProfile": {
      	  "networkInterfaces": [
      	    {
      	      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sparkMasterNetworkInterfaceName'))]"
      	    }
      	  ]
        },
        "hardwareProfile": {
          "vmSize": "[variables('sparkMasterSize')]"
        },
        "storageProfile": {
          "imageReference": {
          "publisher": "SUSE",
          "offer": "SLES",
          "sku": "12-SP1",
          "version": "latest"
        },
        "osDisk": {
          "name": "[variables('virtualMachines_spark01_name')]",
          "createOption": "FromImage",
          "vhd": {
            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/','osdisks', '1' ,'.vhd')]"
          },
          "caching": "ReadWrite"
        }
      },
      "osProfile": {
      	"computerName": "[variables('virtualMachines_spark01_name')]",
      	"adminUsername": "[parameters('adminUserName')]",
      	"adminPassword": "[parameters('adminPassword')]",
      	"linuxConfiguration": {
      	  "disablePasswordAuthentication": false
      	}
      }
    },
    "resources": [
      {
        "type": "extensions",
        "name": "[concat('configuresparkonmaster')]",
        "apiVersion": "2015-06-15",
        "location": "[variables('resourceGroupLocation')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachines_spark01_name') )]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('sparkMasterNetworkInterfaceName') )]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[concat(parameters('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('sparkInstallScriptName'), parameters('_artifactsLocationSasToken'))]"
            ],
            "commandToExecute": "[concat('sudo sh install_spark_environment.sh ', '-m 1', ' -i ', reference(variables('sparkMasterNetworkInterfaceName')).ipConfigurations[0].properties.privateIPAddress, ' -k ',  listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ' -a ', variables('storageAccountName'), parameters('_artifactsLocationSasToken'))]"
	  }
	}
      }
    ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('sparkSlavesName'), copyindex() )]",
      "apiVersion": "2015-06-15",
      "location": "[variables('resourceGroupLocation')]",
      "copy": {
        "name": "VMLoop",
        "count": "[parameters('numberOfSlaves')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sparkSlaveNetworkInterfaceName'), copyindex() ) )]"
      ],
      "properties": {
        "networkProfile": {
        "networkInterfaces": [
          {
            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sparkSlaveNetworkInterfaceName'), copyindex() ))]"
          }
        ]
      },
      "hardwareProfile": {
      	"vmSize": "[variables('sparkSlavesSize')]"
      },
      "storageProfile": {
      	"imageReference": {
      	  "publisher": "SUSE",
      	  "offer": "SLES",
      	  "sku": "12-SP1",
      	  "version": "latest"
        },
        "osDisk": {
          "name": "[concat(variables('sparkSlavesName'), copyindex() )]",
          "createOption": "FromImage",
          "vhd": {
            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/','osdisks_', 'slave', copyindex() ,'.vhd')]"
          },
          "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[concat(variables('sparkSlavesName'), copyindex() )]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        }
      },
      "resources": [
      	{
      	  "type": "extensions",
      	  "name": "configuresparkonslave",
      	  "apiVersion": "2015-06-15",
      	  "location": "[variables('resourceGroupLocation')]",
      	  "dependsOn": [
      	    "[concat('Microsoft.Network/networkInterfaces/', concat(variables('sparkSlaveNetworkInterfaceName'), copyindex() ) )]",
      	    "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('sparkSlavesName'), copyindex() ) )]",
      	    "[concat('Microsoft.Compute/virtualMachines/sparkmaster/extensions/configuresparkonmaster')]"
      	  ],
      	  "properties": {
      	    "publisher": "Microsoft.Azure.Extensions",
      	    "type": "CustomScript",
      	    "typeHandlerVersion": "2.0",
      	    "autoUpgradeMinorVersion": true,
      	    "settings": {
      	      "fileUris": [
      	      	"[concat(parameters('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('sparkInstallScriptName'), parameters('_artifactsLocationSasToken'))]"
      	      ],
      	    "commandToExecute": "[concat('sudo sh install_spark_environment.sh ', '-m 0', ' -i ',  reference(variables('sparkMasterNetworkInterfaceName')).ipConfigurations[0].properties.privateIPAddress, ' -k ',  listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ' -a ', variables('storageAccountName') , parameters('_artifactsLocationSasToken'))]"
	    }
	  }
	}
       ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('sparkMasterNetworkInterfaceName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'sparkMasterPublicIp' )]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
      ],
      "properties": {
      	"ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('sparkMasterInternalIP')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sparkMasterPublicIpName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('sparkSlaveNetworkInterfaceName'), copyIndex() )]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "copy": {
        "name": "NicSlavesLoop",
        "count": "[parameters('numberOfSlaves')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('sparkSlaveInternalIP'), copyindex() )]",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('sparkVirtualNetworkName')), '/subnets/default')]"
              }
            }
          }
        ],
        "dnsSettings": {
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sparkNetWorkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('sparkMasterPublicIpName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('sparkVirtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('sparkNetWorkSecurityGroupName')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
      	"securityRules": [
      	  {
      	    "name": "default-allow-ssh",
      	    "properties": {
      	      "protocol": "Tcp",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "22",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1000,
      	      "direction": "Inbound"
      	    }
      	  },
      	  {
      	    "name": "SparkUI",
      	    "properties": {
      	      "protocol": "*",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "4040",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1010,
      	      "direction": "Inbound"
      	    }
      	  },
      	  {
      	    "name": "SparkMasterUI",
      	    "properties": {
      	      "protocol": "*",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "8080",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1020,
      	      "direction": "Inbound"
      	    }
      	  },
      	  {
      	    "name": "SparkHistoryServer",
      	    "properties": {
      	      "protocol": "*",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "18080",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1030,
      	      "direction": "Inbound"
      	    }
      	  },
      	  {
      	    "name": "MesosMaster",
      	    "properties": {
      	      "protocol": "*",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "5050",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1040,
      	      "direction": "Inbound"
      	    }
      	  },
      	  {
      	    "name": "SparkWorker",
      	    "properties": {
      	      "protocol": "*",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "8081",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1050,
      	      "direction": "Inbound"
      	    }
      	  },
      	  {
      	    "name": "SparkMasterService",
      	    "properties": {
      	      "protocol": "*",
      	      "sourcePortRange": "*",
      	      "destinationPortRange": "7077",
      	      "sourceAddressPrefix": "*",
      	      "destinationAddressPrefix": "*",
      	      "access": "Allow",
      	      "priority": 1060,
      	      "direction": "Inbound"
      	    }
      	  }
      	]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
      	"name": "Standard_LRS"
      	, "tier": "Standard" },
      "kind": "Storage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('resourceGroupLocation')]",
      "tags": {},
      "properties": {}
    }
  ],
  "outputs": {}
}
