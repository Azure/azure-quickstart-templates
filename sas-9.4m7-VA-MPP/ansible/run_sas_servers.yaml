
---
# Stop sas servers on a specific group of nodes
# input: sas_hosts (group of hosts) sas_action = stop/start/status
- hosts: ["{{ sas_hosts }}"]
  vars_files:
    - /sas/install/ansible/vars.yaml
    - /tmp/ansible_vars.yaml      
  become_user: root
  become: yes
  gather_facts: false
  tasks:
      - name: Check file exists
        stat:
          path: "{{ sasFolder }}/config/Lev1/sas.servers"
        register: stat_result     
        ignore_unreachable: yes
        ignore_errors: yes

      - debug:
          msg: "SAS_ERROR: Host unreachable: {{ inventory_hostname }}" 
        when: stat_result is defined and stat_result.stat is not defined

      - debug:
          msg: "sas.servers found: {{ inventory_hostname }}"
        when: stat_result is defined and stat_result.stat is defined and stat_result.stat.exists == True


      - debug:
          msg: "SAS_ERROR: sas.servers NOT found: {{ inventory_hostname }}"
        when: stat_result is defined and stat_result.stat is defined and stat_result.stat.exists == False


      - name: run sas.servers on host if it exists
        shell: "{{ sasFolder }}/config/Lev1/sas.servers {{ sas_action }}"
        register: command_output
        ignore_errors: yes
        when: stat_result is defined and stat_result.stat is defined and stat_result.stat.exists == True

      - name: log any error from running sas.servers        
        debug:
           msg: "SAS_ERROR: sas.servers failures on {{ inventory_hostname }} OutPut:  {{command_output.stderr}}"
        when: stat_result is defined and stat_result.stat is defined and stat_result.stat.exists == True and command_output.stderr != '' 
            
      - name: log output from running sas.servers        
        debug:
           msg: "sas.servers output on {{ inventory_hostname }}, OutPut:  {{command_output.stdout}}"
        when: stat_result is defined and stat_result.stat is defined and stat_result.stat.exists == True and command_output.stderr == '' 
            
