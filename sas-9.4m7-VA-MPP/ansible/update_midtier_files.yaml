---
- name: Update WIP Data Server for loadbalancer
  hosts: [midtier_servers]
  become_user: sasinst
  become: yes
  gather_facts: false
  vars_files:
    - /tmp/ansible_vars.yaml

  tasks:
    - name: update server.xml files for each managed server
      become: yes
      shell: |-
        pushd {{ sasFolder }}/config/Lev1/Web/WebAppServer
        cp {{ item }}/conf/server.xml {{ item }}/conf/server.xml.orig
        sed -i 's/proxyName="midtier-0.internal.cloudapp.net"\ proxyPort="7980" redirectPort="${nio.https.port}"\ scheme="http"/proxyName="{{ LoadbalancerDNS }}"\ proxyPort="443"\ redirectPort="${nio.https.port}"\ scheme="https"/g' {{ item }}/conf/server.xml
        sed -i 's/httpsServerPort="8343"/httpsServerPort="443"/g' {{ item }}/conf/server.xml
        sed -i 's/protocolHeader="X-Forwarded-Proto"/protocolHeader="X-Forwarded-Proto" trustedProxies="\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"/g' {{ item }}/conf/server.xml
        popd
      with_items:
        - SASServer1_1
        - SASServer2_1
        - SASServer12_1


    - name: update SASServer1_1 specific files
      become: yes
      shell: |-
        pushd {{ sasFolder }}/config/Lev1/Web/WebAppServer/SASServer1_1/sas_webapps/sas.svcs.scs.war/WEB-INF
        cp web.xml web.xml.orig
        sed -i 's/http:\/\/midtier-0.internal.cloudapp.net:7980/https:\/\/{{ LoadbalancerDNS }}:443/g' web.xml
        cp spring-config/webapp-config.xml spring-config/webapp-config.xml.orig
        sed -i 's/host:midtier-0.internal.cloudapp.net/host:{{ LoadbalancerDNS }}/g' spring-config/webapp-config.xml
        sed -i 's/:7980}/:443}/g' spring-config/webapp-config.xml
        sed -i 's/scheme:http}:/scheme:https}:/g' spring-config/webapp-config.xml
        popd

    - name: setenv.sh files
      become: yes
      shell: |-
        pushd {{ sasFolder }}/config/Lev1/Web/WebAppServer
        cp {{ item }}/bin/setenv.sh {{ item }}/bin/setenv.sh.orig
        sed -i 's/-Dsas.scs.cas.scheme=http / /g' {{ item }}/bin/setenv.sh
        sed -i 's/-Dsas.scs.cas.host={{ inventory_hostname }}.internal.cloudapp.net//g' {{ item }}/bin/setenv.sh
        sed -i 's/-Dsas.scs.cas.port=7980//g' {{ item }}/bin/setenv.sh
        sed -i 's/-Dsas.scs.svc.scheme=http / /g' {{ item }}/bin/setenv.sh
        sed -i 's/-Dsas.scs.svc.host={{ inventory_hostname }}.internal.cloudapp.net//g' {{ item }}/bin/setenv.sh
        sed -i 's/-Dsas.scs.svc.port=7980//g' {{ item }}/bin/setenv.sh
        echo '
           PROXY_OPTS="-Dsas.scs.cas.scheme=https -Dsas.scs.cas.host={{ LoadbalancerDNS }} -Dsas.scs.cas.port=443"
           PROXY_OPTS="$PROXY_OPTS -Dsas.scs.svc.scheme=https -Dsas.scs.svc.host={{ LoadbalancerDNS }} -Dsas.scs.svc.port=443"
           PROXY_OPTS="$PROXY_OPTS -Dsas.scs.svc.internal.url=http://{{ inventory_hostname }}.internal.cloudapp.net:7980 -Dsas.retry.internal.url=true -Dsas.web.html.cdps.use.internal.urls=true"
           JAVA_OPTS="$JAVA_OPTS $PROXY_OPTS"' >> {{ item }}/bin/setenv.sh
        popd
      with_items:
        - SASServer1_1
        - SASServer2_1
        - SASServer12_1

- name: Update SAS Environment Manager for loadbalancer
  hosts: [midtier_head]
  become_user: sasinst
  become: yes
  gather_facts: false
  vars_files:
    - /tmp/ansible_vars.yaml

  tasks:
    - name: update web.xml and security-web-context.xml with loadbalancer hostname
      become: yes
      shell: |-
        pushd {{ sasFolder }}/config/Lev1/Web/SASEnvironmentManager/server-5.8.0-EE/hq-engine/hq-server/webapps/ROOT/WEB-INF
        cp web.xml web.xml.orig
        sed -i 's/http:\/\/midtier-0.internal.cloudapp.net:7980\/SASEnvironmentMgrMidTier/https:\/\/{{ LoadbalancerDNS }}:443\/SASEnvironmentMgrMidTier/g' web.xml
        sed -i 's/http:\/\/midtier-0.internal.cloudapp.net:7980\/SASLogon/https:\/\/{{ LoadbalancerDNS }}:443\/SASLogon/g' web.xml
        sed -i 's/LogonUrl=http%3A%2F%2Fmidtier-0.internal.cloudapp.net%3A7080/LogonUrl=https%3A%2F%2F{{ LoadbalancerDNS }}%3A8441/g' web.xml
        popd
        pushd {{ sasFolder }}/config/Lev1/Web/SASEnvironmentManager/server-5.8.0-EE/hq-engine/hq-server/webapps/ROOT/WEB-INF/spring
        cp security-web-context.xml security-web-context.xml.orig
        sed -i 's/http:\/\/midtier-0.internal.cloudapp.net:7980\/SASLogon/https:\/\/{{ LoadbalancerDNS }}:443\/SASLogon/g' security-web-context.xml
        sed -i 's/LogonUrl=http%3A%2F%2Fmidtier-0.internal.cloudapp.net%3A7080/LogonUrl=https%3A%2F%2F{{ LoadbalancerDNS }}%3A8441/g' security-web-context.xml
        sed -i 's/http:\/\/midtier-0.internal.cloudapp.net:7080\/j_spring_cas_security_check/https:\/\/{{ LoadbalancerDNS }}:8441\/j_spring_cas_security_check/g' security-web-context.xml
        sed -i 's/http:\/\/midtier-0.internal.cloudapp.net:7080\/j_spring_cas_security_proxyreceptor/https:\/\/{{ LoadbalancerDNS }}:8441\/j_spring_cas_security_proxyreceptor/g' security-web-context.xml
        popd

    - name: Edit the Catalina configuration in hq-server/conf/server.xml to add a RemoteIpValve configuration
      blockinfile:
        backup: yes
        path: "{{ sasFolder }}/config/Lev1/Web/SASEnvironmentManager/server-5.8.0-EE/hq-engine/hq-server/conf/server.xml"
        marker: '<!-- {mark} added by update_midtier_files.yaml -->'
        insertafter: "</Host>"
        block: |
          <Valve className="org.apache.catalina.valves.RemoteIpValve" 
                 httpServerPort="7080" 
                 httpsServerPort="8441" 
                 internalProxies="(fe80|fd[0-9a-fA-F]{2})(:{1,2}[0-9a-fA-F]{0,4}){0,7}(%[0-9a-zA-Z]+)?$|::1|0:0:0:0:0:0:0:1|10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}" 
                 protocolHeader="X-Forwarded-Proto" 
                 trustedProxies="\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"/>
