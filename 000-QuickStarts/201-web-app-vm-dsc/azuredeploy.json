{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the storage account for storing Virtual Machine disk"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "metadata": {
        "description": "This is the size of the Virtual Machine"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "This is the Virtual Machine administrator login name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "This is the Virtual Machine administrator login password"
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "This is the DNS name of the Virtual Machine"
      }
    },
    "configurationFunction": {
      "type": "string",
      "metadata": {
        "description": "This is the link to the Web Deploy package to be deployed to the Virtual Machine. It is a github URL in this example."
      }
    },
    "DatabaseServerName": {
      "type": "string",
      "metadata": {
        "description": "This is database server name"
      }
    },
    "DatabaseServerLocation": {
      "type": "string",
      "metadata": {
        "description": "This is database server location"
      }
    },
    "databaseServerAdminLogin": {
      "type": "string",
      "metadata": {
        "description": "This is database server administrator login name"
      }
    },
    "databaseServerAdminLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "This is database server administrator login password"
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "This is name of the database hosted in the database server"
      }
    },
    "databaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "This is database collation - rule for comparing the encodings in the database"
      }
    },
    "databaseEdition": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "This is database edition"
      }
    },
    "modulesUrl": {
      "type": "string",
      "metadata": {
        "description": "This is the URL for downloading the PowerShell DSC module. In this case it should be the link to a zip file hosted under an Azure storage container"
      }
    },
    "webdeploypkg": {
      "type": "string",
      "metadata": {
        "description": "This is the link to the Web Deploy package for the website that's going to be deployed to the Virtual Machine"
      }
    }
  },
  "variables": {
    "virtualNetworkName": "[concat(parameters('vmName'), '-VNET')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "OSDiskName": "osdiskforwindowssimple",
    "vmStorageAccountContainerName": "vhds",
    "nicName": "[concat(parameters('vmName'),'-NIC')]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet2Name": "Subnet-2",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet2Prefix": "10.0.1.0/24",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "publicIPAddressName": "[concat(parameters('vmName'), '-PublicIP-VM')]",
    "storageAccountType": "Standard_LRS"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "DSCExt1",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "tags": {
            "displayName": "DSCExt1"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[parameters('modulesUrl')]",
              "configurationFunction": "ConfigureWebServer.ps1\\Main",
              "properties": {
                "MachineName": "[parameters('vmName')]",
                "WebDeployPackagePath": "[parameters('webdeploypkg')]",
                "UserName": "[parameters('adminUsername')]",
                "Password": "[parameters('adminPassword')]",
                "DbServerName": "[parameters('DatabaseServerName')]",
                "DbName": "[parameters('databaseName')]",
                "DbUserName": "[parameters('databaseServerAdminLogin')]",
                "DbPassword": "[parameters('databaseServerAdminLoginPassword')]"
              }
            },
            "protectedSettings": {}
          }
        }
      ]
    },
    {
      "name": "[parameters('DatabaseServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('DatabaseServerLocation')]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('DatabaseServerName')]"
      },
      "properties": {
        "administratorLogin": "[parameters('databaseServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('databaseServerAdminLoginPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[parameters('DatabaseServerLocation')]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('DatabaseServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[parameters('databaseName')]",
          "type": "databases",
          "location": "[parameters('DatabaseServerLocation')]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[parameters('DatabaseServerName')]"
          ],
          "tags": {
            "displayName": "cawadb1"
          },
          "properties": {
            "collation": "[parameters('databaseCollation')]",
            "edition": "[parameters('databaseEdition')]",
            "maxSizeBytes": "1073741824"
          }
        }
      ]
    }
  ]
}