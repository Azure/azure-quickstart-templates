{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "defaultValue": "vmssbg",
      "type": "string",
      "metadata": {
        "description": "Prefix for the resource names."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine hosting the Jenkins and the Virtual Machines in VMSS."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH public key string, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "The virutal machine size to use. See https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes"
      }
    },
    "jenkinsDNSPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS name prefix for the public IP used to access the Jenkins service."
      }
    },
    "tomcatDNSPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS name prefix for the public IP used to access the Tomcat service."
      }
    },
    "servicePrincipalAppId": {
      "type": "string",
      "metadata": {
        "description": "Service Principal App ID (also called Client ID) that has contributor rights to the subscription used for this deployment. It is used to manage related Azure resources, e.g., bake OS image, check resource status, update VMSS image, etc."
      }
    },
    "servicePrincipalAppKey": {
      "type": "securestring",
      "metadata": {
        "description": "Service Principal App Key (also called Client Secret) that has contributor rights to the subscription used for this deployment. It is used to manage related Azure resources, e.g., bake OS image, check resource status, update VMSS image, etc."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/jenkins/master"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "service": "tomcat",
    "baseImageName": "[concat(parameters('resourceNamePrefix'), '-base-', uniqueString(resourceGroup().id))]",
    "imageId": "[resourceId('Microsoft.Compute/images', variables('baseImageName'))]",
    "jenkinsVmName": "[concat(parameters('resourceNamePrefix'), '-jenkins')]",
    "vmExtensionName": "[concat(variables('jenkinsVmName'), '-init')]",
    "jenkinsNic": "[concat(variables('jenkinsVmName'), '-nic')]",
    "jenkinsIp": "[concat(variables('jenkinsVmName'), '-ip')]",
    "blueVmss": "[concat(parameters('resourceNamePrefix'), '-blue')]",
    "greenVmss": "[concat(parameters('resourceNamePrefix'), '-green')]",
    "blueComputerNamePrefix": "[variables('blueVmss')]",
    "greenComputerNamePrefix": "[variables('greenVmss')]",
    "ipName": "[concat(parameters('resourceNamePrefix'), '-ip')]",
    "lbName": "[concat(parameters('resourceNamePrefix'), '-lb')]",
    "vnetName": "[concat(parameters('resourceNamePrefix'), '-vnet')]",
    "nsgName": "[concat(parameters('resourceNamePrefix'), '-nsg')]",
    "subnetName": "[concat(parameters('resourceNamePrefix'), '-subnet')]",
    "lbFrontendName": "loadBalancerFrontEnd",
    "lbFrontendId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), variables('lbFrontendName'))]",
    "lbBlueBeName": "blue-bepool",
    "lbBlueNatPoolName": "blue-natpool",
    "lbGreenBeName": "green-bepool",
    "lbGreenNatPoolName": "green-natpool",
    "_artifactsLocation": "[parameters('_artifactsLocation')]",
    "_extensionScript": "301-jenkins-vmss-zero-downtime-deployment.sh",
    "_artifactsLocationSasToken": "[parameters('_artifactsLocationSasToken')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jenkinsVmName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('jenkinsNic'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('jenkinsVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('jenkinsVmName'), '-os-disk')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jenkinsNic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[variables('vmExtensionName')]",
          "apiVersion": "2017-03-30",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('jenkinsVmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('_artifactsLocation'), '/quickstart_templates/zero_downtime_deployment/', variables('_extensionScript'), variables('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('./', variables('_extensionScript'), ' --app_id \"', parameters('servicePrincipalAppId'), '\" --app_key \"', parameters('servicePrincipalAppKey'), '\" --subscription_id \"', subscription().subscriptionId, '\" --tenant_id \"', subscription().tenantId, '\" --resource_group \"', resourceGroup().name, '\" --location \"', parameters('location'), '\" --name_prefix \"', parameters('resourceNamePrefix'), '\" --image_name \"', variables('baseImageName'), '\" --jenkins_fqdn \"', reference(variables('jenkinsIp')).dnsSettings.fqdn, '\" --artifacts_location \"', variables('_artifactsLocation'), '\" --sas_token \"', variables('_artifactsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('jenkinsNic')]",
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses', variables('jenkinsIp'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jenkinsIp'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jenkinsIp')]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('jenkinsDNSPrefix')]"
        }
      }
    },
    {
      "comments": "VMSS for the blue environment.",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "sku": {
        "name": "[parameters('virtualMachineSize')]",
        "capacity": 2
      },
      "name": "[variables('blueVmss')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('jenkinsVmName'), variables('vmExtensionName'))]"
      ],
      "properties": {
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "[variables('blueComputerNamePrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('sshPublicKey')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "imageReference": {
              "id": "[variables('imageId')]"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('blueComputerNamePrefix'), 'Nic')]",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": false,
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                  },
                  "dnsSettings": {
                    "dnsServers": []
                  },
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('blueComputerNamePrefix'), 'IPConfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                        },
                        "privateIPAddressVersion": "IPv4",
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBlueBeName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('lbName'), variables('lbBlueNatPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "overprovision": true
      }
    },
    {
      "comments": "VMSS for the green environment.",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "sku": {
        "name": "[parameters('virtualMachineSize')]",
        "capacity": 2
      },
      "name": "[variables('greenVmss')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('jenkinsVmName'), variables('vmExtensionName'))]"
      ],
      "properties": {
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "[variables('greenComputerNamePrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('sshPublicKey')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "imageReference": {
              "id": "[variables('imageId')]"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('greenComputerNamePrefix'), 'Nic')]",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": false,
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                  },
                  "dnsSettings": {
                    "dnsServers": []
                  },
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('greenComputerNamePrefix'), 'IPConfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                        },
                        "privateIPAddressVersion": "IPv4",
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbGreenBeName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('lbName'), variables('lbGreenNatPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "overprovision": true
      }
    },
    {
      "comments": "Frontend load balancer in Standard SKU which requires API version after 2017-08-01. Initially route to the blue backend.",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "apiVersion": "2017-08-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFrontendName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBlueBeName')]"
          },
          {
            "name": "[variables('lbGreenBeName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('lbBlueNatPoolName')]",
            "properties": {
              "protocol": "Tcp",
              "backendPort": 22,
              "frontendPortRangeStart": 50000,
              "frontendPortRangeEnd": 50119,
              "frontendIPConfiguration": {
                "id": "[variables('lbFrontendId')]"
              }
            }
          },
          {
            "name": "[variables('lbGreenNatPoolName')]",
            "properties": {
              "protocol": "Tcp",
              "backendPort": 22,
              "frontendPortRangeStart": 50120,
              "frontendPortRangeEnd": 50239,
              "frontendIPConfiguration": {
                "id": "[variables('lbFrontendId')]"
              }
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('service')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFrontendId')]"
              },
              "frontendPort": 80,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBlueBeName'))]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), variables('service'))]"
              }
            }
          },
          {
            "name": "[concat(variables('service'), '-test')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFrontendId')]"
              },
              "frontendPort": 8080,
              "backendPort": 8081,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbGreenBeName'))]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), variables('service'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('service')]",
            "properties": {
              "protocol": "Http",
              "port": 8080,
              "requestPath": "/",
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "comments": "Network security groups applied to the network interfaces of the VMs in the VMSS. Needs to open at least 22 and 8080. Tweak this on your demand.",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-access",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allow-http-service-access",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "comments": "Public IP address in Standard SKU. This is required to match the SKU of the load balancer. Requires API version after 2017-08-01.",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('ipName')]",
      "apiVersion": "2017-08-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[parameters('tomcatDNSPrefix')]"
        }
      }
    },
    {
      "comments": "Virtual network for all the VMs in the VMSS. Use 10.87. prefix to avoid NSG conflicts.",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.87.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.87.0.0/24"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "admin_username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "jenkins_url": {
      "type": "string",
      "value": "[concat('http://', reference(variables('jenkinsIp')).dnsSettings.fqdn)]"
    },
    "ssh": {
      "type": "string",
      "value": "[concat('ssh -L 8080:localhost:8080 ', parameters('adminUsername'), '@', reference(variables('jenkinsIp')).dnsSettings.fqdn)]"
    },
    "tomcat_url": {
      "type": "string",
      "value": "[concat('http://', reference(variables('ipName')).dnsSettings.fqdn)]"
    },
    "base_image_id": {
      "type": "string",
      "value": "[variables('imageId')]"
    }
  }
}
