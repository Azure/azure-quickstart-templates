{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "frontDoorName": {
            "type": "string",
            "metadata": {
                "description": "The name of the frontdoor resource."
            }
        },
        "backendAddress": {
            "type": "string",
            "metadata": {
                "description": "The hostname of the backend. Must be an IP address or FQDN."
            }
        },
        "wafPolicyName": {
            "type": "string",
            "metadata": {
                "description": "The name of the WAF policy"
            }
        },
        "wafMode": {
            "type": "string",
            "allowedValues": [
                "Detection",
                "Prevention"
            ],
            "defaultValue": "Detection",
            "metadata": {
                "description": "Describes if it is in detection mode or prevention mode at policy level."
            }
        },
        "httpRule1": {
            "type": "object",
            "metadata": {
                "description": "Defines contents of a web application rule 1"
            }
        },
        "httpRule2": {
            "type": "object",
            "metadata": {
                "description": "Defines contents of a web application rule 2"
            }
        }
    },
    "variables": {
        "frontdoorLocation": "global",
        "frontdoorSuffix": ".azurefd.net"
    },
    "resources": [
        {
            "apiVersion": "2019-03-01",
            "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
            "name": "[parameters('wafPolicyName')]",
            "location": "[variables('frontdoorLocation')]",
            "tags": {},
            "properties": {
                "policySettings": {
                    "mode": "[parameters('wafMode')]",
                    "enabledState": "Enabled"
                },
                "customRules": {
                    "rules": [
                        {
                            "name": "[parameters('httpRule1').name]",
                            "priority": "[parameters('httpRule1').priority]",
                            "enabledState": "[parameters('httpRule1').enabledState]",
                            "ruleType": "[parameters('httpRule1').ruleType]",
                            "copy": [
                                {
                                    "name": "matchConditions",
                                    "count": "[length(parameters('httpRule1').matchConditions)]",
                                    "input": {
                                        "matchVariable": "[parameters('httpRule1').matchConditions[copyIndex('matchConditions')].matchVariable]",
                                        "operator": "[parameters('httpRule1').matchConditions[copyIndex('matchConditions')].operator]",
                                        "selector": "[parameters('httpRule1').matchConditions[copyIndex('matchConditions')].selector]",
                                        "matchValue": "[parameters('httpRule1').matchConditions[copyIndex('matchConditions')].matchValue]"
                                    }
                                }
                            ],
                            "action": "[parameters('httpRule1').action]"
                        },
                        {
                            "name": "[parameters('httpRule2').name]",
                            "priority": "[parameters('httpRule2').priority]",
                            "enabledState": "[parameters('httpRule2').enabledState]",
                            "ruleType": "[parameters('httpRule2').ruleType]",
                            "copy": [
                                {
                                    "name": "matchConditions",
                                    "count": "[length(parameters('httpRule2').matchConditions)]",
                                    "input": {
                                        "matchVariable": "[parameters('httpRule2').matchConditions[copyIndex('matchConditions')].matchVariable]",
                                        "operator": "[parameters('httpRule2').matchConditions[copyIndex('matchConditions')].operator]",
                                        "selector": "[parameters('httpRule2').matchConditions[copyIndex('matchConditions')].selector]",
                                        "matchValue": "[parameters('httpRule2').matchConditions[copyIndex('matchConditions')].matchValue]"
                                    }
                                }
                            ],
                            "action": "[parameters('httpRule2').action]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Network/frontDoors",
            "name": "[parameters('frontDoorName')]",
            "location": "[variables('frontdoorLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/', parameters('wafPolicyName'))]"
            ],
            "tags": {},
            "properties": {
                "routingRules": [
                    {
                        "name": "routingRule1",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), 'frontendEndpoint1')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "MatchRequest",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), 'backendPool1')]"
                                }
                            },
                            "enabledState": "Enabled"
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "name": "healthProbeSettings1",
                        "properties": {
                            "path": "/",
                            "protocol": "Http",
                            "intervalInSeconds": 120
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "loadBalancingSettings1",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "additionalLatencyMilliseconds": 0
                        }
                    }
                ],
                "backendPools": [
                    {
                        "name": "backendPool1",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[parameters('backendAddress')]",
                                    "backendHostHeader": "[parameters('backendAddress')]",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "weight": 1,
                                    "priority": 1,
                                    "enabledState": "Enabled"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'loadBalancingSettings1')]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'healthProbeSettings1')]"
                            }
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "frontendEndpoint1",
                        "properties": {
                            "hostName": "[concat(parameters('frontDoorName'), variables('frontdoorSuffix'))]",
                            "sessionAffinityEnabledState": "Disabled",
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('wafPolicyName'))]"
                            }
                        }
                    }
                ],
                "enabledState": "Enabled"
            }
        }
    ],
    "outputs": {}
}