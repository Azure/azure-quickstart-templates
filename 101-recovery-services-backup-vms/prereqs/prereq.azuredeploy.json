{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "projectName": {
        "type": "string",
        "maxLength": 8,
        "metadata": {
          "description": "Specifies a name for generating resource names."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Specifies the administrator username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Specifies the administrator password for the Virtual Machine."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Specifies the unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A2",
        "metadata": {
          "description": "Virtual machine size."
        }
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
          "2008-R2-SP1",
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Nano-Server",
          "2016-Datacenter-with-Containers",
          "2016-Datacenter"
        ],
        "metadata": {
          "description": "Specifies the Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter, 2016-Nano-Server, 2016-Datacenter-with-Containers, 2016-Datacenter."
        }
      },
      "vmCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of LAB-VM tobe deployed"
            }
        }
    },
    "variables": {
      "storageAccountName": "[concat(parameters('projectName'), 'store')]",
      "vNetAddressPrefix": "10.0.0.0/16",
      "vNetSubnetName": "default",
      "vNetSubnetAddressPrefix": "10.0.0.0/24",
      "vmName": "[concat(parameters('projectName'), '-vm')]",
      "vNetName": "vnet01",
      "vaultName": "[concat(parameters('projectName'), '-vault')]",
      "networkSecurityGroupName": "default-NSG"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-06-01",
        "name": "[concat('pip-', copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vmpipcopy",
                "count": "[parameters('vmCount')]"
            },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(parameters('dnsLabelPrefix'), copyIndex())]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-3389",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "3389",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[variables('vNetName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vNetAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('vNetSubnetName')]",
              "properties": {
                "addressPrefix": "[variables('vNetSubnetAddressPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[concat('nic-', copyIndex())]",
        "location": "[parameters('location')]",
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "niccopy"
            },
            "dependsOn": [
                "vmpipcopy",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
            ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('vm-nic-', copyindex()))]"
                },
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[concat(variables('vmName'), copyIndex())]",
        "location": "[parameters('location')]",
        "copy": {
            "count": "[parameters('vmCount')]",
            "name": "vmcopy"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
          "vmpipcopy",
          "niccopy"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(variables('vmName'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "[parameters('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "lun": 0,
                "createOption": "Empty"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-', copyindex()))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
            }
          }
        }
      },
      {
        "type": "Microsoft.RecoveryServices/vaults",
        "apiVersion": "2020-02-02",
        "name": "[variables('vaultName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "RS0",
          "tier": "Standard"
        },
        "properties": {}
      }
    ],
    "outputs": {
        "vmName": {
            "type": "array",
            "copy": {
                "count": "[parameters('vmCount')]",
                "input": "[variables('vmName')]"
            }
        },
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "recoveryVaultName": {
            "type": "string",
            "value": "[variables('vaultName')]"
        }
     }
  }