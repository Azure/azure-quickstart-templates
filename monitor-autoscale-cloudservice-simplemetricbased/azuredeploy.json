{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "targetResourceGroup": {
      "type": "String",
      "metadata": {
        "description": "Name of the resource group containing the Cloud Service."
      }
    },
    "targetCloudServiceName": {
      "type": "String",
      "metadata": {
        "description": "Name of the Cloud Service."
      }
    },
    "targetRoleName": {
      "type": "String",
      "metadata": {
        "description": "Name of the role within the Cloud Service."
      }
    },
    "region": {
      "type": "String",
      "metadata": {
        "description": "Region to create the autoscale setting. This is recommended to be set as the region of the Cloud Service."
      }
    },
    "minimumCapacity": {
      "type": "Int",
      "metadata": {
        "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
      }
    },
    "maximumCapacity": {
      "type": "Int",
      "metadata": {
        "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
      }
    },
    "defaultCapacity": {
      "type": "Int",
      "metadata": {
        "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
      }
    },
    "metricName": {
      "type": "String",
      "metadata": {
        "description": "The metric name."
      }
    },
    "metricThresholdToScaleOut": {
      "type": "Int",
      "metadata": {
        "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
      }
    },
    "metricThresholdToScaleIn": {
      "type": "Int",
      "metadata": {
        "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
      }
    },
    "changePercentScaleOut": {
      "type": "Int",
      "metadata": {
        "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
      }
    },
    "changePercentScaleIn": {
      "type": "Int",
      "metadata": {
        "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
      }
    },
    "enabled": {
      "type": "Bool",
      "metadata": {
        "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
      }
    }
  },
  "variables": {
    "settingName": "[concat(toLower(parameters('targetCloudServiceName')), '-', toLower(parameters('targetRoleName')), '-setting')]",
    "targetResourceId": "[concat('/subscriptions/', subscription().SubscriptionId, '/resourcegroups/', parameters('targetResourceGroup'), '/providers/Microsoft.ClassicCompute/domainNames/', parameters('targetCloudServiceName'), '/slots/Production/roles/', parameters('targetRoleName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/autoscalesettings",
      "name": "[variables('settingName')]",
      "apiVersion": "2014-04-01",
      "location": "[parameters('region')]",
      "properties": {
        "profiles": [
          {
            "name": "DefaultAutoscaleProfile",
            "capacity": {
              "minimum": "[parameters('minimumCapacity')]",
              "maximum": "[parameters('maximumCapacity')]",
              "default": "[parameters('defaultCapacity')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": "[parameters('metricThresholdToScaleOut')]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleOut')]",
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": "[parameters('metricThresholdToScaleIn')]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleIn')]",
                  "cooldown": "PT10M"
                }
              }
            ]
          }
        ],
        "enabled": "[parameters('enabled')]",
        "targetResourceUri": "[variables('targetResourceId')]"
      }
    }
  ],
  "outputs": {
  }
}