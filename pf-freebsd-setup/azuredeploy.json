{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "frontendPrivateNicIP1": {
      "type": "string",
      "defaultValue": "10.0.2.5",
      "metadata": {
        "description": "Frontend VM private IP address which resides in private subnet."
      }
    },
    "frontendPrivateNicIP2": {
      "type": "string",
      "defaultValue": "10.0.0.5",
      "metadata": {
        "description": "Frontend VM public IP address which resides in public subnet."
      }
    },
    "backendVM1PrivateNicIP": {
      "type": "string",
      "defaultValue": "10.0.2.6",
      "metadata": {
        "description": "Backend VM1 private IP address which resides in private subnet."
      }
    },
    "backendVM2PrivateNicIP": {
      "type": "string",
      "defaultValue": "10.0.2.7",
      "metadata": {
        "description": "Backend VM2 private IP address which resides in private subnet."
      }
    },
    "frontendVmSize": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "metadata": {
        "description": "Frontend VM size, please choose proper size which allow 2 NICs."
      }
    },
    "frontendVmStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Type of frontend VM storage account."
      }
    },
    "backendVmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Backend VM size."
      }
    },
    "backendVmStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Type of backend VM storage account."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for frontend and backend VMs."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/19",
      "metadata": {
        "description": "Address prefix for VNET."
      }
    },
    "publicSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/23",
      "metadata": {
        "description": "Address prefix for public subnet."
      }
    },
    "privateSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/23",
      "metadata": {
        "description": "Address prefix for private subnet."
      }
    },
    "networkPrefix": {
      "type": "string",
      "metadata": {
        "description": "Network prefix."
      }
    },
    "domainNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/pf-freebsd-setup/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "vmName": "[concat(parameters('networkPrefix'),'-nat')]",
    "backendVM1Name": "[concat(resourceGroup().name, '-backendvm1')]",
    "backendVM2Name": "[concat(resourceGroup().name, '-backendvm2')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "publicSubnet": "subnet-public",
    "privateSubnet": "subnet-private",
    "subnetPublicID": "[concat(variables('vnetID'),'/subnets/', variables('publicSubnet'))]",
    "subnetPrivateID": "[concat(variables('vnetID'),'/subnets/', variables('privateSubnet'))]",
    "frontendPublicNic": "[concat(variables('vmName'),'-publicnic')]",
    "frontendPrivateNic": "[concat(variables('vmName'),'-privatenic')]",
    "backendVM1PrivateNic": "[concat(variables('backendVM1Name'),'-privatenic')]",
    "backendVM2PrivateNic": "[concat(variables('backendVM2Name'),'-privatenic')]",
    "vnetName": "[concat(parameters('networkPrefix'),'-vnet')]",
    "baseUriAzureCloud": "[parameters('_artifactsLocation')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'frontend')]",
    "backendStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'backend')]",
    "routeTableName": "[concat(resourceGroup().name, 'routetable')]",
    "sgName": "[concat(resourceGroup().name, '-sg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('frontendVmStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('backendStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('backendVmStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "RouteToInternet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('frontendPrivateNicIP1')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "subnet-public",
            "properties": {
              "addressPrefix": "[parameters('publicSubnetAddressPrefix')]"
            }
          },
          {
            "name": "subnet-private",
            "properties": {
              "addressPrefix": "[parameters('privateSubnetAddressPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('networkPrefix'),'-publicip')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('domainNamePrefix'),parameters('networkPrefix'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('frontendPublicNic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('frontendPrivateNicIP2')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('networkPrefix'),'-publicip'))]"
              },
              "subnet": {
                "id": "[variables('subnetPublicID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('frontendPrivateNic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('frontendPrivateNicIP1')]",
              "subnet": {
                "id": "[variables('subnetPrivateID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sgName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('backendVM1PrivateNic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('backendVM1PrivateNicIP')]",
              "subnet": {
                "id": "[variables('subnetPrivateID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('backendVM2PrivateNic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('backendVM2PrivateNicIP')]",
              "subnet": {
                "id": "[variables('subnetPrivateID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('sgName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSHRule",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "PrivateToPublicRule",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "0-65535",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion":  "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('frontendPublicNic'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('frontendPrivateNic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('frontendVmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftOSTC",
            "offer": "FreeBSD",
            "sku": "11.0",
            "version": "latest"
          },
          "osDisk": {
           "name": "[concat(variables('vmName'),'_OSDisk')]", 
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('frontendPublicNic'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('frontendPrivateNic'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('backendVM1Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('backendVM1PrivateNic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('backendVmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftOSTC",
            "offer": "FreeBSD",
            "sku": "11.0",
            "version": "latest"
          },
          "osDisk": {
            
           "name": "[concat(variables('backendVM1Name'),'_OSDisk')]",
            "createOption": "FromImage",
           
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[variables('backendVM1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('backendVM1PrivateNic'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('backendVM2Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('backendVM2PrivateNic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('backendVmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftOSTC",
            "offer": "FreeBSD",
            "sku": "11.0",
            "version": "latest"
          },
          "osDisk": {
           
            "name": "[concat(variables('backendVM2Name'),'_OSDisk')]", 
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[variables('backendVM2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('backendVM2PrivateNic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/configurepf')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('backendVM1Name'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('backendVM2Name'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(variables('baseUriAzureCloud'), 'scripts/configurepf.sh')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('sh configurepf.sh ', parameters('backendVM1PrivateNicIP'), ' ', parameters('backendVM2PrivateNicIP'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('backendVM1Name'),'/installnginx')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), 'configurepf')]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(variables('baseUriAzureCloud'), 'scripts/installnginx.sh')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "sh installnginx.sh"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('backendVM2Name'),'/installnginx')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), 'configurepf')]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(variables('baseUriAzureCloud'), 'scripts/installnginx.sh')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "sh installnginx.sh"
        }
      }
    }
  ]
}
