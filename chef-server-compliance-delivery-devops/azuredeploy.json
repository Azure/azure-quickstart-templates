{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westus",
      "allowedValues": [
        "westus",
        "eastus",
        "centralus"
      ],
      "metadata": {
        "description": "Location where all the resources deploy"
      }
    },
    "cckeyName": {
      "type": "String",
      "defaultValue": "chefcc123",
      "metadata": {
        "description": "Provide the private keyname that needs to be created in Chef Compliance Server. The correspoding public key is stored on all the nodes so that Compliance server can access them."
      }
    },
    "prereq-complianceServerUri": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "URL of an existing compliance server. This can be retrieved from the output section of the prereq.json template run."
      }
    },
    "prereq-complianceServerAdmin": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Compliance Admin UserName that is created during logging first time on Chef compliance (created from UI)"
      }
    },
    "prereq-componentServerPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Compliance Admin Password that is created during logging first time on Chef compliance (created from UI)"
      }
    },
    "vmAdminUsernameOrchServer": {
      "defaultValue": "chef",
      "type": "string",
      "metadata": {
        "description": "Orchestrator Server Virtual Machine admin username"
      }
    },
    "vmAdminPasswordOrchServer": {
      "defaultValue": "",
      "type": "securestring",
      "metadata": {
        "description": "Orchestrator Server Virtual Machine admin password"
      }
    },
    "publicIPDomainNameLabelOrchServer": {
      "defaultValue": "publicdnsorcserver",
      "type": "string",
      "metadata": {
        "description": "Orchestrator Server unique public DNS prefix"
      }
    },
    "vmAdminPasswordChefServer": {
      "defaultValue": "",
      "type": "SecureString",
      "metadata": {
        "description": "Chef Server Virtual Machine admin password"
      }
    },
    "vmSizeChefServer": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2"
      ],
      "metadata": {
        "description": "Chef Server Virtual Machine size"
      }
    },
    "publicIPDomainNameLabelChefServer": {
      "type": "string",
      "defaultValue": "publicdnschefserver",
      "metadata": {
        "description": "Chef Server unique public DNS prefix"
      }
    },
    "chefUserName": {
      "type": "string",
      "defaultValue": "adminuser",
      "metadata": {
        "description": "Chef user name"
      }
    },
    "chefUserFirstName": {
      "type": "string",
      "defaultValue": "chef",
      "metadata": {
        "description": "Chef user first name"
      }
    },
    "chefUserLastName": {
      "type": "string",
      "defaultValue": "user",
      "metadata": {
        "description": "Chef user last name"
      }
    },
    "chefUserEmail": {
      "type": "string",
      "defaultValue": "chef@noone.com",
      "metadata": {
        "description": "Chef user email"
      }
    },
    "chefUserPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Chef user password"
      }
    },
    "chefOrgFullName": {
      "type": "string",
      "defaultValue": "Chef Test Inc",
      "metadata": {
        "description": "Chef Org full name"
      }
    },
    "adminUsernameChefWorkstation": {
      "type": "string",
      "defaultValue": "chef",
      "metadata": {
        "description": "Chef Workstation Virtual Machine admin username"
      }
    },
    "adminPasswordChefWorkstation": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Chef Workstation Virtual Machine admin password"
      }
    },
    "vmSizeChefWorkstation": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2"
      ],
      "metadata": {
        "description": "Chef Workstation Virtual Machine size"
      }
    },
    "publicIPDomainNameLabelChefWorkstation": {
      "type": "string",
      "defaultValue": "publicdnschefws",
      "metadata": {
        "description": "Chef Workstation unique public DNS prefix"
      }
    },
    "adminUsernameChefEnvironments": {
      "type": "string",
      "defaultValue": "chef",
      "metadata": {
        "description": "Chef Environments Virtual Machine admin username"
      }
    },
    "adminPasswordChefEnvironments": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Chef Environments Virtual Machine admin password"
      }
    },
    "publicIPDomainNameLabelChefEnvironments": {
      "type": "string",
      "defaultValue": "dnschefenvironments",
      "metadata": {
        "description": "ChefEnvironments unique public DNS prefix"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "The base URL for dependent deployment files",
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/chef-server-compliance-delivery-devops"
    }
  },
  "variables": {
    "location": "[parameters('location')]",
    "vmNameChefServer": "chefServer",
    "vmAdminUsernameChefServer": "adminuser",
    "chefOrgShortName": "testchef",
    "vmNameChefWorkstation": "chefWS",
    "vmNameChefEnvironment": "chefEnvironment",
    "vmNameOrchServer": "orchestratorServer",
    "networkInterfaceNameChefServer": "[concat(variables('vmNameChefServer'),'-nic')]",
    "networkInterfaceNameOrchServer": "[concat(variables('vmNameOrchServer'),'-nic')]",
    "networkSecurityGroupNameChefServer": "[concat(variables('networkInterfaceNameChefServer'),'-nsg')]",
    "networkSecurityGroupNameOrchServer": "[concat(variables('networkInterfaceNameOrchServer'),'-nsg')]",
    "virtualNetworkName": "chef-vnet",
    "vnetAddressPrefix": "10.7.0.0/16",
    "subnet1Name": "chef-compliance-subnet",
    "subnet1Prefix": "10.7.1.0/24",
    "subnet2Name": "chef-server-orchestrator-subnet",
    "subnet2Prefix": "10.7.2.0/24",
    "subnet3Name": "chef-delivery-subnet",
    "subnet3Prefix": "10.7.3.0/24",
    "subnet4Name": "chef-nodes-workstation-subnet",
    "subnet4Prefix": "10.7.4.0/24",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressNameChefServer": "publicIPChefServer",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet2Name'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet3Name'))]",
    "subnet4Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet4Name'))]",
    "storageAccountName": "[concat('chefstorage',variables('uniqueString'))]",
    "vmStorageAccountContainerName": "vhds",
    "storage-api-version": "2015-06-15",
    "deployment-api-version": "2015-11-01",
    "deployment-api-version2": "2015-01-01",
    "network-api-version": "2015-06-15",
    "compute-api-version": "2015-06-15",
    "automation-api-version": "2015-01-01-preview",
    "automation-api-version2": "2015-10-31",
    "publisherChefServer": "chef-software",
    "offerChoosedChefServer": "[variables(concat('offer', parameters('vmSizeChefServer')))]",
    "imagePublisherWindows": "MicrosoftWindowsServer",
    "imageOfferWindows": "WindowsServer",
    "imagePublisherLinux": "Canonical",
    "imageOfferLinux": "UbuntuServer",
    "offerStandard_D2": {
      "vmSize": "Standard_D2",
      "vmSku": "azure_marketplace_25",
      "product": "chef-server"
    },
    "tagvalues": {
      "program": "p2p",
      "project": "Chef"
    },
    "chefServerScriptUrl": "[concat(parameters('baseUrl'),'/scripts/chefserver.sh')]",
    "chefprefix": "",
    "uniqueString": "[uniquestring(resourceGroup().id)]",
    "keyName": "validatorkey",
    "resourcegroupName": "[resourceGroup().name]",
    "kmServerUrl": "[concat(parameters('publicIPDomainNameLabelOrchServer'),variables('uniqueString'),'.',variables('location'),'.cloudapp.azure.com')]",
    "chef_node_name": "Environment-node",
    "chef_server_url": "[concat('https://',parameters('publicIPDomainNameLabelChefServer'),variables('uniqueString'),'.',parameters('location'),'.cloudapp.azure.com/organizations/',variables('chefOrgShortName'))]",
    "validation_client_name": "[concat(variables('chefOrgShortName'),'-validator')]",
    "validation_key_format": "base64encoded",
    "runlist": "recipe[trend]",
    "vmSizeOrcServer": "Standard_D1",
    "orcServerubuntuOSVersion": "14.04.2-LTS",
    "windowsOSVersion": "2012-R2-Datacenter",
    "vmSizeChefEnvironments": "Standard_D1",
    "ubuntuOSVersion": "14.04.2-LTS",
    "linuxvmcount": 4,
    "vmNameChefProvision": "chefProvision",
    "vmNameChefdelivery": "chefdelivery",
    "vmNameChefbuild1": "chefbuild1",
    "networkInterfaceNameChefProvision": "[concat(variables('vmNameChefProvision'),'-nic')]",
    "networkInterfaceNameChefdelivery": "[concat(variables('vmNameChefdelivery'),'-nic')]",
    "networkInterfaceNameChefbuild1": "[concat(variables('vmNameChefbuild1'),'-nic')]",
    "networkSecurityGroupNameChefdelivery": "[concat(variables('networkInterfaceNameChefdelivery'),'-nsg')]",
    "publicIPAddressNameChefdelivery": "publicIPChefdelivery",
    "publicIPAddressNameChefprovision": "publicIPChefprovision",
    "publicIPAddressNameChefbuild1": "publicIPChefbuild1",
    "vmSizeChefDelivery": "Standard_DS2_V2",
    "installOrchTemplateurl": "[concat(parameters('baseUrl'),'/nested/chefp2p-orchestrator-server-setup-cc.json')]",
    "chefnodeCustomScripturl": "[concat(parameters('baseUrl'),'/scripts/p2pchefnodebootstrap.sh')]",
    "component": "chefcc"
  },
  "resources": [
    {
      "name": "orchestrator",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deployment-api-version2')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseUrl'), '/nested/chefp2p-orchestrator.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "network-api-version": {
            "value": "[variables('network-api-version')]"
          },
          "compute-api-version": {
            "value": "[variables('compute-api-version')]"
          },
          "deployment-api-version2": {
            "value": "[variables('deployment-api-version2')]"
          },
          "tagvalues": {
            "value": "[variables('tagvalues')]"
          },
          "publicIPDomainNameLabelOrchServer": {
            "value": "[concat(parameters('publicIPDomainNameLabelOrchServer'),variables('uniqueString'))]"
          },
          "vmNameOrchServer": {
            "value": "[variables('vmNameOrchServer')]"
          },
          "networkInterfaceNameOrchServer": {
            "value": "[variables('networkInterfaceNameOrchServer')]"
          },
          "networkSecurityGroupNameOrchServer": {
            "value": "[variables('networkSecurityGroupNameOrchServer')]"
          },
          "vmAdminUsernameOrchServer": {
            "value": "[parameters('vmAdminUsernameOrchServer')]"
          },
          "vmAdminPasswordOrchServer": {
            "value": "[parameters('vmAdminPasswordOrchServer')]"
          },
          "vmStorageAccountContainerName": {
            "value": "[variables('vmStorageAccountContainerName')]"
          },
          "imagePublisherLinux": {
            "value": "[variables('imagePublisherLinux')]"
          },
          "imageOfferLinux": {
            "value": "[variables('imageOfferLinux')]"
          },
          "orcServerubuntuOSVersion": {
            "value": "[variables('orcServerubuntuOSVersion')]"
          },
          "vmSizeOrcServer": {
            "value": "[variables('vmSizeOrcServer')]"
          },
          "subnet2Ref": {
            "value": "[variables('subnet2Ref')]"
          },
          "installOrchTemplateurl": {
            "value": "[variables('installOrchTemplateurl')]"
          },
          "cckeyName": {
            "value": "[parameters('cckeyName')]"
          },
          "component": {
            "value": "[variables('component')]"
          },
          "email": {
            "value": "[parameters('chefUserEmail')]"
          },
          "componentBaseUrl": {
            "value": "[parameters('prereq-complianceServerUri')]"
          },
          "componentAdminUsername": {
            "value": "[parameters('prereq-complianceServerAdmin')]"
          },
          "componentAdminPassword": {
            "value": "[parameters('prereq-componentServerPassword')]"
          }
        }
      }
    },
    {
      "name": "chefserver",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deployment-api-version2')]",
      "dependsOn": [
        "['Microsoft.Resources/deployments/orchestrator']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseUrl'), '/nested/chefp2p-chefserver.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "publicIPAddressNameChefServer": {
            "value": "[variables('publicIPAddressNameChefServer')]"
          },
          "publicIPDomainNameLabelChefServer": {
            "value": "[concat(parameters('publicIPDomainNameLabelChefServer'),variables('uniqueString'))]"
          },
          "networkSecurityGroupNameChefServer": {
            "value": "[variables('networkSecurityGroupNameChefServer')]"
          },
          "networkInterfaceNameChefServer": {
            "value": "[variables('networkInterfaceNameChefServer')]"
          },
          "vmNameChefServer": {
            "value": "[variables('vmNameChefServer')]"
          },
          "vmAdminUsernameChefServer": {
            "value": "[variables('vmAdminUsernameChefServer')]"
          },
          "vmAdminPasswordChefServer": {
            "value": "[parameters('vmAdminPasswordChefServer')]"
          },
          "vmStorageAccountContainerName": {
            "value": "[variables('vmStorageAccountContainerName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "network-api-version": {
            "value": "[variables('network-api-version')]"
          },
          "compute-api-version": {
            "value": "[variables('compute-api-version')]"
          },
          "tagvalues": {
            "value": "[variables('tagvalues')]"
          },
          "publisherChefServer": {
            "value": "[variables('publisherChefServer')]"
          },
          "offerChoosedChefServer": {
            "value": "[variables('offerChoosedChefServer')]"
          },
          "subnet2Ref": {
            "value": "[variables('subnet2Ref')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "chefUserName": {
            "value": "[parameters('chefUserName')]"
          },
          "chefUserFirstName": {
            "value": "[parameters('chefUserFirstName')]"
          },
          "chefUserLastName": {
            "value": "[parameters('chefUserLastName')]"
          },
          "chefUserEmail": {
            "value": "[parameters('chefUserEmail')]"
          },
          "chefUserPassword": {
            "value": "[parameters('chefUserPassword')]"
          },
          "chefOrgShortName": {
            "value": "[variables('chefOrgShortName')]"
          },
          "chefOrgFullName": {
            "value": "[parameters('chefOrgFullName')]"
          },
          "chefServerScriptUrl": {
            "value": "[variables('chefServerScriptUrl')]"
          },
          "publicIPDomainNameLabelOrchServer": {
            "value": "[concat(parameters('publicIPDomainNameLabelOrchServer'),variables('uniqueString'))]"
          }
        }
      }
    },
    {
      "name": "chefdelivery",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deployment-api-version2')]",
      "dependsOn": [
        "['Microsoft.Resources/deployments/chefserver']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseUrl'), '/nested/chefp2p-delivery.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "publicIPAddressNameChefdelivery": {
            "value": "[variables('publicIPAddressNameChefdelivery')]"
          },
          "publicIPAddressNameChefprovision": {
            "value": "[variables('publicIPAddressNameChefprovision')]"
          },
          "publicIPAddressNameChefbuild1": {
            "value": "[variables('publicIPAddressNameChefbuild1')]"
          },
          "networkSecurityGroupNameChefdelivery": {
            "value": "[variables('networkSecurityGroupNameChefdelivery')]"
          },
          "networkInterfaceNameChefProvision": {
            "value": "[variables('networkInterfaceNameChefProvision')]"
          },
          "networkInterfaceNameChefdelivery": {
            "value": "[variables('networkInterfaceNameChefdelivery')]"
          },
          "networkInterfaceNameChefbuild1": {
            "value": "[variables('networkInterfaceNameChefbuild1')]"
          },
          "vmNameChefdelivery": {
            "value": "[variables('vmNameChefdelivery')]"
          },
          "vmNameChefProvision": {
            "value": "[variables('vmNameChefProvision')]"
          },
          "vmNameChefbuild1": {
            "value": "[variables('vmNameChefbuild1')]"
          },
          "vmAdminUsernameChefServer": {
            "value": "[variables('vmAdminUsernameChefServer')]"
          },
          "vmAdminPasswordChefServer": {
            "value": "[parameters('vmAdminPasswordChefServer')]"
          },
          "vmStorageAccountContainerName": {
            "value": "[variables('vmStorageAccountContainerName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "network-api-version": {
            "value": "[variables('network-api-version')]"
          },
          "compute-api-version": {
            "value": "[variables('compute-api-version')]"
          },
          "tagvalues": {
            "value": "[variables('tagvalues')]"
          },
          "subnet3Ref": {
            "value": "[variables('subnet3Ref')]"
          },
          "baseUrl": {
            "value": "[parameters('baseUrl')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('deployment-api-version2')]",
      "type": "Microsoft.Resources/deployments",
      "name": "chefnodes",
      "dependsOn": [
        "['Microsoft.Resources/deployments/chefserver']"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('baseUrl'), '/nested/chefp2p-chefenvironment.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "network-api-version": {
            "value": "[variables('network-api-version')]"
          },
          "compute-api-version": {
            "value": "[variables('compute-api-version')]"
          },
          "deployment-api-version2": {
            "value": "[variables('deployment-api-version2')]"
          },
          "vmNameChefWorkstation": {
            "value": "[variables('vmNameChefWorkstation')]"
          },
          "vmSizeChefWorkstation": {
            "value": "[parameters('vmSizeChefWorkstation')]"
          },
          "adminUsernameChefWorkstation": {
            "value": "[parameters('adminUsernameChefWorkstation')]"
          },
          "adminPasswordChefWorkstation": {
            "value": "[parameters('adminPasswordChefWorkstation')]"
          },
          "publicIPDomainNameLabelChefWorkstation": {
            "value": "[concat(parameters('publicIPDomainNameLabelChefWorkstation'),variables('uniqueString'))]"
          },
          "windowsOSVersion": {
            "value": "[variables('windowsOSVersion')]"
          },
          "vmNameChefEnvironment": {
            "value": "[variables('vmNameChefEnvironment')]"
          },
          "vmSizeChefEnvironments": {
            "value": "[variables('vmSizeChefEnvironments')]"
          },
          "adminUsernameChefEnvironments": {
            "value": "[parameters('adminUsernameChefEnvironments')]"
          },
          "adminPasswordChefEnvironments": {
            "value": "[parameters('adminPasswordChefEnvironments')]"
          },
          "publicIPDomainNameLabelChefEnvironments": {
            "value": "[concat(parameters('publicIPDomainNameLabelChefEnvironments'),variables('uniqueString'))]"
          },
          "ubuntuOSVersion": {
            "value": "[variables('ubuntuOSVersion')]"
          },
          "linuxvmcount": {
            "value": "[variables('linuxvmcount')]"
          },
          "subnet4Ref": {
            "value": "[variables('subnet4Ref')]"
          },
          "imagePublisherWindows": {
            "value": "[variables('imagePublisherWindows')]"
          },
          "imageOfferWindows": {
            "value": "[variables('imageOfferWindows')]"
          },
          "imagePublisherLinux": {
            "value": "[variables('imagePublisherLinux')]"
          },
          "imageOfferLinux": {
            "value": "[variables('imageOfferLinux')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "vmStorageAccountContainerName": {
            "value": "[variables('vmStorageAccountContainerName')]"
          },
          "tagvalues": {
            "value": "[variables('tagvalues')]"
          },
          "chefprefix": {
            "value": "[variables('chefprefix')]"
          },
          "keyName": {
            "value": "[variables('keyName')]"
          },
          "kmServerUrl": {
            "value": "[variables('kmServerUrl')]"
          },
          "chef_node_name": {
            "value": "[variables('chef_node_name')]"
          },
          "chef_server_url": {
            "value": "[variables('chef_server_url')]"
          },
          "validation_client_name": {
            "value": "[variables('validation_client_name')]"
          },
          "validation_key_format": {
            "value": "[variables('validation_key_format')]"
          },
          "runlist": {
            "value": "[variables('runlist')]"
          },
          "resourcegroupName": {
            "value": "[variables('resourcegroupName')]"
          },
          "chefnodeCustomScripturl": {
            "value": "[variables('chefnodeCustomScripturl')]"
          },
          "cckeyName": {
            "value": "[parameters('cckeyName')]"
          },
          "complianceServerUri": {
            "value": "[parameters('prereq-complianceServerUri')]"
          },
          "complianceServerAdmin": {
            "value": "[parameters('prereq-complianceServerAdmin')]"
          },
          "component": {
            "value": "[variables('component')]"
          }
        }
      }
    }
  ]
}