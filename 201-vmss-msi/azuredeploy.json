{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type"
      }
    },
    "adminPasswordorSSHKey": {
      "type": "securestring",
      "metadata": {
        "description": "OS Admin password or SSH Key depending on value of authentication type"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The Location For the resources"
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM to create"
      },
      "defaultValue": "Standard_D2S_V3"
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "minValue": 1,
      "maxValue": 100,
      "defaultValue": 2
    },
    "overProvision": {
      "type": "bool",
      "metadata": {
        "description": "Over Provision VMSS Instances"
      },
      "defaultValue": false
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-msi/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation."
      },
      "defaultValue": ""
    },
    "operatingSystem": {
      "type": "string",
      "defaultValue": "UbuntuServer_18.04-LTS",
      "metadata": {
        "description": "Operating system to use for the virtual machine."
      },
      "allowedValues": [
        "UbuntuServer_18.04-LTS",
        "UbuntuServer_16.04-LTS",
        "WindowsServer_2016-DataCenter"
      ]
    }
  },
  "variables": {
    "azureCLI2DockerImage": "azuresdk/azure-cli-python:latest",
    "vmssPrefix": "vmss",
    "storageAccountName": "[concat(variables('vmssPrefix'),uniquestring(resourceGroup().id))]",
    "nicName": "nic",
    "networkSecurityGroupName": "nsg",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "vmssName": "[concat(variables('vmssPrefix'), uniquestring(resourceGroup().id))]",
    "virtualNetworkName": "vnet",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "containerName": "msi",
    "createVMSSUrl": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/createVMSS.json', parameters('_artifactsLocationSasToken')))]",
    "createRBACUrl": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/setUpRBAC.json', parameters('_artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('Location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('Location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "[if(contains(toLower(parameters('operatingSystem')), 'windows'), 3389, 22)]",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "name": "creatingVMSS",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[variables('virtualNetworkName')]",
        "[variables('storageAccountName')]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createVMSSUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "adminPasswordorSSHKey": {
            "value": "[parameters('adminPasswordorSSHKey')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "azureCLI2DockerImage": {
            "value": "[variables('azureCLI2DockerImage')]"
          },
          "containerName": {
            "value": "[variables('containerName')]"
          },
          "operatingSystem": {
            "value": "[parameters('operatingSystem')]"
          },
          "instanceCount": {
            "value": 0
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "networkSecurityGroupName": {
            "value": "[variables('networkSecurityGroupName')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "overProvision": {
            "value": "[parameters('overProvision')]"
          },
          "provisionExtensions": {
            "value": false
          },
          "storageAccountId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmssName": {
            "value": "[variables('vmssName')]"
          },
          "vmssPrefix": {
            "value": "[variables('vmssPrefix')]"
          }
        }
      }
    },
    {
      "name": "creatingRBAC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "creatingVMSS"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createRBACUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'creatingVMSS'), '2019-09-01').outputs.principalId.value]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "name": "updatingVMSS",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "creatingRBAC"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createVMSSUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "adminPasswordorSSHKey": {
            "value": "[parameters('adminPasswordorSSHKey')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "azureCLI2DockerImage": {
            "value": "[variables('azureCLI2DockerImage')]"
          },
          "containerName": {
            "value": "[variables('containerName')]"
          },
          "operatingSystem": {
            "value": "[parameters('operatingSystem')]"
          },
          "instanceCount": {
            "value": "[parameters('instanceCount')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "networkSecurityGroupName": {
            "value": "[variables('networkSecurityGroupName')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "overProvision": {
            "value": "[parameters('overProvision')]"
          },
          "provisionExtensions": {
            "value": true
          },
          "storageAccountId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmssName": {
            "value": "[variables('vmssName')]"
          },
          "vmssPrefix": {
            "value": "[variables('vmssPrefix')]"
          }
        }
      }
    }
  ]
}