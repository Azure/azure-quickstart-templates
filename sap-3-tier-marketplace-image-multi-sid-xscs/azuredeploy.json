{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourcePrefix": {
      "type": "string",
      "maxLength": 6,
      "minLength": 3,
      "metadata": {
        "description": "The prefix that should be used to create the resource names."
      }
    },
    "stackType": {
      "type": "string",
      "allowedValues": [
        "ABAP",
        "JAVA",
        "ABAP+JAVA"
      ],
      "defaultValue": "ABAP",
      "metadata": {
        "description": "The stack type of the SAP system."
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows Server 2012 Datacenter",
        "Windows Server 2012 R2 Datacenter",
        "Windows Server 2016 Datacenter",
        "SLES 12",
        "SLES 12 BYOS",
        "RHEL 7.2"
      ],
      "defaultValue": "Windows Server 2012 R2 Datacenter",
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "sapSystemCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 10,
      "defaultValue": 2,
      "metadata": {
        "description": "The number of SAP systems of this multi SID setup."
      }
    },
    "systemAvailability": {
      "type": "string",
      "allowedValues": [
        "HA",
        "Not HA"
      ],
      "defaultValue": "Not HA",
      "metadata": {
        "description": "Determines whether this is a high available deployment or not. A HA deployment contains multiple instances of single point of failures."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "newOrExistingSubnet": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Determines whether a new virtual network and subnet should be created or an existing subnet should be used."
      }
    },
    "subnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The id of the subnet you want to use."
      }
    }
  },
  "variables": {
    "github": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sap-2-tier-marketplace-image/shared/",
    "images": {
      "Windows Server 2012 Datacenter": {
        "sku": "2012-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows",
        "Plan": {},
        "UsePlan": false
      },
      "Windows Server 2012 R2 Datacenter": {
        "sku": "2012-R2-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows",
        "Plan": {},
        "UsePlan": false
      },
      "Windows Server 2016 Datacenter": {
        "sku": "2016-Datacenter",
        "offer": "WindowsServer",
        "publisher": "MicrosoftWindowsServer",
        "version": "latest",
        "OSType": "Windows",
        "Plan": {},
        "UsePlan": false
      },
      "SLES 12": {
        "sku": "12-SP1",
        "offer": "SLES-SAP",
        "publisher": "SUSE",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      },
      "SLES 12 BYOS": {
        "sku": "12-SP1",
        "offer": "SLES-SAP-BYOS",
        "publisher": "SUSE",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      },
      "RHEL 7.2": {
        "sku": "7.2",
        "offer": "RHEL",
        "publisher": "RedHat",
        "version": "latest",
        "OSType": "Linux",
        "Plan": {},
        "UsePlan": false
      }
    },
    "imageSku": "[variables('images')[parameters('osType')].sku]",
    "imagePublisher": "[variables('images')[parameters('osType')].publisher]",
    "imageOffer": "[variables('images')[parameters('osType')].offer]",
    "imageVersion": "[variables('images')[parameters('osType')].version]",
    "internalOSType": "[variables('images')[parameters('osType')].OSType]",
    "planRefernce": "[variables('images')[parameters('osType')].Plan]",
    "usePlanRefernce": "[variables('images')[parameters('osType')].UsePlan]",
    "csExtension": {
      "Windows": {
        "Publisher": "Microsoft.Compute",
        "Name": "CustomScriptExtension",
        "Version": "1.7",
        "script": "[concat(variables('github'), 'noop.ps1')]",
        "scriptCall": "powershell.exe -ExecutionPolicy bypass -File noop.ps1"
      },
      "Linux": {
        "Publisher": "Microsoft.OSTCExtensions",
        "Name": "CustomScriptForLinux",
        "Version": "1.3",
        "script": "[concat(variables('github'), 'noop.sh')]",
        "scriptCall": "sh noop.sh"
      }
    },
    "cseExtPublisher": "[variables('csExtension')[variables('internalOSType')].Publisher]",
    "cseExtName": "[variables('csExtension')[variables('internalOSType')].Name]",
    "cseExtVersion": "[variables('csExtension')[variables('internalOSType')].Version]",
    "csExtensionScript": "[variables('csExtension')[variables('internalOSType')].script]",
    "csExtensionscriptCall": "[variables('csExtension')[variables('internalOSType')].scriptCall]",
    "systemCountSizes": {
      "2": {
        "Size": "Small",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "3": {
        "Size": "Small",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "4": {
        "Size": "Medium",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "5": {
        "Size": "Medium",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "6": {
        "Size": "Medium",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "7": {
        "Size": "Medium",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "8": {
        "Size": "Large",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "9": {
        "Size": "Large",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      },
      "10": {
        "Size": "Large",
        "Disks": [
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          },
          {
            "size": 128
          }
        ]
      }
    },
    "vmSizes": {
      "Small": {
        "Not HA": {
          "xscsserversize": "Standard_DS2_v2",
          "xscsservercount": 1
        },
        "HA": {
          "xscsserversize": "Standard_DS2_v2",
          "xscsservercount": 2
        }
      },
      "Medium": {
        "Not HA": {
          "xscsserversize": "Standard_DS3_v2",
          "xscsservercount": 1
        },
        "HA": {
          "xscsserversize": "Standard_DS3_v2",
          "xscsservercount": 2
        }
      },
      "Large": {
        "Not HA": {
          "xscsserversize": "Standard_DS4_v2",
          "xscsservercount": 1
        },
        "HA": {
          "xscsserversize": "Standard_DS4_v2",
          "xscsservercount": 2
        }
      }
    },
    "xscsvmSize": "[variables('vmSizes')[ variables('systemCountSizes')[string(parameters('sapSystemCount'))].Size ] [parameters('systemAvailability')].xscsserversize]",
    "xscsvmCount": "[variables('vmSizes')[ variables('systemCountSizes')[string(parameters('sapSystemCount'))].Size ] [parameters('systemAvailability')].xscsservercount]",
    "xscsvmDataDisks": "[variables('systemCountSizes')[string(parameters('sapSystemCount'))].Disks]",
    "sidlower": "[toLower(parameters('resourcePrefix'))]",
    "vmName": "[variables('sidlower')]",
    "storageAccountName": "[concat(variables('sidlower'), uniqueString(variables('sidlower'), resourceGroup().id))]",
    "vnetName": "[concat(variables('sidlower'), '-vnet')]",
    "publicIPAddressType": "Dynamic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnets": {
      "new": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/', variables('subnetName'))]",
      "existing": "[parameters('subnetId')]"
    },
    "selectedSubnetId": "[variables('subnets')[parameters('newOrExistingSubnet')]]",
    "nestedDeploymentName": "nestedTemplate",
    "nestedDeploymentNameVNet": "[concat(variables('nestedDeploymentName'), 'vnet')]",
    "nestedDeploymentNamePIP": "[concat(variables('nestedDeploymentName'), 'pip')]",
    "nestedDeploymentNameXSCS": "[concat(variables('nestedDeploymentName'), 'xscs')]",
    "nestedDeploymentNameProf": "[concat(variables('nestedDeploymentName'), 'prof')]",
    "nestedDeploymentNameNIC": "[concat(variables('nestedDeploymentName'), 'nic')]",
    "nestedDeploymentNameNICXSCS": "[concat(variables('nestedDeploymentNameNIC'), 'xscs')]",
    "nestedDeploymentNameLBXSCS": "[concat(variables('nestedDeploymentName'), 'lbxscs')]",
    "publicIpNameXSCS": "[concat(variables('sidlower'), '-pip-xscs')]",
    "avSetNameXSCS": "[concat(variables('sidlower'), '-avset-xscs')]",
    "nestedDeploymentNameNSG": "[concat(variables('nestedDeploymentNameXSCS'), 'nsg')]",
    "nsgNameXSCS": "[concat(variables('sidlower'), '-nsg')]",
    "storageAccountNameXSCS": "[concat('ascs', variables('storageAccountName'))]",
    "internalStorageTypeXSCS": "Premium_LRS",
    "loadBalancerNameXSCS": "[concat(variables('sidlower'), '-lb-xscs')]",
    "vmNameXSCS": "[concat(variables('vmName'), '-xscs')]",
    "nicNameXSCS": "[concat(variables('sidlower'), '-nic-xscs')]",
    "osDiskType": "image",
    "apiVerion": "2015-06-15",
    "apiVerionRm": "2015-01-01"
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "[variables('nestedDeploymentNameNSG')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), parameters('newOrExistingSubnet'), 'nsg.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nsgName": {
            "value": "[variables('nsgNameXSCS')]"
          },
          "osType": {
            "value": "[variables('internalOSType')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[variables('nestedDeploymentNameVnet')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameNSG'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), parameters('newOrExistingSubnet'), 'vnetnsg.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "addressPrefix": {
            "value": "[variables('addressPrefix')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          },
          "nsgName": {
            "value": "[variables('nsgNameXSCS')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avSetNameXSCS')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 20
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('nestedDeploymentNamePIP'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "pipLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), parameters('newOrExistingSubnet'), 'pip.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "publicIpName": {
            "value": "[concat(variables('publicIpNameXSCS'), '-', copyIndex())]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountNameXSCS'), copyIndex())]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "storageAccountXSCSLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('internalStorageTypeXSCS')]"
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[variables('nestedDeploymentNameLBXSCS')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameVnet'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), 'loadbalancer.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "loadBalancerName": {
            "value": "[variables('loadBalancerNameXSCS')]"
          },
          "sapSystemCount": {
            "value": "[parameters('sapSystemCount')]"
          },
          "stackType": {
            "value": "[parameters('stackType')]"
          },
          "osType": {
            "value": "[variables('internalOSType')]"
          },
          "createXSCS": {
            "value": true
          },
          "createDB": {
            "value": false
          },
          "subnetId": {
            "value": "[variables('selectedSubnetId')]"
          },
          "github": {
            "value": "[variables('github')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('nestedDeploymentNameNICXSCS'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "nicConfigXSCSLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), 'nic-config.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "publicIpName": {
            "value": "[concat(variables('publicIpNameXSCS'), '-', copyIndex())]"
          },
          "nsgName": {
            "value": ""
          },
          "newOrExistingSubnet": {
            "value": "[parameters('newOrExistingSubnet')]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNameXSCS'), '-', copyIndex())]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicXSCSLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNamePIP'), '-', copyIndex())]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameNICXSCS'), '-', copyIndex())]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameVnet'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameLBXSCS'))]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": "[reference(concat(variables('nestedDeploymentNameNICXSCS'), '-', copyIndex())).outputs.selectedConfiguration.value.publicIPAddress]",
              "subnet": "[reference(concat(variables('nestedDeploymentNameNICXSCS'), '-', copyIndex())).outputs.selectedConfiguration.value.subnet]",
              "loadBalancerBackendAddressPools": "[reference(variables('nestedDeploymentNameLBXSCS')).outputs.nicBackAddressPools.value]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('nestedDeploymentNameProf'), '-xscs-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "osDiskPartsXSCSLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNameXSCS'), copyIndex()))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), 'os-disk-parts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "imageSku": {
            "value": "[variables('imageSku')]"
          },
          "imagePublisher": {
            "value": "[variables('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[variables('imageOffer')]"
          },
          "imageVersion": {
            "value": "[variables('imageVersion')]"
          },
          "userImageVhdUri": {
            "value": ""
          },
          "userImageStorageAccount": {
            "value": ""
          },
          "osDiskVhdUri": {
            "value": ""
          },
          "osDiskType": {
            "value": "[variables('osDiskType')]"
          },
          "osType": {
            "value": "[variables('internalOSType')]"
          },
          "sidlower": {
            "value": "[variables('sidlower')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNameXSCS'), '-', copyIndex())]"
          },
          "storageAccountName": {
            "value": "[concat(variables('storageAccountNameXSCS'), copyIndex())]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('nestedDeploymentNameXSCS'), '-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "vmXSCSLoop",
        "count": "[variables('xscsvmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameXSCS'), '-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('avSetNameXSCS'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nestedDeploymentNameProf'), '-xscs-', copyIndex())]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('github'), 'server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "imageReference": {
            "value": "[reference(concat(variables('nestedDeploymentNameProf'), '-xscs-', copyIndex())).outputs.imageReference.value]"
          },
          "planReference": {
            "value": "[variables('planRefernce')]"
          },
          "usePlanReference": {
            "value": "[variables('usePlanRefernce')]"
          },
          "osDisk": {
            "value": "[reference(concat(variables('nestedDeploymentNameProf'), '-xscs-', copyIndex())).outputs.osDisk.value]"
          },
          "osDiskType": {
            "value": "[variables('osDiskType')]"
          },
          "sidlower": {
            "value": "[variables('sidlower')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNameXSCS'), '-', copyIndex())]"
          },
          "vmSize": {
            "value": "[variables('xscsvmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "cseExtPublisher": {
            "value": "[variables('cseExtPublisher')]"
          },
          "cseExtName": {
            "value": "[variables('cseExtName')]"
          },
          "cseExtVersion": {
            "value": "[variables('cseExtVersion')]"
          },
          "csExtensionScript": {
            "value": "[variables('csExtensionScript')]"
          },
          "csExtensionscriptCall": {
            "value": "[variables('csExtensionscriptCall')]"
          },
          "avSetName": {
            "value": "[variables('avSetNameXSCS')]"
          },
          "storageAccountName": {
            "value": "[concat(variables('storageAccountNameXSCS'), copyIndex())]"
          },
          "nicName": {
            "value": "[concat(variables('nicNameXSCS'), '-', copyIndex())]"
          },
          "dataDiskSizes": {
            "value": "[variables('xscsvmDataDisks')]"
          },
          "github": {
            "value": "[variables('github')]"
          }
        }
      }
    }
  ]
}