{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location where the resources will be deployed."
            }
        },
        "createPublicIP": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Do you want to create a public IP address for the source server?"
            }
        },
        "sourceWindowsAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "Windows Authentication user name for the source server"
            }
        },
        "sourceWindowsAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Windows Authentication password for the source server"
            }
        },
        "sourceSqlAuthenticationPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Sql Authentication password for the source server (User name will be same as Windows Auth)"
            }
        },
        "targetSqlDbAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "Administrator User name for the Target Azure SQL DB Server."
            }
        },
        "targetSqlDbAdministratorPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Administrator Password for the Target Azure SQL DB Server."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-azure-database-migration-service/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "DMSServiceName": "[concat('DMS', uniqueString(resourceGroup().id))]",
        "sourceServerName": "[take(concat('Source', uniqueString(resourceGroup().id)), 15)]",
        "targetServerName": "[concat('targetservername', uniqueString(resourceGroup().id))]",
        "scriptLocation": "AddDatabaseToSqlServer.ps1",
        "bakFileLocation": "AdventureWorks2016.bak",
        "scriptFiles": [
            "[uri(parameters('_artifactsLocation'), concat(variables('scriptLocation'), parameters('_artifactsLocationSasToken')))]",
            "[uri(parameters('_artifactsLocation'), concat(variables('bakFileLocation'), parameters('_artifactsLocationSasToken')))]"
            ],
        "scriptParameters": "[concat('-userName ', parameters('sourceWindowsAdminUserName'), ' -password \"', parameters('sourceWindowsAdminPassword'))]",
        "storageAccountNamePrefix": "storage",
        "storageAccountName": "[toLower(concat(variables('storageAccountNamePrefix'), uniqueString(resourceGroup().id)))]",
        "sourceNicName": "SourceNIC-1",
        "publicIPSourceServer": "SourceServer1-ip",
        "sourceServerNSG": "SourceServer1-nsg",
        "adVNet": "AzureDataMigrationServiceTemplateRG-vnet",
        "defaultSubnetName": "default",
        "databaseName": "TargetDatabaseName1",
        "publicIpAddressId": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPSourceServer'))]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('sourceServerName')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('sourceNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2016SP1-WS2016",
                        "sku": "Standard",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(variables('sourceServerName'),'_disk-1')]",
                            "createOption": "Empty",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "diskSizeGB": 1023
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('sourceServerName')]",
                    "adminUsername": "[parameters('sourceWindowsAdminUserName')]",
                    "adminPassword": "[parameters('sourceWindowsAdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sourceNicName')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName'), '2017-10-01').primaryEndpoints['blob']]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "2017-12-01",
                    "type": "extensions",
                    "name": "SqlIaasExtension",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('sourceServerName'))]"
                    ],
                    "properties": {
                        "type": "SqlIaaSAgent",
                        "publisher": "Microsoft.SqlServer.Management",
                        "typeHandlerVersion": "1.2",
                        "autoUpgradeMinorVersion": "true",
                        "settings": {
                            "AutoTelemetrySettings": {
                                "Region": "[parameters('location')]"
                            },
                            "AutoPatchingSettings": {
                                "PatchCategory": "WindowsMandatoryUpdates",
                                "Enable": false,
                                "DayOfWeek": "Sunday",
                                "MaintenanceWindowStartingHour": "2",
                                "MaintenanceWindowDuration": "60"
                            },
                            "KeyVaultCredentialSettings": {
                                "Enable": false,
                                "CredentialName": ""
                            },
                            "ServerConfigurationsManagementSettings": {
                                "SQLConnectivityUpdateSettings": {
                                    "ConnectivityType": "Private",
                                    "Port": "1433"
                                },
                                "SQLWorkloadTypeUpdateSettings": {
                                    "SQLWorkloadType": "OLTP"
                                },
                                "SQLStorageUpdateSettings": {
                                    "DiskCount": "1",
                                    "NumberOfColumns": "8",
                                    "StartingDeviceID": "2",
                                    "DiskConfigurationType": "NEW"
                                },
                                "AdditionalFeaturesServerConfigurations": {
                                    "IsRServicesEnabled": "false"
                                }
                            }
                        },
                        "protectedSettings": {
                            "SQLAuthUpdateUserName": "[parameters('sourceWindowsAdminUserName')]",
                            "SQLAuthUpdatePassword": "[parameters('sourceSqlAuthenticationPassword')]"
                        }
                    }
                },
                {
                    "apiVersion": "2017-12-01",
                    "type": "extensions",
                    "name": "CustomScriptExtension",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('sourceServerName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('sourceServerName'),'/extensions/SqlIaasExtension'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": "[variables('scriptFiles')]"
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', './', variables('scriptLocation'), ' ', variables('scriptParameters'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.DataMigration/services",
            "sku": {
                "name": "Standard_1vCores",
                "tier": "Standard",
                "size": "1 vCores"
            },
            "name": "[variables('DMSServiceName')]",
            "apiVersion": "2017-11-15-privatepreview",
            "location": "[parameters('location')]",
            "properties": {
                "virtualSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVNet'), variables('defaultSubnetName'))]"
            },
            "resources": [
                {
                    "type": "projects",
                    "name": "SqlToSqlDbMigrationProject",
                    "apiVersion": "2017-11-15-privatepreview",
                    "location": "[parameters('location')]",
                    "properties": {
                        "sourcePlatform": "SQL",
                        "targetPlatform": "SQLDB"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.DataMigration/services', variables('DMSServiceName'))]"
                    ]
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVNet'), variables('defaultSubnetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('sourceNicName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVNet'), variables('defaultSubnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIPSourceServer'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVNet'), variables('defaultSubnetName'))]"
                            },
                            "publicIPAddress": "[if(parameters('createPublicIP'), variables('publicIpAddressId'), json('null'))]",
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('sourceServerNSG')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('createPublicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[variables('publicIPSourceServer')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('adVNet')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "resources": [
                {
                    "type": "subnets",
                    "name": "[variables('defaultSubnetName')]",
                    "apiVersion": "2018-02-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('adVNet'))]"
                    ],
                    "properties": {
                        "addressPrefix": "10.2.0.0/24"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[concat(variables('targetServerName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('targetSqlDbAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('targetSqlDbAdministratorPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "type": "databases",
                    "sku": {
                        "name": "Basic",
                        "tier": "Basic"
                    },
                    "name": "[variables('databaseName')]",
                    "apiVersion": "2017-10-01-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', concat(variables('targetServerName')))]"
                    ],
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": 2147483648,
                        "zoneRedundant": "false"
                    },
                    "resources": [
                        {
                            "name": "Import",
                            "type": "extensions",
                            "apiVersion": "2014-04-01-preview",
                            "dependsOn": [
                                "[resourceId('Microsoft.Sql/servers/databases', variables('targetServerName'), variables('databaseName'))]"
                            ],
                            "properties": {
                                "storageKey": "[parameters('_artifactsLocationSasToken')]",
                                "storageKeyType": "SharedAccessKey",
                                "storageUri": "[uri(parameters('_artifactsLocation'), 'templatefiles/AdventureWorks2016.bacpac')]",
                                "administratorLogin": "[parameters('targetSqlDbAdministratorLogin')]",
                                "administratorLoginPassword": "[parameters('targetSqlDbAdministratorPassword')]",
                                "operationMode": "Import"
                            }
                        }
                    ]
                },
                {
                    "type": "firewallrules",
                    "name": "AllowAllWindowsAzureIps",
                    "apiVersion": "2014-04-01-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', concat(variables('targetServerName')))]"
                    ],
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        }
    ]
}
