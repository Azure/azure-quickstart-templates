{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "platformAdminFirstName": {
      "type": "string",
      "metadata": {
        "description": "This is the first name of the platform administrator."
      }
    },
    "platformAdminLastName": {
      "type": "string",
      "metadata": {
        "description": "This is the last name of the platform administrator"
      }
    },
    "platformAdminEmailAddress": {
      "type": "string",
      "metadata": {
        "description": "This is the email address of the platform administrator. This will be used to log in."
      }
    },
    "platformAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "This is the password of the platform administrator. This will be used to log in."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "This is the username of the administrative account."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "This is the password of the administrative account."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the virtual machine."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the virtual machine."
      }
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhds",
    "platformOSDiskName": "platformosdisk",
    "domainControllerOSDiskName": "domaincontrollerosdisk",
    "centOSDiskName": "centosdisk",
    "virtualNetworkName": "apprendavnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "customScriptExtensionVersion": "2.0",
    "platformPIPName": "[concat(variables('platformNode'), 'pubIP')]",
    "platformPIPType": "Dynamic",
    "domainPIPName": "[concat(variables('domainControllerNode'), 'pubIP')]",
    "domainPIPType": "Dynamic",
    "centosPIPName": "[concat(variables('centOSNode'), 'pubIP')]",
    "centosPIPType": "Dynamic",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "subnet1Prefix": "10.0.0.0/24",
    "nicName": "[concat(parameters('vmName'),'Nic')]",
    "dcNic": "dcNic",
    "coNic": "coNic",
    "platformNode": "[concat(parameters('vmName'))]",
    "domainControllerNode": "[concat(parameters('vmName'), 'dc')]",
    "centOSNode": "[concat(parameters('vmName'),'centos')]",
    "scriptURL": "http://apprendaconfigfiles.blob.core.windows.net/configurationfiles/apprenda60PlatformNode.ps1",
    "scriptName": "apprenda60PlatformNode.ps1",
    "scriptArgs": "[concat('-platformAdminFirstName ',parameters('platformAdminFirstName'),' -platformAdminLastName ',parameters('platformAdminLastName'),' -platformAdminEmailAddress ',parameters('platformAdminEmailAddress'),' -platformAdminPassword ', parameters('platformAdminPassword'), ' -domaincontrollerserver ', variables('domainControllerNode'), ' -domainUserName ', parameters('adminUsername'), ' -domainPassword ', parameters('adminPassword'))]",
    "dcScriptURL": "http://apprendaconfigfiles.blob.core.windows.net/configurationfiles/domainControllerSetup.ps1",
    "dcScriptName": "domainControllerSetup.ps1",
    "dcScriptArgs": "[concat('-dcpassword ', parameters('adminPassword'))]",
    "centosScriptURL": "http://apprendaconfigfiles.blob.core.windows.net/configurationfiles/linuxSetup.sh",
    "centosScriptName": "linuxSetup.sh"
  },
  "resources": [
       {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('platformPIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('platformPIPType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('platformNode')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('domainPIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('domainPIPType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('domainControllerNode')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('centosPIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('centosPIPType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('centOSNode')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('platformPIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('platformPIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('dcNic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('domainPIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('coNic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('centosPIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion":  "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('platformNode')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('platformNode')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {            
            "name": "[concat(variables('platformNode'),'_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion":  "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('domainControllerNode')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('dcNic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('domainControllerNode')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {           
           "name": "[concat(variables('domainControllerNode'),'_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('dcNic'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30", 
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('centOSNode')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('coNic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('centOSNode')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.0",
            "version": "latest"
          },
          "osDisk": {           
            "name": "[concat(variables('centOSNode'),'_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('coNic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('platformNode'),'/', 'CustomScriptExtension')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('platformNode'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "[variables('customScriptExtensionVersion')]",
        "settings": {
          "fileUris": [
            "[variables('scriptURL')]"
          ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('scriptName'),' ',variables('scriptArgs'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('domainControllerNode'), '/CustomScriptExtension')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('domainControllerNode'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "autoUpgradeMinorVersion": true,
        "typeHandlerVersion": "[variables('customScriptExtensionVersion')]",
        "settings": {
          "fileUris": [
            "[variables('dcScriptURL')]"
          ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('dcScriptName'),' ',variables('dcScriptArgs'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('centOSNode'), '/', 'CustomScriptExtension')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('centOSNode'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "autoUpgradeMinorVersion": true,
        "typeHandlerVersion": "[variables('customScriptExtensionVersion')]",
        "settings": {
          "fileUris": [
            "[variables('centosScriptURL')]"
          ],
          "commandToExecute": "[concat('sh ', variables('centosScriptName'))]"
        }
      }
    }
  ]
}
