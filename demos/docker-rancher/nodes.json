{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "rancherApi": {
      "type": "string",
      "metadata": {
        "description": "The api link to your RancherHost. Example : http://myrancherhost.kvaes.be:8080/v1/scripts/AA12A123A1A1234A12A1:1234567890000:aAaaaaA1AaAaAlaAAaaaaAAAaaA"
      }
    },
    "rancherName": {
      "type": "string",
      "metadata": {
        "description": "The prefix you want to use as hostname"
      }
    },
    "rancherVmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the virtual machine used for the nodes"
      },
      "defaultValue": "Standard_A2_v2"
    },
    "rancherCount": {
      "type": "int",
      "metadata": {
        "description": "The amount of nodes to be provisioned"
      },
      "minValue": 1,
      "maxValue": 250
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "availabilitySet": "[parameters('rancherName')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'ranchernode')]",
    "networkSecurityGroupName": "[parameters('rancherName')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "ubuntuOSVersion": "18.04-LTS",
    "virtualNetworkName": "[parameters('rancherName')]",
    "addressPrefix": "192.168.253.0/24",
    "subnetName": "[parameters('rancherName')]",
    "subnetPrefix": "192.168.253.0/24",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Standard_LRS",
    "vmSize": "[parameters('rancherVmSize')]",
    "extensionName": "DockerExtension",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySet')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "apiVersion": "2020-05-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "rVPN500",
            "properties": {
              "description": "rVPN500",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "rVPN4500",
            "properties": {
              "description": "rVPN4500",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          },
          {
            "name": "Docker",
            "properties": {
              "description": "Docker",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2375",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('rancherName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "pipLoopNode",
        "count": "[parameters('rancherCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('rancherName'), copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('rancherName'), copyIndex(), '-nic')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('rancherCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('rancherName'), copyIndex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('rancherName'), copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('rancherName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('rancherCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('rancherName'), copyIndex(), '-nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('rancherName'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('rancherName'), copyIndex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('rancherName'), copyIndex(), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('rancherName'), copyIndex(),'/', variables('extensionName'))]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "extLoopNode",
        "count": "[parameters('rancherCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', concat(parameters('rancherName'), copyIndex()))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "docker": {
            "port": "2375"
          },
          "compose": {
            "rancheragent": {
              "image": "rancher/agent:latest",
              "restart": "always",
              "privileged": true,
              "volumes": [
                "/var/run/docker.sock:/var/run/docker.sock"
              ],
              "command": "[parameters('rancherApi')]"
            }
          }
        }
      }
    }
  ]
}
