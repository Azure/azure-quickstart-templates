{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "4032476935131371455"
    }
  },
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('storage{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Azure Storage account."
      }
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "metadata": {
        "description": "Sku on which to run the Azure Storage account."
      }
    },
    "storageAccountKind": {
      "type": "string",
      "defaultValue": "StorageV2",
      "allowedValues": [
        "Storage",
        "StorageV2",
        "BlobStorage",
        "FileStorage",
        "BlockBlobStorage"
      ],
      "metadata": {
        "description": "Indicates the type of storage account."
      }
    },
    "storageAccountContainerName": {
      "type": "string",
      "defaultValue": "my-container",
      "metadata": {
        "description": "Set the name of the container to create in the Storage account."
      }
    },
    "storageConnectionName": {
      "type": "string",
      "defaultValue": "[format('storageconnection{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Logic Apps API connection used to connect to the Azure Storage account."
      }
    },
    "logicAppName": {
      "type": "string",
      "defaultValue": "[format('logicapp{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppPollingIntervalInMinutes": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "The polling interval used to check for items on the Storage account."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location where resources reside."
      }
    },
    "azureMgmtUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Management URI"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('storageConnectionName')]",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureblob')]"
        },
        "parameterValues": {
          "accountName": "[parameters('storageAccountName')]",
          "accessKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
        },
        "testLinks": [
          {
            "requestUri": "[uri(parameters('azureMgmtUri'), format('subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/connections/{2}/extensions/proxy/testconnection?api-version=2018-07-01-preview', subscription().subscriptionId, resourceGroup().name, parameters('storageConnectionName')))]",
            "method": "get"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountSku')]"
      },
      "kind": "[parameters('storageAccountKind')]",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_blob_is_added_or_modified_(properties_only)": {
              "recurrence": {
                "frequency": "Minute",
                "interval": "[parameters('logicAppPollingIntervalInMinutes')]"
              },
              "splitOn": "@triggerBody()",
              "metadata": {
                "JTJmbXktY29udGFpbmVy": "[format('/{0}', parameters('storageAccountContainerName'))]"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/triggers/batch/onupdatedfile",
                "queries": {
                  "folderId": "JTJmbXktY29udGFpbmVy",
                  "maxFileCount": 10
                }
              }
            }
          },
          "actions": {
            "Process_blobs": {
              "type": "Scope"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('storageConnectionName'))]",
                "connectionName": "azureblob",
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureblob')]"
              }
            }
          }
        },
        "state": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('storageConnectionName'))]"
      ]
    }
  ],
  "outputs": {
    "logicAppName": {
      "type": "string",
      "value": "[parameters('logicAppName')]"
    },
    "logicAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
    },
    "location": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'full').location]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}