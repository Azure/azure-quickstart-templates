"$schema": https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
contentVersion: 1.0.0.0
parameters:
  adminUsername:
    type: string
    metadata:
      description: Admin username used when provisioning virtual machines
  adminPassword:
    type: securestring
    metadata:
      description: Admin password used when provisioning virtual machines
  storageSettings:
    type: object
    metadata:
      description: Storage Account Settings
  location:
    type: string
    metadata:
      description: Location where resources will be provisioned
  subnet:
    type: object
    metadata:
      description: The name of the subnet to deploy resources into
  vmSize:
    type: string
    defaultValue: Standard_A1
    metadata:
      description: Size of the Elasticsearch data nodes
  vmCount:
    type: int
    defaultValue: 2
    metadata:
      description: Number of Elasticsearch data nodes
  osSettings:
    type: object
    metadata:
      description: OS settings to deploy on
  dataDiskSize:
    type: int
    defaultValue: 1023
    metadata:
      description: Size of each data disk attached to data nodes in (Gb)
  namespace:
    type: string
    metadata:
      description: The namespace for resources created by this template
  lbBackendPools:
    type: object
    metadata:
      description: loadBalancerBackendAddressPools config object
variables:
  vmStorageAccountContainerName: vhd
  subnetRef: "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]"
  storageAccountName: "[concat(parameters('storageSettings').prefix)]"
  vmName: "[concat(parameters('namespace'), 'vm')]"
resources:
- type: Microsoft.Storage/storageAccounts
  name: "[concat(variables('storageAccountName'), copyindex(1))]"
  apiVersion: 2015-05-01-preview
  location: "[parameters('location')]"
  copy:
    name: "[concat(parameters('namespace'),'storageLoop')]"
    count: "[parameters('storageSettings').count]"
  properties:
    accountType: "[parameters('storageSettings').accountType]"
- apiVersion: '2015-06-15'
  type: Microsoft.Compute/availabilitySets
  name: "[concat(parameters('namespace'), '-set')]"
  location: "[parameters('location')]"
  properties:
    platformUpdateDomainCount: 20
    platformFaultDomainCount: 3
- apiVersion: '2015-06-15'
  type: Microsoft.Network/networkInterfaces
  name: "[concat(parameters('namespace'), 'nic', copyindex())]"
  location: "[parameters('location')]"
  copy:
    name: "[concat(parameters('namespace'),'nicLoop')]"
    count: "[parameters('vmCount')]"
  properties:
    ipConfigurations:
    - name: ipconfig1
      properties:
        privateIPAllocationMethod: Dynamic
        subnet:
          id: "[variables('subnetRef')]"
        loadBalancerBackendAddressPools: "[parameters('lbBackendPools').backendPools]"
- apiVersion: '2015-06-15'
  type: Microsoft.Compute/virtualMachines
  name: "[concat(parameters('namespace'), 'vm', copyindex())]"
  location: "[parameters('location')]"
  copy:
    name: "[concat(parameters('namespace'), 'virtualMachineLoop')]"
    count: "[parameters('vmCount')]"
  dependsOn:
  - "[concat('Microsoft.Network/networkInterfaces/', parameters('namespace'), 'nic', copyindex())]"
  - "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()])]"
  properties:
    availabilitySet:
      id: "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('namespace'), '-set'))]"
    hardwareProfile:
      vmSize: "[parameters('vmSize')]"
    osProfile:
      computername: "[concat(parameters('namespace'), 'vm', copyIndex())]"
      adminUsername: "[parameters('adminUsername')]"
      adminPassword: "[parameters('adminPassword')]"
    storageProfile:
      imageReference: "[parameters('osSettings').imageReference]"
      osDisk:
        name: osdisk
        vhd:
          uri: "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()], '.blob.core.windows.net/vhds/', variables('vmName'), copyindex(), '-osdisk.vhd')]"
        caching: ReadWrite
        createOption: FromImage
      dataDisks:
      - name: datadisk::index
        diskSizeGB: "[parameters('dataDiskSize')]"
        lun: 0
        vhd:
          Uri: "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk::index' ,'.vhd')]"
        caching: None
        createOption: Empty
    networkProfile:
      networkInterfaces:
      - id: "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namespace'),'nic', copyindex()))]"
  resources:
  - type: Microsoft.Compute/virtualMachines/extensions
    name: "[concat(parameters('namespace'),'vm', copyindex(), '/installelasticsearch')]"
    apiVersion: '2015-06-15'
    location: "[parameters('location')]"
    dependsOn:
    - "[concat('Microsoft.Compute/virtualMachines/', parameters('namespace'), 'vm', copyindex())]"
    properties: "[parameters('osSettings').extentionSettings.data]"
