{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password used when provisioning virtual machines"
      }
    },
    "storageSettings": {
      "type": "object",
      "metadata": {
        "description": "Storage Account Settings"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "subnet": {
      "type": "object",
      "metadata": {
        "description": "The name of the subnet to deploy resources into"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of the Elasticsearch data nodes"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Elasticsearch data nodes"
      }
    },
    "osSettings": {
      "type": "object",
      "metadata": {
        "description": "OS settings to deploy on"
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 1023,
      "metadata": {
        "description": "Size of each data disk attached to data nodes in (Gb)"
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "The namespace for resources created by this template"
      }
    },
    "lbBackendPools": {
      "type": "object",
      "metadata": {
        "description": "loadBalancerBackendAddressPools config object"
      }
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhd",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "storageAccountName": "[parameters('storageSettings').prefix]",
    "storageAccountNameShared": "[parameters('storageSettings').shared]",
    "vmName": "[concat(parameters('namespace'), '-vm')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountName'), copyindex(1))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'),'storageLoop')]",
        "count": "[parameters('storageSettings').count]"
      },
      "properties": {
        "accountType": "[parameters('storageSettings').accountType]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "es-data-set",
      "location": "[parameters('location')]",
      "properties": {
        "platformUpdateDomainCount": 20,
        "platformFaultDomainCount": 3
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('namespace'), '-nic', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'),'nicLoop')]",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": "[parameters('lbBackendPools').backendPools]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "[concat(parameters('namespace'), 'virtualMachineLoop')]",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namespace'), '-nic', copyindex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()])]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'es-data-set')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat('data-vm', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()], '.blob.core.windows.net/vhds/', variables('vmName'), copyindex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk1' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk2' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 2,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk3' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk4",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 3,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk4' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk5",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 4,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk5' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk6",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 5,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk6' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk7",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 6,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk7' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk8",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 7,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), parameters('storageSettings').mapping[copyindex()],'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/', parameters('namespace'),'vm', copyindex(),'dataDisk8' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('namespace'),'-nic', copyindex()))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'), copyindex(), '/installelasticsearch')]",
          "apiVersion": "2015-06-15",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex())]"
          ],
          "properties": {
            "publisher": "[parameters('osSettings').extensionSettings.data.publisher]",
            "type": "[parameters('osSettings').extensionSettings.data.type]",
            "typeHandlerVersion": "[parameters('osSettings').extensionSettings.data.typeHandlerVersion]",
            "settings": {
              "fileUris": "[parameters('osSettings').extensionSettings.data.settings.fileUris]",
              "commandToExecute": "[concat(parameters('osSettings').extensionSettings.data.settings.commandToExecute, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameShared')), '2015-05-01-preview').key1)]"
            }
          }
        }
      ]
    }
  ]
}