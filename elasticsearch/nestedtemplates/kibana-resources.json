{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namespace": {
      "type": "string",
      "defaultValue": "kibana",
      "metadata": {
        "description": "The namespace prefix for resources created by this template"
      }
    },
    "subnet": {
      "type": "object",
      "metadata": {
        "description": "Subnet object for provisioning resources in (expects properties name as the subnet name, and vnet as the virtual network name on the object)"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Existing Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator user name used when provisioning virtual machines"
      }
    },
    "authSet": {
      "type": "object",
      "metadata": {
        "description": "Authentication information"
      }
    },
    "osSettings": {
      "type": "object",
      "metadata": {
        "description": "Platform and OS settings"
      }
    }
  },
  "variables": {
    "vmSize": "Standard_A1",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "vmName": "[concat(parameters('namespace'), '-vm')]",
    "publicIpName": "[concat(parameters('namespace'), '-pip')]",
    "securityGroupName": "[concat(parameters('namespace'), '-nsg')]",
    "nicName": "[concat(parameters('namespace'), '-nic')]"
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows inbound SSH traffic from anyone",
              "protocol": "Tcp",
              "sourcePortRange": "[parameters('osSettings').managementPort]",
              "destinationPortRange": "[parameters('osSettings').managementPort]",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Kibana",
            "properties": {
              "description": "Allows inbound Kibana HTTP traffic from anyone",
              "protocol": "Tcp",
              "sourcePortRange": "5601",
              "destinationPortRange": "5601",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "kibana",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('authSet').password]",
          "linuxConfiguration": "[parameters('osSettings').linuxConfiguration]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob, 'vhds/', variables('vmName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "installkibana",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "properties": "[parameters('osSettings').extensionSettings.kibana]"
        }
      ]
    }
  ],
  "outputs": {
    "kibana-url": {
      "type": "string",
      "value": "[concat('http://', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).ipAddress, ':5601')]"
    },
    "kibana-ip": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).ipAddress]"
    }
  }
}